(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const wl="171",VS=0,kS=1,zS=2,GS=0,HS=1,Za=3,Zr=0,Gn=1,ks=2,js=0,ps=1,Qc=2,el=3,tl=4,$g=5,cs=100,jg=101,Xg=102,WS=103,qS=104,Yg=200,Zg=201,Kg=202,Jg=203,nl=204,il=205,Qg=206,ev=207,tv=208,nv=209,iv=210,sv=0,rv=1,ov=2,sl=3,av=4,cv=5,lv=6,uv=7,Ml=0,$S=1,jS=2,Wr=0,XS=1,YS=2,ZS=3,KS=4,JS=6,QS=7,Fd=300,Xs=301,Kr=302,ga=303,va=304,Fh=306,gs=1e3,ds=1001,Jr=1002,Gt=1003,Ih=1004,qr=1005,Kt=1006,Bh=1007,Ii=1008,eb=1008,ms=1009,zo=1010,Go=1011,Br=1012,un=1013,Xt=1014,Rn=1015,Qn=1016,tb=1017,nb=1018,ya=1020,hv=35902,ib=1021,Id=1022,Ys=1023,sb=1024,rb=1025,zs=1026,Qr=1027,Bd=1028,Od=1029,na=1030,Vd=1031,ob=1032,kd=1033,bu=33776,Gc=33777,Hc=33778,Wc=33779,Ip=35840,Bp=35841,Op=35842,Vp=35843,kp=36196,Oh=37492,Vh=37496,kh=37808,zh=37809,Gh=37810,Hh=37811,Wh=37812,qh=37813,$h=37814,jh=37815,Xh=37816,Yh=37817,Zh=37818,Kh=37819,Jh=37820,Qh=37821,Tu=36492,ab=36283,zp=36284,Gp=36285,Hp=36286,cb=3200,lb=3201,vs=0,ub=1,Zs="",Re="srgb",Bi="srgb-linear",Wp="linear",Ho="srgb",hb=0,Ls=7680,db=7681,fb=7682,pb=7683,mb=34055,gb=34056,vb=5386,yb=512,xb=513,_b=514,Sb=515,bb=516,Tb=517,wb=518,ed=519,dv=512,zd=513,fv=514,pv=515,mv=516,gv=517,vv=518,yv=519,rl=35044,Or=35048,Kn=2e3,zi=2001;class er{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}}const en=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let qp=1234567;const $r=Math.PI/180,ia=180/Math.PI;function ui(){const c=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(en[c&255]+en[c>>8&255]+en[c>>16&255]+en[c>>24&255]+"-"+en[e&255]+en[e>>8&255]+"-"+en[e>>16&15|64]+en[e>>24&255]+"-"+en[t&63|128]+en[t>>8&255]+"-"+en[t>>16&255]+en[t>>24&255]+en[n&255]+en[n>>8&255]+en[n>>16&255]+en[n>>24&255]).toLowerCase()}function We(c,e,t){return Math.max(e,Math.min(t,c))}function Gd(c,e){return(c%e+e)%e}function Mb(c,e,t,n,i){return n+(c-e)*(i-n)/(t-e)}function Ab(c,e,t){return c!==e?(t-c)/(e-c):0}function Wo(c,e,t){return(1-t)*c+t*e}function Nb(c,e,t,n){return Wo(c,e,1-Math.exp(-t*n))}function Cb(c,e=1){return e-Math.abs(Gd(c,e*2)-e)}function Eb(c,e,t){return c<=e?0:c>=t?1:(c=(c-e)/(t-e),c*c*(3-2*c))}function Rb(c,e,t){return c<=e?0:c>=t?1:(c=(c-e)/(t-e),c*c*c*(c*(c*6-15)+10))}function Pb(c,e){return c+Math.floor(Math.random()*(e-c+1))}function Ub(c,e){return c+Math.random()*(e-c)}function Db(c){return c*(.5-Math.random())}function Lb(c){c!==void 0&&(qp=c);let e=qp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Fb(c){return c*$r}function Ib(c){return c*ia}function Bb(c){return(c&c-1)===0&&c!==0}function Ob(c){return Math.pow(2,Math.ceil(Math.log(c)/Math.LN2))}function Vb(c){return Math.pow(2,Math.floor(Math.log(c)/Math.LN2))}function kb(c,e,t,n,i){const s=Math.cos,r=Math.sin,o=s(t/2),a=r(t/2),l=s((e+n)/2),u=r((e+n)/2),h=s((e-n)/2),d=r((e-n)/2),f=s((n-e)/2),p=r((n-e)/2);switch(i){case"XYX":c.set(o*u,a*h,a*d,o*l);break;case"YZY":c.set(a*d,o*u,a*h,o*l);break;case"ZXZ":c.set(a*h,a*d,o*u,o*l);break;case"XZX":c.set(o*u,a*p,a*f,o*l);break;case"YXY":c.set(a*f,o*u,a*p,o*l);break;case"ZYZ":c.set(a*p,a*f,o*u,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function hn(c,e){switch(e.constructor){case Float32Array:return c;case Uint32Array:return c/4294967295;case Uint16Array:return c/65535;case Uint8Array:return c/255;case Int32Array:return Math.max(c/2147483647,-1);case Int16Array:return Math.max(c/32767,-1);case Int8Array:return Math.max(c/127,-1);default:throw new Error("Invalid component type.")}}function ze(c,e){switch(e.constructor){case Float32Array:return c;case Uint32Array:return Math.round(c*4294967295);case Uint16Array:return Math.round(c*65535);case Uint8Array:return Math.round(c*255);case Int32Array:return Math.round(c*2147483647);case Int16Array:return Math.round(c*32767);case Int8Array:return Math.round(c*127);default:throw new Error("Invalid component type.")}}const xv={DEG2RAD:$r,RAD2DEG:ia,generateUUID:ui,clamp:We,euclideanModulo:Gd,mapLinear:Mb,inverseLerp:Ab,lerp:Wo,damp:Nb,pingpong:Cb,smoothstep:Eb,smootherstep:Rb,randInt:Pb,randFloat:Ub,randFloatSpread:Db,seededRandom:Lb,degToRad:Fb,radToDeg:Ib,isPowerOfTwo:Bb,ceilPowerOfTwo:Ob,floorPowerOfTwo:Vb,setQuaternionFromProperEuler:kb,normalize:ze,denormalize:hn};class he{constructor(e=0,t=0){he.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=We(this.x,e.x,t.x),this.y=We(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=We(this.x,e,t),this.y=We(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(We(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(We(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class dn{constructor(e,t,n,i,s,r,o,a,l){dn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,o,a,l)}set(e,t,n,i,s,r,o,a,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=s,u[5]=a,u[6]=n,u[7]=r,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],o=n[3],a=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],m=i[0],g=i[3],y=i[6],_=i[1],x=i[4],S=i[7],w=i[2],A=i[5],T=i[8];return s[0]=r*m+o*_+a*w,s[3]=r*g+o*x+a*A,s[6]=r*y+o*S+a*T,s[1]=l*m+u*_+h*w,s[4]=l*g+u*x+h*A,s[7]=l*y+u*S+h*T,s[2]=d*m+f*_+p*w,s[5]=d*g+f*x+p*A,s[8]=d*y+f*S+p*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],o=e[5],a=e[6],l=e[7],u=e[8];return t*r*u-t*o*l-n*s*u+n*o*a+i*s*l-i*r*a}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],o=e[5],a=e[6],l=e[7],u=e[8],h=u*r-o*l,d=o*a-u*s,f=l*s-r*a,p=t*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*l-u*n)*m,e[2]=(o*n-i*r)*m,e[3]=d*m,e[4]=(u*t-i*a)*m,e[5]=(i*s-o*t)*m,e[6]=f*m,e[7]=(n*a-l*t)*m,e[8]=(r*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,o){const a=Math.cos(s),l=Math.sin(s);return this.set(n*a,n*l,-n*(a*r+l*o)+r+e,-i*l,i*a,-i*(-l*r+a*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(wu.makeScale(e,t)),this}rotate(e){return this.premultiply(wu.makeRotation(-e)),this}translate(e,t){return this.premultiply(wu.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const wu=new dn;function zb(c){for(let e=c.length-1;e>=0;--e)if(c[e]>=65535)return!0;return!1}function ol(c){return document.createElementNS("http://www.w3.org/1999/xhtml",c)}function Gb(){const c=ol("canvas");return c.style.display="block",c}const $p={};function Hb(c){c in $p||($p[c]=!0,console.warn(c))}const jp=new dn().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Xp=new dn().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function Wb(){const c={enabled:!0,workingColorSpace:Bi,spaces:{},convert:function(i,s,r){return this.enabled===!1||s===r||!s||!r||(this.spaces[s].transfer===Ho&&(i.r=Oi(i.r),i.g=Oi(i.g),i.b=Oi(i.b)),this.spaces[s].primaries!==this.spaces[r].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===Ho&&(i.r=jr(i.r),i.g=jr(i.g),i.b=jr(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Zs?Wp:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,r){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return c.define({[Bi]:{primaries:e,whitePoint:n,transfer:Wp,toXYZ:jp,fromXYZ:Xp,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Re},outputColorSpaceConfig:{drawingBufferColorSpace:Re}},[Re]:{primaries:e,whitePoint:n,transfer:Ho,toXYZ:jp,fromXYZ:Xp,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Re}}}),c}const Nt=Wb();function Oi(c){return c<.04045?c*.0773993808:Math.pow(c*.9478672986+.0521327014,2.4)}function jr(c){return c<.0031308?c*12.92:1.055*Math.pow(c,.41666)-.055}let pr;class qb{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{pr===void 0&&(pr=ol("canvas")),pr.width=e.width,pr.height=e.height;const n=pr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=pr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ol("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=Oi(s[r]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Oi(t[n]/255)*255):t[n]=Oi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let $b=0;class _v{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:$b++}),this.uuid=ui(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let r=0,o=i.length;r<o;r++)i[r].isDataTexture?s.push(Mu(i[r].image)):s.push(Mu(i[r]))}else s=Mu(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Mu(c){return typeof HTMLImageElement<"u"&&c instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&c instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&c instanceof ImageBitmap?qb.getDataURL(c):c.data?{data:Array.from(c.data),width:c.width,height:c.height,type:c.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let jb=0;class Ht extends er{constructor(e=Ht.DEFAULT_IMAGE,t=Ht.DEFAULT_MAPPING,n=ds,i=ds,s=Kt,r=Ii,o=Ys,a=ms,l=Ht.DEFAULT_ANISOTROPY,u=Zs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:jb++}),this.uuid=ui(),this.name="",this.source=new _v(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new he(0,0),this.repeat=new he(1,1),this.center=new he(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new dn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Fd)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case gs:e.x=e.x-Math.floor(e.x);break;case ds:e.x=e.x<0?0:1;break;case Jr:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case gs:e.y=e.y-Math.floor(e.y);break;case ds:e.y=e.y<0?0:1;break;case Jr:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Ht.DEFAULT_IMAGE=null;Ht.DEFAULT_MAPPING=Fd;Ht.DEFAULT_ANISOTROPY=1;class Ke{constructor(e=0,t=0,n=0,i=1){Ke.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const a=e.elements,l=a[0],u=a[4],h=a[8],d=a[1],f=a[5],p=a[9],m=a[2],g=a[6],y=a[10];if(Math.abs(u-d)<.01&&Math.abs(h-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+m)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(l+1)/2,S=(f+1)/2,w=(y+1)/2,A=(u+d)/4,T=(h+m)/4,M=(p+g)/4;return x>S&&x>w?x<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(x),i=A/n,s=T/n):S>w?S<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(S),n=A/i,s=M/i):w<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),n=T/s,i=M/s),this.set(n,i,s,t),this}let _=Math.sqrt((g-p)*(g-p)+(h-m)*(h-m)+(d-u)*(d-u));return Math.abs(_)<.001&&(_=1),this.x=(g-p)/_,this.y=(h-m)/_,this.z=(d-u)/_,this.w=Math.acos((l+f+y-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=We(this.x,e.x,t.x),this.y=We(this.y,e.y,t.y),this.z=We(this.z,e.z,t.z),this.w=We(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=We(this.x,e,t),this.y=We(this.y,e,t),this.z=We(this.z,e,t),this.w=We(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(We(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _s extends er{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ke(0,0,e,t),this.scissorTest=!1,this.viewport=new Ke(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Kt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new Ht(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const r=n.count;for(let o=0;o<r;o++)this.textures[o]=s.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new _v(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Xb extends _s{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Yb extends Ht{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Gt,this.minFilter=Gt,this.wrapR=ds,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class xa{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,r,o){let a=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3];const d=s[r+0],f=s[r+1],p=s[r+2],m=s[r+3];if(o===0){e[t+0]=a,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(h!==m||a!==d||l!==f||u!==p){let g=1-o;const y=a*d+l*f+u*p+h*m,_=y>=0?1:-1,x=1-y*y;if(x>Number.EPSILON){const w=Math.sqrt(x),A=Math.atan2(w,y*_);g=Math.sin(g*A)/w,o=Math.sin(o*A)/w}const S=o*_;if(a=a*g+d*S,l=l*g+f*S,u=u*g+p*S,h=h*g+m*S,g===1-o){const w=1/Math.sqrt(a*a+l*l+u*u+h*h);a*=w,l*=w,u*=w,h*=w}}e[t]=a,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,r){const o=n[i],a=n[i+1],l=n[i+2],u=n[i+3],h=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=o*p+u*h+a*f-l*d,e[t+1]=a*p+u*d+l*h-o*f,e[t+2]=l*p+u*f+o*d-a*h,e[t+3]=u*p-o*h-a*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,r=e._order,o=Math.cos,a=Math.sin,l=o(n/2),u=o(i/2),h=o(s/2),d=a(n/2),f=a(i/2),p=a(s/2);switch(r){case"XYZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"YZX":this._x=d*u*h+l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h-d*f*p;break;case"XZY":this._x=d*u*h-l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],o=t[5],a=t[9],l=t[2],u=t[6],h=t[10],d=n+o+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-a)*f,this._y=(s-l)*f,this._z=(r-i)*f}else if(n>o&&n>h){const f=2*Math.sqrt(1+n-o-h);this._w=(u-a)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(s+l)/f}else if(o>h){const f=2*Math.sqrt(1+o-n-h);this._w=(s-l)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(a+u)/f}else{const f=2*Math.sqrt(1+h-n-o);this._w=(r-i)/f,this._x=(s+l)/f,this._y=(a+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(We(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,r=e._w,o=t._x,a=t._y,l=t._z,u=t._w;return this._x=n*u+r*o+i*l-s*a,this._y=i*u+r*a+s*o-n*l,this._z=s*u+r*l+n*a-i*o,this._w=r*u-n*o-i*a-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,r=this._w;let o=r*e._w+n*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const a=1-o*o;if(a<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const l=Math.sqrt(a),u=Math.atan2(l,o),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=r*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class P{constructor(e=0,t=0,n=0){P.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Yp.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Yp.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,o=e.z,a=e.w,l=2*(r*i-o*n),u=2*(o*t-s*i),h=2*(s*n-r*t);return this.x=t+a*l+r*h-o*u,this.y=n+a*u+o*l-s*h,this.z=i+a*h+s*u-r*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=We(this.x,e.x,t.x),this.y=We(this.y,e.y,t.y),this.z=We(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=We(this.x,e,t),this.y=We(this.y,e,t),this.z=We(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(We(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,r=t.x,o=t.y,a=t.z;return this.x=i*a-s*o,this.y=s*r-n*a,this.z=n*o-i*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Au.copy(this).projectOnVector(e),this.sub(Au)}reflect(e){return this.sub(Au.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(We(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Au=new P,Yp=new xa;class tr{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Xn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Xn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Xn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,o=s.count;r<o;r++)e.isMesh===!0?e.getVertexPosition(r,Xn):Xn.fromBufferAttribute(s,r),Xn.applyMatrix4(e.matrixWorld),this.expandByPoint(Xn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Ka.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Ka.copy(n.boundingBox)),Ka.applyMatrix4(e.matrixWorld),this.union(Ka)}const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Xn),Xn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(bo),Ja.subVectors(this.max,bo),mr.subVectors(e.a,bo),gr.subVectors(e.b,bo),vr.subVectors(e.c,bo),Ji.subVectors(gr,mr),Qi.subVectors(vr,gr),Ms.subVectors(mr,vr);let t=[0,-Ji.z,Ji.y,0,-Qi.z,Qi.y,0,-Ms.z,Ms.y,Ji.z,0,-Ji.x,Qi.z,0,-Qi.x,Ms.z,0,-Ms.x,-Ji.y,Ji.x,0,-Qi.y,Qi.x,0,-Ms.y,Ms.x,0];return!Nu(t,mr,gr,vr,Ja)||(t=[1,0,0,0,1,0,0,0,1],!Nu(t,mr,gr,vr,Ja))?!1:(Qa.crossVectors(Ji,Qi),t=[Qa.x,Qa.y,Qa.z],Nu(t,mr,gr,vr,Ja))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Xn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Xn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mi=[new P,new P,new P,new P,new P,new P,new P,new P],Xn=new P,Ka=new tr,mr=new P,gr=new P,vr=new P,Ji=new P,Qi=new P,Ms=new P,bo=new P,Ja=new P,Qa=new P,As=new P;function Nu(c,e,t,n,i){for(let s=0,r=c.length-3;s<=r;s+=3){As.fromArray(c,s);const o=i.x*Math.abs(As.x)+i.y*Math.abs(As.y)+i.z*Math.abs(As.z),a=e.dot(As),l=t.dot(As),u=n.dot(As);if(Math.max(-Math.max(a,l,u),Math.min(a,l,u))>o)return!1}return!0}const Zb=new tr,To=new P,Cu=new P;class _a{constructor(e=new P,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Zb.setFromPoints(e).getCenter(n);let i=0;for(let s=0,r=e.length;s<r;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;To.subVectors(e,this.center);const t=To.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(To,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Cu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(To.copy(e.center).add(Cu)),this.expandByPoint(To.copy(e.center).sub(Cu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ai=new P,Eu=new P,ec=new P,es=new P,Ru=new P,tc=new P,Pu=new P;class Hd{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ai)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ai.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ai.copy(this.origin).addScaledVector(this.direction,t),Ai.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Eu.copy(e).add(t).multiplyScalar(.5),ec.copy(t).sub(e).normalize(),es.copy(this.origin).sub(Eu);const s=e.distanceTo(t)*.5,r=-this.direction.dot(ec),o=es.dot(this.direction),a=-es.dot(ec),l=es.lengthSq(),u=Math.abs(1-r*r);let h,d,f,p;if(u>0)if(h=r*a-o,d=r*o-a,p=s*u,h>=0)if(d>=-p)if(d<=p){const m=1/u;h*=m,d*=m,f=h*(h+r*d+2*o)+d*(r*h+d+2*a)+l}else d=s,h=Math.max(0,-(r*d+o)),f=-h*h+d*(d+2*a)+l;else d=-s,h=Math.max(0,-(r*d+o)),f=-h*h+d*(d+2*a)+l;else d<=-p?(h=Math.max(0,-(-r*s+o)),d=h>0?-s:Math.min(Math.max(-s,-a),s),f=-h*h+d*(d+2*a)+l):d<=p?(h=0,d=Math.min(Math.max(-s,-a),s),f=d*(d+2*a)+l):(h=Math.max(0,-(r*s+o)),d=h>0?s:Math.min(Math.max(-s,-a),s),f=-h*h+d*(d+2*a)+l);else d=r>0?-s:s,h=Math.max(0,-(r*d+o)),f=-h*h+d*(d+2*a)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(Eu).addScaledVector(ec,d),f}intersectSphere(e,t){Ai.subVectors(e.center,this.origin);const n=Ai.dot(this.direction),i=Ai.dot(Ai)-n*n,s=e.radius*e.radius;if(i>s)return null;const r=Math.sqrt(s-i),o=n-r,a=n+r;return a<0?null:o<0?this.at(a,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,o,a;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(s=(e.min.y-d.y)*u,r=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,r=(e.min.y-d.y)*u),n>r||s>i||((s>n||isNaN(n))&&(n=s),(r<i||isNaN(i))&&(i=r),h>=0?(o=(e.min.z-d.z)*h,a=(e.max.z-d.z)*h):(o=(e.max.z-d.z)*h,a=(e.min.z-d.z)*h),n>a||o>i)||((o>n||n!==n)&&(n=o),(a<i||i!==i)&&(i=a),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ai)!==null}intersectTriangle(e,t,n,i,s){Ru.subVectors(t,e),tc.subVectors(n,e),Pu.crossVectors(Ru,tc);let r=this.direction.dot(Pu),o;if(r>0){if(i)return null;o=1}else if(r<0)o=-1,r=-r;else return null;es.subVectors(this.origin,e);const a=o*this.direction.dot(tc.crossVectors(es,tc));if(a<0)return null;const l=o*this.direction.dot(Ru.cross(es));if(l<0||a+l>r)return null;const u=-o*es.dot(Pu);return u<0?null:this.at(u/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class $e{constructor(e,t,n,i,s,r,o,a,l,u,h,d,f,p,m,g){$e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,o,a,l,u,h,d,f,p,m,g)}set(e,t,n,i,s,r,o,a,l,u,h,d,f,p,m,g){const y=this.elements;return y[0]=e,y[4]=t,y[8]=n,y[12]=i,y[1]=s,y[5]=r,y[9]=o,y[13]=a,y[2]=l,y[6]=u,y[10]=h,y[14]=d,y[3]=f,y[7]=p,y[11]=m,y[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new $e().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/yr.setFromMatrixColumn(e,0).length(),s=1/yr.setFromMatrixColumn(e,1).length(),r=1/yr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),o=Math.sin(n),a=Math.cos(i),l=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=r*u,f=r*h,p=o*u,m=o*h;t[0]=a*u,t[4]=-a*h,t[8]=l,t[1]=f+p*l,t[5]=d-m*l,t[9]=-o*a,t[2]=m-d*l,t[6]=p+f*l,t[10]=r*a}else if(e.order==="YXZ"){const d=a*u,f=a*h,p=l*u,m=l*h;t[0]=d+m*o,t[4]=p*o-f,t[8]=r*l,t[1]=r*h,t[5]=r*u,t[9]=-o,t[2]=f*o-p,t[6]=m+d*o,t[10]=r*a}else if(e.order==="ZXY"){const d=a*u,f=a*h,p=l*u,m=l*h;t[0]=d-m*o,t[4]=-r*h,t[8]=p+f*o,t[1]=f+p*o,t[5]=r*u,t[9]=m-d*o,t[2]=-r*l,t[6]=o,t[10]=r*a}else if(e.order==="ZYX"){const d=r*u,f=r*h,p=o*u,m=o*h;t[0]=a*u,t[4]=p*l-f,t[8]=d*l+m,t[1]=a*h,t[5]=m*l+d,t[9]=f*l-p,t[2]=-l,t[6]=o*a,t[10]=r*a}else if(e.order==="YZX"){const d=r*a,f=r*l,p=o*a,m=o*l;t[0]=a*u,t[4]=m-d*h,t[8]=p*h+f,t[1]=h,t[5]=r*u,t[9]=-o*u,t[2]=-l*u,t[6]=f*h+p,t[10]=d-m*h}else if(e.order==="XZY"){const d=r*a,f=r*l,p=o*a,m=o*l;t[0]=a*u,t[4]=-h,t[8]=l*u,t[1]=d*h+m,t[5]=r*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=o*u,t[10]=m*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Kb,e,Jb)}lookAt(e,t,n){const i=this.elements;return wn.subVectors(e,t),wn.lengthSq()===0&&(wn.z=1),wn.normalize(),ts.crossVectors(n,wn),ts.lengthSq()===0&&(Math.abs(n.z)===1?wn.x+=1e-4:wn.z+=1e-4,wn.normalize(),ts.crossVectors(n,wn)),ts.normalize(),nc.crossVectors(wn,ts),i[0]=ts.x,i[4]=nc.x,i[8]=wn.x,i[1]=ts.y,i[5]=nc.y,i[9]=wn.y,i[2]=ts.z,i[6]=nc.z,i[10]=wn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],o=n[4],a=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],m=n[6],g=n[10],y=n[14],_=n[3],x=n[7],S=n[11],w=n[15],A=i[0],T=i[4],M=i[8],L=i[12],I=i[1],W=i[5],U=i[9],k=i[13],O=i[2],te=i[6],ie=i[10],ge=i[14],be=i[3],Y=i[7],$=i[11],E=i[15];return s[0]=r*A+o*I+a*O+l*be,s[4]=r*T+o*W+a*te+l*Y,s[8]=r*M+o*U+a*ie+l*$,s[12]=r*L+o*k+a*ge+l*E,s[1]=u*A+h*I+d*O+f*be,s[5]=u*T+h*W+d*te+f*Y,s[9]=u*M+h*U+d*ie+f*$,s[13]=u*L+h*k+d*ge+f*E,s[2]=p*A+m*I+g*O+y*be,s[6]=p*T+m*W+g*te+y*Y,s[10]=p*M+m*U+g*ie+y*$,s[14]=p*L+m*k+g*ge+y*E,s[3]=_*A+x*I+S*O+w*be,s[7]=_*T+x*W+S*te+w*Y,s[11]=_*M+x*U+S*ie+w*$,s[15]=_*L+x*k+S*ge+w*E,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],o=e[5],a=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],m=e[7],g=e[11],y=e[15];return p*(+s*a*h-i*l*h-s*o*d+n*l*d+i*o*f-n*a*f)+m*(+t*a*f-t*l*d+s*r*d-i*r*f+i*l*u-s*a*u)+g*(+t*l*h-t*o*f-s*r*h+n*r*f+s*o*u-n*l*u)+y*(-i*o*u-t*a*h+t*o*d+i*r*h-n*r*d+n*a*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],o=e[5],a=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],y=e[15],_=h*g*l-m*d*l+m*a*f-o*g*f-h*a*y+o*d*y,x=p*d*l-u*g*l-p*a*f+r*g*f+u*a*y-r*d*y,S=u*m*l-p*h*l+p*o*f-r*m*f-u*o*y+r*h*y,w=p*h*a-u*m*a-p*o*d+r*m*d+u*o*g-r*h*g,A=t*_+n*x+i*S+s*w;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/A;return e[0]=_*T,e[1]=(m*d*s-h*g*s-m*i*f+n*g*f+h*i*y-n*d*y)*T,e[2]=(o*g*s-m*a*s+m*i*l-n*g*l-o*i*y+n*a*y)*T,e[3]=(h*a*s-o*d*s-h*i*l+n*d*l+o*i*f-n*a*f)*T,e[4]=x*T,e[5]=(u*g*s-p*d*s+p*i*f-t*g*f-u*i*y+t*d*y)*T,e[6]=(p*a*s-r*g*s-p*i*l+t*g*l+r*i*y-t*a*y)*T,e[7]=(r*d*s-u*a*s+u*i*l-t*d*l-r*i*f+t*a*f)*T,e[8]=S*T,e[9]=(p*h*s-u*m*s-p*n*f+t*m*f+u*n*y-t*h*y)*T,e[10]=(r*m*s-p*o*s+p*n*l-t*m*l-r*n*y+t*o*y)*T,e[11]=(u*o*s-r*h*s-u*n*l+t*h*l+r*n*f-t*o*f)*T,e[12]=w*T,e[13]=(u*m*i-p*h*i+p*n*d-t*m*d-u*n*g+t*h*g)*T,e[14]=(p*o*i-r*m*i-p*n*a+t*m*a+r*n*g-t*o*g)*T,e[15]=(r*h*i-u*o*i+u*n*a-t*h*a-r*n*d+t*o*d)*T,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,o=e.y,a=e.z,l=s*r,u=s*o;return this.set(l*r+n,l*o-i*a,l*a+i*o,0,l*o+i*a,u*o+n,u*a-i*r,0,l*a-i*o,u*a+i*r,s*a*a+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,r=t._y,o=t._z,a=t._w,l=s+s,u=r+r,h=o+o,d=s*l,f=s*u,p=s*h,m=r*u,g=r*h,y=o*h,_=a*l,x=a*u,S=a*h,w=n.x,A=n.y,T=n.z;return i[0]=(1-(m+y))*w,i[1]=(f+S)*w,i[2]=(p-x)*w,i[3]=0,i[4]=(f-S)*A,i[5]=(1-(d+y))*A,i[6]=(g+_)*A,i[7]=0,i[8]=(p+x)*T,i[9]=(g-_)*T,i[10]=(1-(d+m))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=yr.set(i[0],i[1],i[2]).length();const r=yr.set(i[4],i[5],i[6]).length(),o=yr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Yn.copy(this);const l=1/s,u=1/r,h=1/o;return Yn.elements[0]*=l,Yn.elements[1]*=l,Yn.elements[2]*=l,Yn.elements[4]*=u,Yn.elements[5]*=u,Yn.elements[6]*=u,Yn.elements[8]*=h,Yn.elements[9]*=h,Yn.elements[10]*=h,t.setFromRotationMatrix(Yn),n.x=s,n.y=r,n.z=o,this}makePerspective(e,t,n,i,s,r,o=Kn){const a=this.elements,l=2*s/(t-e),u=2*s/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(o===Kn)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(o===zi)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=u,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,r,o=Kn){const a=this.elements,l=1/(t-e),u=1/(n-i),h=1/(r-s),d=(t+e)*l,f=(n+i)*u;let p,m;if(o===Kn)p=(r+s)*h,m=-2*h;else if(o===zi)p=s*h,m=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*u,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=m,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const yr=new P,Yn=new $e,Kb=new P(0,0,0),Jb=new P(1,1,1),ts=new P,nc=new P,wn=new P,Zp=new $e,Kp=new xa;class ei{constructor(e=0,t=0,n=0,i=ei.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],r=i[4],o=i[8],a=i[1],l=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(We(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-We(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(We(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(a,s));break;case"ZYX":this._y=Math.asin(-We(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(a,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(We(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-We(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Zp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Zp,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Kp.setFromEuler(this),this.setFromQuaternion(Kp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ei.DEFAULT_ORDER="XYZ";class Sv{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Qb=0;const Jp=new P,xr=new xa,Ni=new $e,ic=new P,wo=new P,e1=new P,t1=new xa,Qp=new P(1,0,0),em=new P(0,1,0),tm=new P(0,0,1),nm={type:"added"},n1={type:"removed"},_r={type:"childadded",child:null},Uu={type:"childremoved",child:null};class Et extends er{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Qb++}),this.uuid=ui(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Et.DEFAULT_UP.clone();const e=new P,t=new ei,n=new xa,i=new P(1,1,1);function s(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new $e},normalMatrix:{value:new dn}}),this.matrix=new $e,this.matrixWorld=new $e,this.matrixAutoUpdate=Et.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Sv,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return xr.setFromAxisAngle(e,t),this.quaternion.multiply(xr),this}rotateOnWorldAxis(e,t){return xr.setFromAxisAngle(e,t),this.quaternion.premultiply(xr),this}rotateX(e){return this.rotateOnAxis(Qp,e)}rotateY(e){return this.rotateOnAxis(em,e)}rotateZ(e){return this.rotateOnAxis(tm,e)}translateOnAxis(e,t){return Jp.copy(e).applyQuaternion(this.quaternion),this.position.add(Jp.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Qp,e)}translateY(e){return this.translateOnAxis(em,e)}translateZ(e){return this.translateOnAxis(tm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ni.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ic.copy(e):ic.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),wo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ni.lookAt(wo,ic,this.up):Ni.lookAt(ic,wo,this.up),this.quaternion.setFromRotationMatrix(Ni),i&&(Ni.extractRotation(i.matrixWorld),xr.setFromRotationMatrix(Ni),this.quaternion.premultiply(xr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(nm),_r.child=e,this.dispatchEvent(_r),_r.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(n1),Uu.child=e,this.dispatchEvent(Uu),Uu.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ni.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ni.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ni),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(nm),_r.child=e,this.dispatchEvent(_r),_r.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wo,e,e1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wo,t1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(e)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let l=0,u=a.length;l<u;l++){const h=a[l];s(e.shapes,h)}else s(e.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,l=this.material.length;a<l;a++)o.push(s(e.materials,this.material[a]));i.material=o}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(s(e.animations,a))}}if(t){const o=r(e.geometries),a=r(e.materials),l=r(e.textures),u=r(e.images),h=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function r(o){const a=[];for(const l in o){const u=o[l];delete u.metadata,a.push(u)}return a}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Et.DEFAULT_UP=new P(0,1,0);Et.DEFAULT_MATRIX_AUTO_UPDATE=!0;Et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Zn=new P,Ci=new P,Du=new P,Ei=new P,Sr=new P,br=new P,im=new P,Lu=new P,Fu=new P,Iu=new P,Bu=new Ke,Ou=new Ke,Vu=new Ke;class Vn{constructor(e=new P,t=new P,n=new P){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Zn.subVectors(e,t),i.cross(Zn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Zn.subVectors(i,t),Ci.subVectors(n,t),Du.subVectors(e,t);const r=Zn.dot(Zn),o=Zn.dot(Ci),a=Zn.dot(Du),l=Ci.dot(Ci),u=Ci.dot(Du),h=r*l-o*o;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(l*a-o*u)*d,p=(r*u-o*a)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ei)===null?!1:Ei.x>=0&&Ei.y>=0&&Ei.x+Ei.y<=1}static getInterpolation(e,t,n,i,s,r,o,a){return this.getBarycoord(e,t,n,i,Ei)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(s,Ei.x),a.addScaledVector(r,Ei.y),a.addScaledVector(o,Ei.z),a)}static getInterpolatedAttribute(e,t,n,i,s,r){return Bu.setScalar(0),Ou.setScalar(0),Vu.setScalar(0),Bu.fromBufferAttribute(e,t),Ou.fromBufferAttribute(e,n),Vu.fromBufferAttribute(e,i),r.setScalar(0),r.addScaledVector(Bu,s.x),r.addScaledVector(Ou,s.y),r.addScaledVector(Vu,s.z),r}static isFrontFacing(e,t,n,i){return Zn.subVectors(n,t),Ci.subVectors(e,t),Zn.cross(Ci).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Zn.subVectors(this.c,this.b),Ci.subVectors(this.a,this.b),Zn.cross(Ci).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Vn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Vn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return Vn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Vn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Vn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let r,o;Sr.subVectors(i,n),br.subVectors(s,n),Lu.subVectors(e,n);const a=Sr.dot(Lu),l=br.dot(Lu);if(a<=0&&l<=0)return t.copy(n);Fu.subVectors(e,i);const u=Sr.dot(Fu),h=br.dot(Fu);if(u>=0&&h<=u)return t.copy(i);const d=a*h-u*l;if(d<=0&&a>=0&&u<=0)return r=a/(a-u),t.copy(n).addScaledVector(Sr,r);Iu.subVectors(e,s);const f=Sr.dot(Iu),p=br.dot(Iu);if(p>=0&&f<=p)return t.copy(s);const m=f*l-a*p;if(m<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(n).addScaledVector(br,o);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return im.subVectors(s,i),o=(h-u)/(h-u+(f-p)),t.copy(i).addScaledVector(im,o);const y=1/(g+m+d);return r=m*y,o=d*y,t.copy(n).addScaledVector(Sr,r).addScaledVector(br,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const bv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ns={h:0,s:0,l:0},sc={h:0,s:0,l:0};function ku(c,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?c+(e-c)*6*t:t<1/2?e:t<2/3?c+(e-c)*6*(2/3-t):c}class He{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Re){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Nt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Nt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Nt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Nt.workingColorSpace){if(e=Gd(e,1),t=We(t,0,1),n=We(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,r=2*n-s;this.r=ku(r,s,e+1/3),this.g=ku(r,s,e),this.b=ku(r,s,e-1/3)}return Nt.toWorkingColorSpace(this,i),this}setStyle(e,t=Re){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=i[1],o=i[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Re){const n=bv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Oi(e.r),this.g=Oi(e.g),this.b=Oi(e.b),this}copyLinearToSRGB(e){return this.r=jr(e.r),this.g=jr(e.g),this.b=jr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Re){return Nt.fromWorkingColorSpace(tn.copy(this),e),Math.round(We(tn.r*255,0,255))*65536+Math.round(We(tn.g*255,0,255))*256+Math.round(We(tn.b*255,0,255))}getHexString(e=Re){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Nt.workingColorSpace){Nt.fromWorkingColorSpace(tn.copy(this),t);const n=tn.r,i=tn.g,s=tn.b,r=Math.max(n,i,s),o=Math.min(n,i,s);let a,l;const u=(o+r)/2;if(o===r)a=0,l=0;else{const h=r-o;switch(l=u<=.5?h/(r+o):h/(2-r-o),r){case n:a=(i-s)/h+(i<s?6:0);break;case i:a=(s-n)/h+2;break;case s:a=(n-i)/h+4;break}a/=6}return e.h=a,e.s=l,e.l=u,e}getRGB(e,t=Nt.workingColorSpace){return Nt.fromWorkingColorSpace(tn.copy(this),t),e.r=tn.r,e.g=tn.g,e.b=tn.b,e}getStyle(e=Re){Nt.fromWorkingColorSpace(tn.copy(this),e);const t=tn.r,n=tn.g,i=tn.b;return e!==Re?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(ns),this.setHSL(ns.h+e,ns.s+t,ns.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ns),e.getHSL(sc);const n=Wo(ns.h,sc.h,t),i=Wo(ns.s,sc.s,t),s=Wo(ns.l,sc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const tn=new He;He.NAMES=bv;let i1=0;class rn extends er{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:i1++}),this.uuid=ui(),this.name="",this.type="Material",this.blending=ps,this.side=Zr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=nl,this.blendDst=il,this.blendEquation=cs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new He(0,0,0),this.blendAlpha=0,this.depthFunc=sl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ed,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ls,this.stencilZFail=Ls,this.stencilZPass=Ls,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ps&&(n.blending=this.blending),this.side!==Zr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==nl&&(n.blendSrc=this.blendSrc),this.blendDst!==il&&(n.blendDst=this.blendDst),this.blendEquation!==cs&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==sl&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ed&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Ls&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Ls&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Ls&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const r=[];for(const o in s){const a=s[o];delete a.metadata,r.push(a)}return r}if(t){const s=i(e.textures),r=i(e.images);s.length>0&&(n.textures=s),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Sa extends rn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new He(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=Ml,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Di=s1();function s1(){const c=new ArrayBuffer(4),e=new Float32Array(c),t=new Uint32Array(c),n=new Uint32Array(512),i=new Uint32Array(512);for(let a=0;a<256;++a){const l=a-127;l<-27?(n[a]=0,n[a|256]=32768,i[a]=24,i[a|256]=24):l<-14?(n[a]=1024>>-l-14,n[a|256]=1024>>-l-14|32768,i[a]=-l-1,i[a|256]=-l-1):l<=15?(n[a]=l+15<<10,n[a|256]=l+15<<10|32768,i[a]=13,i[a|256]=13):l<128?(n[a]=31744,n[a|256]=64512,i[a]=24,i[a|256]=24):(n[a]=31744,n[a|256]=64512,i[a]=13,i[a|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),o=new Uint32Array(64);for(let a=1;a<1024;++a){let l=a<<13,u=0;for(;!(l&8388608);)l<<=1,u-=8388608;l&=-8388609,u+=947912704,s[a]=l|u}for(let a=1024;a<2048;++a)s[a]=939524096+(a-1024<<13);for(let a=1;a<31;++a)r[a]=a<<23;r[31]=1199570944,r[32]=2147483648;for(let a=33;a<63;++a)r[a]=2147483648+(a-32<<23);r[63]=3347054592;for(let a=1;a<64;++a)a!==32&&(o[a]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:r,offsetTable:o}}function Mn(c){Math.abs(c)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),c=We(c,-65504,65504),Di.floatView[0]=c;const e=Di.uint32View[0],t=e>>23&511;return Di.baseTable[t]+((e&8388607)>>Di.shiftTable[t])}function rc(c){const e=c>>10;return Di.uint32View[0]=Di.mantissaTable[Di.offsetTable[e]+(c&1023)]+Di.exponentTable[e],Di.floatView[0]}const Ut=new P,oc=new he;class Pn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=rl,this.updateRanges=[],this.gpuType=Rn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)oc.fromBufferAttribute(this,t),oc.applyMatrix3(e),this.setXY(t,oc.x,oc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyMatrix3(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyMatrix4(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyNormalMatrix(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.transformDirection(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ze(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),s=ze(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==rl&&(e.usage=this.usage),e}}class Tv extends Pn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class wv extends Pn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Mv extends Pn{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=rc(this.array[e*this.itemSize]);return this.normalized&&(t=hn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize]=Mn(t),this}getY(e){let t=rc(this.array[e*this.itemSize+1]);return this.normalized&&(t=hn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+1]=Mn(t),this}getZ(e){let t=rc(this.array[e*this.itemSize+2]);return this.normalized&&(t=hn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+2]=Mn(t),this}getW(e){let t=rc(this.array[e*this.itemSize+3]);return this.normalized&&(t=hn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+3]=Mn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.array[e+0]=Mn(t),this.array[e+1]=Mn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.array[e+0]=Mn(t),this.array[e+1]=Mn(n),this.array[e+2]=Mn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),s=ze(s,this.array)),this.array[e+0]=Mn(t),this.array[e+1]=Mn(n),this.array[e+2]=Mn(i),this.array[e+3]=Mn(s),this}}class Zt extends Pn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let r1=0;const Dn=new $e,zu=new Et,Tr=new P,An=new tr,Mo=new tr,kt=new P;class Wn extends er{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:r1++}),this.uuid=ui(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(zb(e)?wv:Tv)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new dn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Dn.makeRotationFromQuaternion(e),this.applyMatrix4(Dn),this}rotateX(e){return Dn.makeRotationX(e),this.applyMatrix4(Dn),this}rotateY(e){return Dn.makeRotationY(e),this.applyMatrix4(Dn),this}rotateZ(e){return Dn.makeRotationZ(e),this.applyMatrix4(Dn),this}translate(e,t,n){return Dn.makeTranslation(e,t,n),this.applyMatrix4(Dn),this}scale(e,t,n){return Dn.makeScale(e,t,n),this.applyMatrix4(Dn),this}lookAt(e){return zu.lookAt(e),zu.updateMatrix(),this.applyMatrix4(zu.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Tr).negate(),this.translate(Tr.x,Tr.y,Tr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const r=e[i];n.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Zt(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new tr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];An.setFromBufferAttribute(s),this.morphTargetsRelative?(kt.addVectors(this.boundingBox.min,An.min),this.boundingBox.expandByPoint(kt),kt.addVectors(this.boundingBox.max,An.max),this.boundingBox.expandByPoint(kt)):(this.boundingBox.expandByPoint(An.min),this.boundingBox.expandByPoint(An.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _a);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new P,1/0);return}if(e){const n=this.boundingSphere.center;if(An.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const o=t[s];Mo.setFromBufferAttribute(o),this.morphTargetsRelative?(kt.addVectors(An.min,Mo.min),An.expandByPoint(kt),kt.addVectors(An.max,Mo.max),An.expandByPoint(kt)):(An.expandByPoint(Mo.min),An.expandByPoint(Mo.max))}An.getCenter(n);let i=0;for(let s=0,r=e.count;s<r;s++)kt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(kt));if(t)for(let s=0,r=t.length;s<r;s++){const o=t[s],a=this.morphTargetsRelative;for(let l=0,u=o.count;l<u;l++)kt.fromBufferAttribute(o,l),a&&(Tr.fromBufferAttribute(e,l),kt.add(Tr)),i=Math.max(i,n.distanceToSquared(kt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Pn(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),o=[],a=[];for(let M=0;M<n.count;M++)o[M]=new P,a[M]=new P;const l=new P,u=new P,h=new P,d=new he,f=new he,p=new he,m=new P,g=new P;function y(M,L,I){l.fromBufferAttribute(n,M),u.fromBufferAttribute(n,L),h.fromBufferAttribute(n,I),d.fromBufferAttribute(s,M),f.fromBufferAttribute(s,L),p.fromBufferAttribute(s,I),u.sub(l),h.sub(l),f.sub(d),p.sub(d);const W=1/(f.x*p.y-p.x*f.y);isFinite(W)&&(m.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(W),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(W),o[M].add(m),o[L].add(m),o[I].add(m),a[M].add(g),a[L].add(g),a[I].add(g))}let _=this.groups;_.length===0&&(_=[{start:0,count:e.count}]);for(let M=0,L=_.length;M<L;++M){const I=_[M],W=I.start,U=I.count;for(let k=W,O=W+U;k<O;k+=3)y(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const x=new P,S=new P,w=new P,A=new P;function T(M){w.fromBufferAttribute(i,M),A.copy(w);const L=o[M];x.copy(L),x.sub(w.multiplyScalar(w.dot(L))).normalize(),S.crossVectors(A,L);const W=S.dot(a[M])<0?-1:1;r.setXYZW(M,x.x,x.y,x.z,W)}for(let M=0,L=_.length;M<L;++M){const I=_[M],W=I.start,U=I.count;for(let k=W,O=W+U;k<O;k+=3)T(e.getX(k+0)),T(e.getX(k+1)),T(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Pn(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new P,s=new P,r=new P,o=new P,a=new P,l=new P,u=new P,h=new P;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),u.subVectors(r,s),h.subVectors(i,s),u.cross(h),o.fromBufferAttribute(n,p),a.fromBufferAttribute(n,m),l.fromBufferAttribute(n,g),o.add(u),a.add(u),l.add(u),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),u.subVectors(r,s),h.subVectors(i,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)kt.fromBufferAttribute(e,t),kt.normalize(),e.setXYZ(t,kt.x,kt.y,kt.z)}toNonIndexed(){function e(o,a){const l=o.array,u=o.itemSize,h=o.normalized,d=new l.constructor(a.length*u);let f=0,p=0;for(let m=0,g=a.length;m<g;m++){o.isInterleavedBufferAttribute?f=a[m]*o.data.stride+o.offset:f=a[m]*u;for(let y=0;y<u;y++)d[p++]=l[f++]}return new Pn(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Wn,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],l=e(a,n);t.setAttribute(o,l)}const s=this.morphAttributes;for(const o in s){const a=[],l=s[o];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);a.push(f)}t.morphAttributes[o]=a}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,a=r.length;o<a;o++){const l=r[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(e[l]=a[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const l=n[a];e.data.attributes[a]=l.toJSON(e.data)}const i={};let s=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(i[a]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const s=e.morphAttributes;for(const l in s){const u=[],h=s[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let l=0,u=r.length;l<u;l++){const h=r[l];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const sm=new $e,Ns=new Hd,ac=new _a,rm=new P,cc=new P,lc=new P,uc=new P,Gu=new P,hc=new P,om=new P,dc=new P;class Un extends Et{constructor(e=new Wn,t=new Sa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(s&&o){hc.set(0,0,0);for(let a=0,l=s.length;a<l;a++){const u=o[a],h=s[a];u!==0&&(Gu.fromBufferAttribute(h,e),r?hc.addScaledVector(Gu,u):hc.addScaledVector(Gu.sub(t),u))}t.add(hc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ac.copy(n.boundingSphere),ac.applyMatrix4(s),Ns.copy(e.ray).recast(e.near),!(ac.containsPoint(Ns.origin)===!1&&(Ns.intersectSphere(ac,rm)===null||Ns.origin.distanceToSquared(rm)>(e.far-e.near)**2))&&(sm.copy(s).invert(),Ns.copy(e.ray).applyMatrix4(sm),!(n.boundingBox!==null&&Ns.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ns)))}_computeIntersections(e,t,n){let i;const s=this.geometry,r=this.material,o=s.index,a=s.attributes.position,l=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(o!==null)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],y=r[g.materialIndex],_=Math.max(g.start,f.start),x=Math.min(o.count,Math.min(g.start+g.count,f.start+f.count));for(let S=_,w=x;S<w;S+=3){const A=o.getX(S),T=o.getX(S+1),M=o.getX(S+2);i=fc(this,y,e,n,l,u,h,A,T,M),i&&(i.faceIndex=Math.floor(S/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),m=Math.min(o.count,f.start+f.count);for(let g=p,y=m;g<y;g+=3){const _=o.getX(g),x=o.getX(g+1),S=o.getX(g+2);i=fc(this,r,e,n,l,u,h,_,x,S),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(a!==void 0)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],y=r[g.materialIndex],_=Math.max(g.start,f.start),x=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let S=_,w=x;S<w;S+=3){const A=S,T=S+1,M=S+2;i=fc(this,y,e,n,l,u,h,A,T,M),i&&(i.faceIndex=Math.floor(S/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),m=Math.min(a.count,f.start+f.count);for(let g=p,y=m;g<y;g+=3){const _=g,x=g+1,S=g+2;i=fc(this,r,e,n,l,u,h,_,x,S),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function o1(c,e,t,n,i,s,r,o){let a;if(e.side===Gn?a=n.intersectTriangle(r,s,i,!0,o):a=n.intersectTriangle(i,s,r,e.side===Zr,o),a===null)return null;dc.copy(o),dc.applyMatrix4(c.matrixWorld);const l=t.ray.origin.distanceTo(dc);return l<t.near||l>t.far?null:{distance:l,point:dc.clone(),object:c}}function fc(c,e,t,n,i,s,r,o,a,l){c.getVertexPosition(o,cc),c.getVertexPosition(a,lc),c.getVertexPosition(l,uc);const u=o1(c,e,t,n,cc,lc,uc,om);if(u){const h=new P;Vn.getBarycoord(om,cc,lc,uc,h),i&&(u.uv=Vn.getInterpolatedAttribute(i,o,a,l,h,new he)),s&&(u.uv1=Vn.getInterpolatedAttribute(s,o,a,l,h,new he)),r&&(u.normal=Vn.getInterpolatedAttribute(r,o,a,l,h,new P),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a:o,b:a,c:l,normal:new P,materialIndex:0};Vn.getNormal(cc,lc,uc,d.normal),u.face=d,u.barycoord=h}return u}class ro extends Wn{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const o=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const a=[],l=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,r,s,0),p("z","y","x",1,-1,n,t,-e,r,s,1),p("x","z","y",1,1,e,n,t,i,r,2),p("x","z","y",1,-1,e,n,-t,i,r,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(a),this.setAttribute("position",new Zt(l,3)),this.setAttribute("normal",new Zt(u,3)),this.setAttribute("uv",new Zt(h,2));function p(m,g,y,_,x,S,w,A,T,M,L){const I=S/T,W=w/M,U=S/2,k=w/2,O=A/2,te=T+1,ie=M+1;let ge=0,be=0;const Y=new P;for(let $=0;$<ie;$++){const E=$*W-k;for(let V=0;V<te;V++){const G=V*I-U;Y[m]=G*_,Y[g]=E*x,Y[y]=O,l.push(Y.x,Y.y,Y.z),Y[m]=0,Y[g]=0,Y[y]=A>0?1:-1,u.push(Y.x,Y.y,Y.z),h.push(V/T),h.push(1-$/M),ge+=1}}for(let $=0;$<M;$++)for(let E=0;E<T;E++){const V=d+E+te*$,G=d+E+te*($+1),J=d+(E+1)+te*($+1),z=d+(E+1)+te*$;a.push(V,G,z),a.push(G,J,z),be+=6}o.addGroup(f,be,L),f+=be,d+=ge}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ro(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Al(c){const e={};for(const t in c){e[t]={};for(const n in c[t]){const i=c[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function a1(c){const e={};for(let t=0;t<c.length;t++){const n=Al(c[t]);for(const i in n)e[i]=n[i]}return e}function c1(c){const e=[];for(let t=0;t<c.length;t++)e.push(c[t].clone());return e}const l1={clone:Al,merge:a1};var u1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,h1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class d1 extends rn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=u1,this.fragmentShader=h1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Al(e.uniforms),this.uniformsGroups=c1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Av extends Et{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $e,this.projectionMatrix=new $e,this.projectionMatrixInverse=new $e,this.coordinateSystem=Kn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const is=new P,am=new he,cm=new he;class oi extends Av{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ia*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan($r*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ia*2*Math.atan(Math.tan($r*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){is.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(is.x,is.y).multiplyScalar(-e/is.z),is.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(is.x,is.y).multiplyScalar(-e/is.z)}getViewSize(e,t){return this.getViewBounds(e,am,cm),t.subVectors(cm,am)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan($r*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const r=this.view;if(this.view!==null&&this.view.enabled){const a=r.fullWidth,l=r.fullHeight;s+=r.offsetX*i/a,t-=r.offsetY*n/l,i*=r.width/a,n*=r.height/l}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const wr=-90,Mr=1;class Nv extends Et{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new oi(wr,Mr,e,t);i.layers=this.layers,this.add(i);const s=new oi(wr,Mr,e,t);s.layers=this.layers,this.add(s);const r=new oi(wr,Mr,e,t);r.layers=this.layers,this.add(r);const o=new oi(wr,Mr,e,t);o.layers=this.layers,this.add(o);const a=new oi(wr,Mr,e,t);a.layers=this.layers,this.add(a);const l=new oi(wr,Mr,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,r,o,a]=t;for(const l of t)this.remove(l);if(e===Kn)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),a.up.set(0,1,0),a.lookAt(0,0,-1);else if(e===zi)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),a.up.set(0,-1,0),a.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,o,a,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,r),e.setRenderTarget(n,2,i),e.render(t,o),e.setRenderTarget(n,3,i),e.render(t,a),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5,i),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Wd extends Ht{constructor(e,t,n,i,s,r,o,a,l,u){e=e!==void 0?e:[],t=t!==void 0?t:Xs,super(e,t,n,i,s,r,o,a,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class f1 extends Xb{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Wd(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Kt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ro(5,5,5),s=new d1({name:"CubemapFromEquirect",uniforms:Al(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Gn,blending:js});s.uniforms.tEquirect.value=t;const r=new Un(i,s),o=t.minFilter;return t.minFilter===Ii&&(t.minFilter=Kt),new Nv(1,10,this).update(e,r),t.minFilter=o,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(s)}}class qd extends Et{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ei,this.environmentIntensity=1,this.environmentRotation=new ei,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Cv{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=rl,this.updateRanges=[],this.version=0,this.uuid=ui()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ui()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ui()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ln=new P;class $d{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.applyMatrix4(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.applyNormalMatrix(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ln.fromBufferAttribute(this,t),ln.transformDirection(e),this.setXYZ(t,ln.x,ln.y,ln.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=hn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ze(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=hn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=hn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=hn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=hn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),s=ze(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Pn(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new $d(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class p1 extends rn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new He(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class m1 extends Ht{constructor(e=null,t=1,n=1,i,s,r,o,a,l=Gt,u=Gt,h,d){super(null,r,o,a,l,u,i,s,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Nl extends Pn{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Hu=new P,g1=new P,v1=new dn;class os{constructor(e=new P(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Hu.subVectors(n,t).cross(g1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Hu),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||v1.getNormalMatrix(e),i=this.coplanarPoint(Hu).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Cs=new _a,pc=new P;class Ev{constructor(e=new os,t=new os,n=new os,i=new os,s=new os,r=new os){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(s),o[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Kn){const n=this.planes,i=e.elements,s=i[0],r=i[1],o=i[2],a=i[3],l=i[4],u=i[5],h=i[6],d=i[7],f=i[8],p=i[9],m=i[10],g=i[11],y=i[12],_=i[13],x=i[14],S=i[15];if(n[0].setComponents(a-s,d-l,g-f,S-y).normalize(),n[1].setComponents(a+s,d+l,g+f,S+y).normalize(),n[2].setComponents(a+r,d+u,g+p,S+_).normalize(),n[3].setComponents(a-r,d-u,g-p,S-_).normalize(),n[4].setComponents(a-o,d-h,g-m,S-x).normalize(),t===Kn)n[5].setComponents(a+o,d+h,g+m,S+x).normalize();else if(t===zi)n[5].setComponents(o,h,m,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Cs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Cs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Cs)}intersectsSprite(e){return Cs.center.set(0,0,0),Cs.radius=.7071067811865476,Cs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Cs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(pc.x=i.normal.x>0?e.max.x:e.min.x,pc.y=i.normal.y>0?e.max.y:e.min.y,pc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(pc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Cl extends rn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new He(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const al=new P,cl=new P,lm=new $e,Ao=new Hd,mc=new _a,Wu=new P,um=new P;class y1 extends Et{constructor(e=new Wn,t=new Cl){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)al.fromBufferAttribute(t,i-1),cl.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=al.distanceTo(cl);e.setAttribute("lineDistance",new Zt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),mc.copy(n.boundingSphere),mc.applyMatrix4(i),mc.radius+=s,e.ray.intersectsSphere(mc)===!1)return;lm.copy(i).invert(),Ao.copy(e.ray).applyMatrix4(lm);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,l=this.isLineSegments?2:1,u=n.index,d=n.attributes.position;if(u!==null){const f=Math.max(0,r.start),p=Math.min(u.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=l){const y=u.getX(m),_=u.getX(m+1),x=gc(this,e,Ao,a,y,_);x&&t.push(x)}if(this.isLineLoop){const m=u.getX(p-1),g=u.getX(f),y=gc(this,e,Ao,a,m,g);y&&t.push(y)}}else{const f=Math.max(0,r.start),p=Math.min(d.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=l){const y=gc(this,e,Ao,a,m,m+1);y&&t.push(y)}if(this.isLineLoop){const m=gc(this,e,Ao,a,p-1,f);m&&t.push(m)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function gc(c,e,t,n,i,s){const r=c.geometry.attributes.position;if(al.fromBufferAttribute(r,i),cl.fromBufferAttribute(r,s),t.distanceSqToSegment(al,cl,Wu,um)>n)return;Wu.applyMatrix4(c.matrixWorld);const a=e.ray.origin.distanceTo(Wu);if(!(a<e.near||a>e.far))return{distance:a,point:um.clone().applyMatrix4(c.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:c}}const hm=new P,dm=new P;class x1 extends y1{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)hm.fromBufferAttribute(t,i),dm.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+hm.distanceTo(dm);e.setAttribute("lineDistance",new Zt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class _1 extends rn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new He(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class Rv extends Et{constructor(){super(),this.isGroup=!0,this.type="Group"}}class S1 extends Ht{constructor(e,t,n,i,s,r,o,a,l){super(e,t,n,i,s,r,o,a,l),this.isVideoTexture=!0,this.minFilter=r!==void 0?r:Kt,this.magFilter=s!==void 0?s:Kt,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Pv extends Ht{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Gt,this.minFilter=Gt,this.generateMipmaps=!1,this.needsUpdate=!0}}class nr extends Ht{constructor(e,t,n,i,s,r,o,a,l,u=zs){if(u!==zs&&u!==Qr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===zs&&(n=Xt),n===void 0&&u===Qr&&(n=ya),super(null,i,s,r,o,a,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Gt,this.minFilter=a!==void 0?a:Gt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Si{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let r=1;r<=e;r++)n=this.getPoint(r/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let r;t?r=t:r=e*n[s-1];let o=0,a=s-1,l;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),l=n[i]-r,l<0)o=i+1;else if(l>0)a=i-1;else{a=i;break}if(i=a,n[i]===r)return i/(s-1);const u=n[i],d=n[i+1]-u,f=(r-u)/d;return(i+f)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),o=this.getPoint(s),a=t||(r.isVector2?new he:new P);return a.copy(o).sub(r).normalize(),a}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new P,i=[],s=[],r=[],o=new P,a=new $e;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new P)}s[0]=new P,r[0]=new P;let l=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),d<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],o),r[0].crossVectors(i[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),r[f]=r[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(We(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(a.makeRotationAxis(o,p))}r[f].crossVectors(i[f],s[f])}if(t===!0){let f=Math.acos(We(s[0].dot(s[e]),-1,1));f/=e,i[0].dot(o.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(a.makeRotationAxis(i[p],f*p)),r[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:r}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class jd extends Si{constructor(e=0,t=0,n=1,i=1,s=0,r=Math.PI*2,o=!1,a=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=o,this.aRotation=a}getPoint(e,t=new he){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(r?s=0:s=i),this.aClockwise===!0&&!r&&(s===i?s=-i:s=s-i);const o=this.aStartAngle+e*s;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=a-this.aX,f=l-this.aY;a=d*u-f*h+this.aX,l=d*h+f*u+this.aY}return n.set(a,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class b1 extends jd{constructor(e,t,n,i,s,r){super(e,t,n,n,i,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Xd(){let c=0,e=0,t=0,n=0;function i(s,r,o,a){c=s,e=o,t=-3*s+3*r-2*o-a,n=2*s-2*r+o+a}return{initCatmullRom:function(s,r,o,a,l){i(r,o,l*(o-s),l*(a-r))},initNonuniformCatmullRom:function(s,r,o,a,l,u,h){let d=(r-s)/l-(o-s)/(l+u)+(o-r)/u,f=(o-r)/u-(a-r)/(u+h)+(a-o)/h;d*=u,f*=u,i(r,o,d,f)},calc:function(s){const r=s*s,o=r*s;return c+e*s+t*r+n*o}}}const vc=new P,qu=new Xd,$u=new Xd,ju=new Xd;class T1 extends Si{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new P){const n=t,i=this.points,s=i.length,r=(s-(this.closed?0:1))*e;let o=Math.floor(r),a=r-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:a===0&&o===s-1&&(o=s-2,a=1);let l,u;this.closed||o>0?l=i[(o-1)%s]:(vc.subVectors(i[0],i[1]).add(i[0]),l=vc);const h=i[o%s],d=i[(o+1)%s];if(this.closed||o+2<s?u=i[(o+2)%s]:(vc.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=vc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(h),f),m=Math.pow(h.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(u),f);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),qu.initNonuniformCatmullRom(l.x,h.x,d.x,u.x,p,m,g),$u.initNonuniformCatmullRom(l.y,h.y,d.y,u.y,p,m,g),ju.initNonuniformCatmullRom(l.z,h.z,d.z,u.z,p,m,g)}else this.curveType==="catmullrom"&&(qu.initCatmullRom(l.x,h.x,d.x,u.x,this.tension),$u.initCatmullRom(l.y,h.y,d.y,u.y,this.tension),ju.initCatmullRom(l.z,h.z,d.z,u.z,this.tension));return n.set(qu.calc(a),$u.calc(a),ju.calc(a)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new P().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function fm(c,e,t,n,i){const s=(n-e)*.5,r=(i-t)*.5,o=c*c,a=c*o;return(2*t-2*n+s+r)*a+(-3*t+3*n-2*s-r)*o+s*c+t}function w1(c,e){const t=1-c;return t*t*e}function M1(c,e){return 2*(1-c)*c*e}function A1(c,e){return c*c*e}function qo(c,e,t,n){return w1(c,e)+M1(c,t)+A1(c,n)}function N1(c,e){const t=1-c;return t*t*t*e}function C1(c,e){const t=1-c;return 3*t*t*c*e}function E1(c,e){return 3*(1-c)*c*c*e}function R1(c,e){return c*c*c*e}function $o(c,e,t,n,i){return N1(c,e)+C1(c,t)+E1(c,n)+R1(c,i)}class Uv extends Si{constructor(e=new he,t=new he,n=new he,i=new he){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,r=this.v2,o=this.v3;return n.set($o(e,i.x,s.x,r.x,o.x),$o(e,i.y,s.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class P1 extends Si{constructor(e=new P,t=new P,n=new P,i=new P){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new P){const n=t,i=this.v0,s=this.v1,r=this.v2,o=this.v3;return n.set($o(e,i.x,s.x,r.x,o.x),$o(e,i.y,s.y,r.y,o.y),$o(e,i.z,s.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Dv extends Si{constructor(e=new he,t=new he){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new he){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new he){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class U1 extends Si{constructor(e=new P,t=new P){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new P){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new P){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Lv extends Si{constructor(e=new he,t=new he,n=new he){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(qo(e,i.x,s.x,r.x),qo(e,i.y,s.y,r.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class D1 extends Si{constructor(e=new P,t=new P,n=new P){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new P){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(qo(e,i.x,s.x,r.x),qo(e,i.y,s.y,r.y),qo(e,i.z,s.z,r.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Fv extends Si{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new he){const n=t,i=this.points,s=(i.length-1)*e,r=Math.floor(s),o=s-r,a=i[r===0?r:r-1],l=i[r],u=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return n.set(fm(o,a.x,l.x,u.x,h.x),fm(o,a.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new he().fromArray(i))}return this}}var td=Object.freeze({__proto__:null,ArcCurve:b1,CatmullRomCurve3:T1,CubicBezierCurve:Uv,CubicBezierCurve3:P1,EllipseCurve:jd,LineCurve:Dv,LineCurve3:U1,QuadraticBezierCurve:Lv,QuadraticBezierCurve3:D1,SplineCurve:Fv});class L1 extends Si{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new td[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const r=i[s]-n,o=this.curves[s],a=o.getLength(),l=a===0?0:1-r/a;return o.getPointAt(l,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],o=r.isEllipseCurve?e*2:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,a=r.getPoints(o);for(let l=0;l<a.length;l++){const u=a[l];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new td[i.type]().fromJSON(i))}return this}}class nd extends L1{constructor(e){super(),this.type="Path",this.currentPoint=new he,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Dv(this.currentPoint.clone(),new he(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Lv(this.currentPoint.clone(),new he(e,t),new he(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,r){const o=new Uv(this.currentPoint.clone(),new he(e,t),new he(n,i),new he(s,r));return this.curves.push(o),this.currentPoint.set(s,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Fv(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,r){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,n,i,s,r),this}absarc(e,t,n,i,s,r){return this.absellipse(e,t,n,n,i,s,r),this}ellipse(e,t,n,i,s,r,o,a){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,s,r,o,a),this}absellipse(e,t,n,i,s,r,o,a){const l=new jd(e,t,n,i,s,r,o,a);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}const yc=new P,xc=new P,Xu=new P,_c=new Vn;class F1 extends Wn{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos($r*t),r=e.getIndex(),o=e.getAttribute("position"),a=r?r.count:o.count,l=[0,0,0],u=["a","b","c"],h=new Array(3),d={},f=[];for(let p=0;p<a;p+=3){r?(l[0]=r.getX(p),l[1]=r.getX(p+1),l[2]=r.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:m,b:g,c:y}=_c;if(m.fromBufferAttribute(o,l[0]),g.fromBufferAttribute(o,l[1]),y.fromBufferAttribute(o,l[2]),_c.getNormal(Xu),h[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let _=0;_<3;_++){const x=(_+1)%3,S=h[_],w=h[x],A=_c[u[_]],T=_c[u[x]],M=`${S}_${w}`,L=`${w}_${S}`;L in d&&d[L]?(Xu.dot(d[L].normal)<=s&&(f.push(A.x,A.y,A.z),f.push(T.x,T.y,T.z)),d[L]=null):M in d||(d[M]={index0:l[_],index1:l[x],normal:Xu.clone()})}}for(const p in d)if(d[p]){const{index0:m,index1:g}=d[p];yc.fromBufferAttribute(o,m),xc.fromBufferAttribute(o,g),f.push(yc.x,yc.y,yc.z),f.push(xc.x,xc.y,xc.z)}this.setAttribute("position",new Zt(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class qc extends nd{constructor(e){super(e),this.uuid=ui(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new nd().fromJSON(i))}return this}}const I1={triangulate:function(c,e,t=2){const n=e&&e.length,i=n?e[0]*t:c.length;let s=Iv(c,0,i,t,!0);const r=[];if(!s||s.next===s.prev)return r;let o,a,l,u,h,d,f;if(n&&(s=z1(c,e,s,t)),c.length>80*t){o=l=c[0],a=u=c[1];for(let p=t;p<i;p+=t)h=c[p],d=c[p+1],h<o&&(o=h),d<a&&(a=d),h>l&&(l=h),d>u&&(u=d);f=Math.max(l-o,u-a),f=f!==0?32767/f:0}return sa(s,r,t,o,a,f,0),r}};function Iv(c,e,t,n,i){let s,r;if(i===J1(c,e,t,n)>0)for(s=e;s<t;s+=n)r=pm(s,c[s],c[s+1],r);else for(s=t-n;s>=e;s-=n)r=pm(s,c[s],c[s+1],r);return r&&El(r,r.next)&&(oa(r),r=r.next),r}function Ks(c,e){if(!c)return c;e||(e=c);let t=c,n;do if(n=!1,!t.steiner&&(El(t,t.next)||_t(t.prev,t,t.next)===0)){if(oa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function sa(c,e,t,n,i,s,r){if(!c)return;!r&&s&&$1(c,n,i,s);let o=c,a,l;for(;c.prev!==c.next;){if(a=c.prev,l=c.next,s?O1(c,n,i,s):B1(c)){e.push(a.i/t|0),e.push(c.i/t|0),e.push(l.i/t|0),oa(c),c=l.next,o=l.next;continue}if(c=l,c===o){r?r===1?(c=V1(Ks(c),e,t),sa(c,e,t,n,i,s,2)):r===2&&k1(c,e,t,n,i,s):sa(Ks(c),e,t,n,i,s,1);break}}}function B1(c){const e=c.prev,t=c,n=c.next;if(_t(e,t,n)>=0)return!1;const i=e.x,s=t.x,r=n.x,o=e.y,a=t.y,l=n.y,u=i<s?i<r?i:r:s<r?s:r,h=o<a?o<l?o:l:a<l?a:l,d=i>s?i>r?i:r:s>r?s:r,f=o>a?o>l?o:l:a>l?a:l;let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Vr(i,o,s,a,r,l,p.x,p.y)&&_t(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function O1(c,e,t,n){const i=c.prev,s=c,r=c.next;if(_t(i,s,r)>=0)return!1;const o=i.x,a=s.x,l=r.x,u=i.y,h=s.y,d=r.y,f=o<a?o<l?o:l:a<l?a:l,p=u<h?u<d?u:d:h<d?h:d,m=o>a?o>l?o:l:a>l?a:l,g=u>h?u>d?u:d:h>d?h:d,y=id(f,p,e,t,n),_=id(m,g,e,t,n);let x=c.prevZ,S=c.nextZ;for(;x&&x.z>=y&&S&&S.z<=_;){if(x.x>=f&&x.x<=m&&x.y>=p&&x.y<=g&&x!==i&&x!==r&&Vr(o,u,a,h,l,d,x.x,x.y)&&_t(x.prev,x,x.next)>=0||(x=x.prevZ,S.x>=f&&S.x<=m&&S.y>=p&&S.y<=g&&S!==i&&S!==r&&Vr(o,u,a,h,l,d,S.x,S.y)&&_t(S.prev,S,S.next)>=0))return!1;S=S.nextZ}for(;x&&x.z>=y;){if(x.x>=f&&x.x<=m&&x.y>=p&&x.y<=g&&x!==i&&x!==r&&Vr(o,u,a,h,l,d,x.x,x.y)&&_t(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;S&&S.z<=_;){if(S.x>=f&&S.x<=m&&S.y>=p&&S.y<=g&&S!==i&&S!==r&&Vr(o,u,a,h,l,d,S.x,S.y)&&_t(S.prev,S,S.next)>=0)return!1;S=S.nextZ}return!0}function V1(c,e,t){let n=c;do{const i=n.prev,s=n.next.next;!El(i,s)&&Bv(i,n,n.next,s)&&ra(i,s)&&ra(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),oa(n),oa(n.next),n=c=s),n=n.next}while(n!==c);return Ks(n)}function k1(c,e,t,n,i,s){let r=c;do{let o=r.next.next;for(;o!==r.prev;){if(r.i!==o.i&&Y1(r,o)){let a=Ov(r,o);r=Ks(r,r.next),a=Ks(a,a.next),sa(r,e,t,n,i,s,0),sa(a,e,t,n,i,s,0);return}o=o.next}r=r.next}while(r!==c)}function z1(c,e,t,n){const i=[];let s,r,o,a,l;for(s=0,r=e.length;s<r;s++)o=e[s]*n,a=s<r-1?e[s+1]*n:c.length,l=Iv(c,o,a,n,!1),l===l.next&&(l.steiner=!0),i.push(X1(l));for(i.sort(G1),s=0;s<i.length;s++)t=H1(i[s],t);return t}function G1(c,e){return c.x-e.x}function H1(c,e){const t=W1(c,e);if(!t)return e;const n=Ov(t,c);return Ks(n,n.next),Ks(t,t.next)}function W1(c,e){let t=e,n=-1/0,i;const s=c.x,r=c.y;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const d=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===s))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,a=i.x,l=i.y;let u=1/0,h;t=i;do s>=t.x&&t.x>=a&&s!==t.x&&Vr(r<l?s:n,r,a,l,r<l?n:s,r,t.x,t.y)&&(h=Math.abs(r-t.y)/(s-t.x),ra(t,c)&&(h<u||h===u&&(t.x>i.x||t.x===i.x&&q1(i,t)))&&(i=t,u=h)),t=t.next;while(t!==o);return i}function q1(c,e){return _t(c.prev,c,e.prev)<0&&_t(e.next,c,c.next)<0}function $1(c,e,t,n){let i=c;do i.z===0&&(i.z=id(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==c);i.prevZ.nextZ=null,i.prevZ=null,j1(i)}function j1(c){let e,t,n,i,s,r,o,a,l=1;do{for(t=c,c=null,s=null,r=0;t;){for(r++,n=t,o=0,e=0;e<l&&(o++,n=n.nextZ,!!n);e++);for(a=l;o>0||a>0&&n;)o!==0&&(a===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,a--),s?s.nextZ=i:c=i,i.prevZ=s,s=i;t=n}s.nextZ=null,l*=2}while(r>1);return c}function id(c,e,t,n,i){return c=(c-t)*i|0,e=(e-n)*i|0,c=(c|c<<8)&16711935,c=(c|c<<4)&252645135,c=(c|c<<2)&858993459,c=(c|c<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,c|e<<1}function X1(c){let e=c,t=c;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==c);return t}function Vr(c,e,t,n,i,s,r,o){return(i-r)*(e-o)>=(c-r)*(s-o)&&(c-r)*(n-o)>=(t-r)*(e-o)&&(t-r)*(s-o)>=(i-r)*(n-o)}function Y1(c,e){return c.next.i!==e.i&&c.prev.i!==e.i&&!Z1(c,e)&&(ra(c,e)&&ra(e,c)&&K1(c,e)&&(_t(c.prev,c,e.prev)||_t(c,e.prev,e))||El(c,e)&&_t(c.prev,c,c.next)>0&&_t(e.prev,e,e.next)>0)}function _t(c,e,t){return(e.y-c.y)*(t.x-e.x)-(e.x-c.x)*(t.y-e.y)}function El(c,e){return c.x===e.x&&c.y===e.y}function Bv(c,e,t,n){const i=bc(_t(c,e,t)),s=bc(_t(c,e,n)),r=bc(_t(t,n,c)),o=bc(_t(t,n,e));return!!(i!==s&&r!==o||i===0&&Sc(c,t,e)||s===0&&Sc(c,n,e)||r===0&&Sc(t,c,n)||o===0&&Sc(t,e,n))}function Sc(c,e,t){return e.x<=Math.max(c.x,t.x)&&e.x>=Math.min(c.x,t.x)&&e.y<=Math.max(c.y,t.y)&&e.y>=Math.min(c.y,t.y)}function bc(c){return c>0?1:c<0?-1:0}function Z1(c,e){let t=c;do{if(t.i!==c.i&&t.next.i!==c.i&&t.i!==e.i&&t.next.i!==e.i&&Bv(t,t.next,c,e))return!0;t=t.next}while(t!==c);return!1}function ra(c,e){return _t(c.prev,c,c.next)<0?_t(c,e,c.next)>=0&&_t(c,c.prev,e)>=0:_t(c,e,c.prev)<0||_t(c,c.next,e)<0}function K1(c,e){let t=c,n=!1;const i=(c.x+e.x)/2,s=(c.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==c);return n}function Ov(c,e){const t=new sd(c.i,c.x,c.y),n=new sd(e.i,e.x,e.y),i=c.next,s=e.prev;return c.next=e,e.prev=c,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function pm(c,e,t,n){const i=new sd(c,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function oa(c){c.next.prev=c.prev,c.prev.next=c.next,c.prevZ&&(c.prevZ.nextZ=c.nextZ),c.nextZ&&(c.nextZ.prevZ=c.prevZ)}function sd(c,e,t){this.i=c,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function J1(c,e,t,n){let i=0;for(let s=e,r=t-n;s<t;s+=n)i+=(c[r]-c[s])*(c[s+1]+c[r+1]),r=s;return i}class Xr{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Xr.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];mm(e),gm(n,e);let r=e.length;t.forEach(mm);for(let a=0;a<t.length;a++)i.push(r),r+=t[a].length,gm(n,t[a]);const o=I1.triangulate(n,i);for(let a=0;a<o.length;a+=3)s.push(o.slice(a,a+3));return s}}function mm(c){const e=c.length;e>2&&c[e-1].equals(c[0])&&c.pop()}function gm(c,e){for(let t=0;t<e.length;t++)c.push(e[t].x),c.push(e[t].y)}class Yd extends Wn{constructor(e=new qc([new he(.5,.5),new he(-.5,.5),new he(-.5,-.5),new he(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let o=0,a=e.length;o<a;o++){const l=e[o];r(l)}this.setAttribute("position",new Zt(i,3)),this.setAttribute("uv",new Zt(s,2)),this.computeVertexNormals();function r(o){const a=[],l=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const y=t.extrudePath,_=t.UVGenerator!==void 0?t.UVGenerator:Q1;let x,S=!1,w,A,T,M;y&&(x=y.getSpacedPoints(u),S=!0,d=!1,w=y.computeFrenetFrames(u,!1),A=new P,T=new P,M=new P),d||(g=0,f=0,p=0,m=0);const L=o.extractPoints(l);let I=L.shape;const W=L.holes;if(!Xr.isClockWise(I)){I=I.reverse();for(let B=0,oe=W.length;B<oe;B++){const ee=W[B];Xr.isClockWise(ee)&&(W[B]=ee.reverse())}}const k=Xr.triangulateShape(I,W),O=I;for(let B=0,oe=W.length;B<oe;B++){const ee=W[B];I=I.concat(ee)}function te(B,oe,ee){return oe||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(oe,ee)}const ie=I.length,ge=k.length;function be(B,oe,ee){let ce,se,ve;const ne=B.x-oe.x,de=B.y-oe.y,me=ee.x-B.x,j=ee.y-B.y,we=ne*ne+de*de,fe=ne*j-de*me;if(Math.abs(fe)>Number.EPSILON){const ye=Math.sqrt(we),_e=Math.sqrt(me*me+j*j),st=oe.x-de/ye,Te=oe.y+ne/ye,Ue=ee.x-j/_e,De=ee.y+me/_e,je=((Ue-st)*j-(De-Te)*me)/(ne*j-de*me);ce=st+ne*je-B.x,se=Te+de*je-B.y;const Ze=ce*ce+se*se;if(Ze<=2)return new he(ce,se);ve=Math.sqrt(Ze/2)}else{let ye=!1;ne>Number.EPSILON?me>Number.EPSILON&&(ye=!0):ne<-Number.EPSILON?me<-Number.EPSILON&&(ye=!0):Math.sign(de)===Math.sign(j)&&(ye=!0),ye?(ce=-de,se=ne,ve=Math.sqrt(we)):(ce=ne,se=de,ve=Math.sqrt(we/2))}return new he(ce/ve,se/ve)}const Y=[];for(let B=0,oe=O.length,ee=oe-1,ce=B+1;B<oe;B++,ee++,ce++)ee===oe&&(ee=0),ce===oe&&(ce=0),Y[B]=be(O[B],O[ee],O[ce]);const $=[];let E,V=Y.concat();for(let B=0,oe=W.length;B<oe;B++){const ee=W[B];E=[];for(let ce=0,se=ee.length,ve=se-1,ne=ce+1;ce<se;ce++,ve++,ne++)ve===se&&(ve=0),ne===se&&(ne=0),E[ce]=be(ee[ce],ee[ve],ee[ne]);$.push(E),V=V.concat(E)}for(let B=0;B<g;B++){const oe=B/g,ee=f*Math.cos(oe*Math.PI/2),ce=p*Math.sin(oe*Math.PI/2)+m;for(let se=0,ve=O.length;se<ve;se++){const ne=te(O[se],Y[se],ce);Z(ne.x,ne.y,-ee)}for(let se=0,ve=W.length;se<ve;se++){const ne=W[se];E=$[se];for(let de=0,me=ne.length;de<me;de++){const j=te(ne[de],E[de],ce);Z(j.x,j.y,-ee)}}}const G=p+m;for(let B=0;B<ie;B++){const oe=d?te(I[B],V[B],G):I[B];S?(T.copy(w.normals[0]).multiplyScalar(oe.x),A.copy(w.binormals[0]).multiplyScalar(oe.y),M.copy(x[0]).add(T).add(A),Z(M.x,M.y,M.z)):Z(oe.x,oe.y,0)}for(let B=1;B<=u;B++)for(let oe=0;oe<ie;oe++){const ee=d?te(I[oe],V[oe],G):I[oe];S?(T.copy(w.normals[B]).multiplyScalar(ee.x),A.copy(w.binormals[B]).multiplyScalar(ee.y),M.copy(x[B]).add(T).add(A),Z(M.x,M.y,M.z)):Z(ee.x,ee.y,h/u*B)}for(let B=g-1;B>=0;B--){const oe=B/g,ee=f*Math.cos(oe*Math.PI/2),ce=p*Math.sin(oe*Math.PI/2)+m;for(let se=0,ve=O.length;se<ve;se++){const ne=te(O[se],Y[se],ce);Z(ne.x,ne.y,h+ee)}for(let se=0,ve=W.length;se<ve;se++){const ne=W[se];E=$[se];for(let de=0,me=ne.length;de<me;de++){const j=te(ne[de],E[de],ce);S?Z(j.x,j.y+x[u-1].y,x[u-1].x+ee):Z(j.x,j.y,h+ee)}}}J(),z();function J(){const B=i.length/3;if(d){let oe=0,ee=ie*oe;for(let ce=0;ce<ge;ce++){const se=k[ce];re(se[2]+ee,se[1]+ee,se[0]+ee)}oe=u+g*2,ee=ie*oe;for(let ce=0;ce<ge;ce++){const se=k[ce];re(se[0]+ee,se[1]+ee,se[2]+ee)}}else{for(let oe=0;oe<ge;oe++){const ee=k[oe];re(ee[2],ee[1],ee[0])}for(let oe=0;oe<ge;oe++){const ee=k[oe];re(ee[0]+ie*u,ee[1]+ie*u,ee[2]+ie*u)}}n.addGroup(B,i.length/3-B,0)}function z(){const B=i.length/3;let oe=0;ae(O,oe),oe+=O.length;for(let ee=0,ce=W.length;ee<ce;ee++){const se=W[ee];ae(se,oe),oe+=se.length}n.addGroup(B,i.length/3-B,1)}function ae(B,oe){let ee=B.length;for(;--ee>=0;){const ce=ee;let se=ee-1;se<0&&(se=B.length-1);for(let ve=0,ne=u+g*2;ve<ne;ve++){const de=ie*ve,me=ie*(ve+1),j=oe+ce+de,we=oe+se+de,fe=oe+se+me,ye=oe+ce+me;xe(j,we,fe,ye)}}}function Z(B,oe,ee){a.push(B),a.push(oe),a.push(ee)}function re(B,oe,ee){Se(B),Se(oe),Se(ee);const ce=i.length/3,se=_.generateTopUV(n,i,ce-3,ce-2,ce-1);le(se[0]),le(se[1]),le(se[2])}function xe(B,oe,ee,ce){Se(B),Se(oe),Se(ce),Se(oe),Se(ee),Se(ce);const se=i.length/3,ve=_.generateSideWallUV(n,i,se-6,se-3,se-2,se-1);le(ve[0]),le(ve[1]),le(ve[3]),le(ve[1]),le(ve[2]),le(ve[3])}function Se(B){i.push(a[B*3+0]),i.push(a[B*3+1]),i.push(a[B*3+2])}function le(B){s.push(B.x),s.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return eT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,r=e.shapes.length;s<r;s++){const o=t[e.shapes[s]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new td[i.type]().fromJSON(i)),new Yd(n,e.options)}}const Q1={generateTopUV:function(c,e,t,n,i){const s=e[t*3],r=e[t*3+1],o=e[n*3],a=e[n*3+1],l=e[i*3],u=e[i*3+1];return[new he(s,r),new he(o,a),new he(l,u)]},generateSideWallUV:function(c,e,t,n,i,s){const r=e[t*3],o=e[t*3+1],a=e[t*3+2],l=e[n*3],u=e[n*3+1],h=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],y=e[s*3+2];return Math.abs(o-u)<Math.abs(r-l)?[new he(r,1-a),new he(l,1-h),new he(d,1-p),new he(m,1-y)]:[new he(o,1-a),new he(u,1-h),new he(f,1-p),new he(g,1-y)]}};function eT(c,e,t){if(t.shapes=[],Array.isArray(c))for(let n=0,i=c.length;n<i;n++){const s=c[n];t.shapes.push(s.uuid)}else t.shapes.push(c.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class oo extends Wn{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,r=t/2,o=Math.floor(n),a=Math.floor(i),l=o+1,u=a+1,h=e/o,d=t/a,f=[],p=[],m=[],g=[];for(let y=0;y<u;y++){const _=y*d-r;for(let x=0;x<l;x++){const S=x*h-s;p.push(S,-_,0),m.push(0,0,1),g.push(x/o),g.push(1-y/a)}}for(let y=0;y<a;y++)for(let _=0;_<o;_++){const x=_+l*y,S=_+l*(y+1),w=_+1+l*(y+1),A=_+1+l*y;f.push(x,S,A),f.push(S,w,A)}this.setIndex(f),this.setAttribute("position",new Zt(p,3)),this.setAttribute("normal",new Zt(m,3)),this.setAttribute("uv",new Zt(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oo(e.width,e.height,e.widthSegments,e.heightSegments)}}class Zd extends Wn{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,r=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const a=Math.min(r+o,Math.PI);let l=0;const u=[],h=new P,d=new P,f=[],p=[],m=[],g=[];for(let y=0;y<=n;y++){const _=[],x=y/n;let S=0;y===0&&r===0?S=.5/t:y===n&&a===Math.PI&&(S=-.5/t);for(let w=0;w<=t;w++){const A=w/t;h.x=-e*Math.cos(i+A*s)*Math.sin(r+x*o),h.y=e*Math.cos(r+x*o),h.z=e*Math.sin(i+A*s)*Math.sin(r+x*o),p.push(h.x,h.y,h.z),d.copy(h).normalize(),m.push(d.x,d.y,d.z),g.push(A+S,1-x),_.push(l++)}u.push(_)}for(let y=0;y<n;y++)for(let _=0;_<t;_++){const x=u[y][_+1],S=u[y][_],w=u[y+1][_],A=u[y+1][_+1];(y!==0||r>0)&&f.push(x,S,A),(y!==n-1||a<Math.PI)&&f.push(S,w,A)}this.setIndex(f),this.setAttribute("position",new Zt(p,3)),this.setAttribute("normal",new Zt(m,3)),this.setAttribute("uv",new Zt(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zd(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class tT extends rn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new He(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Kd extends rn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new He(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=vs,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class nT extends Kd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new he(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return We(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new He(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new He(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new He(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class iT extends rn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new He(16777215),this.specular=new He(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=vs,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=Ml,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class sT extends rn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new He(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=vs,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class rT extends rn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=vs,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class oT extends rn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new He(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new He(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=vs,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ei,this.combine=Ml,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class aT extends rn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=cb,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class cT extends rn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class lT extends rn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new He(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=vs,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uT extends Cl{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const ll={enabled:!1,files:{},add:function(c,e){this.enabled!==!1&&(this.files[c]=e)},get:function(c){if(this.enabled!==!1)return this.files[c]},remove:function(c){delete this.files[c]},clear:function(){this.files={}}};class hT{constructor(e,t,n){const i=this;let s=!1,r=0,o=0,a;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){o++,s===!1&&i.onStart!==void 0&&i.onStart(u,r,o),s=!0},this.itemEnd=function(u){r++,i.onProgress!==void 0&&i.onProgress(u,r,o),r===o&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return a?a(u):u},this.setURLModifier=function(u){return a=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const f=l[h],p=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null}}}const dT=new hT;class ba{constructor(e){this.manager=e!==void 0?e:dT,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ba.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ri={};class fT extends Error{constructor(e,t){super(e),this.response=t}}class rd extends ba{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ll.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ri[e]!==void 0){Ri[e].push({onLoad:t,onProgress:n,onError:i});return}Ri[e]=[],Ri[e].push({onLoad:t,onProgress:n,onError:i});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,a=this.responseType;fetch(r).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const u=Ri[e],h=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let m=0;const g=new ReadableStream({start(y){_();function _(){h.read().then(({done:x,value:S})=>{if(x)y.close();else{m+=S.byteLength;const w=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:f});for(let A=0,T=u.length;A<T;A++){const M=u[A];M.onProgress&&M.onProgress(w)}y.enqueue(S),_()}},x=>{y.error(x)})}}});return new Response(g)}else throw new fT(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(a){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(u=>new DOMParser().parseFromString(u,o));case"json":return l.json();default:if(o===void 0)return l.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{ll.add(e,l);const u=Ri[e];delete Ri[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(l)}}).catch(l=>{const u=Ri[e];if(u===void 0)throw this.manager.itemError(e),l;delete Ri[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class pT extends ba{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=ll.get(e);if(r!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const o=ol("img");function a(){u(),ll.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class mT extends ba{constructor(e){super(e)}load(e,t,n,i){const s=new Ht,r=new pT(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class ir extends Et{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new He(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class gT extends ir{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.groundColor=new He(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Yu=new $e,vm=new P,ym=new P;class Jd{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new he(512,512),this.map=null,this.mapPass=null,this.matrix=new $e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ev,this._frameExtents=new he(1,1),this._viewportCount=1,this._viewports=[new Ke(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;vm.setFromMatrixPosition(e.matrixWorld),t.position.copy(vm),ym.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ym),t.updateMatrixWorld(),Yu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Yu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Yu)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class vT extends Jd{constructor(){super(new oi(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=ia*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Vv extends ir{constructor(e,t,n=0,i=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new vT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const xm=new $e,No=new P,Zu=new P;class yT extends Jd{constructor(){super(new oi(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new he(4,2),this._viewportCount=6,this._viewports=[new Ke(2,1,1,1),new Ke(0,1,1,1),new Ke(3,1,1,1),new Ke(1,1,1,1),new Ke(3,0,1,1),new Ke(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),No.setFromMatrixPosition(e.matrixWorld),n.position.copy(No),Zu.copy(n.position),Zu.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Zu),n.updateMatrixWorld(),i.makeTranslation(-No.x,-No.y,-No.z),xm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xm)}}class xT extends ir{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new yT}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Qd extends Av{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,r=n+e,o=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,r=s+l*this.view.width,o-=u*this.view.offsetY,a=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,r,o,a,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class _T extends Jd{constructor(){super(new Qd(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class kv extends ir{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Et.DEFAULT_UP),this.updateMatrix(),this.target=new Et,this.shadow=new _T}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class zv extends ir{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class ST extends ir{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class bT{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new P)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*i),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],1.092548*(n*i)),t.addScaledVector(r[5],1.092548*(i*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(n*s)),t.addScaledVector(r[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*i),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*n),t.addScaledVector(r[4],2*.429043*n*i),t.addScaledVector(r[5],2*.429043*i*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*n*s),t.addScaledVector(r[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class TT extends ir{constructor(e=new bT,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class wT extends Wn{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class MT{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=_m(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=_m();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function _m(){return performance.now()}class AT extends Cv{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const Sm=new $e;class NT{constructor(e,t,n=0,i=1/0){this.ray=new Hd(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Sv,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Sm.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Sm),this}intersectObject(e,t=!0,n=[]){return od(e,this,n,t),n.sort(bm),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)od(e[i],this,n,t);return n.sort(bm),n}}function bm(c,e){return c.distance-e.distance}function od(c,e,t,n){let i=!0;if(c.layers.test(e.layers)&&c.raycast(e,t)===!1&&(i=!1),i===!0&&n===!0){const s=c.children;for(let r=0,o=s.length;r<o;r++)od(s[r],e,t,!0)}}class CT{constructor(){this.type="ShapePath",this.color=new He,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new nd,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,r){return this.currentPath.bezierCurveTo(e,t,n,i,s,r),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(y){const _=[];for(let x=0,S=y.length;x<S;x++){const w=y[x],A=new qc;A.curves=w.curves,_.push(A)}return _}function n(y,_){const x=_.length;let S=!1;for(let w=x-1,A=0;A<x;w=A++){let T=_[w],M=_[A],L=M.x-T.x,I=M.y-T.y;if(Math.abs(I)>Number.EPSILON){if(I<0&&(T=_[A],L=-L,M=_[w],I=-I),y.y<T.y||y.y>M.y)continue;if(y.y===T.y){if(y.x===T.x)return!0}else{const W=I*(y.x-T.x)-L*(y.y-T.y);if(W===0)return!0;if(W<0)continue;S=!S}}else{if(y.y!==T.y)continue;if(M.x<=y.x&&y.x<=T.x||T.x<=y.x&&y.x<=M.x)return!0}}return S}const i=Xr.isClockWise,s=this.subPaths;if(s.length===0)return[];let r,o,a;const l=[];if(s.length===1)return o=s[0],a=new qc,a.curves=o.curves,l.push(a),l;let u=!i(s[0].getPoints());u=e?!u:u;const h=[],d=[];let f=[],p=0,m;d[p]=void 0,f[p]=[];for(let y=0,_=s.length;y<_;y++)o=s[y],m=o.getPoints(),r=i(m),r=e?!r:r,r?(!u&&d[p]&&p++,d[p]={s:new qc,p:m},d[p].s.curves=o.curves,u&&p++,f[p]=[]):f[p].push({h:o,p:m[0]});if(!d[0])return t(s);if(d.length>1){let y=!1,_=0;for(let x=0,S=d.length;x<S;x++)h[x]=[];for(let x=0,S=d.length;x<S;x++){const w=f[x];for(let A=0;A<w.length;A++){const T=w[A];let M=!0;for(let L=0;L<d.length;L++)n(T.p,d[L].p)&&(x!==L&&_++,M?(M=!1,h[L].push(T)):y=!0);M&&h[x].push(T)}}_>0&&y===!1&&(f=h)}let g;for(let y=0,_=d.length;y<_;y++){a=d[y].s,l.push(a),g=f[y];for(let x=0,S=g.length;x<S;x++)a.holes.push(g[x].h)}return l}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:wl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=wl);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */var ET=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,RT=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,PT=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,UT=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,DT=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,LT=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,FT=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,IT=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,BT=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,OT=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,VT=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,kT=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,zT=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,GT=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,HT=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,WT=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,qT=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,$T=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,jT=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,XT=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,YT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,ZT=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,KT=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,JT=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,QT=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ew=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,tw=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,nw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,iw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,sw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,rw="gl_FragColor = linearToOutputTexel( gl_FragColor );",ow=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,aw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,cw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,lw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,uw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,hw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,dw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,pw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,mw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,vw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,yw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,xw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,_w=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Sw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,bw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Tw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,ww=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Mw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Aw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Nw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Cw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Ew=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Rw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Pw=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Uw=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Dw=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Lw=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Fw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Iw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Bw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ow=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Vw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,kw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,zw=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Gw=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Hw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Ww=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,qw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,$w=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,jw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Xw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Yw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Zw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Kw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Jw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Qw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,eM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,tM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,nM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,iM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,sM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,rM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,oM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,aM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,cM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,lM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,uM=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,hM=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,dM=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,fM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,pM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,mM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,gM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,vM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,yM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,xM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,_M=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,SM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,bM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,TM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,wM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,MM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,AM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,NM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const CM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,EM=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,RM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,PM=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,UM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,DM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,LM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,FM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,IM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,BM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,OM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,VM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,GM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,HM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,WM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qM=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$M=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,jM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,YM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ZM=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,KM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,QM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eA=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tA=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nA=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,iA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,sA=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rA=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,oA=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,aA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,cA={alphahash_fragment:ET,alphahash_pars_fragment:RT,alphamap_fragment:PT,alphamap_pars_fragment:UT,alphatest_fragment:DT,alphatest_pars_fragment:LT,aomap_fragment:FT,aomap_pars_fragment:IT,batching_pars_vertex:BT,batching_vertex:OT,begin_vertex:VT,beginnormal_vertex:kT,bsdfs:zT,iridescence_fragment:GT,bumpmap_pars_fragment:HT,clipping_planes_fragment:WT,clipping_planes_pars_fragment:qT,clipping_planes_pars_vertex:$T,clipping_planes_vertex:jT,color_fragment:XT,color_pars_fragment:YT,color_pars_vertex:ZT,color_vertex:KT,common:JT,cube_uv_reflection_fragment:QT,defaultnormal_vertex:ew,displacementmap_pars_vertex:tw,displacementmap_vertex:nw,emissivemap_fragment:iw,emissivemap_pars_fragment:sw,colorspace_fragment:rw,colorspace_pars_fragment:ow,envmap_fragment:aw,envmap_common_pars_fragment:cw,envmap_pars_fragment:lw,envmap_pars_vertex:uw,envmap_physical_pars_fragment:Sw,envmap_vertex:hw,fog_vertex:dw,fog_pars_vertex:fw,fog_fragment:pw,fog_pars_fragment:mw,gradientmap_pars_fragment:gw,lightmap_pars_fragment:vw,lights_lambert_fragment:yw,lights_lambert_pars_fragment:xw,lights_pars_begin:_w,lights_toon_fragment:bw,lights_toon_pars_fragment:Tw,lights_phong_fragment:ww,lights_phong_pars_fragment:Mw,lights_physical_fragment:Aw,lights_physical_pars_fragment:Nw,lights_fragment_begin:Cw,lights_fragment_maps:Ew,lights_fragment_end:Rw,logdepthbuf_fragment:Pw,logdepthbuf_pars_fragment:Uw,logdepthbuf_pars_vertex:Dw,logdepthbuf_vertex:Lw,map_fragment:Fw,map_pars_fragment:Iw,map_particle_fragment:Bw,map_particle_pars_fragment:Ow,metalnessmap_fragment:Vw,metalnessmap_pars_fragment:kw,morphinstance_vertex:zw,morphcolor_vertex:Gw,morphnormal_vertex:Hw,morphtarget_pars_vertex:Ww,morphtarget_vertex:qw,normal_fragment_begin:$w,normal_fragment_maps:jw,normal_pars_fragment:Xw,normal_pars_vertex:Yw,normal_vertex:Zw,normalmap_pars_fragment:Kw,clearcoat_normal_fragment_begin:Jw,clearcoat_normal_fragment_maps:Qw,clearcoat_pars_fragment:eM,iridescence_pars_fragment:tM,opaque_fragment:nM,packing:iM,premultiplied_alpha_fragment:sM,project_vertex:rM,dithering_fragment:oM,dithering_pars_fragment:aM,roughnessmap_fragment:cM,roughnessmap_pars_fragment:lM,shadowmap_pars_fragment:uM,shadowmap_pars_vertex:hM,shadowmap_vertex:dM,shadowmask_pars_fragment:fM,skinbase_vertex:pM,skinning_pars_vertex:mM,skinning_vertex:gM,skinnormal_vertex:vM,specularmap_fragment:yM,specularmap_pars_fragment:xM,tonemapping_fragment:_M,tonemapping_pars_fragment:SM,transmission_fragment:bM,transmission_pars_fragment:TM,uv_pars_fragment:wM,uv_pars_vertex:MM,uv_vertex:AM,worldpos_vertex:NM,background_vert:CM,background_frag:EM,backgroundCube_vert:RM,backgroundCube_frag:PM,cube_vert:UM,cube_frag:DM,depth_vert:LM,depth_frag:FM,distanceRGBA_vert:IM,distanceRGBA_frag:BM,equirect_vert:OM,equirect_frag:VM,linedashed_vert:kM,linedashed_frag:zM,meshbasic_vert:GM,meshbasic_frag:HM,meshlambert_vert:WM,meshlambert_frag:qM,meshmatcap_vert:$M,meshmatcap_frag:jM,meshnormal_vert:XM,meshnormal_frag:YM,meshphong_vert:ZM,meshphong_frag:KM,meshphysical_vert:JM,meshphysical_frag:QM,meshtoon_vert:eA,meshtoon_frag:tA,points_vert:nA,points_frag:iA,shadow_vert:sA,shadow_frag:rA,sprite_vert:oA,sprite_frag:aA};class lA extends Yd{constructor(e,t={}){const n=t.font;if(n===void 0)super();else{const i=n.generateShapes(e,t.size);t.depth===void 0&&t.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),t.depth=t.depth!==void 0?t.depth:t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(i,t)}this.type="TextGeometry"}}class ad extends ba{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new rd(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(o){const a=s.parse(JSON.parse(o));t&&t(a)},n,i)}parse(e){return new uA(e)}}class uA{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],i=hA(e,t,this.data);for(let s=0,r=i.length;s<r;s++)n.push(...i[s].toShapes());return n}}function hA(c,e,t){const n=Array.from(c),i=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*i,r=[];let o=0,a=0;for(let l=0;l<n.length;l++){const u=n[l];if(u===`
`)o=0,a-=s;else{const h=dA(u,i,o,a,t);o+=h.offsetX,r.push(h.path)}}return r}function dA(c,e,t,n,i){const s=i.glyphs[c]||i.glyphs["?"];if(!s){console.error('THREE.Font: character "'+c+'" does not exists in font family '+i.familyName+".");return}const r=new CT;let o,a,l,u,h,d,f,p;if(s.o){const m=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,y=m.length;g<y;)switch(m[g++]){case"m":o=m[g++]*e+t,a=m[g++]*e+n,r.moveTo(o,a);break;case"l":o=m[g++]*e+t,a=m[g++]*e+n,r.lineTo(o,a);break;case"q":l=m[g++]*e+t,u=m[g++]*e+n,h=m[g++]*e+t,d=m[g++]*e+n,r.quadraticCurveTo(h,d,l,u);break;case"b":l=m[g++]*e+t,u=m[g++]*e+n,h=m[g++]*e+t,d=m[g++]*e+n,f=m[g++]*e+t,p=m[g++]*e+n,r.bezierCurveTo(h,d,f,p,l,u);break}}return{offsetX:s.ha*e,path:r}}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const fA=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class pA{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=fA,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:n,material:i,object:s}=e;if(t={material:this.getMaterialData(i),geometry:{attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:s.matrixWorld.clone()},s.center&&(t.center=s.center.clone()),s.morphTargetInfluences&&(t.morphTargetInfluences=s.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:r,height:o}=e.context;t.bufferWidth=r,t.bufferHeight=o}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const n in e){const i=e[n];t[n]={version:i.version}}return t}containsNode(e){const t=e.material;for(const n in t)if(t[n]&&t[n].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const n of this.refreshUniforms){const i=e[n];i!=null&&(typeof i=="object"&&i.clone!==void 0?i.isTexture===!0?t[n]={id:i.id,version:i.version}:t[n]=i.clone():t[n]=i)}return t}equals(e){const{object:t,material:n,geometry:i}=e,s=this.getRenderObjectData(e);if(s.worldMatrix.equals(t.matrixWorld)!==!0)return s.worldMatrix.copy(t.matrixWorld),!1;const r=s.material;for(const m in r){const g=r[m],y=n[m];if(g.equals!==void 0){if(g.equals(y)===!1)return g.copy(y),!1}else if(y.isTexture===!0){if(g.id!==y.id||g.version!==y.version)return g.id=y.id,g.version=y.version,!1}else if(g!==y)return r[m]=y,!1}if(r.transmission>0){const{width:m,height:g}=e.context;if(s.bufferWidth!==m||s.bufferHeight!==g)return s.bufferWidth=m,s.bufferHeight=g,!1}const o=s.geometry,a=i.attributes,l=o.attributes,u=Object.keys(l),h=Object.keys(a);if(u.length!==h.length)return s.geometry.attributes=this.getAttributesData(a),!1;for(const m of u){const g=l[m],y=a[m];if(y===void 0)return delete l[m],!1;if(g.version!==y.version)return g.version=y.version,!1}const d=i.index,f=o.indexVersion,p=d?d.version:null;if(f!==p)return o.indexVersion=p,!1;if(o.drawRange.start!==i.drawRange.start||o.drawRange.count!==i.drawRange.count)return o.drawRange.start=i.drawRange.start,o.drawRange.count=i.drawRange.count,!1;if(s.morphTargetInfluences){let m=!1;for(let g=0;g<s.morphTargetInfluences.length;g++)s.morphTargetInfluences[g]!==t.morphTargetInfluences[g]&&(m=!0);if(m)return!0}return s.center&&s.center.equals(t.center)===!1?(s.center.copy(t.center),!0):(e.bundle!==null&&(s.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;const i=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return i||s?!1:this.equals(e)!==!0}}function aa(c,e=0){let t=3735928559^e,n=1103547991^e;if(c instanceof Array)for(let i=0,s;i<c.length;i++)s=c[i],t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);else for(let i=0,s;i<c.length;i++)s=c.charCodeAt(i),t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}const Gv=c=>aa(c),ef=c=>aa(c),Hv=(...c)=>aa(c);function Wv(c,e=!1){const t=[];c.isNode===!0&&(t.push(c.id),c=c.getSelf());for(const{property:n,childNode:i}of ul(c))t.push(t,aa(n.slice(0,-4)),i.getCacheKey(e));return aa(t)}function*ul(c,e=!1){for(const t in c){if(t.startsWith("_")===!0)continue;const n=c[t];if(Array.isArray(n)===!0)for(let i=0;i<n.length;i++){const s=n[i];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:i,childNode:s})}else if(n&&n.isNode===!0)yield{property:t,childNode:n};else if(typeof n=="object")for(const i in n){const s=n[i];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:i,childNode:s})}}}const mA=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]);function qv(c){return mA.get(c)}function $v(c){if(/float|int|uint/.test(c))return 1;if(/vec2/.test(c))return 2;if(/vec3/.test(c))return 3;if(/vec4/.test(c))return 4;if(/mat3/.test(c))return 9;if(/mat4/.test(c))return 16;console.error("THREE.TSL: Unsupported type:",c)}function fs(c){if(c==null)return null;const e=typeof c;return c.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":c.isVector2===!0?"vec2":c.isVector3===!0?"vec3":c.isVector4===!0?"vec4":c.isMatrix3===!0?"mat3":c.isMatrix4===!0?"mat4":c.isColor===!0?"color":c instanceof ArrayBuffer?"ArrayBuffer":null}function jv(c,...e){const t=c?c.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),c==="color"?new He(...e):t==="vec2"?new he(...e):t==="vec3"?new P(...e):t==="vec4"?new Ke(...e):t==="mat3"?new dn(...e):t==="mat4"?new $e(...e):c==="bool"?e[0]||!1:c==="float"||c==="int"||c==="uint"?e[0]||0:c==="string"?e[0]||"":c==="ArrayBuffer"?Yv(e[0]):null}function Xv(c){let e="";const t=new Uint8Array(c);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function Yv(c){return Uint8Array.from(atob(c),e=>e.charCodeAt(0)).buffer}const cd={VERTEX:"vertex",FRAGMENT:"fragment"},Fe={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},gA={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},nn={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},Zv=["fragment","vertex"],ld=["setup","analyze","generate"],ud=[...Zv,"compute"],sr=["x","y","z","w"];let vA=0;class Ee extends er{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=Fe.NONE,this.updateBeforeType=Fe.NONE,this.updateAfterType=Fe.NONE,this.uuid=xv.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:vA++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,Fe.FRAME)}onRenderUpdate(e){return this.onUpdate(e,Fe.RENDER)}onObjectUpdate(e){return this.onUpdate(e,Fe.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of ul(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=Wv(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const i of this.getChildren())t["node"+n++]=i;return null}analyze(e){if(e.increaseUsage(this)===1){const n=e.getNodeProperties(this);for(const i of Object.values(n))i&&i.isNode===!0&&i.build(e)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addChain(this);let i=null;const s=e.getBuildStage();if(s==="setup"){this.updateReference(e);const r=e.getNodeProperties(this);if(r.initialized!==!0){const o=e.stack.nodes.length;r.initialized=!0,r.outputNode=this.setup(e),r.outputNode!==null&&e.stack.nodes.length;for(const a of Object.values(r))a&&a.isNode===!0&&a.build(e)}}else if(s==="analyze")this.analyze(e);else if(s==="generate")if(this.generate.length===1){const o=this.getNodeType(e),a=e.getDataFromNode(this);i=a.snippet,i===void 0?(i=this.generate(e)||"",a.snippet=i):a.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),i=e.format(i,o,t)}else i=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),i}getSerializeChildren(){return ul(this)}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:i,index:s,childNode:r}of t)s!==void 0?(n[i]===void 0&&(n[i]=Number.isInteger(s)?[]:{}),n[i][s]=r.toJSON(e.meta).uuid):n[i]=r.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const i=[];for(const s of e.inputNodes[n])i.push(t[s]);this[n]=i}else if(typeof e.inputNodes[n]=="object"){const i={};for(const s in e.inputNodes[n]){const r=e.inputNodes[n][s];i[s]=t[r]}this[n]=i}else{const i=e.inputNodes[n];this[n]=t[i]}}}toJSON(e){const{uuid:t,type:n}=this,i=e===void 0||typeof e=="string";i&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:n,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},i!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function r(o){const a=[];for(const l in o){const u=o[l];delete u.metadata,a.push(u)}return a}if(i){const o=r(e.textures),a=r(e.images),l=r(e.nodes);o.length>0&&(s.textures=o),a.length>0&&(s.images=a),l.length>0&&(s.nodes=l)}return s}}class rr extends Ee{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),n=this.indexNode.build(e,"uint");return`${t}[ ${n} ]`}}class Kv extends Ee{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const i of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(i))&&(n=i);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,i=this.getNodeType(e),s=n.build(e,i);return e.format(s,i,t)}}class At extends Ee{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const i=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,i,t);if(i!=="void"&&t!=="void"&&this.hasDependencies(e)){const r=super.build(e,i),o=e.getVarFromNode(this,null,i),a=e.getPropertyName(o);return e.addLineFlowCode(`${a} = ${r}`,this),s.snippet=r,s.propertyName=a,e.format(s.propertyName,i,t)}}return super.build(e,t)}}class yA extends At{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),i=this.nodes,s=e.getComponentType(n),r=[];for(const a of i){let l=a.build(e);const u=e.getComponentType(a.getNodeType(e));u!==s&&(l=e.format(l,u,s)),r.push(l)}const o=`${e.getType(n)}( ${r.join(", ")} )`;return e.format(o,n,t)}}const xA=sr.join("");class hd extends Ee{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(sr.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const n=this.node,i=e.getTypeLength(n.getNodeType(e));let s=null;if(i>1){let r=null;this.getVectorLength()>=i&&(r=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const a=n.build(e,r);this.components.length===i&&this.components===xA.slice(0,this.components.length)?s=e.format(a,r,t):s=e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else s=n.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class _A extends At{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:i}=this,s=this.getNodeType(e),r=e.getTypeFromLength(n.length,i.getNodeType(e)),o=i.build(e,r),a=t.build(e,s),l=e.getTypeLength(s),u=[];for(let h=0;h<l;h++){const d=sr[h];d===n[0]?(u.push(o),h+=n.length-1):u.push(a+"."+d)}return`${e.getType(s)}( ${u.join(", ")} )`}}class SA extends At{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,i=this.getNodeType(e),s=n.build(e),r=e.getVarFromNode(this),o=e.getPropertyName(r);e.addLineFlowCode(o+" = "+s,this);const a=e.getTypeLength(i),l=[];let u=0;for(let h=0;h<a;h++){const d=sr[h];d===t[u]?(l.push("1.0 - "+(o+"."+d)),u++):l.push(o+"."+d)}return`${e.getType(i)}( ${l.join(", ")} )`}}class tf extends Ee{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?fs(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=fs(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=Xv(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?jv(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class ni extends tf{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return e.format(this.generateConst(e),n,t)}}let eo=null;const kr=new Map;function X(c,e){if(kr.has(c)){console.warn(`Redefinition of method chaining ${c}`);return}if(typeof e!="function")throw new Error(`Node element ${c} is not a function`);kr.set(c,e)}const Jv=c=>c.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Tm=c=>Jv(c).split("").sort().join(""),Qv={setup(c,e){const t=e.shift();return c(Ta(t),...e)},get(c,e,t){if(typeof e=="string"&&c[e]===void 0){if(c.isStackNode!==!0&&e==="assign")return(...n)=>(eo.assign(t,...n),t);if(kr.has(e)){const n=kr.get(e);return c.isStackNode?(...i)=>t.add(n(...i)):(...i)=>n(t,...i)}else{if(e==="self")return c;if(e.endsWith("Assign")&&kr.has(e.slice(0,e.length-6))){const n=kr.get(e.slice(0,e.length-6));return c.isStackNode?(...i)=>t.assign(i[0],n(...i)):(...i)=>t.assign(n(t,...i))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=Jv(e),K(new hd(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Tm(e.slice(3).toLowerCase()),n=>K(new _A(c,e,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Tm(e.slice(4).toLowerCase()),()=>K(new SA(K(c),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),K(new hd(c,e));if(/^\d+$/.test(e)===!0)return K(new rr(t,new ni(Number(e),"uint")))}}}return Reflect.get(c,e,t)},set(c,e,t,n){return typeof e=="string"&&c[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(n[e].assign(t),!0):Reflect.set(c,e,t,n)}},Ku=new WeakMap,wm=new WeakMap,bA=function(c,e=null){const t=fs(c);if(t==="node"){let n=Ku.get(c);return n===void 0&&(n=new Proxy(c,Qv),Ku.set(c,n),Ku.set(n,n)),n}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return K(dd(c,e));if(t==="shader")return F(c)}return c},TA=function(c,e=null){for(const t in c)c[t]=K(c[t],e);return c},wA=function(c,e=null){const t=c.length;for(let n=0;n<t;n++)c[n]=K(c[n],e);return c},MA=function(c,e=null,t=null,n=null){const i=s=>K(n!==null?Object.assign(s,n):s);return e===null?(...s)=>i(new c(...Gs(s))):t!==null?(t=K(t),(...s)=>i(new c(e,...Gs(s),t))):(...s)=>i(new c(e,...Gs(s)))},AA=function(c,...e){return K(new c(...Gs(e)))};class NA extends Ee{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:n}=this,i=e.getNodeProperties(t);if(i.onceOutput)return i.onceOutput;let s=null;if(t.layout){let r=wm.get(e.constructor);r===void 0&&(r=new WeakMap,wm.set(e.constructor,r));let o=r.get(t);o===void 0&&(o=K(e.buildFunctionNode(t)),r.set(t,o)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(o),s=K(o.call(n))}else{const r=t.jsFunc,o=n!==null?r(n,e):r(e);s=K(o)}return t.once&&(i.onceOutput=s),s}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class CA extends Ee{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Ta(e),K(new NA(this,e))}setup(){return this.call()}}const EA=[!1,!0],RA=[0,1,2,3],PA=[-1,-2],e0=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],nf=new Map;for(const c of EA)nf.set(c,new ni(c));const sf=new Map;for(const c of RA)sf.set(c,new ni(c,"uint"));const rf=new Map([...sf].map(c=>new ni(c.value,"int")));for(const c of PA)rf.set(c,new ni(c,"int"));const Rl=new Map([...rf].map(c=>new ni(c.value)));for(const c of e0)Rl.set(c,new ni(c));for(const c of e0)Rl.set(-c,new ni(-c));const Pl={bool:nf,uint:sf,ints:rf,float:Rl},Mm=new Map([...nf,...Rl]),dd=(c,e)=>Mm.has(c)?Mm.get(c):c.isNode===!0?c:new ni(c,e),UA=c=>{try{return c.getNodeType()}catch{return}},Bt=function(c,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(c)&&t.every(i=>typeof i!="object"))&&(t=[jv(c,...t)]),t.length===1&&e!==null&&e.has(t[0]))return K(e.get(t[0]));if(t.length===1){const i=dd(t[0],c);return UA(i)===c?K(i):K(new Kv(i,c))}const n=t.map(i=>dd(i));return K(new yA(n,c))}},ca=c=>typeof c=="object"&&c!==null?c.value:c,t0=c=>c!=null?c.nodeType||c.convertTo||(typeof c=="string"?c:null):null;function jo(c,e){return new Proxy(new CA(c,e),Qv)}const K=(c,e=null)=>bA(c,e),Ta=(c,e=null)=>new TA(c,e),Gs=(c,e=null)=>new wA(c,e),q=(...c)=>new MA(...c),ue=(...c)=>new AA(...c),F=(c,e)=>{const t=new jo(c,e),n=(...i)=>{let s;return Ta(i),i[0]&&i[0].isNode?s=[...i]:s=i[0],t.call(s)};return n.shaderNode=t,n.setLayout=i=>(t.setLayout(i),n),n.once=()=>(t.once=!0,n),n},DA=(...c)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),F(...c));X("toGlobal",c=>(c.global=!0,c));const la=c=>{eo=c},of=()=>eo,Ve=(...c)=>eo.If(...c);function n0(c){return eo&&eo.add(c),c}X("append",n0);const i0=new Bt("color"),b=new Bt("float",Pl.float),N=new Bt("int",Pl.ints),pe=new Bt("uint",Pl.uint),Gi=new Bt("bool",Pl.bool),Q=new Bt("vec2"),Vt=new Bt("ivec2"),s0=new Bt("uvec2"),r0=new Bt("bvec2"),R=new Bt("vec3"),o0=new Bt("ivec3"),ao=new Bt("uvec3"),af=new Bt("bvec3"),Ae=new Bt("vec4"),a0=new Bt("ivec4"),c0=new Bt("uvec4"),l0=new Bt("bvec4"),Ul=new Bt("mat2"),on=new Bt("mat3"),Hs=new Bt("mat4"),LA=(c="")=>K(new ni(c,"string")),FA=c=>K(new ni(c,"ArrayBuffer"));X("toColor",i0);X("toFloat",b);X("toInt",N);X("toUint",pe);X("toBool",Gi);X("toVec2",Q);X("toIVec2",Vt);X("toUVec2",s0);X("toBVec2",r0);X("toVec3",R);X("toIVec3",o0);X("toUVec3",ao);X("toBVec3",af);X("toVec4",Ae);X("toIVec4",a0);X("toUVec4",c0);X("toBVec4",l0);X("toMat2",Ul);X("toMat3",on);X("toMat4",Hs);const u0=q(rr),h0=(c,e)=>K(new Kv(K(c),e)),IA=(c,e)=>K(new hd(K(c),e));X("element",u0);X("convert",h0);class d0 extends Ee{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=n,this.isUniformGroup=!0}set needsUpdate(e){e===!0&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const f0=c=>new d0(c),cf=(c,e=0)=>new d0(c,!0,e),p0=cf("frame"),Pe=cf("render"),lf=f0("object");class wa extends tf{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=lf}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const n=this.getSelf();return e=e.bind(n),super.onUpdate(i=>{const s=e(i,n);s!==void 0&&(this.value=s)},t)}generate(e,t){const n=this.getNodeType(e),i=this.getUniformHash(e);let s=e.getNodeFromHash(i);s===void 0&&(e.setHashNode(this,i),s=this);const r=s.getInputType(e),o=e.getUniformFromNode(s,r,e.shaderStage,this.name||e.context.label),a=e.getPropertyName(o);return e.context.label!==void 0&&delete e.context.label,e.format(a,n,t)}}const Ne=(c,e)=>{const t=t0(e||c),n=c&&c.isNode===!0?c.node&&c.node.value||c.value:c;return K(new wa(n,t))};class it extends Ee{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const m0=(c,e)=>K(new it(c,e)),ua=(c,e)=>K(new it(c,e,!0)),et=ue(it,"vec4","DiffuseColor"),fd=ue(it,"vec3","EmissiveColor"),ci=ue(it,"float","Roughness"),ha=ue(it,"float","Metalness"),hl=ue(it,"float","Clearcoat"),da=ue(it,"float","ClearcoatRoughness"),Os=ue(it,"vec3","Sheen"),Dl=ue(it,"float","SheenRoughness"),Ll=ue(it,"float","Iridescence"),uf=ue(it,"float","IridescenceIOR"),hf=ue(it,"float","IridescenceThickness"),dl=ue(it,"float","AlphaT"),as=ue(it,"float","Anisotropy"),Xo=ue(it,"vec3","AnisotropyT"),Ws=ue(it,"vec3","AnisotropyB"),gn=ue(it,"color","SpecularColor"),fa=ue(it,"float","SpecularF90"),fl=ue(it,"float","Shininess"),g0=ue(it,"vec4","Output"),$c=ue(it,"float","dashSize"),pd=ue(it,"float","gapSize"),BA=ue(it,"float","pointWidth"),Yo=ue(it,"float","IOR"),pl=ue(it,"float","Transmission"),df=ue(it,"float","Thickness"),ff=ue(it,"float","AttenuationDistance"),pf=ue(it,"color","AttenuationColor"),mf=ue(it,"float","Dispersion");class OA extends At{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return sr.join("").slice(0,n)!==t.components}return!1}generate(e,t){const{targetNode:n,sourceNode:i}=this,s=this.needsSplitAssign(e),r=n.getNodeType(e),o=n.context({assign:!0}).build(e),a=i.build(e,r),l=i.getNodeType(e),u=e.getDataFromNode(this);let h;if(u.initialized===!0)t!=="void"&&(h=o);else if(s){const d=e.getVarFromNode(this,null,r),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${a}`,this);const p=n.node.context({assign:!0}).build(e);for(let m=0;m<n.components.length;m++){const g=n.components[m];e.addLineFlowCode(`${p}.${g} = ${f}[ ${m} ]`,this)}t!=="void"&&(h=o)}else h=`${o} = ${a}`,(t==="void"||l==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=o));return u.initialized=!0,e.format(h,r,t)}}const v0=q(OA);X("assign",v0);class VA extends At{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],n=this.functionNode,i=n.getInputs(e),s=this.parameters,r=(a,l)=>{const u=l.type,h=u==="pointer";let d;return h?d="&"+a.build(e):d=a.build(e,u),d};if(Array.isArray(s))for(let a=0;a<s.length;a++)t.push(r(s[a],i[a]));else for(const a of i){const l=s[a.name];if(l!==void 0)t.push(r(l,a));else throw new Error(`FunctionCallNode: Input '${a.name}' not found in FunctionNode.`)}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const y0=(c,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Gs(e):Ta(e[0]),K(new VA(K(c),e)));X("call",y0);class yt extends At{static get type(){return"OperatorNode"}constructor(e,t,n,...i){if(super(),i.length>0){let s=new yt(e,t,n);for(let r=0;r<i.length-1;r++)s=new yt(e,s,i[r]);t=s,n=i[i.length-1]}this.op=e,this.aNode=t,this.bNode=n}getNodeType(e,t){const n=this.op,i=this.aNode,s=this.bNode,r=i.getNodeType(e),o=typeof s<"u"?s.getNodeType(e):null;if(r==="void"||o==="void")return"void";if(n==="%")return r;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(r);if(n==="!"||n==="=="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){const a=t?e.getTypeLength(t):Math.max(e.getTypeLength(r),e.getTypeLength(o));return a>1?`bvec${a}`:"bool"}else return r==="float"&&e.isMatrix(o)?o:e.isMatrix(r)&&e.isVector(o)?e.getVectorFromMatrix(r):e.isVector(r)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(r)?o:r}generate(e,t){const n=this.op,i=this.aNode,s=this.bNode,r=this.getNodeType(e,t);let o=null,a=null;r!=="void"?(o=i.getNodeType(e),a=typeof s<"u"?s.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="?e.isVector(o)?a=o:o!==a&&(o=a="float"):n===">>"||n==="<<"?(o=r,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):e.isVector(o)&&e.isMatrix(a)?o=e.getVectorFromMatrix(a):o=a=r):o=a=r;const l=i.build(e,o),u=typeof s<"u"?s.build(e,a):null,h=e.getTypeLength(t),d=e.getFunctionOperator(n);if(t!=="void")return n==="<"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} < ${u} )`,r,t):n==="<="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} <= ${u} )`,r,t):n===">"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} > ${u} )`,r,t):n===">="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} >= ${u} )`,r,t):n==="!"||n==="~"?e.format(`(${n}${l})`,o,t):d?e.format(`${d}( ${l}, ${u} )`,r,t):e.format(`( ${l} ${n} ${u} )`,r,t);if(o!=="void")return d?e.format(`${d}( ${l}, ${u} )`,r,t):e.format(`${l} ${n} ${u}`,r,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Rt=q(yt,"+"),Ye=q(yt,"-"),Ie=q(yt,"*"),ti=q(yt,"/"),gf=q(yt,"%"),x0=q(yt,"=="),_0=q(yt,"!="),S0=q(yt,"<"),vf=q(yt,">"),b0=q(yt,"<="),T0=q(yt,">="),w0=q(yt,"&&"),M0=q(yt,"||"),A0=q(yt,"!"),N0=q(yt,"^^"),C0=q(yt,"&"),E0=q(yt,"~"),R0=q(yt,"|"),P0=q(yt,"^"),U0=q(yt,"<<"),D0=q(yt,">>");X("add",Rt);X("sub",Ye);X("mul",Ie);X("div",ti);X("modInt",gf);X("equal",x0);X("notEqual",_0);X("lessThan",S0);X("greaterThan",vf);X("lessThanEqual",b0);X("greaterThanEqual",T0);X("and",w0);X("or",M0);X("not",A0);X("xor",N0);X("bitAnd",C0);X("bitNot",E0);X("bitOr",R0);X("bitXor",P0);X("shiftLeft",U0);X("shiftRight",D0);const L0=(...c)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),gf(...c));X("remainder",L0);class D extends At{static get type(){return"MathNode"}constructor(e,t,n=null,i=null){super(),this.method=e,this.aNode=t,this.bNode=n,this.cNode=i}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,i=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(n)?0:e.getTypeLength(n),o=e.isMatrix(i)?0:e.getTypeLength(i);return s>r&&s>o?t:r>o?n:o>s?i:t}getNodeType(e){const t=this.method;return t===D.LENGTH||t===D.DISTANCE||t===D.DOT?"float":t===D.CROSS?"vec3":t===D.ALL?"bool":t===D.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===D.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const n=this.method,i=this.getNodeType(e),s=this.getInputType(e),r=this.aNode,o=this.bNode,a=this.cNode,l=e.renderer.isWebGLRenderer===!0;if(n===D.TRANSFORM_DIRECTION){let u=r,h=o;e.isMatrix(u.getNodeType(e))?h=Ae(R(h),0):u=Ae(R(u),0);const d=Ie(u,h).xyz;return Hi(d).build(e,t)}else{if(n===D.NEGATE)return e.format("( - "+r.build(e,s)+" )",i,t);if(n===D.ONE_MINUS)return Ye(1,r).build(e,t);if(n===D.RECIPROCAL)return ti(1,r).build(e,t);if(n===D.DIFFERENCE)return ut(Ye(r,o)).build(e,t);{const u=[];return n===D.CROSS||n===D.MOD?u.push(r.build(e,i),o.build(e,i)):l&&n===D.STEP?u.push(r.build(e,e.getTypeLength(r.getNodeType(e))===1?"float":s),o.build(e,s)):l&&(n===D.MIN||n===D.MAX)||n===D.MOD?u.push(r.build(e,s),o.build(e,e.getTypeLength(o.getNodeType(e))===1?"float":s)):n===D.REFRACT?u.push(r.build(e,s),o.build(e,s),a.build(e,"float")):n===D.MIX?u.push(r.build(e,s),o.build(e,s),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":s)):(u.push(r.build(e,s)),o!==null&&u.push(o.build(e,s)),a!==null&&u.push(a.build(e,s))),e.format(`${e.getMethod(n,i)}( ${u.join(", ")} )`,i,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}D.ALL="all";D.ANY="any";D.EQUALS="equals";D.RADIANS="radians";D.DEGREES="degrees";D.EXP="exp";D.EXP2="exp2";D.LOG="log";D.LOG2="log2";D.SQRT="sqrt";D.INVERSE_SQRT="inversesqrt";D.FLOOR="floor";D.CEIL="ceil";D.NORMALIZE="normalize";D.FRACT="fract";D.SIN="sin";D.COS="cos";D.TAN="tan";D.ASIN="asin";D.ACOS="acos";D.ATAN="atan";D.ABS="abs";D.SIGN="sign";D.LENGTH="length";D.NEGATE="negate";D.ONE_MINUS="oneMinus";D.DFDX="dFdx";D.DFDY="dFdy";D.ROUND="round";D.RECIPROCAL="reciprocal";D.TRUNC="trunc";D.FWIDTH="fwidth";D.BITCAST="bitcast";D.TRANSPOSE="transpose";D.ATAN2="atan2";D.MIN="min";D.MAX="max";D.MOD="mod";D.STEP="step";D.REFLECT="reflect";D.DISTANCE="distance";D.DIFFERENCE="difference";D.DOT="dot";D.CROSS="cross";D.POW="pow";D.TRANSFORM_DIRECTION="transformDirection";D.MIX="mix";D.CLAMP="clamp";D.REFRACT="refract";D.SMOOTHSTEP="smoothstep";D.FACEFORWARD="faceforward";const F0=b(1e-6),kA=b(1e6),ml=b(Math.PI),zA=b(Math.PI*2),yf=q(D,D.ALL),I0=q(D,D.ANY),B0=q(D,D.EQUALS),O0=q(D,D.RADIANS),V0=q(D,D.DEGREES),xf=q(D,D.EXP),to=q(D,D.EXP2),Fl=q(D,D.LOG),hi=q(D,D.LOG2),bi=q(D,D.SQRT),k0=q(D,D.INVERSE_SQRT),di=q(D,D.FLOOR),Il=q(D,D.CEIL),Hi=q(D,D.NORMALIZE),qi=q(D,D.FRACT),En=q(D,D.SIN),Ui=q(D,D.COS),z0=q(D,D.TAN),G0=q(D,D.ASIN),H0=q(D,D.ACOS),W0=q(D,D.ATAN),ut=q(D,D.ABS),pa=q(D,D.SIGN),Vi=q(D,D.LENGTH),q0=q(D,D.NEGATE),$0=q(D,D.ONE_MINUS),_f=q(D,D.DFDX),Sf=q(D,D.DFDY),j0=q(D,D.ROUND),X0=q(D,D.RECIPROCAL),bf=q(D,D.TRUNC),Y0=q(D,D.FWIDTH),GA=q(D,D.BITCAST),Z0=q(D,D.TRANSPOSE),K0=q(D,D.ATAN2),xn=q(D,D.MIN),wt=q(D,D.MAX),Tf=q(D,D.MOD),Bl=q(D,D.STEP),J0=q(D,D.REFLECT),Q0=q(D,D.DISTANCE),ey=q(D,D.DIFFERENCE),Ss=q(D,D.DOT),Ol=q(D,D.CROSS),Jn=q(D,D.POW),wf=q(D,D.POW,2),ty=q(D,D.POW,3),ny=q(D,D.POW,4),iy=q(D,D.TRANSFORM_DIRECTION),sy=c=>Ie(pa(c),Jn(ut(c),1/3)),ry=c=>Ss(c,c),tt=q(D,D.MIX),pi=(c,e=0,t=1)=>K(new D(D.CLAMP,K(c),K(e),K(t))),oy=c=>pi(c),Mf=q(D,D.REFRACT),Wi=q(D,D.SMOOTHSTEP),ay=q(D,D.FACEFORWARD),cy=F(([c])=>{const n=43758.5453,i=Ss(c.xy,Q(12.9898,78.233)),s=Tf(i,ml);return qi(En(s).mul(n))}),ly=(c,e,t)=>tt(e,t,c),uy=(c,e,t)=>Wi(e,t,c);X("all",yf);X("any",I0);X("equals",B0);X("radians",O0);X("degrees",V0);X("exp",xf);X("exp2",to);X("log",Fl);X("log2",hi);X("sqrt",bi);X("inverseSqrt",k0);X("floor",di);X("ceil",Il);X("normalize",Hi);X("fract",qi);X("sin",En);X("cos",Ui);X("tan",z0);X("asin",G0);X("acos",H0);X("atan",W0);X("abs",ut);X("sign",pa);X("length",Vi);X("lengthSq",ry);X("negate",q0);X("oneMinus",$0);X("dFdx",_f);X("dFdy",Sf);X("round",j0);X("reciprocal",X0);X("trunc",bf);X("fwidth",Y0);X("atan2",K0);X("min",xn);X("max",wt);X("mod",Tf);X("step",Bl);X("reflect",J0);X("distance",Q0);X("dot",Ss);X("cross",Ol);X("pow",Jn);X("pow2",wf);X("pow3",ty);X("pow4",ny);X("transformDirection",iy);X("mix",ly);X("clamp",pi);X("refract",Mf);X("smoothstep",uy);X("faceForward",ay);X("difference",ey);X("saturate",oy);X("cbrt",sy);X("transpose",Z0);X("rand",cy);class HA extends Ee{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const t=this.ifNode.getNodeType(e);if(this.elseNode!==null){const n=this.elseNode.getNodeType(e);if(e.getTypeLength(n)>e.getTypeLength(t))return n}return t}setup(e){const t=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=s,i!==null&&(e.getDataFromNode(i).parentNodeBlock=s);const r=e.getNodeProperties(this);r.condNode=t,r.ifNode=n.context({nodeBlock:n}),r.elseNode=i?i.context({nodeBlock:i}):null}generate(e,t){const n=this.getNodeType(e),i=e.getDataFromNode(this);if(i.nodeProperty!==void 0)return i.nodeProperty;const{condNode:s,ifNode:r,elseNode:o}=e.getNodeProperties(this),a=t!=="void",l=a?m0(n).build(e):"";i.nodeProperty=l;const u=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${u} ) {

`).addFlowTab();let h=r.build(e,n);if(h&&(a?h=l+" = "+h+";":h="return "+h+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+h+`

`+e.tab+"}"),o!==null){e.addFlowCode(` else {

`).addFlowTab();let d=o.build(e,n);d&&(a?d=l+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(l,n,t)}}const Yt=q(HA);X("select",Yt);const hy=(...c)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Yt(...c));X("cond",hy);class dy extends Ee{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e);return e.setContext(t),n}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.value});const i=this.node.build(e,t);return e.setContext(n),i}}const Vl=q(dy),fy=(c,e)=>Vl(c,{label:e});X("context",Vl);X("label",fy);class py extends Ee{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:n}=this,i=e.getVarFromNode(this,n,e.getVectorType(this.getNodeType(e))),s=e.getPropertyName(i),r=t.build(e,i.type);return e.addLineFlowCode(`${s} = ${r}`,this),s}}const my=q(py);X("toVar",(...c)=>my(...c).append());const gy=c=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),my(c));X("temp",gy);class WA extends Ee{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(n===void 0){const i=this.name,s=this.getNodeType(e);t.varying=n=e.getVaryingFromNode(this,i,s),t.node=this.node}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),n=this.setupVarying(e);if(t.propertyName===void 0){const i=this.getNodeType(e),s=e.getPropertyName(n,cd.VERTEX);e.flowNodeFromShaderStage(cd.VERTEX,this.node,i,s),t.propertyName=s}return e.getPropertyName(n)}}const Sn=q(WA);X("varying",Sn);const vy=F(([c])=>{const e=c.mul(.9478672986).add(.0521327014).pow(2.4),t=c.mul(.0773993808),n=c.lessThanEqual(.04045);return tt(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),yy=F(([c])=>{const e=c.pow(.41666).mul(1.055).sub(.055),t=c.mul(12.92),n=c.lessThanEqual(.0031308);return tt(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ma="WorkingColorSpace",Af="OutputColorSpace";class Aa extends At{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===Ma?Nt.workingColorSpace:t===Af?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),i=this.resolveColorSpace(e,this.target);let s=t;return Nt.enabled===!1||n===i||!n||!i||(Nt.getTransfer(n)===Ho&&(s=Ae(vy(s.rgb),s.a)),Nt.getPrimaries(n)!==Nt.getPrimaries(i)&&(s=Ae(on(Nt._getMatrix(new dn,n,i)).mul(s.rgb),s.a)),Nt.getTransfer(i)===Ho&&(s=Ae(yy(s.rgb),s.a))),s}}const xy=c=>K(new Aa(K(c),Ma,Af)),_y=c=>K(new Aa(K(c),Af,Ma)),Sy=(c,e)=>K(new Aa(K(c),Ma,e)),Nf=(c,e)=>K(new Aa(K(c),e,Ma)),qA=(c,e,t)=>K(new Aa(K(c),e,t));X("toOutputColorSpace",xy);X("toWorkingColorSpace",_y);X("workingToColorSpace",Sy);X("colorSpaceToWorking",Nf);let $A=class extends rr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}};class by extends Ee{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=Fe.OBJECT}setGroup(e){return this.group=e,this}element(e){return K(new $A(this,K(e)))}setNodeType(e){const t=Ne(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const jA=(c,e,t)=>K(new by(c,e,t));class XA extends by{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(Pe)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const Ty=(c,e,t)=>K(new XA(c,e,t));class YA extends At{static get type(){return"ToneMappingNode"}constructor(e,t=My,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}getCacheKey(){return Hv(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,n=this.toneMapping;if(n===Wr)return t;let i=null;const s=e.renderer.library.getToneMappingFunction(n);return s!==null?i=Ae(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=t),i}}const wy=(c,e,t)=>K(new YA(c,K(e),K(t))),My=Ty("toneMappingExposure","float");X("toneMapping",(c,e,t)=>wy(e,t,c));class ZA extends tf{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=i,this.usage=rl,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),n=this.value,i=e.getTypeLength(t),s=this.bufferStride||i,r=this.bufferOffset,o=n.isInterleavedBuffer===!0?n:new Cv(n,s),a=new $d(o,i,r);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),i=e.getPropertyName(n);let s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=i,s=i):s=Sn(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Na=(c,e,t,n)=>K(new ZA(c,e,t,n)),Ay=(c,e,t,n)=>Na(c,e,t,n).setUsage(Or),gl=(c,e,t,n)=>Na(c,e,t,n).setInstanced(!0),md=(c,e,t,n)=>Ay(c,e,t,n).setInstanced(!0);X("toAttribute",c=>Na(c.value));class KA extends Ee{static get type(){return"ComputeNode"}constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.updateBeforeType=Fe.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let n=t[0];for(let i=1;i<t.length;i++)n*=t[i];this.dispatchCount=Math.ceil(e/n)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}}}const Ny=(c,e,t)=>K(new KA(K(c),e,t));X("compute",Ny);class JA extends Ee{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const s=this.node.build(e,...t);return e.setCache(n),s}}const Zo=(c,...e)=>K(new JA(K(c),...e));X("cache",Zo);class QA extends Ee{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Cy=q(QA);X("bypass",Cy);class Ey extends Ee{static get type(){return"RemapNode"}constructor(e,t,n,i=b(0),s=b(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=i,this.outHighNode=s,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:i,outHighNode:s,doClamp:r}=this;let o=e.sub(t).div(n.sub(t));return r===!0&&(o=o.clamp()),o.mul(s.sub(i)).add(i)}}const Ry=q(Ey,null,null,{doClamp:!1}),Py=q(Ey);X("remap",Ry);X("remapClamp",Py);class Uy extends Ee{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),i=this.snippet;if(n==="void")e.addLineFlowCode(i,this);else return e.format(`( ${i} )`,n,t)}}const ys=q(Uy),Dy=c=>(c?Yt(c,ys("discard")):ys("discard")).append(),eN=()=>ys("return").append();X("discard",Dy);class tN extends At{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const n=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||Wr,i=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||Zs;return n!==Wr&&(t=t.toneMapping(n)),i!==Zs&&i!==Nt.workingColorSpace&&(t=t.workingToColorSpace(i)),t}}const Ly=(c,e=null,t=null)=>K(new tN(K(c),e,t));X("renderOutput",Ly);function nN(c){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",c)}class Fy extends Ee{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const i=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(i)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const s=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(s),o=e.getAttribute(t,r);return e.shaderStage==="vertex"?e.format(o.name,r,n):Sn(this).build(e,n)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const mi=(c,e)=>K(new Fy(c,e)),xt=c=>mi("uv"+(c>0?c:""),"vec2");class iN extends Ee{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),i=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(e),t)}}const qs=q(iN);class sN extends wa{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=Fe.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){const{width:i,height:s}=n;this.value=Math.log2(Math.max(i,s))}}}const Iy=q(sN);class gi extends wa{static get type(){return"TextureNode"}constructor(e,t=null,n=null,i=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Fe.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Xt?"uvec4":this.value.type===un?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return xt(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=Ne(this.value.matrix)),this._matrixUniform.mul(R(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Fe.FRAME:Fe.NONE,this}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.image instanceof ImageBitmap&&n.flipY===!0||n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(N(qs(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let i=this.levelNode;i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=i,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,n,i,s,r,o,a){const l=this.value;let u;return i?u=e.generateTextureLevel(l,t,n,i,r):s?u=e.generateTextureBias(l,t,n,s,r):a?u=e.generateTextureGrad(l,t,n,a,r):o?u=e.generateTextureCompare(l,t,n,o,r):this.sampler===!1?u=e.generateTextureLoad(l,t,n,r):u=e.generateTexture(l,t,n,r),u}generate(e,t){const n=e.getNodeProperties(this),i=this.value;if(!i||i.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(e,"property");if(t==="sampler")return s+"_sampler";if(e.isReference(t))return s;{const r=e.getDataFromNode(this);let o=r.propertyName;if(o===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:p,gradNode:m}=n,g=this.generateUV(e,u),y=h?h.build(e,"float"):null,_=d?d.build(e,"float"):null,x=p?p.build(e,"int"):null,S=f?f.build(e,"float"):null,w=m?[m[0].build(e,"vec2"),m[1].build(e,"vec2")]:null,A=e.getVarFromNode(this);o=e.getPropertyName(A);const T=this.generateSnippet(e,s,g,y,_,x,S,w);e.addLineFlowCode(`${o} = ${T}`,this),r.snippet=T,r.propertyName=o}let a=o;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(i)&&(a=Nf(ys(a,l),i.colorSpace).setup(e).build(e,l)),e.format(a,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=K(e),t.referenceNode=this.getSelf(),K(t)}blur(e){const t=this.clone();return t.biasNode=K(e).mul(Iy(t)),t.referenceNode=this.getSelf(),K(t)}level(e){const t=this.clone();return t.levelNode=K(e),t.referenceNode=this.getSelf(),K(t)}size(e){return qs(this,e)}bias(e){const t=this.clone();return t.biasNode=K(e),t.referenceNode=this.getSelf(),K(t)}compare(e){const t=this.clone();return t.compareNode=K(e),t.referenceNode=this.getSelf(),K(t)}grad(e,t){const n=this.clone();return n.gradNode=[K(e),K(t)],n.referenceNode=this.getSelf(),K(n)}depth(e){const t=this.clone();return t.depthNode=K(e),t.referenceNode=this.getSelf(),K(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const qe=q(gi),bt=(...c)=>qe(...c).setSampler(!1),rN=c=>(c.isNode===!0?c:qe(c)).convert("sampler"),ls=Ne("float").label("cameraNear").setGroup(Pe).onRenderUpdate(({camera:c})=>c.near),us=Ne("float").label("cameraFar").setGroup(Pe).onRenderUpdate(({camera:c})=>c.far),xs=Ne("mat4").label("cameraProjectionMatrix").setGroup(Pe).onRenderUpdate(({camera:c})=>c.projectionMatrix),oN=Ne("mat4").label("cameraProjectionMatrixInverse").setGroup(Pe).onRenderUpdate(({camera:c})=>c.projectionMatrixInverse),bn=Ne("mat4").label("cameraViewMatrix").setGroup(Pe).onRenderUpdate(({camera:c})=>c.matrixWorldInverse),aN=Ne("mat4").label("cameraWorldMatrix").setGroup(Pe).onRenderUpdate(({camera:c})=>c.matrixWorld),cN=Ne("mat3").label("cameraNormalMatrix").setGroup(Pe).onRenderUpdate(({camera:c})=>c.normalMatrix),By=Ne(new P).label("cameraPosition").setGroup(Pe).onRenderUpdate(({camera:c},e)=>e.value.setFromMatrixPosition(c.matrixWorld));class Qe extends Ee{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Fe.OBJECT,this._uniformNode=new wa(null)}getNodeType(){const e=this.scope;if(e===Qe.WORLD_MATRIX)return"mat4";if(e===Qe.POSITION||e===Qe.VIEW_POSITION||e===Qe.DIRECTION||e===Qe.SCALE)return"vec3"}update(e){const t=this.object3d,n=this._uniformNode,i=this.scope;if(i===Qe.WORLD_MATRIX)n.value=t.matrixWorld;else if(i===Qe.POSITION)n.value=n.value||new P,n.value.setFromMatrixPosition(t.matrixWorld);else if(i===Qe.SCALE)n.value=n.value||new P,n.value.setFromMatrixScale(t.matrixWorld);else if(i===Qe.DIRECTION)n.value=n.value||new P,t.getWorldDirection(n.value);else if(i===Qe.VIEW_POSITION){const s=e.camera;n.value=n.value||new P,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(s.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Qe.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===Qe.POSITION||t===Qe.VIEW_POSITION||t===Qe.DIRECTION||t===Qe.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Qe.WORLD_MATRIX="worldMatrix";Qe.POSITION="position";Qe.SCALE="scale";Qe.VIEW_POSITION="viewPosition";Qe.DIRECTION="direction";const lN=q(Qe,Qe.DIRECTION),uN=q(Qe,Qe.WORLD_MATRIX),Oy=q(Qe,Qe.POSITION),hN=q(Qe,Qe.SCALE),dN=q(Qe,Qe.VIEW_POSITION);class vi extends Qe{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const fN=ue(vi,vi.DIRECTION),kn=ue(vi,vi.WORLD_MATRIX),pN=ue(vi,vi.POSITION),mN=ue(vi,vi.SCALE),gN=ue(vi,vi.VIEW_POSITION),Vy=Ne(new dn).onObjectUpdate(({object:c},e)=>e.value.getNormalMatrix(c.matrixWorld)),vN=Ne(new $e).onObjectUpdate(({object:c},e)=>e.value.copy(c.matrixWorld).invert()),or=bn.mul(kn).toVar("modelViewMatrix"),yN=F(c=>(c.context.isHighPrecisionModelViewMatrix=!0,Ne("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highPrecisionModelViewMatrix"),xN=F(c=>{const e=c.context.isHighPrecisionModelViewMatrix;return Ne("mat3").onObjectUpdate(({object:t,camera:n})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highPrecisionModelNormalMatrix"),Cf=mi("position","vec3"),St=Cf.varying("positionLocal"),vl=Cf.varying("positionPrevious"),ki=kn.mul(St).xyz.varying("v_positionWorld"),Ef=St.transformDirection(kn).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),It=or.mul(St).xyz.varying("v_positionView"),dt=It.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class _N extends Ee{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:n}=e;return t.coordinateSystem===Kn&&n.side===Gn?"false":e.getFrontFacing()}}const ky=ue(_N),Ca=b(ky).mul(2).sub(1),kl=mi("normal","vec3"),_n=F(c=>c.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),R(0,1,0)):kl,"vec3").once()().toVar("normalLocal"),zy=It.dFdx().cross(It.dFdy()).normalize().toVar("normalFlat"),Hn=F(c=>{let e;return c.material.flatShading===!0?e=zy:e=Sn(Rf(_n),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),zl=Sn(Hn.transformDirection(bn),"v_normalWorld").normalize().toVar("normalWorld"),Tt=F(c=>c.context.setupNormal(),"vec3").once()().mul(Ca).toVar("transformedNormalView"),Gl=Tt.transformDirection(bn).toVar("transformedNormalWorld"),zr=F(c=>c.context.setupClearcoatNormal(),"vec3").once()().mul(Ca).toVar("transformedClearcoatNormalView"),Gy=F(([c,e=kn])=>{const t=on(e),n=c.div(R(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(n).xyz}),Rf=F(([c],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(c);const n=Vy.mul(c);return bn.transformDirection(n)}),Hy=Ne(0).onReference(({material:c})=>c).onRenderUpdate(({material:c})=>c.refractionRatio),Wy=dt.negate().reflect(Tt),qy=dt.negate().refract(Tt,Hy),$y=Wy.transformDirection(bn).toVar("reflectVector"),jy=qy.transformDirection(bn).toVar("reflectVector");class SN extends gi{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,i=null){super(e,t,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Xs?$y:e.mapping===Kr?jy:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),R(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return e.renderer.coordinateSystem===zi||!n.isRenderTargetTexture?R(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const no=q(SN);class Pf extends wa{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Ea=(c,e,t)=>K(new Pf(c,e,t));class bN extends rr{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType();return e.format(t,"vec4",n)}}class Xy extends Pf{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=Fe.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,n=this.getElementLength(),i=this.getElementType();if(n===1)for(let s=0;s<e.length;s++){const r=s*4;t[r]=e[s]}else if(i==="color")for(let s=0;s<e.length;s++){const r=s*4,o=e[s];t[r]=o.r,t[r+1]=o.g,t[r+2]=o.b||0}else for(let s=0;s<e.length;s++){const r=s*4,o=e[s];t[r]=o.x,t[r+1]=o.y,t[r+2]=o.z||0,t[r+3]=o.w||0}}setup(e){const t=this.array.length;this._elementType=this.elementType===null?fs(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let n=Float32Array;return this._elementType.charAt(0)==="i"?n=Int32Array:this._elementType.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*4),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return K(new bN(this,K(e)))}}const Li=(c,e)=>K(new Xy(c,e)),TN=(c,e)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),K(new Xy(c,e)));class wN extends rr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}}class Hl extends Ee{static get type(){return"ReferenceNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=Fe.OBJECT}element(e){return K(new wN(this,K(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=Ea(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Li(null,e):e==="texture"?t=qe(null):e==="cubeTexture"?t=no(null):t=Ne(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const rt=(c,e,t)=>K(new Hl(c,e,t)),gd=(c,e,t,n)=>K(new Hl(c,e,n,t));class MN extends Hl{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const Fi=(c,e,t)=>K(new MN(c,e,t)),Wl=F(c=>(c.geometry.hasAttribute("tangent")===!1&&c.geometry.computeTangents(),mi("tangent","vec4")))(),Ra=Wl.xyz.toVar("tangentLocal"),Pa=or.mul(Ae(Ra,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),Yy=Pa.transformDirection(bn).varying("v_tangentWorld").normalize().toVar("tangentWorld"),Uf=Pa.toVar("transformedTangentView"),AN=Uf.transformDirection(bn).normalize().toVar("transformedTangentWorld"),Ua=c=>c.mul(Wl.w).xyz,NN=Sn(Ua(kl.cross(Wl)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),CN=Sn(Ua(_n.cross(Ra)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Zy=Sn(Ua(Hn.cross(Pa)),"v_bitangentView").normalize().toVar("bitangentView"),EN=Sn(Ua(zl.cross(Yy)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),Ky=Ua(Tt.cross(Uf)).normalize().toVar("transformedBitangentView"),RN=Ky.transformDirection(bn).normalize().toVar("transformedBitangentWorld"),Vs=on(Pa,Zy,Hn),Jy=dt.mul(Vs),PN=(c,e)=>c.sub(Jy.mul(e)),Qy=(()=>{let c=Ws.cross(dt);return c=c.cross(Ws).normalize(),c=tt(c,Tt,as.mul(ci.oneMinus()).oneMinus().pow2().pow2()).normalize(),c})(),UN=F(c=>{const{eye_pos:e,surf_norm:t,mapN:n,uv:i}=c,s=e.dFdx(),r=e.dFdy(),o=i.dFdx(),a=i.dFdy(),l=t,u=r.cross(l),h=l.cross(s),d=u.mul(o.x).add(h.mul(a.x)),f=u.mul(o.y).add(h.mul(a.y)),p=d.dot(d).max(f.dot(f)),m=Ca.mul(p.inverseSqrt());return Rt(d.mul(n.x,m),f.mul(n.y,m),l.mul(n.z)).normalize()});class DN extends At{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=vs}setup(e){const{normalMapType:t,scaleNode:n}=this;let i=this.node.mul(2).sub(1);n!==null&&(i=R(i.xy.mul(n),i.z));let s=null;return t===ub?s=Rf(i):t===vs&&(e.hasGeometryAttribute("tangent")===!0?s=Vs.mul(i).normalize():s=UN({eye_pos:It,surf_norm:Hn,mapN:i,uv:xt()})),s}}const vd=q(DN),LN=F(({textureNode:c,bumpScale:e})=>{const t=i=>c.cache().context({getUV:s=>i(s.uvNode||xt()),forceUVContext:!0}),n=b(t(i=>i));return Q(b(t(i=>i.add(i.dFdx()))).sub(n),b(t(i=>i.add(i.dFdy()))).sub(n)).mul(e)}),FN=F(c=>{const{surf_pos:e,surf_norm:t,dHdxy:n}=c,i=e.dFdx().normalize(),s=e.dFdy().normalize(),r=t,o=s.cross(r),a=r.cross(i),l=i.dot(o).mul(Ca),u=l.sign().mul(n.x.mul(o).add(n.y.mul(a)));return l.abs().mul(t).sub(u).normalize()});class IN extends At{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=LN({textureNode:this.textureNode,bumpScale:e});return FN({surf_pos:It,surf_norm:Hn,dHdxy:t})}}const ex=q(IN),Am=new Map;class H extends Ee{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=Am.get(e);return n===void 0&&(n=Fi(e,t),Am.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let i=null;if(n===H.COLOR){const s=t.color!==void 0?this.getColor(n):R();t.map&&t.map.isTexture===!0?i=s.mul(this.getTexture("map")):i=s}else if(n===H.OPACITY){const s=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?i=s.mul(this.getTexture("alpha")):i=s}else if(n===H.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?i=this.getTexture("specular").r:i=b(1);else if(n===H.SPECULAR_INTENSITY){const s=this.getFloat(n);t.specularMap?i=s.mul(this.getTexture(n).a):i=s}else if(n===H.SPECULAR_COLOR){const s=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?i=s.mul(this.getTexture(n).rgb):i=s}else if(n===H.ROUGHNESS){const s=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).g):i=s}else if(n===H.METALNESS){const s=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?i=s.mul(this.getTexture(n).b):i=s}else if(n===H.EMISSIVE){const s=this.getFloat("emissiveIntensity"),r=this.getColor(n).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?i=r.mul(this.getTexture(n)):i=r}else if(n===H.NORMAL)t.normalMap?(i=vd(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=t.normalMapType):t.bumpMap?i=ex(this.getTexture("bump").r,this.getFloat("bumpScale")):i=Hn;else if(n===H.CLEARCOAT){const s=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===H.CLEARCOAT_ROUGHNESS){const s=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===H.CLEARCOAT_NORMAL)t.clearcoatNormalMap?i=vd(this.getTexture(n),this.getCache(n+"Scale","vec2")):i=Hn;else if(n===H.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?i=s.mul(this.getTexture("sheenColor").rgb):i=s}else if(n===H.SHEEN_ROUGHNESS){const s=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).a):i=s,i=i.clamp(.07,1)}else if(n===H.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const s=this.getTexture(n);i=Ul(Lr.x,Lr.y,Lr.y.negate(),Lr.x).mul(s.rg.mul(2).sub(Q(1)).normalize().mul(s.b))}else i=Lr;else if(n===H.IRIDESCENCE_THICKNESS){const s=rt("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=rt("0","float",t.iridescenceThicknessRange);i=s.sub(r).mul(this.getTexture(n).g).add(r)}else i=s}else if(n===H.TRANSMISSION){const s=this.getFloat(n);t.transmissionMap?i=s.mul(this.getTexture(n).r):i=s}else if(n===H.THICKNESS){const s=this.getFloat(n);t.thicknessMap?i=s.mul(this.getTexture(n).g):i=s}else if(n===H.IOR)i=this.getFloat(n);else if(n===H.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===H.AO_MAP)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const s=this.getNodeType(e);i=this.getCache(n,s)}return i}}H.ALPHA_TEST="alphaTest";H.COLOR="color";H.OPACITY="opacity";H.SHININESS="shininess";H.SPECULAR="specular";H.SPECULAR_STRENGTH="specularStrength";H.SPECULAR_INTENSITY="specularIntensity";H.SPECULAR_COLOR="specularColor";H.REFLECTIVITY="reflectivity";H.ROUGHNESS="roughness";H.METALNESS="metalness";H.NORMAL="normal";H.CLEARCOAT="clearcoat";H.CLEARCOAT_ROUGHNESS="clearcoatRoughness";H.CLEARCOAT_NORMAL="clearcoatNormal";H.EMISSIVE="emissive";H.ROTATION="rotation";H.SHEEN="sheen";H.SHEEN_ROUGHNESS="sheenRoughness";H.ANISOTROPY="anisotropy";H.IRIDESCENCE="iridescence";H.IRIDESCENCE_IOR="iridescenceIOR";H.IRIDESCENCE_THICKNESS="iridescenceThickness";H.IOR="ior";H.TRANSMISSION="transmission";H.THICKNESS="thickness";H.ATTENUATION_DISTANCE="attenuationDistance";H.ATTENUATION_COLOR="attenuationColor";H.LINE_SCALE="scale";H.LINE_DASH_SIZE="dashSize";H.LINE_GAP_SIZE="gapSize";H.LINE_WIDTH="linewidth";H.LINE_DASH_OFFSET="dashOffset";H.POINT_WIDTH="pointWidth";H.DISPERSION="dispersion";H.LIGHT_MAP="light";H.AO_MAP="ao";const tx=ue(H,H.ALPHA_TEST),nx=ue(H,H.COLOR),ix=ue(H,H.SHININESS),sx=ue(H,H.EMISSIVE),Df=ue(H,H.OPACITY),rx=ue(H,H.SPECULAR),yd=ue(H,H.SPECULAR_INTENSITY),ox=ue(H,H.SPECULAR_COLOR),Ko=ue(H,H.SPECULAR_STRENGTH),jc=ue(H,H.REFLECTIVITY),ax=ue(H,H.ROUGHNESS),cx=ue(H,H.METALNESS),lx=ue(H,H.NORMAL).context({getUV:null}),ux=ue(H,H.CLEARCOAT),hx=ue(H,H.CLEARCOAT_ROUGHNESS),dx=ue(H,H.CLEARCOAT_NORMAL).context({getUV:null}),fx=ue(H,H.ROTATION),px=ue(H,H.SHEEN),mx=ue(H,H.SHEEN_ROUGHNESS),gx=ue(H,H.ANISOTROPY),vx=ue(H,H.IRIDESCENCE),yx=ue(H,H.IRIDESCENCE_IOR),xx=ue(H,H.IRIDESCENCE_THICKNESS),_x=ue(H,H.TRANSMISSION),Sx=ue(H,H.THICKNESS),bx=ue(H,H.IOR),Tx=ue(H,H.ATTENUATION_DISTANCE),wx=ue(H,H.ATTENUATION_COLOR),Mx=ue(H,H.LINE_SCALE),Ax=ue(H,H.LINE_DASH_SIZE),Nx=ue(H,H.LINE_GAP_SIZE),BN=ue(H,H.LINE_WIDTH),Cx=ue(H,H.LINE_DASH_OFFSET),ON=ue(H,H.POINT_WIDTH),Ex=ue(H,H.DISPERSION),Lf=ue(H,H.LIGHT_MAP),Rx=ue(H,H.AO_MAP),Lr=Ne(new he).onReference(function(c){return c.material}).onRenderUpdate(function({material:c}){this.value.set(c.anisotropy*Math.cos(c.anisotropyRotation),c.anisotropy*Math.sin(c.anisotropyRotation))});class VN extends At{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if(e.shaderStage==="fragment")return Sn(e.context.mvp);const t=this.positionNode||St,n=e.renderer.nodes.modelViewMatrix||or;return xs.mul(n).mul(t)}}const Ff=q(VN);class ft extends Ee{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let i;if(n===ft.VERTEX)i=e.getVertexIndex();else if(n===ft.INSTANCE)i=e.getInstanceIndex();else if(n===ft.DRAW)i=e.getDrawIndex();else if(n===ft.INVOCATION_LOCAL)i=e.getInvocationLocalIndex();else if(n===ft.INVOCATION_SUBGROUP)i=e.getInvocationSubgroupIndex();else if(n===ft.SUBGROUP)i=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=i:s=Sn(this).build(e,t),s}}ft.VERTEX="vertex";ft.INSTANCE="instance";ft.SUBGROUP="subgroup";ft.INVOCATION_LOCAL="invocationLocal";ft.INVOCATION_SUBGROUP="invocationSubgroup";ft.DRAW="draw";const Px=ue(ft,ft.VERTEX),Da=ue(ft,ft.INSTANCE),kN=ue(ft,ft.SUBGROUP),zN=ue(ft,ft.INVOCATION_SUBGROUP),GN=ue(ft,ft.INVOCATION_LOCAL),Ux=ue(ft,ft.DRAW);class Dx extends Ee{static get type(){return"InstanceNode"}constructor(e,t,n){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=n,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Fe.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:n,instanceColor:i}=this;let{instanceMatrixNode:s,instanceColorNode:r}=this;if(s===null){if(t<=1e3)s=Ea(n.array,"mat4",Math.max(t,1)).element(Da);else{const a=new AT(n.array,16,1);this.buffer=a;const l=n.usage===Or?md:gl,u=[l(a,"vec4",16,0),l(a,"vec4",16,4),l(a,"vec4",16,8),l(a,"vec4",16,12)];s=Hs(...u)}this.instanceMatrixNode=s}if(i&&r===null){const a=new Nl(i.array,3),l=i.usage===Or?md:gl;this.bufferColor=a,r=R(l(a,"vec3",3,0)),this.instanceColorNode=r}const o=s.mul(St).xyz;if(St.assign(o),e.hasGeometryAttribute("normal")){const a=Gy(_n,s);_n.assign(a)}this.instanceColorNode!==null&&ua("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==Or&&this.buffer!=null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==Or&&this.bufferColor!=null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const HN=q(Dx);class WN extends Dx{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:n,instanceColor:i}=e;super(t,n,i),this.instanceMesh=e}}const Lx=q(WN);class qN extends Ee{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Da:this.batchingIdNode=Ux);const n=F(([p])=>{const m=qs(bt(this.batchMesh._indirectTexture),0),g=N(p).modInt(N(m)),y=N(p).div(N(m));return bt(this.batchMesh._indirectTexture,Vt(g,y)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(N(this.batchingIdNode)),i=this.batchMesh._matricesTexture,s=qs(bt(i),0),r=b(n).mul(4).toInt().toVar(),o=r.modInt(s),a=r.div(N(s)),l=Hs(bt(i,Vt(o,a)),bt(i,Vt(o.add(1),a)),bt(i,Vt(o.add(2),a)),bt(i,Vt(o.add(3),a))),u=this.batchMesh._colorsTexture;if(u!==null){const m=F(([g])=>{const y=qs(bt(u),0).x,_=g,x=_.modInt(y),S=_.div(y);return bt(u,Vt(x,S)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);ua("vec3","vBatchColor").assign(m)}const h=on(l);St.assign(l.mul(St));const d=_n.div(R(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;_n.assign(f),e.hasGeometryAttribute("tangent")&&Ra.mulAssign(h)}}const Fx=q(qN),Nm=new WeakMap;class Ix extends Ee{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=Fe.OBJECT,this.skinIndexNode=mi("skinIndex","uvec4"),this.skinWeightNode=mi("skinWeight","vec4");let n,i,s;t?(n=rt("bindMatrix","mat4"),i=rt("bindMatrixInverse","mat4"),s=gd("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(n=Ne(e.bindMatrix,"mat4"),i=Ne(e.bindMatrixInverse,"mat4"),s=Ea(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=n,this.bindMatrixInverseNode=i,this.boneMatricesNode=s,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=St){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,o=e.element(n.x),a=e.element(n.y),l=e.element(n.z),u=e.element(n.w),h=s.mul(t),d=Rt(o.mul(i.x).mul(h),a.mul(i.y).mul(h),l.mul(i.z).mul(h),u.mul(i.w).mul(h));return r.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=_n){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,o=e.element(n.x),a=e.element(n.y),l=e.element(n.z),u=e.element(n.w);let h=Rt(i.x.mul(o),i.y.mul(a),i.z.mul(l),i.w.mul(u));return h=r.mul(h).mul(s),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=gd("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,vl)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&vl.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(St.assign(t),e.hasGeometryAttribute("normal")){const n=this.getSkinnedNormal();_n.assign(n),e.hasGeometryAttribute("tangent")&&Ra.assign(n)}}generate(e,t){if(t!=="void")return St.build(e,t)}update(e){const n=(this.useReference?e.object:this.skinnedMesh).skeleton;Nm.get(n)!==e.frameId&&(Nm.set(n,e.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}}const $N=c=>K(new Ix(c)),Bx=c=>K(new Ix(c,!0));class jN extends Ee{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const n={};for(let s=0,r=this.params.length-1;s<r;s++){const o=this.params[s],a=o.isNode!==!0&&o.name||this.getVarName(s),l=o.isNode!==!0&&o.type||"int";n[a]=ys(a,l)}const i=e.addStack();return t.returnsNode=this.params[this.params.length-1](n,i,e),t.stackNode=i,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),n=this.params,i=t.stackNode;for(let o=0,a=n.length-1;o<a;o++){const l=n[o];let u=null,h=null,d=null,f=null,p=null,m=null;l.isNode?(f="int",d=this.getVarName(o),u="0",h=l.build(e,f),p="<"):(f=l.type||"int",d=l.name||this.getVarName(o),u=l.start,h=l.end,p=l.condition,m=l.update,typeof u=="number"?u=e.generateConst(f,u):u&&u.isNode&&(u=u.build(e,f)),typeof h=="number"?h=e.generateConst(f,h):h&&h.isNode&&(h=h.build(e,f)),u!==void 0&&h===void 0?(u=u+" - 1",h="0",p=">="):h!==void 0&&u===void 0&&(u="0",p="<"),p===void 0&&(Number(u)>Number(h)?p=">=":p="<"));const g={start:u,end:h,condition:p},y=g.start,_=g.end;let x="",S="",w="";m||(f==="int"||f==="uint"?p.includes("<")?m="++":m="--":p.includes("<")?m="+= 1.":m="-= 1."),x+=e.getVar(f,d)+" = "+y,S+=d+" "+p+" "+_,w+=d+" "+m;const A=`for ( ${x}; ${S}; ${w} )`;e.addFlowCode((o===0?`
`:"")+e.tab+A+` {

`).addFlowTab()}const s=i.build(e,"void"),r=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let o=0,a=this.params.length-1;o<a;o++)e.addFlowCode((o===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),r}}const nt=(...c)=>K(new jN(Gs(c,"int"))).append(),XN=()=>ys("continue").append(),Ox=()=>ys("break").append(),YN=(...c)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),nt(...c)),Ju=new WeakMap,Nn=new Ke,Cm=F(({bufferMap:c,influence:e,stride:t,width:n,depth:i,offset:s})=>{const r=N(Px).mul(t).add(s),o=r.div(n),a=r.sub(o.mul(n));return bt(c,Vt(a,o)).depth(i).mul(e)});function ZN(c){const e=c.morphAttributes.position!==void 0,t=c.morphAttributes.normal!==void 0,n=c.morphAttributes.color!==void 0,i=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,s=i!==void 0?i.length:0;let r=Ju.get(c);if(r===void 0||r.count!==s){let _=function(){g.dispose(),Ju.delete(c),c.removeEventListener("dispose",_)};var o=_;r!==void 0&&r.texture.dispose();const a=c.morphAttributes.position||[],l=c.morphAttributes.normal||[],u=c.morphAttributes.color||[];let h=0;e===!0&&(h=1),t===!0&&(h=2),n===!0&&(h=3);let d=c.attributes.position.count*h,f=1;const p=4096;d>p&&(f=Math.ceil(d/p),d=p);const m=new Float32Array(d*f*4*s),g=new Yb(m,d,f,s);g.type=Rn,g.needsUpdate=!0;const y=h*4;for(let x=0;x<s;x++){const S=a[x],w=l[x],A=u[x],T=d*f*4*x;for(let M=0;M<S.count;M++){const L=M*y;e===!0&&(Nn.fromBufferAttribute(S,M),m[T+L+0]=Nn.x,m[T+L+1]=Nn.y,m[T+L+2]=Nn.z,m[T+L+3]=0),t===!0&&(Nn.fromBufferAttribute(w,M),m[T+L+4]=Nn.x,m[T+L+5]=Nn.y,m[T+L+6]=Nn.z,m[T+L+7]=0),n===!0&&(Nn.fromBufferAttribute(A,M),m[T+L+8]=Nn.x,m[T+L+9]=Nn.y,m[T+L+10]=Nn.z,m[T+L+11]=A.itemSize===4?Nn.w:1)}}r={count:s,texture:g,stride:h,size:new he(d,f)},Ju.set(c,r),c.addEventListener("dispose",_)}return r}class KN extends Ee{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Ne(1),this.updateType=Fe.OBJECT}setup(e){const{geometry:t}=e,n=t.morphAttributes.position!==void 0,i=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,r=s!==void 0?s.length:0,{texture:o,stride:a,size:l}=ZN(t);n===!0&&St.mulAssign(this.morphBaseInfluence),i===!0&&_n.mulAssign(this.morphBaseInfluence);const u=N(l.width);nt(r,({i:h})=>{const d=b(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(bt(this.mesh.morphTexture,Vt(N(h).add(1),N(Da))).r):d.assign(rt("morphTargetInfluences","float").element(h).toVar()),n===!0&&St.addAssign(Cm({bufferMap:o,influence:d,stride:a,width:u,depth:h,offset:N(0)})),i===!0&&_n.addAssign(Cm({bufferMap:o,influence:d,stride:a,width:u,depth:h,offset:N(1)}))})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,n)=>t+n,0)}}const Vx=q(KN);class co extends Ee{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class JN extends co{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class QN extends dy{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,i=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,n=R().toVar("directDiffuse"),i=R().toVar("directSpecular"),s=R().toVar("indirectDiffuse"),r=R().toVar("indirectSpecular"),o={directDiffuse:n,directSpecular:i,indirectDiffuse:s,indirectSpecular:r};return{radiance:R().toVar("radiance"),irradiance:R().toVar("irradiance"),iblIrradiance:R().toVar("iblIrradiance"),ambientOcclusion:b(1).toVar("ambientOcclusion"),reflectedLight:o,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const kx=q(QN);class e2 extends co{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Co,Eo;class Ft extends Ee{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Ft.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Fe.NONE;return(this.scope===Ft.SIZE||this.scope===Ft.VIEWPORT)&&(e=Fe.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Ft.VIEWPORT?t!==null?Eo.copy(t.viewport):(e.getViewport(Eo),Eo.multiplyScalar(e.getPixelRatio())):t!==null?(Co.width=t.width,Co.height=t.height):e.getDrawingBufferSize(Co)}setup(){const e=this.scope;let t=null;return e===Ft.SIZE?t=Ne(Co||(Co=new he)):e===Ft.VIEWPORT?t=Ne(Eo||(Eo=new Ke)):t=Q(La.div(ma)),t}generate(e){if(this.scope===Ft.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(ma).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}Ft.COORDINATE="coordinate";Ft.VIEWPORT="viewport";Ft.SIZE="size";Ft.UV="uv";const yi=ue(Ft,Ft.UV),ma=ue(Ft,Ft.SIZE),La=ue(Ft,Ft.COORDINATE),If=ue(Ft,Ft.VIEWPORT),zx=If.zw,Gx=La.sub(If.xy),t2=Gx.div(zx),n2=F(()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),ma),"vec2").once()(),i2=F(()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),yi),"vec2").once()(),s2=F(()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),yi.flipY()),"vec2").once()(),Ro=new he;class ql extends gi{static get type(){return"ViewportTextureNode"}constructor(e=yi,t=null,n=null){n===null&&(n=new Pv,n.minFilter=Ii),super(n,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=Fe.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Ro);const n=this.value;(n.image.width!==Ro.width||n.image.height!==Ro.height)&&(n.image.width=Ro.width,n.image.height=Ro.height,n.needsUpdate=!0);const i=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=i}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const r2=q(ql),Bf=q(ql,null,null,{generateMipmaps:!0});let Qu=null;class o2 extends ql{static get type(){return"ViewportDepthTextureNode"}constructor(e=yi,t=null){Qu===null&&(Qu=new nr),super(e,t,Qu)}}const Of=q(o2);class vn extends Ee{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===vn.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let i=null;if(t===vn.DEPTH_BASE)n!==null&&(i=Wx().assign(n));else if(t===vn.DEPTH)e.isPerspectiveCamera?i=Hx(It.z,ls,us):i=Yr(It.z,ls,us);else if(t===vn.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){const s=Vf(n,ls,us);i=Yr(s,ls,us)}else i=n;else i=Yr(It.z,ls,us);return i}}vn.DEPTH_BASE="depthBase";vn.DEPTH="depth";vn.LINEAR_DEPTH="linearDepth";const Yr=(c,e,t)=>c.add(e).div(e.sub(t)),a2=(c,e,t)=>e.sub(t).mul(c).sub(e),Hx=(c,e,t)=>e.add(c).mul(t).div(t.sub(e).mul(c)),Vf=(c,e,t)=>e.mul(t).div(t.sub(e).mul(c).sub(t)),kf=(c,e,t)=>{e=e.max(1e-6).toVar();const n=hi(c.negate().div(e)),i=hi(t.div(e));return n.div(i)},c2=(c,e,t)=>{const n=c.mul(Fl(t.div(e)));return b(Math.E).pow(n).mul(e).negate()},Wx=q(vn,vn.DEPTH_BASE),zf=ue(vn,vn.DEPTH),yl=q(vn,vn.LINEAR_DEPTH),l2=yl(Of());zf.assign=c=>Wx(c);class u2 extends Ee{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const h2=q(u2);class zn extends Ee{static get type(){return"ClippingNode"}constructor(e=zn.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:n,unionPlanes:i}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===zn.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,i):this.scope===zn.HARDWARE?this.setupHardwareClipping(i,e):this.setupDefault(n,i)}setupAlphaToCoverage(e,t){return F(()=>{const n=b().toVar("distanceToPlane"),i=b().toVar("distanceToGradient"),s=b(1).toVar("clipOpacity"),r=t.length;if(!this.hardwareClipping&&r>0){const a=Li(t);nt(r,({i:l})=>{const u=a.element(l);n.assign(It.dot(u.xyz).negate().add(u.w)),i.assign(n.fwidth().div(2)),s.mulAssign(Wi(i.negate(),i,n))})}const o=e.length;if(o>0){const a=Li(e),l=b(1).toVar("intersectionClipOpacity");nt(o,({i:u})=>{const h=a.element(u);n.assign(It.dot(h.xyz).negate().add(h.w)),i.assign(n.fwidth().div(2)),l.mulAssign(Wi(i.negate(),i,n).oneMinus())}),s.mulAssign(l.oneMinus())}et.a.mulAssign(s),et.a.equal(0).discard()})()}setupDefault(e,t){return F(()=>{const n=t.length;if(!this.hardwareClipping&&n>0){const s=Li(t);nt(n,({i:r})=>{const o=s.element(r);It.dot(o.xyz).greaterThan(o.w).discard()})}const i=e.length;if(i>0){const s=Li(e),r=Gi(!0).toVar("clipped");nt(i,({i:o})=>{const a=s.element(o);r.assign(It.dot(a.xyz).greaterThan(a.w).and(r))}),r.discard()}})()}setupHardwareClipping(e,t){const n=e.length;return t.enableHardwareClipping(n),F(()=>{const i=Li(e),s=h2(t.getClipDistance());nt(n,({i:r})=>{const o=i.element(r),a=It.dot(o.xyz).sub(o.w).negate();s.element(r).assign(a)})})()}}zn.ALPHA_TO_COVERAGE="alphaToCoverage";zn.DEFAULT="default";zn.HARDWARE="hardware";const d2=()=>K(new zn),f2=()=>K(new zn(zn.ALPHA_TO_COVERAGE)),p2=()=>K(new zn(zn.HARDWARE)),m2=.05,Em=F(([c])=>qi(Ie(1e4,En(Ie(17,c.x).add(Ie(.1,c.y)))).mul(Rt(.1,ut(En(Ie(13,c.y).add(c.x))))))),Rm=F(([c])=>Em(Q(Em(c.xy),c.z))),g2=F(([c])=>{const e=wt(Vi(_f(c.xyz)),Vi(Sf(c.xyz))),t=b(1).div(b(m2).mul(e)).toVar("pixScale"),n=Q(to(di(hi(t))),to(Il(hi(t)))),i=Q(Rm(di(n.x.mul(c.xyz))),Rm(di(n.y.mul(c.xyz)))),s=qi(hi(t)),r=Rt(Ie(s.oneMinus(),i.x),Ie(s,i.y)),o=xn(s,s.oneMinus()),a=R(r.mul(r).div(Ie(2,o).mul(Ye(1,o))),r.sub(Ie(.5,o)).div(Ye(1,o)),Ye(1,Ye(1,r).mul(Ye(1,r)).div(Ie(2,o).mul(Ye(1,o))))),l=r.lessThan(o.oneMinus()).select(r.lessThan(o).select(a.x,a.y),a.z);return pi(l,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class Mt extends rn{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+Wv(this)}build(e){this.setup(e)}setupObserver(e){return new pA(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e);const t=e.renderer,n=t.getRenderTarget();e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let i;const s=this.setupClipping(e);if(this.depthWrite===!0&&(n!==null?n.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const r=this.setupLighting(e);s!==null&&e.stack.add(s);const o=Ae(r,et.a).max(0);if(i=this.setupOutput(e,o),g0.assign(i),this.outputNode!==null&&(i=this.outputNode),n!==null){const a=t.getMRT(),l=this.mrtNode;a!==null?(i=a,l!==null&&(i=a.merge(l))):l!==null&&(i=l)}}else{let r=this.fragmentNode;r.isOutputStructNode!==!0&&(r=Ae(r)),i=this.setupOutput(e,r)}e.stack.outputNode=i,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:n}=e.clippingContext;let i=null;if(t.length>0||n.length>0){const s=e.renderer.samples;this.alphaToCoverage&&s>1?i=f2():e.stack.add(d2())}return i}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(p2()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:n}=e;let i=this.depthNode;if(i===null){const s=t.getMRT();s&&s.has("depth")?i=s.get("depth"):t.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?i=kf(It.z,ls,us):i=Yr(It.z,ls,us))}i!==null&&zf.assign(i).append()}setupPosition(e){const{object:t}=e,n=t.geometry;if(e.addStack(),(n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&Vx(t).append(),t.isSkinnedMesh===!0&&Bx(t).append(),this.displacementMap){const s=Fi("displacementMap","texture"),r=Fi("displacementScale","float"),o=Fi("displacementBias","float");St.addAssign(_n.normalize().mul(s.x.mul(r).add(o)))}t.isBatchedMesh&&Fx(t).append(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&Lx(t).append(),this.positionNode!==null&&St.assign(this.positionNode),this.setupHardwareClipping(e);const i=Ff();return e.context.vertex=e.removeStack(),e.context.mvp=i,i}setupDiffuseColor({object:e,geometry:t}){let n=this.colorNode?Ae(this.colorNode):nx;this.vertexColors===!0&&t.hasAttribute("color")&&(n=Ae(n.xyz.mul(mi("color","vec3")),n.a)),e.instanceColor&&(n=ua("vec3","vInstanceColor").mul(n)),e.isBatchedMesh&&e._colorsTexture&&(n=ua("vec3","vBatchColor").mul(n)),et.assign(n);const i=this.opacityNode?b(this.opacityNode):Df;if(et.a.assign(et.a.mul(i)),this.alphaTestNode!==null||this.alphaTest>0){const s=this.alphaTestNode!==null?b(this.alphaTestNode):tx;et.a.lessThanEqual(s).discard()}this.alphaHash===!0&&et.a.lessThan(g2(St)).discard(),this.transparent===!1&&this.blending===ps&&this.alphaToCoverage===!1&&et.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?R(0):et.rgb}setupNormal(){return this.normalNode?R(this.normalNode):lx}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Fi("envMap","cubeTexture"):Fi("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new e2(Lf)),t}setupLights(e){const t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);const i=this.setupLightMap(e);if(i&&i.isLightingNode&&t.push(i),this.aoNode!==null||e.material.aoMap){const r=this.aoNode!==null?this.aoNode:Rx;t.push(new JN(r))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=e.renderer.lighting.createNode([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:n,backdropAlphaNode:i,emissiveNode:s}=this,o=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let a=this.setupOutgoingLight(e);if(o&&o.getScope().hasLights){const l=this.setupLightingModel(e);a=kx(o,l,n,i)}else n!==null&&(a=R(i!==null?tt(a,n,i):n));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(fd.assign(R(s||sx)),a=a.add(fd)),a}setupOutput(e,t){if(this.fog===!0){const n=e.fogNode;n&&(t=Ae(n.mix(t.rgb,n.colorNode),t.a))}return t}setDefaultValues(e){for(const n in e){const i=e[n];this[n]===void 0&&(this[n]=i,i&&i.clone&&(this[n]=i.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const n in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&t[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const n=rn.prototype.toJSON.call(this,e),i=ul(this);n.inputNodes={};for(const{property:r,childNode:o}of i)n.inputNodes[r]=o.toJSON(e).uuid;function s(r){const o=[];for(const a in r){const l=r[a];delete l.metadata,o.push(l)}return o}if(t){const r=s(e.textures),o=s(e.images),a=s(e.nodes);r.length>0&&(n.textures=r),o.length>0&&(n.images=o),a.length>0&&(n.nodes=a)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowPositionNode=e.shadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const v2=new Cl;class y2 extends Mt{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(v2),this.setValues(e)}}const x2=new uT;class _2 extends Mt{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(x2),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?b(this.offsetNodeNode):Cx,t=this.dashScaleNode?b(this.dashScaleNode):Mx,n=this.dashSizeNode?b(this.dashSizeNode):Ax,i=this.dashSizeNode?b(this.dashGapNode):Nx;$c.assign(n),pd.assign(i);const s=Sn(mi("lineDistance").mul(t));(e?s.add(e):s).mod($c.add(pd)).greaterThan($c).discard()}}let eh=null;class S2 extends ql{static get type(){return"ViewportSharedTextureNode"}constructor(e=yi,t=null){eh===null&&(eh=new Pv),super(e,t,eh)}updateReference(){return this}}const b2=q(S2),qx=c=>K(c).mul(.5).add(.5),T2=c=>K(c).mul(2).sub(1),w2=new rT;class M2 extends Mt{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(w2),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?b(this.opacityNode):Df;et.assign(Ae(qx(Tt),e))}}class A2 extends At{static get type(){return"EquirectUVNode"}constructor(e=Ef){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(Math.PI*2)).add(.5),n=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Q(t,n)}}const Gf=q(A2);class $x extends f1{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const n=t.minFilter,i=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s=new ro(5,5,5),r=Gf(Ef),o=new Mt;o.colorNode=qe(t,r,0),o.side=Gn,o.blending=js;const a=new Un(s,o),l=new qd;l.add(a),t.minFilter===Ii&&(t.minFilter=Kt);const u=new Nv(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,l),e.setMRT(h),t.minFilter=n,t.currentGenerateMipmaps=i,a.geometry.dispose(),a.material.dispose(),this}}const Jo=new WeakMap;class N2 extends At{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=no();const t=new Wd;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=Fe.RENDER}updateBefore(e){const{renderer:t,material:n}=e,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const s=i.isTextureNode?i.value:n[i.property];if(s&&s.isTexture){const r=s.mapping;if(r===ga||r===va){if(Jo.has(s)){const o=Jo.get(s);Pm(o,s.mapping),this._cubeTexture=o}else{const o=s.image;if(C2(o)){const a=new $x(o.height);a.fromEquirectangularTexture(t,s),Pm(a.texture,s.mapping),this._cubeTexture=a.texture,Jo.set(s,a.texture),s.addEventListener("dispose",jx)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function C2(c){return c==null?!1:c.height>0}function jx(c){const e=c.target;e.removeEventListener("dispose",jx);const t=Jo.get(e);t!==void 0&&(Jo.delete(e),t.dispose())}function Pm(c,e){e===ga?c.mapping=Xs:e===va&&(c.mapping=Kr)}const Xx=q(N2);class Hf extends co{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=Xx(this.envNode)}}class E2 extends co{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=b(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class $l{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Yx extends $l{constructor(){super()}indirect(e,t,n){const i=e.ambientOcclusion,s=e.reflectedLight,r=n.context.irradianceLightMap;s.indirectDiffuse.assign(Ae(0)),r?s.indirectDiffuse.addAssign(r):s.indirectDiffuse.addAssign(Ae(1,1,1,0)),s.indirectDiffuse.mulAssign(i),s.indirectDiffuse.mulAssign(et.rgb)}finish(e,t,n){const i=n.material,s=e.outgoingLight,r=n.context.environment;if(r)switch(i.combine){case Ml:s.rgb.assign(tt(s.rgb,s.rgb.mul(r.rgb),Ko.mul(jc)));break;case $S:s.rgb.assign(tt(s.rgb,r.rgb,Ko.mul(jc)));break;case jS:s.rgb.addAssign(r.rgb.mul(Ko.mul(jc)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",i.combine);break}}}const R2=new Sa;class P2 extends Mt{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(R2),this.setValues(e)}setupNormal(){return Hn}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Hf(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new E2(Lf)),t}setupOutgoingLight(){return et.rgb}setupLightingModel(){return new Yx}}const io=F(({f0:c,f90:e,dotVH:t})=>{const n=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return c.mul(n.oneMinus()).add(e.mul(n))}),Js=F(c=>c.diffuseColor.mul(1/Math.PI)),U2=()=>b(.25),D2=F(({dotNH:c})=>fl.mul(b(.5)).add(1).mul(b(1/Math.PI)).mul(c.pow(fl))),L2=F(({lightDirection:c})=>{const e=c.add(dt).normalize(),t=Tt.dot(e).clamp(),n=dt.dot(e).clamp(),i=io({f0:gn,f90:1,dotVH:n}),s=U2(),r=D2({dotNH:t});return i.mul(s).mul(r)});class Zx extends Yx{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const s=Tt.dot(e).clamp().mul(t);n.directDiffuse.addAssign(s.mul(Js({diffuseColor:et.rgb}))),this.specular===!0&&n.directSpecular.addAssign(s.mul(L2({lightDirection:e})).mul(Ko))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(Js({diffuseColor:et}))),n.indirectDiffuse.mulAssign(e)}}const F2=new oT;class I2 extends Mt{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(F2),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Hf(t):null}setupLightingModel(){return new Zx(!1)}}const B2=new iT;class O2 extends Mt{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(B2),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Hf(t):null}setupLightingModel(){return new Zx}setupVariants(){const e=(this.shininessNode?b(this.shininessNode):ix).max(1e-4);fl.assign(e);const t=this.specularNode||rx;gn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const Kx=F(c=>{if(c.geometry.hasAttribute("normal")===!1)return b(0);const e=Hn.dFdx().abs().max(Hn.dFdy().abs());return e.x.max(e.y).max(e.z)}),Wf=F(c=>{const{roughness:e}=c,t=Kx();let n=e.max(.0525);return n=n.add(t),n=n.min(1),n}),Jx=F(({alpha:c,dotNL:e,dotNV:t})=>{const n=c.pow2(),i=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt()),s=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return ti(.5,i.add(s).max(F0))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),V2=F(({alphaT:c,alphaB:e,dotTV:t,dotBV:n,dotTL:i,dotBL:s,dotNV:r,dotNL:o})=>{const a=o.mul(R(c.mul(t),e.mul(n),r).length()),l=r.mul(R(c.mul(i),e.mul(s),o).length());return ti(.5,a.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),Qx=F(({alpha:c,dotNH:e})=>{const t=c.pow2(),n=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),k2=b(1/Math.PI),z2=F(({alphaT:c,alphaB:e,dotNH:t,dotTH:n,dotBH:i})=>{const s=c.mul(e),r=R(e.mul(n),c.mul(i),s.mul(t)),o=r.dot(r),a=s.div(o);return k2.mul(s.mul(a.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),xd=F(c=>{const{lightDirection:e,f0:t,f90:n,roughness:i,f:s,USE_IRIDESCENCE:r,USE_ANISOTROPY:o}=c,a=c.normalView||Tt,l=i.pow2(),u=e.add(dt).normalize(),h=a.dot(e).clamp(),d=a.dot(dt).clamp(),f=a.dot(u).clamp(),p=dt.dot(u).clamp();let m=io({f0:t,f90:n,dotVH:p}),g,y;if(ca(r)&&(m=Ll.mix(m,s)),ca(o)){const _=Xo.dot(e),x=Xo.dot(dt),S=Xo.dot(u),w=Ws.dot(e),A=Ws.dot(dt),T=Ws.dot(u);g=V2({alphaT:dl,alphaB:l,dotTV:x,dotBV:A,dotTL:_,dotBL:w,dotNV:d,dotNL:h}),y=z2({alphaT:dl,alphaB:l,dotNH:f,dotTH:S,dotBH:T})}else g=Jx({alpha:l,dotNL:h,dotNV:d}),y=Qx({alpha:l,dotNH:f});return m.mul(g).mul(y)}),qf=F(({roughness:c,dotNV:e})=>{const t=Ae(-1,-.0275,-.572,.022),n=Ae(1,.0425,1.04,-.04),i=c.mul(t).add(n),s=i.x.mul(i.x).min(e.mul(-9.28).exp2()).mul(i.x).add(i.y);return Q(-1.04,1.04).mul(s).add(i.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),e_=F(c=>{const{dotNV:e,specularColor:t,specularF90:n,roughness:i}=c,s=qf({dotNV:e,roughness:i});return t.mul(s.x).add(n.mul(s.y))}),t_=F(({f:c,f90:e,dotVH:t})=>{const n=t.oneMinus().saturate(),i=n.mul(n),s=n.mul(i,i).clamp(0,.9999);return c.sub(R(e).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),G2=F(({roughness:c,dotNH:e})=>{const t=c.pow2(),n=b(1).div(t),s=e.pow2().oneMinus().max(.0078125);return b(2).add(n).mul(s.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),H2=F(({dotNV:c,dotNL:e})=>b(1).div(b(4).mul(e.add(c).sub(e.mul(c))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),W2=F(({lightDirection:c})=>{const e=c.add(dt).normalize(),t=Tt.dot(c).clamp(),n=Tt.dot(dt).clamp(),i=Tt.dot(e).clamp(),s=G2({roughness:Dl,dotNH:i}),r=H2({dotNV:n,dotNL:t});return Os.mul(s).mul(r)}),q2=F(({N:c,V:e,roughness:t})=>{const s=.0078125,r=c.dot(e).saturate(),o=Q(t,r.oneMinus().sqrt());return o.assign(o.mul(.984375).add(s)),o}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),$2=F(({f:c})=>{const e=c.length();return wt(e.mul(e).add(c.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Tc=F(({v1:c,v2:e})=>{const t=c.dot(e),n=t.abs().toVar(),i=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),s=n.add(4.1616724).mul(n).add(3.417594).toVar(),r=i.div(s),o=t.greaterThan(0).select(r,wt(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(r));return c.cross(e).mul(o)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Um=F(({N:c,V:e,P:t,mInv:n,p0:i,p1:s,p2:r,p3:o})=>{const a=s.sub(i).toVar(),l=o.sub(i).toVar(),u=a.cross(l),h=R().toVar();return Ve(u.dot(t.sub(i)).greaterThanEqual(0),()=>{const d=e.sub(c.mul(e.dot(c))).normalize(),f=c.cross(d).negate(),p=n.mul(on(d,f,c).transpose()).toVar(),m=p.mul(i.sub(t)).normalize().toVar(),g=p.mul(s.sub(t)).normalize().toVar(),y=p.mul(r.sub(t)).normalize().toVar(),_=p.mul(o.sub(t)).normalize().toVar(),x=R(0).toVar();x.addAssign(Tc({v1:m,v2:g})),x.addAssign(Tc({v1:g,v2:y})),x.addAssign(Tc({v1:y,v2:_})),x.addAssign(Tc({v1:_,v2:m})),h.assign(R($2({f:x})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),jl=1/6,n_=c=>Ie(jl,Ie(c,Ie(c,c.negate().add(3)).sub(3)).add(1)),_d=c=>Ie(jl,Ie(c,Ie(c,Ie(3,c).sub(6))).add(4)),i_=c=>Ie(jl,Ie(c,Ie(c,Ie(-3,c).add(3)).add(3)).add(1)),Sd=c=>Ie(jl,Jn(c,3)),Dm=c=>n_(c).add(_d(c)),Lm=c=>i_(c).add(Sd(c)),Fm=c=>Rt(-1,_d(c).div(n_(c).add(_d(c)))),Im=c=>Rt(1,Sd(c).div(i_(c).add(Sd(c)))),Bm=(c,e,t)=>{const n=c.uvNode,i=Ie(n,e.zw).add(.5),s=di(i),r=qi(i),o=Dm(r.x),a=Lm(r.x),l=Fm(r.x),u=Im(r.x),h=Fm(r.y),d=Im(r.y),f=Q(s.x.add(l),s.y.add(h)).sub(.5).mul(e.xy),p=Q(s.x.add(u),s.y.add(h)).sub(.5).mul(e.xy),m=Q(s.x.add(l),s.y.add(d)).sub(.5).mul(e.xy),g=Q(s.x.add(u),s.y.add(d)).sub(.5).mul(e.xy),y=Dm(r.y).mul(Rt(o.mul(c.uv(f).level(t)),a.mul(c.uv(p).level(t)))),_=Lm(r.y).mul(Rt(o.mul(c.uv(m).level(t)),a.mul(c.uv(g).level(t))));return y.add(_)},s_=F(([c,e=b(3)])=>{const t=Q(c.size(N(e))),n=Q(c.size(N(e.add(1)))),i=ti(1,t),s=ti(1,n),r=Bm(c,Ae(i,t),di(e)),o=Bm(c,Ae(s,n),Il(e));return qi(e).mix(r,o)}),Om=F(([c,e,t,n,i])=>{const s=R(Mf(e.negate(),Hi(c),ti(1,n))),r=R(Vi(i[0].xyz),Vi(i[1].xyz),Vi(i[2].xyz));return Hi(s).mul(t.mul(r))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),j2=F(([c,e])=>c.mul(pi(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),X2=Bf(),Y2=Bf(),Vm=F(([c,e,t],{material:n})=>{const s=(n.side==Gn?X2:Y2).uv(c),r=hi(ma.x).mul(j2(e,t));return s_(s,r)}),km=F(([c,e,t])=>(Ve(t.notEqual(0),()=>{const n=Fl(e).negate().div(t);return xf(n.negate().mul(c))}),R(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Z2=F(([c,e,t,n,i,s,r,o,a,l,u,h,d,f,p])=>{let m,g;if(p){m=Ae().toVar(),g=R().toVar();const w=u.sub(1).mul(p.mul(.025)),A=R(u.sub(w),u,u.add(w));nt({start:0,end:3},({i:T})=>{const M=A.element(T),L=Om(c,e,h,M,o),I=r.add(L),W=l.mul(a.mul(Ae(I,1))),U=Q(W.xy.div(W.w)).toVar();U.addAssign(1),U.divAssign(2),U.assign(Q(U.x,U.y.oneMinus()));const k=Vm(U,t,M);m.element(T).assign(k.element(T)),m.a.addAssign(k.a),g.element(T).assign(n.element(T).mul(km(Vi(L),d,f).element(T)))}),m.a.divAssign(3)}else{const w=Om(c,e,h,u,o),A=r.add(w),T=l.mul(a.mul(Ae(A,1))),M=Q(T.xy.div(T.w)).toVar();M.addAssign(1),M.divAssign(2),M.assign(Q(M.x,M.y.oneMinus())),m=Vm(M,t,u),g=n.mul(km(Vi(w),d,f))}const y=g.rgb.mul(m.rgb),_=c.dot(e).clamp(),x=R(e_({dotNV:_,specularColor:i,specularF90:s,roughness:t})),S=g.r.add(g.g,g.b).div(3);return Ae(x.oneMinus().mul(y),m.a.oneMinus().mul(S).oneMinus())}),K2=on(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),J2=c=>{const e=c.sqrt();return R(1).add(e).div(R(1).sub(e))},zm=(c,e)=>c.sub(e).div(c.add(e)).pow2(),Q2=(c,e)=>{const t=c.mul(2*Math.PI*1e-9),n=R(54856e-17,44201e-17,52481e-17),i=R(1681e3,1795300,2208400),s=R(43278e5,93046e5,66121e5),r=b(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let o=n.mul(s.mul(2*Math.PI).sqrt()).mul(i.mul(t).add(e).cos()).mul(t.pow2().negate().mul(s).exp());return o=R(o.x.add(r),o.y,o.z).div(10685e-11),K2.mul(o)},eC=F(({outsideIOR:c,eta2:e,cosTheta1:t,thinFilmThickness:n,baseF0:i})=>{const s=tt(c,e,Wi(0,.03,n)),o=c.div(s).pow2().mul(t.pow2().oneMinus()).oneMinus();Ve(o.lessThan(0),()=>R(1));const a=o.sqrt(),l=zm(s,c),u=io({f0:l,f90:1,dotVH:t}),h=u.oneMinus(),d=s.lessThan(c).select(Math.PI,0),f=b(Math.PI).sub(d),p=J2(i.clamp(0,.9999)),m=zm(p,s.toVec3()),g=io({f0:m,f90:1,dotVH:a}),y=R(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),_=s.mul(n,a,2),x=R(f).add(y),S=u.mul(g).clamp(1e-5,.9999),w=S.sqrt(),A=h.pow2().mul(g).div(R(1).sub(S)),M=u.add(A).toVar(),L=A.sub(h).toVar();return nt({start:1,end:2,condition:"<=",name:"m"},({m:I})=>{L.mulAssign(w);const W=Q2(b(I).mul(_),b(I).mul(x)).mul(2);M.addAssign(L.mul(W))}),M.max(R(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),tC=F(({normal:c,viewDir:e,roughness:t})=>{const n=c.dot(e).saturate(),i=t.pow2(),s=Yt(t.lessThan(.25),b(-339.2).mul(i).add(b(161.4).mul(t)).sub(25.9),b(-8.48).mul(i).add(b(14.3).mul(t)).sub(9.95)),r=Yt(t.lessThan(.25),b(44).mul(i).sub(b(23.7).mul(t)).add(3.26),b(1.97).mul(i).sub(b(3.27).mul(t)).add(.72));return Yt(t.lessThan(.25),0,b(.1).mul(t).sub(.025)).add(s.mul(n).add(r).exp()).mul(1/Math.PI).saturate()}),th=R(.04),nh=b(1);class r_ extends $l{constructor(e=!1,t=!1,n=!1,i=!1,s=!1,r=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=i,this.transmission=s,this.dispersion=r,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=R().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=R().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=R().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=R().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=R().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=Tt.dot(dt).clamp();this.iridescenceFresnel=eC({outsideIOR:b(1),eta2:uf,cosTheta1:t,thinFilmThickness:hf,baseF0:gn}),this.iridescenceF0=t_({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=ki,n=By.sub(ki).normalize(),i=Gl;e.backdrop=Z2(i,n,ci,et,gn,fa,t,kn,bn,xs,Yo,df,pf,ff,this.dispersion?mf:null),e.backdropAlpha=pl,et.a.mulAssign(tt(1,e.backdrop.a,pl))}}computeMultiscattering(e,t,n){const i=Tt.dot(dt).clamp(),s=qf({roughness:ci,dotNV:i}),o=(this.iridescenceF0?Ll.mix(gn,this.iridescenceF0):gn).mul(s.x).add(n.mul(s.y)),l=s.x.add(s.y).oneMinus(),u=gn.add(gn.oneMinus().mul(.047619)),h=o.mul(u).div(l.mul(u).oneMinus());e.addAssign(o),t.addAssign(h.mul(l))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const s=Tt.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(s.mul(W2({lightDirection:e}))),this.clearcoat===!0){const o=zr.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(o.mul(xd({lightDirection:e,f0:th,f90:nh,roughness:da,normalView:zr})))}n.directDiffuse.addAssign(s.mul(Js({diffuseColor:et.rgb}))),n.directSpecular.addAssign(s.mul(xd({lightDirection:e,f0:gn,f90:1,roughness:ci,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:i,reflectedLight:s,ltc_1:r,ltc_2:o}){const a=t.add(n).sub(i),l=t.sub(n).sub(i),u=t.sub(n).add(i),h=t.add(n).add(i),d=Tt,f=dt,p=It.toVar(),m=q2({N:d,V:f,roughness:ci}),g=r.uv(m).toVar(),y=o.uv(m).toVar(),_=on(R(g.x,0,g.y),R(0,1,0),R(g.z,0,g.w)).toVar(),x=gn.mul(y.x).add(gn.oneMinus().mul(y.y)).toVar();s.directSpecular.addAssign(e.mul(x).mul(Um({N:d,V:f,P:p,mInv:_,p0:a,p1:l,p2:u,p3:h}))),s.directDiffuse.addAssign(e.mul(et).mul(Um({N:d,V:f,P:p,mInv:on(1,0,0,0,1,0,0,0,1),p0:a,p1:l,p2:u,p3:h})))}indirect(e,t,n){this.indirectDiffuse(e,t,n),this.indirectSpecular(e,t,n),this.ambientOcclusion(e,t,n)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Js({diffuseColor:et})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:n}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(Os,tC({normal:Tt,viewDir:dt,roughness:Dl}))),this.clearcoat===!0){const l=zr.dot(dt).clamp(),u=e_({dotNV:l,specularColor:th,specularF90:nh,roughness:da});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(u))}const i=R().toVar("singleScattering"),s=R().toVar("multiScattering"),r=t.mul(1/Math.PI);this.computeMultiscattering(i,s,fa);const o=i.add(s),a=et.mul(o.r.max(o.g).max(o.b).oneMinus());n.indirectSpecular.addAssign(e.mul(i)),n.indirectSpecular.addAssign(s.mul(r)),n.indirectDiffuse.addAssign(a.mul(r))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const i=Tt.dot(dt).clamp().add(e),s=ci.mul(-16).oneMinus().negate().exp2(),r=e.sub(i.pow(s).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(r)}finish(e){const{outgoingLight:t}=e;if(this.clearcoat===!0){const n=zr.dot(dt).clamp(),i=io({dotVH:n,f0:th,f90:nh}),s=t.mul(hl.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(hl));t.assign(s)}if(this.sheen===!0){const n=Os.r.max(Os.g).max(Os.b).mul(.157).oneMinus(),i=t.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(i)}}}const Gm=b(1),bd=b(-2),wc=b(.8),ih=b(-1),Mc=b(.4),sh=b(2),Ac=b(.305),rh=b(3),Hm=b(.21),nC=b(4),Wm=b(4),iC=b(16),sC=F(([c])=>{const e=R(ut(c)).toVar(),t=b(-1).toVar();return Ve(e.x.greaterThan(e.z),()=>{Ve(e.x.greaterThan(e.y),()=>{t.assign(Yt(c.x.greaterThan(0),0,3))}).Else(()=>{t.assign(Yt(c.y.greaterThan(0),1,4))})}).Else(()=>{Ve(e.z.greaterThan(e.y),()=>{t.assign(Yt(c.z.greaterThan(0),2,5))}).Else(()=>{t.assign(Yt(c.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),rC=F(([c,e])=>{const t=Q().toVar();return Ve(e.equal(0),()=>{t.assign(Q(c.z,c.y).div(ut(c.x)))}).ElseIf(e.equal(1),()=>{t.assign(Q(c.x.negate(),c.z.negate()).div(ut(c.y)))}).ElseIf(e.equal(2),()=>{t.assign(Q(c.x.negate(),c.y).div(ut(c.z)))}).ElseIf(e.equal(3),()=>{t.assign(Q(c.z.negate(),c.y).div(ut(c.x)))}).ElseIf(e.equal(4),()=>{t.assign(Q(c.x.negate(),c.z).div(ut(c.y)))}).Else(()=>{t.assign(Q(c.x,c.y).div(ut(c.z)))}),Ie(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),oC=F(([c])=>{const e=b(0).toVar();return Ve(c.greaterThanEqual(wc),()=>{e.assign(Gm.sub(c).mul(ih.sub(bd)).div(Gm.sub(wc)).add(bd))}).ElseIf(c.greaterThanEqual(Mc),()=>{e.assign(wc.sub(c).mul(sh.sub(ih)).div(wc.sub(Mc)).add(ih))}).ElseIf(c.greaterThanEqual(Ac),()=>{e.assign(Mc.sub(c).mul(rh.sub(sh)).div(Mc.sub(Ac)).add(sh))}).ElseIf(c.greaterThanEqual(Hm),()=>{e.assign(Ac.sub(c).mul(nC.sub(rh)).div(Ac.sub(Hm)).add(rh))}).Else(()=>{e.assign(b(-2).mul(hi(Ie(1.16,c))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),o_=F(([c,e])=>{const t=c.toVar();t.assign(Ie(2,t).sub(1));const n=R(t,1).toVar();return Ve(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),a_=F(([c,e,t,n,i,s])=>{const r=b(t),o=R(e),a=pi(oC(r),bd,s),l=qi(a),u=di(a),h=R(Td(c,o,u,n,i,s)).toVar();return Ve(l.notEqual(0),()=>{const d=R(Td(c,o,u.add(1),n,i,s)).toVar();h.assign(tt(h,d,l))}),h}),Td=F(([c,e,t,n,i,s])=>{const r=b(t).toVar(),o=R(e),a=b(sC(o)).toVar(),l=b(wt(Wm.sub(r),0)).toVar();r.assign(wt(r,Wm));const u=b(to(r)).toVar(),h=Q(rC(o,a).mul(u.sub(2)).add(1)).toVar();return Ve(a.greaterThan(2),()=>{h.y.addAssign(u),a.subAssign(3)}),h.x.addAssign(a.mul(u)),h.x.addAssign(l.mul(Ie(3,iC))),h.y.addAssign(Ie(4,to(s).sub(u))),h.x.mulAssign(n),h.y.mulAssign(i),c.uv(h).grad(Q(),Q())}),oh=F(({envMap:c,mipInt:e,outputDirection:t,theta:n,axis:i,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:r,CUBEUV_MAX_MIP:o})=>{const a=Ui(n),l=t.mul(a).add(i.cross(t).mul(En(n))).add(i.mul(i.dot(t).mul(a.oneMinus())));return Td(c,l,e,s,r,o)}),c_=F(({n:c,latitudinal:e,poleAxis:t,outputDirection:n,weights:i,samples:s,dTheta:r,mipInt:o,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=R(Yt(e,t,Ol(t,n))).toVar();Ve(yf(d.equals(R(0))),()=>{d.assign(R(n.z,0,n.x.negate()))}),d.assign(Hi(d));const f=R().toVar();return f.addAssign(i.element(N(0)).mul(oh({theta:0,axis:d,outputDirection:n,mipInt:o,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),nt({start:N(1),end:c},({i:p})=>{Ve(p.greaterThanEqual(s),()=>{Ox()});const m=b(r.mul(b(p))).toVar();f.addAssign(i.element(p).mul(oh({theta:m.mul(-1),axis:d,outputDirection:n,mipInt:o,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(i.element(p).mul(oh({theta:m,axis:d,outputDirection:n,mipInt:o,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),Ae(f,1)});let xl=null;const qm=new WeakMap;function aC(c){const e=Math.log2(c)-2,t=1/c;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function cC(c){let e=qm.get(c);if((e!==void 0?e.pmremVersion:-1)!==c.pmremVersion){const n=c.image;if(c.isCubeTexture)if(uC(n))e=xl.fromCubemap(c,e);else return null;else if(hC(n))e=xl.fromEquirectangular(c,e);else return null;e.pmremVersion=c.pmremVersion,qm.set(c,e)}return e.texture}class lC extends At{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;const i=new Ht;i.isRenderTargetTexture=!0,this._texture=qe(i),this._width=Ne(0),this._height=Ne(0),this._maxMip=Ne(0),this.updateBeforeType=Fe.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=aC(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,n=this._value;t!==n.pmremVersion&&(n.isPMREMTexture===!0?e=n:e=cC(n),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){xl===null&&(xl=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));const n=this.value;e.renderer.coordinateSystem===Kn&&n.isPMREMTexture!==!0&&n.isRenderTargetTexture===!0&&(t=R(t.x.negate(),t.yz));let i=this.levelNode;return i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),a_(this._texture,t,i,this._width,this._height,this._maxMip)}}function uC(c){if(c==null)return!1;let e=0;const t=6;for(let n=0;n<t;n++)c[n]!==void 0&&e++;return e===t}function hC(c){return c==null?!1:c.height>0}const $f=q(lC),$m=new WeakMap;class dC extends co{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const f=n.isTextureNode?n.value:t[n.property];let p=$m.get(f);p===void 0&&(p=$f(f),$m.set(f,p)),n=p}const s=t.envMap?rt("envMapIntensity","float",e.material):rt("environmentIntensity","float",e.scene),o=t.useAnisotropy===!0||t.anisotropy>0?Qy:Tt,a=n.context(jm(ci,o)).mul(s),l=n.context(fC(Gl)).mul(Math.PI).mul(s),u=Zo(a),h=Zo(l);e.context.radiance.addAssign(u),e.context.iblIrradiance.addAssign(h);const d=e.context.lightingModel.clearcoatRadiance;if(d){const f=n.context(jm(da,zr)).mul(s),p=Zo(f);d.addAssign(p)}}}const jm=(c,e)=>{let t=null;return{getUV:()=>(t===null&&(t=dt.negate().reflect(e),t=c.mul(c).mix(t,e).normalize(),t=t.transformDirection(bn)),t),getTextureLevel:()=>c}},fC=c=>({getUV:()=>c,getTextureLevel:()=>b(1)}),pC=new Kd;class Xl extends Mt{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(pC),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new dC(t):null}setupLightingModel(){return new r_}setupSpecular(){const e=tt(R(.04),et.rgb,ha);gn.assign(e),fa.assign(1)}setupVariants(){const e=this.metalnessNode?b(this.metalnessNode):cx;ha.assign(e);let t=this.roughnessNode?b(this.roughnessNode):ax;t=Wf({roughness:t}),ci.assign(t),this.setupSpecular(),et.assign(Ae(et.rgb.mul(e.oneMinus()),et.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const mC=new nT;class gC extends Xl{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(mC),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?b(this.iorNode):bx;Yo.assign(e),gn.assign(tt(xn(wf(Yo.sub(1).div(Yo.add(1))).mul(ox),R(1)).mul(yd),et.rgb,ha)),fa.assign(tt(yd,1,ha))}setupLightingModel(){return new r_(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?b(this.clearcoatNode):ux,n=this.clearcoatRoughnessNode?b(this.clearcoatRoughnessNode):hx;hl.assign(t),da.assign(Wf({roughness:n}))}if(this.useSheen){const t=this.sheenNode?R(this.sheenNode):px,n=this.sheenRoughnessNode?b(this.sheenRoughnessNode):mx;Os.assign(t),Dl.assign(n)}if(this.useIridescence){const t=this.iridescenceNode?b(this.iridescenceNode):vx,n=this.iridescenceIORNode?b(this.iridescenceIORNode):yx,i=this.iridescenceThicknessNode?b(this.iridescenceThicknessNode):xx;Ll.assign(t),uf.assign(n),hf.assign(i)}if(this.useAnisotropy){const t=(this.anisotropyNode?Q(this.anisotropyNode):gx).toVar();as.assign(t.length()),Ve(as.equal(0),()=>{t.assign(Q(1,0))}).Else(()=>{t.divAssign(Q(as)),as.assign(as.saturate())}),dl.assign(as.pow2().mix(ci.pow2(),1)),Xo.assign(Vs[0].mul(t.x).add(Vs[1].mul(t.y))),Ws.assign(Vs[1].mul(t.x).sub(Vs[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?b(this.transmissionNode):_x,n=this.thicknessNode?b(this.thicknessNode):Sx,i=this.attenuationDistanceNode?b(this.attenuationDistanceNode):Tx,s=this.attenuationColorNode?R(this.attenuationColorNode):wx;if(pl.assign(t),df.assign(n),ff.assign(i),pf.assign(s),this.useDispersion){const r=this.dispersionNode?b(this.dispersionNode):Ex;mf.assign(r)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?R(this.clearcoatNormalNode):dx}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const vC=F(({normal:c,lightDirection:e,builder:t})=>{const n=c.dot(e),i=Q(n.mul(.5).add(.5),0);if(t.material.gradientMap){const s=Fi("gradientMap","texture").context({getUV:()=>i});return R(s.r)}else{const s=i.fwidth().mul(.5);return tt(R(.7),R(1),Wi(b(.7).sub(s.x),b(.7).add(s.x),i.x))}});class yC extends $l{direct({lightDirection:e,lightColor:t,reflectedLight:n},i,s){const r=vC({normal:kl,lightDirection:e,builder:s}).mul(t);n.directDiffuse.addAssign(r.mul(Js({diffuseColor:et.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(Js({diffuseColor:et}))),n.indirectDiffuse.mulAssign(e)}}const xC=new sT;class _C extends Mt{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(xC),this.setValues(e)}setupLightingModel(){return new yC}}class SC extends At{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=R(dt.z,0,dt.x.negate()).normalize(),t=dt.cross(e);return Q(e.dot(Tt),t.dot(Tt)).mul(.495).add(.5)}}const l_=ue(SC),bC=new lT;class TC extends Mt{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(bC),this.setValues(e)}setupVariants(e){const t=l_;let n;e.material.matcap?n=Fi("matcap","texture").context({getUV:()=>t}):n=R(tt(.2,.8,t.y)),et.rgb.mulAssign(n.rgb)}}const wC=new _1;class MC extends Mt{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(wC),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class AC extends At{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:n}=this;if(this.getNodeType(e)==="vec2"){const s=t.cos(),r=t.sin();return Ul(s,r,r.negate(),s).mul(n)}else{const s=t,r=Hs(Ae(1,0,0,0),Ae(0,Ui(s.x),En(s.x).negate(),0),Ae(0,En(s.x),Ui(s.x),0),Ae(0,0,0,1)),o=Hs(Ae(Ui(s.y),0,En(s.y),0),Ae(0,1,0,0),Ae(En(s.y).negate(),0,Ui(s.y),0),Ae(0,0,0,1)),a=Hs(Ae(Ui(s.z),En(s.z).negate(),0,0),Ae(En(s.z),Ui(s.z),0,0),Ae(0,0,1,0),Ae(0,0,0,1));return r.mul(o).mul(a).mul(Ae(n,1)).xyz}}}const jf=q(AC),NC=new p1;class CC extends Mt{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(NC),this.setValues(e)}setupPosition({object:e,camera:t,context:n}){const i=this.sizeAttenuation,{positionNode:s,rotationNode:r,scaleNode:o}=this,a=St;let l=or.mul(R(s||0)),u=Q(kn[0].xyz.length(),kn[1].xyz.length());if(o!==null&&(u=u.mul(o)),!i)if(t.isPerspectiveCamera)u=u.mul(l.z.negate());else{const m=b(2).div(xs.element(1).element(1));u=u.mul(m.mul(2))}let h=a.xy;if(e.center&&e.center.isVector2===!0){const m=jA("center","vec2");h=h.sub(m.sub(.5))}h=h.mul(u);const d=b(r||fx),f=jf(h,d);l=Ae(l.xy.add(f),l.zw);const p=xs.mul(l);return n.vertex=a,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class EC extends $l{constructor(){super(),this.shadowNode=b(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){et.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(et.rgb)}}const RC=new tT;class PC extends Mt{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(RC),this.setValues(e)}setupLightingModel(){return new EC}}const UC=F(({texture:c,uv:e})=>{const n=R().toVar();return Ve(e.x.lessThan(1e-4),()=>{n.assign(R(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(R(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(R(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(R(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(R(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(R(0,0,-1))}).Else(()=>{const s=c.uv(e.add(R(-.01,0,0))).r.sub(c.uv(e.add(R(.01,0,0))).r),r=c.uv(e.add(R(0,-.01,0))).r.sub(c.uv(e.add(R(0,.01,0))).r),o=c.uv(e.add(R(0,0,-.01))).r.sub(c.uv(e.add(R(0,0,.01))).r);n.assign(R(s,r,o))}),n.normalize()});class DC extends gi{static get type(){return"Texture3DNode"}constructor(e,t=null,n=null){super(e,t,n),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return R(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){return t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return UC({texture:this,uv:e})}}const LC=q(DC);class FC{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){const e=(t,n)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,n)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}setAnimationLoop(e){this._animationLoop=e}setContext(e){this._context=e}dispose(){this.stop()}}class xi{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length;n++)if(t=t.get(e[n]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let i=0;i<e.length;i++){const s=e[i];n.has(s)===!1&&n.set(s,new WeakMap),n=n.get(s)}return n.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let n=0;n<e.length;n++)if(t=t.get(e[n]),t===void 0)return!1;return t.delete(e[e.length-1])}}let IC=0;function BC(c){const e=Object.keys(c);let t=Object.getPrototypeOf(c);for(;t;){const n=Object.getOwnPropertyDescriptors(t);for(const i in n)if(n[i]!==void 0){const s=n[i];s&&typeof s.get=="function"&&e.push(i)}t=Object.getPrototypeOf(t)}return e}class OC{constructor(e,t,n,i,s,r,o,a,l,u){this._nodes=e,this._geometries=t,this.id=IC++,this.renderer=n,this.object=i,this.material=s,this.scene=r,this.camera=o,this.lightsNode=a,this.context=l,this.geometry=i.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=u!==null?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],i=new Set;for(const s of e){const r=s.node&&s.node.attribute?s.node.attribute:t.getAttribute(s.name);if(r===void 0)continue;n.push(r);const o=r.isInterleavedBufferAttribute?r.data:r;i.add(o)}return this.attributes=n,this.vertexBuffers=Array.from(i.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:n,group:i,drawRange:s}=this,r=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),o=this.getIndex(),a=o!==null,l=n.isInstancedBufferGeometry?n.instanceCount:e.count>1?e.count:1;if(l===0)return null;if(r.instanceCount=l,e.isBatchedMesh===!0)return r;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=s.start*u,d=(s.start+s.count)*u;i!==null&&(h=Math.max(h,i.start*u),d=Math.min(d,(i.start+i.count)*u));const f=n.attributes.position;let p=1/0;a?p=o.count:f!=null&&(p=f.count),h=Math.max(h,0),d=Math.min(d,p);const m=d-h;return m<0||m===1/0?null:(r.vertexCount=m,r.firstVertex=h,r)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const n of Object.keys(e.attributes).sort()){const i=e.attributes[n];t+=n+",",i.data&&(t+=i.data.stride+","),i.offset&&(t+=i.offset+","),i.itemSize&&(t+=i.itemSize+","),i.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let n=t.customProgramCacheKey();for(const i of BC(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(i))continue;const s=t[i];let r;if(s!==null){const o=typeof s;o==="number"?r=s!==0?"1":"0":o==="object"?(r="{",s.isTexture&&(r+=s.mapping),r+="}"):r=String(s)}else r=String(s);n+=r+","}return n+=this.clippingContextCacheKey+",",e.geometry&&(n+=this.getGeometryCacheKey()),e.skeleton&&(n+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(n+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(n+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(n+=e._colorsTexture.uuid+",")),e.count>1&&(n+=e.uuid+","),n+=e.receiveShadow+",",Gv(n)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Ar=[];class VC{constructor(e,t,n,i,s,r){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=i,this.bindings=s,this.info=r,this.chainMaps={}}get(e,t,n,i,s,r,o,a){const l=this.getChainMap(a);Ar[0]=e,Ar[1]=t,Ar[2]=r,Ar[3]=s;let u=l.get(Ar);return u===void 0?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,i,s,r,o,a),l.set(Ar,u)):(u.updateClipping(o),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,n,i,s,r,o,a)):u.version=t.version)),u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new xi)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,i,s,r,o,a,l,u,h){const d=this.getChainMap(h),f=new OC(e,t,n,i,s,r,o,a,l,u);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),d.delete(f.getChainArray())},f}}class bs{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const li={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},hs=16,kC=211,zC=212;class GC extends bs{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){const n=this.get(e);if(n.version===void 0)t===li.VERTEX?this.backend.createAttribute(e):t===li.INDEX?this.backend.createIndexAttribute(e):t===li.STORAGE?this.backend.createStorageAttribute(e):t===li.INDIRECT&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{const i=this._getBufferAttribute(e);(n.version<i.version||i.usage===Or)&&(this.backend.updateAttribute(e),n.version=i.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function HC(c){for(let e=c.length-1;e>=0;--e)if(c[e]>=65535)return!0;return!1}function u_(c){return c.index!==null?c.index.version:c.attributes.position.version}function Xm(c){const e=[],t=c.index,n=c.attributes.position;if(t!==null){const s=t.array;for(let r=0,o=s.length;r<o;r+=3){const a=s[r+0],l=s[r+1],u=s[r+2];e.push(a,l,l,u,u,a)}}else{const s=n.array;for(let r=0,o=s.length/3-1;r<o;r+=3){const a=r+0,l=r+1,u=r+2;e.push(a,l,l,u,u,a)}}const i=new(HC(e)?wv:Tv)(e,1);return i.version=u_(c),i}class WC extends bs{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,n=this.get(t);n.initialized=!0,this.info.memory.geometries++;const i=()=>{this.info.memory.geometries--;const s=t.index,r=e.getAttributes();s!==null&&this.attributes.delete(s);for(const a of r)this.attributes.delete(a);const o=this.wireframes.get(t);o!==void 0&&this.attributes.delete(o),t.removeEventListener("dispose",i)};t.addEventListener("dispose",i)}updateAttributes(e){const t=e.getAttributes();for(const s of t)s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute?this.updateAttribute(s,li.STORAGE):this.updateAttribute(s,li.VERTEX);const n=this.getIndex(e);n!==null&&this.updateAttribute(n,li.INDEX);const i=e.geometry.indirect;i!==null&&this.updateAttribute(i,li.INDIRECT)}updateAttribute(e,t){const n=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:n}=e;let i=t.index;if(n.wireframe===!0){const s=this.wireframes;let r=s.get(t);r===void 0?(r=Xm(t),s.set(t,r)):r.version!==u_(t)&&(this.attributes.delete(r),r=Xm(t),s.set(t,r)),i=r}return i}}class qC{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){this[e].timestampCalls===0&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class h_{constructor(e){this.cacheKey=e,this.usedTimes=0}}class $C extends h_{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}}class jC extends h_{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let XC=0;class ah{constructor(e,t,n=null,i=null){this.id=XC++,this.code=e,this.stage=t,this.transforms=n,this.attributes=i,this.usedTimes=0}}class YC extends bs{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:n}=this,i=this.get(e);if(this._needsComputeUpdate(e)){const s=i.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);const r=this.nodes.getForCompute(e);let o=this.programs.compute.get(r.computeShader);o===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),o=new ah(r.computeShader,"compute",r.transforms,r.nodeAttributes),this.programs.compute.set(r.computeShader,o),n.createProgram(o));const a=this._getComputeCacheKey(e,o);let l=this.caches.get(a);l===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),l=this._getComputePipeline(e,o,a,t)),l.usedTimes++,o.usedTimes++,i.version=e.version,i.pipeline=l}return i.pipeline}getForRender(e,t=null){const{backend:n}=this,i=this.get(e);if(this._needsRenderUpdate(e)){const s=i.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);const r=e.getNodeBuilderState();let o=this.programs.vertex.get(r.vertexShader);o===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),o=new ah(r.vertexShader,"vertex"),this.programs.vertex.set(r.vertexShader,o),n.createProgram(o));let a=this.programs.fragment.get(r.fragmentShader);a===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),a=new ah(r.fragmentShader,"fragment"),this.programs.fragment.set(r.fragmentShader,a),n.createProgram(a));const l=this._getRenderCacheKey(e,o,a);let u=this.caches.get(l);u===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),u=this._getRenderPipeline(e,o,a,l,t)):e.pipeline=u,u.usedTimes++,o.usedTimes++,a.usedTimes++,i.pipeline=u}return i.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,i){n=n||this._getComputeCacheKey(e,t);let s=this.caches.get(n);return s===void 0&&(s=new jC(n,t),this.caches.set(n,s),this.backend.createComputePipeline(s,i)),s}_getRenderPipeline(e,t,n,i,s){i=i||this._getRenderCacheKey(e,t,n);let r=this.caches.get(i);return r===void 0&&(r=new $C(i,t,n),this.caches.set(i,r),e.pipeline=r,this.backend.createRenderPipeline(e,s)),r}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class ZC extends bs{constructor(e,t,n,i,s,r){super(),this.backend=e,this.textures=n,this.pipelines=s,this.attributes=i,this.nodes=t,this.info=r,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const n of t){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const n=t.attribute,i=n.isIndirectStorageBufferAttribute?li.INDIRECT:li.STORAGE;this.attributes.update(n,i)}}_update(e,t){const{backend:n}=this;let i=!1,s=!0,r=0,o=0;for(const a of e.bindings)if(!(a.isNodeUniformsGroup&&!this.nodes.updateGroup(a))){if(a.isUniformBuffer)a.update()&&n.updateBinding(a);else if(a.isSampler)a.update();else if(a.isSampledTexture){const l=this.textures.get(a.texture);a.needsBindingsUpdate(l.generation)&&(i=!0);const u=a.update(),h=a.texture;u&&this.textures.updateTexture(h);const d=n.get(h);if(d.externalTexture!==void 0||l.isDefaultTexture?s=!1:(r=r*10+h.id,o+=h.version),n.isWebGPUBackend===!0&&d.texture===void 0&&d.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",a,u,h,a.textureNode.value,i),this.textures.updateTexture(h),i=!0),h.isStorageTexture===!0){const f=this.get(h);a.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(h)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(h),f.needsMipmap=!1)}}}i===!0&&this.backend.updateBindings(e,t,s?r:0,o)}}function KC(c,e){return c.groupOrder!==e.groupOrder?c.groupOrder-e.groupOrder:c.renderOrder!==e.renderOrder?c.renderOrder-e.renderOrder:c.material.id!==e.material.id?c.material.id-e.material.id:c.z!==e.z?c.z-e.z:c.id-e.id}function Ym(c,e){return c.groupOrder!==e.groupOrder?c.groupOrder-e.groupOrder:c.renderOrder!==e.renderOrder?c.renderOrder-e.renderOrder:c.z!==e.z?e.z-c.z:c.id-e.id}function Zm(c){return(c.transmission>0||c.transmissionNode)&&c.side===ks&&c.forceSinglePass===!1}class JC{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,i,s,r,o){let a=this.renderItems[this.renderItemsIndex];return a===void 0?(a={id:e.id,object:e,geometry:t,material:n,groupOrder:i,renderOrder:e.renderOrder,z:s,group:r,clippingContext:o},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=n,a.groupOrder=i,a.renderOrder=e.renderOrder,a.z=s,a.group=r,a.clippingContext=o),this.renderItemsIndex++,a}push(e,t,n,i,s,r,o){const a=this.getNextRenderItem(e,t,n,i,s,r,o);e.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0?(Zm(n)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(e,t,n,i,s,r,o){const a=this.getNextRenderItem(e,t,n,i,s,r,o);n.transparent===!0||n.transmission>0?(Zm(n)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||KC),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||Ym),this.transparent.length>1&&this.transparent.sort(t||Ym)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const n=this.renderItems[e];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null,n.clippingContext=null}}}class QC{constructor(e){this.lighting=e,this.lists=new xi}get(e,t){const n=this.lists,i=[e,t];let s=n.get(i);return s===void 0&&(s=new JC(this.lighting,e,t),n.set(i,s)),s}dispose(){this.lists=new xi}}let eE=0;class tE{constructor(){this.id=eE++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Ke,this.scissor=!1,this.scissorValue=new Ke,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return d_(this)}}function d_(c){const{textures:e,activeCubeFace:t}=c,n=[t];for(const i of e)n.push(i.id);return ef(n)}class nE{constructor(){this.chainMaps={}}get(e,t,n=null){const i=[e,t];let s;if(n===null)s="default";else{const a=n.texture.format;s=`${n.textures.length}:${a}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const r=this.getChainMap(s);let o=r.get(i);return o===void 0&&(o=new tE,r.set(i,o)),n!==null&&(o.sampleCount=n.samples===0?1:n.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new xi)}dispose(){this.chainMaps={}}}const iE=new P;class sE extends bs{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){const n=this.get(e),i=e.samples===0?1:e.samples,s=n.depthTextureMips||(n.depthTextureMips={}),r=e.textures,o=this.getSize(r[0]),a=o.width>>t,l=o.height>>t;let u=e.depthTexture||s[t];const h=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;u===void 0&&h&&(u=new nr,u.format=e.stencilBuffer?Qr:zs,u.type=e.stencilBuffer?ya:Xt,u.image.width=a,u.image.height=l,s[t]=u),(n.width!==o.width||o.height!==n.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=a,u.image.height=l)),n.width=o.width,n.height=o.height,n.textures=r,n.depthTexture=u||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==i&&(d=!0,u&&(u.needsUpdate=!0),n.sampleCount=i);const f={sampleCount:i};for(let p=0;p<r.length;p++){const m=r[p];d&&(m.needsUpdate=!0),this.updateTexture(m,f)}if(u&&this.updateTexture(u,f),n.initialized!==!0){n.initialized=!0;const p=()=>{e.removeEventListener("dispose",p);for(let m=0;m<r.length;m++)this._destroyTexture(r[m]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",p)}}updateTexture(e,t={}){const n=this.get(e);if(n.initialized===!0&&n.version===e.version)return;const i=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(i&&n.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const l=this.renderer.getRenderTarget();l?e.type=l.texture.type:e.type=ms}const{width:r,height:o,depth:a}=this.getSize(e);if(t.width=r,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,r,o):1,i||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),n.generation=e.version;else if(n.initialized!==!0&&s.createSampler(e),e.version>0){const u=e.image;if(u===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(u.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const h=[];for(const d of e.images)h.push(d);t.images=h}else t.image=u;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(s.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version;if(n.initialized!==!0){n.initialized=!0,n.generation=e.version,this.info.memory.textures++;const l=()=>{e.removeEventListener("dispose",l),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",l)}n.version=e.version}getSize(e,t=iE){let n=e.images?e.images[0]:e.image;return n?(n.image!==void 0&&(n=n.image),t.width=n.width||1,t.height=n.height||1,t.depth=e.isCubeTexture?6:n.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let i;return e.isCompressedTexture?e.mipmaps?i=e.mipmaps.length:i=1:i=Math.floor(Math.log2(Math.max(t,n)))+1,i}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===ga||t===va||t===Xs||t===Kr}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class Xf extends He{constructor(e,t,n,i=1){super(e,t,n),this.a=i}set(e,t,n,i=1){return this.a=i,super.set(e,t,n)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class f_ extends it{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const rE=(c,e)=>K(new f_(c,e));class oE extends Ee{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const n=new jo(t);return this._currentCond=Yt(e,n),this.add(this._currentCond)}ElseIf(e,t){const n=new jo(t),i=Yt(e,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(e){return this._currentCond.elseNode=new jo(e),this}build(e,...t){const n=of();la(this);for(const i of this.nodes)i.build(e,"void");return la(n),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Xc=q(oE);class aE extends Ee{static get type(){return"StructTypeNode"}constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class p_ extends Ee{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}setup(e){super.setup(e);const t=this.members,n=[];for(let i=0;i<t.length;i++)n.push(t[i].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new aE(n)).name}generate(e,t){const n=e.getOutputStructName(),i=this.members,s=n!==""?n+".":"";for(let r=0;r<i.length;r++){const o=i[r].build(e,t);e.addLineFlowCode(`${s}m${r} = ${o}`,this)}return n}}const cE=q(p_);function m_(c,e){for(let t=0;t<c.length;t++)if(c[t].name===e)return t;return-1}class lE extends p_{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return g_(t)}setup(e){const t=this.outputNodes,n=e.renderer.getRenderTarget(),i=[],s=n.textures;for(const r in t){const o=m_(s,r);i[o]=Ae(t[r])}return this.members=i,super.setup(e)}}const g_=q(lE),uE=F(([c])=>{const e=c.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),wd=(c,e)=>Jn(Ie(4,c.mul(Ye(1,c))),e),hE=(c,e)=>c.lessThan(.5)?wd(c.mul(2),e).div(2):Ye(1,wd(Ie(Ye(1,c),2),e).div(2)),dE=(c,e,t)=>Jn(ti(Jn(c,e),Rt(Jn(c,e),Jn(Ye(1,c),t))),1/e),fE=(c,e)=>En(ml.mul(e.mul(c).sub(1))).div(ml.mul(e.mul(c).sub(1))),ai=F(([c])=>c.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),v_=F(([c])=>R(ai(c.z.add(ai(c.y.mul(1)))),ai(c.z.add(ai(c.x.mul(1)))),ai(c.y.add(ai(c.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),pE=F(([c,e,t])=>{const n=R(c).toVar(),i=b(1.4).toVar(),s=b(0).toVar(),r=R(n).toVar();return nt({start:b(0),end:b(3),type:"float",condition:"<="},()=>{const o=R(v_(r.mul(2))).toVar();n.addAssign(o.add(t.mul(b(.1).mul(e)))),r.mulAssign(1.8),i.mulAssign(1.5),n.mulAssign(1.2);const a=b(ai(n.z.add(ai(n.x.add(ai(n.y)))))).toVar();s.addAssign(a.div(i)),r.addAssign(.14)}),s}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]});class mE extends Ee{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let n=this._candidateFnCall;if(n===null){let i=null,s=-1;for(const r of this.functionNodes){const a=r.shaderNode.layout;if(a===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const l=a.inputs;if(t.length===l.length){let u=0;for(let h=0;h<t.length;h++){const d=t[h],f=l[h];d.getNodeType(e)===f.type?u++:u=0}u>s&&(i=r,s=u)}}this._candidateFnCall=n=i(...t)}return n}}const gE=q(mE),Jt=c=>(...e)=>gE(c,...e),ar=Ne(0).setGroup(Pe).onRenderUpdate(c=>c.time),y_=Ne(0).setGroup(Pe).onRenderUpdate(c=>c.deltaTime),vE=Ne(0,"uint").setGroup(Pe).onRenderUpdate(c=>c.frameId),yE=(c=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),ar.mul(c)),xE=(c=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),ar.mul(c)),_E=(c=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),y_.mul(c)),SE=(c=ar)=>c.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),bE=(c=ar)=>c.fract().round(),TE=(c=ar)=>c.add(.5).fract().mul(2).sub(1).abs(),wE=(c=ar)=>c.fract(),ME=F(([c,e,t=Q(.5)])=>jf(c.sub(t),e).add(t)),AE=F(([c,e,t=Q(.5)])=>{const n=c.sub(t),i=n.dot(n),r=i.mul(i).mul(e);return c.add(n.mul(r))}),NE=F(({position:c=null,horizontal:e=!0,vertical:t=!1})=>{let n;c!==null?(n=kn.toVar(),n[3][0]=c.x,n[3][1]=c.y,n[3][2]=c.z):n=kn;const i=bn.mul(n);return ca(e)&&(i[0][0]=kn[0].length(),i[0][1]=0,i[0][2]=0),ca(t)&&(i[1][0]=0,i[1][1]=kn[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,xs.mul(i).mul(St)}),CE=F(([c=null])=>{const e=yl();return yl(Of(c)).sub(e).lessThan(0).select(yi,c)});class EE extends Ee{static get type(){return"SpriteSheetUVNode"}constructor(e,t=xt(),n=b(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=n}setup(){const{frameNode:e,uvNode:t,countNode:n}=this,{width:i,height:s}=n,r=e.mod(i.mul(s)).floor(),o=r.mod(i),a=s.sub(r.add(1).div(i).ceil()),l=n.reciprocal(),u=Q(o,a);return t.add(u).mul(l)}}const RE=q(EE);class PE extends Ee{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,n=null,i=b(1),s=St,r=_n){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=n,this.scaleNode=i,this.positionNode=s,this.normalNode=r}setup(){const{textureXNode:e,textureYNode:t,textureZNode:n,scaleNode:i,positionNode:s,normalNode:r}=this;let o=r.abs().normalize();o=o.div(o.dot(R(1)));const a=s.yz.mul(i),l=s.zx.mul(i),u=s.xy.mul(i),h=e.value,d=t!==null?t.value:h,f=n!==null?n.value:h,p=qe(h,a).mul(o.x),m=qe(d,l).mul(o.y),g=qe(f,u).mul(o.z);return Rt(p,m,g)}}const x_=q(PE),UE=(...c)=>x_(...c),Nr=new os,Es=new P,Cr=new P,ch=new P,Po=new $e,Nc=new P(0,0,-1),si=new Ke,Uo=new P,Cc=new P,Do=new Ke,Ec=new he,_l=new _s,DE=yi.flipX();_l.depthTexture=new nr(1,1);let lh=!1;class Yf extends gi{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||_l.texture,DE),this._reflectorBaseNode=e.reflector||new LE(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=K(new Yf({defaultTexture:_l.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}}class LE extends Ee{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:n=new Et,resolution:i=1,generateMipmaps:s=!1,bounces:r=!0,depth:o=!1}=t;this.textureNode=e,this.target=n,this.resolution=i,this.generateMipmaps=s,this.bounces=r,this.depth=o,this.updateBeforeType=r?Fe.RENDER:Fe.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const n=this.resolution;t.getDrawingBufferSize(Ec),e.setSize(Math.round(Ec.width*n),Math.round(Ec.height*n))}setup(e){return this._updateResolution(_l,e.renderer),super.setup(e)}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new _s(0,0,{type:Qn}),this.generateMipmaps===!0&&(t.texture.minFilter=eb,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new nr),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&lh)return;lh=!0;const{scene:t,camera:n,renderer:i,material:s}=e,{target:r}=this,o=this.getVirtualCamera(n),a=this.getRenderTarget(o);if(i.getDrawingBufferSize(Ec),this._updateResolution(a,i),Cr.setFromMatrixPosition(r.matrixWorld),ch.setFromMatrixPosition(n.matrixWorld),Po.extractRotation(r.matrixWorld),Es.set(0,0,1),Es.applyMatrix4(Po),Uo.subVectors(Cr,ch),Uo.dot(Es)>0)return;Uo.reflect(Es).negate(),Uo.add(Cr),Po.extractRotation(n.matrixWorld),Nc.set(0,0,-1),Nc.applyMatrix4(Po),Nc.add(ch),Cc.subVectors(Cr,Nc),Cc.reflect(Es).negate(),Cc.add(Cr),o.coordinateSystem=n.coordinateSystem,o.position.copy(Uo),o.up.set(0,1,0),o.up.applyMatrix4(Po),o.up.reflect(Es),o.lookAt(Cc),o.near=n.near,o.far=n.far,o.updateMatrixWorld(),o.projectionMatrix.copy(n.projectionMatrix),Nr.setFromNormalAndCoplanarPoint(Es,Cr),Nr.applyMatrix4(o.matrixWorldInverse),si.set(Nr.normal.x,Nr.normal.y,Nr.normal.z,Nr.constant);const l=o.projectionMatrix;Do.x=(Math.sign(si.x)+l.elements[8])/l.elements[0],Do.y=(Math.sign(si.y)+l.elements[9])/l.elements[5],Do.z=-1,Do.w=(1+l.elements[10])/l.elements[14],si.multiplyScalar(1/si.dot(Do));const u=0;l.elements[2]=si.x,l.elements[6]=si.y,l.elements[10]=i.coordinateSystem===zi?si.z-u:si.z+1-u,l.elements[14]=si.w,this.textureNode.value=a.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=a.depthTexture),s.visible=!1;const h=i.getRenderTarget(),d=i.getMRT();i.setMRT(null),i.setRenderTarget(a),i.render(t,o),i.setMRT(d),i.setRenderTarget(h),s.visible=!0,lh=!1}}const FE=c=>K(new Yf(c)),uh=new Qd(-1,1,1,-1,0,1);class IE extends Wn{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Zt([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Zt(t,2))}}const BE=new IE;class Zf extends Un{constructor(e=null){super(BE,e),this.camera=uh,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,uh)}render(e){e.render(this,uh)}}const OE=new he;class VE extends gi{static get type(){return"RTTNode"}constructor(e,t=null,n=null,i={type:Qn}){const s=new _s(t,n,i);super(s.texture,xt()),this.node=e,this.width=t,this.height=n,this.renderTarget=s,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new Zf(new Mt),this.updateBeforeType=Fe.RENDER}get autoSize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const n=e*this.pixelRatio,i=t*this.pixelRatio;this.renderTarget.setSize(n,i),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoSize===!0){this.pixelRatio=e.getPixelRatio();const n=e.getSize(OE);this.setSize(n.width,n.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new gi(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const __=(c,...e)=>K(new VE(K(c),...e)),kE=(c,...e)=>c.isTextureNode?c:c.isPassNode?c.getTextureNode():__(c,...e),Fr=F(([c,e,t],n)=>{let i;n.renderer.coordinateSystem===zi?(c=Q(c.x,c.y.oneMinus()).mul(2).sub(1),i=Ae(R(c,e),1)):i=Ae(R(c.x,c.y.oneMinus(),e).mul(2).sub(1),1);const s=Ae(t.mul(i));return s.xyz.div(s.w)}),zE=F(([c,e])=>{const t=e.mul(Ae(c,1)),n=t.xy.div(t.w).mul(.5).add(.5).toVar();return Q(n.x,n.y.oneMinus())}),GE=F(([c,e,t])=>{const n=qs(bt(e)),i=Vt(c.mul(n)).toVar(),s=bt(e,i).toVar(),r=bt(e,i.sub(Vt(2,0))).toVar(),o=bt(e,i.sub(Vt(1,0))).toVar(),a=bt(e,i.add(Vt(1,0))).toVar(),l=bt(e,i.add(Vt(2,0))).toVar(),u=bt(e,i.add(Vt(0,2))).toVar(),h=bt(e,i.add(Vt(0,1))).toVar(),d=bt(e,i.sub(Vt(0,1))).toVar(),f=bt(e,i.sub(Vt(0,2))).toVar(),p=ut(Ye(b(2).mul(o).sub(r),s)).toVar(),m=ut(Ye(b(2).mul(a).sub(l),s)).toVar(),g=ut(Ye(b(2).mul(h).sub(u),s)).toVar(),y=ut(Ye(b(2).mul(d).sub(f),s)).toVar(),_=Fr(c,s,t).toVar(),x=p.lessThan(m).select(_.sub(Fr(c.sub(Q(b(1).div(n.x),0)),o,t)),_.negate().add(Fr(c.add(Q(b(1).div(n.x),0)),a,t))),S=g.lessThan(y).select(_.sub(Fr(c.add(Q(0,b(1).div(n.y))),h,t)),_.negate().add(Fr(c.sub(Q(0,b(1).div(n.y))),d,t)));return Hi(Ol(x,S))});class HE extends Nl{constructor(e,t,n=Float32Array){ArrayBuffer.isView(e)===!1&&(e=new n(e*t)),super(e,t),this.isStorageInstancedBufferAttribute=!0}}class WE extends Pn{constructor(e,t,n=Float32Array){ArrayBuffer.isView(e)===!1&&(e=new n(e*t)),super(e,t),this.isStorageBufferAttribute=!0}}class qE extends rr{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let n;const i=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&i!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?n=e.generatePBO(this):n=this.node.build(e):n=super.generate(e),i!==!0){const s=this.getNodeType(e);n=e.format(n,s,t)}return n}}const $E=q(qE);class jE extends Pf{static get type(){return"StorageBufferNode"}constructor(e,t=null,n=0){t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t=qv(e.itemSize),n=e.count),super(e,t,n),this.isStorageBufferNode=!0,this.access=nn.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this.bufferCount=n,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return $E(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(nn.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=Na(this.value),this._varying=Sn(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:n}=this.getAttributeData(),i=n.build(e);return e.registerTransform(i,t),i}}const Yl=(c,e,t)=>K(new jE(c,e,t)),XE=(c,e,t)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),Yl(c,e,t).setPBO(!0)),YE=(c,e="float")=>{const t=$v(e),n=new WE(c,t);return Yl(n,e,c)},ZE=(c,e="float")=>{const t=$v(e),n=new HE(c,t);return Yl(n,e,c)};class KE extends Fy{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),n=e.hasGeometryAttribute(t);let i;return n===!0?i=super.generate(e):i=e.generateConst(this.nodeType,new Ke(1,1,1,1)),i}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const JE=(...c)=>K(new KE(...c));class QE extends Ee{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const eR=ue(QE),Lo=new ei,hh=new $e;class yn extends Ee{static get type(){return"SceneNode"}constructor(e=yn.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=this.scene!==null?this.scene:e.scene;let i;return t===yn.BACKGROUND_BLURRINESS?i=rt("backgroundBlurriness","float",n):t===yn.BACKGROUND_INTENSITY?i=rt("backgroundIntensity","float",n):t===yn.BACKGROUND_ROTATION?i=Ne("mat4").label("backgroundRotation").setGroup(Pe).onRenderUpdate(()=>{const s=n.background;return s!==null&&s.isTexture&&s.mapping!==Fd?(Lo.copy(n.backgroundRotation),Lo.x*=-1,Lo.y*=-1,Lo.z*=-1,hh.makeRotationFromEuler(Lo)):hh.identity(),hh}):console.error("THREE.SceneNode: Unknown scope:",t),i}}yn.BACKGROUND_BLURRINESS="backgroundBlurriness";yn.BACKGROUND_INTENSITY="backgroundIntensity";yn.BACKGROUND_ROTATION="backgroundRotation";const S_=ue(yn,yn.BACKGROUND_BLURRINESS),Md=ue(yn,yn.BACKGROUND_INTENSITY),b_=ue(yn,yn.BACKGROUND_ROTATION);class tR extends gi{static get type(){return"StorageTextureNode"}constructor(e,t,n=null){super(e,t),this.storeNode=n,this.isStorageTextureNode=!0,this.access=nn.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);t.storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let n;return this.storeNode!==null?n=this.generateStore(e):n=super.generate(e,t),n}toReadWrite(){return this.setAccess(nn.READ_WRITE)}toReadOnly(){return this.setAccess(nn.READ_ONLY)}toWriteOnly(){return this.setAccess(nn.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:n,storeNode:i}=t,s=super.generate(e,"property"),r=n.build(e,"uvec2"),o=i.build(e,"vec4"),a=e.generateTextureStore(e,s,r,o);e.addLineFlowCode(a,this)}}const T_=q(tR),nR=(c,e,t)=>{const n=T_(c,e,t);return t!==null&&n.append(),n};class iR extends Hl{static get type(){return"UserDataNode"}constructor(e,t,n=null){super(e,t,n),this.userData=n}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}}const sR=(c,e,t)=>K(new iR(c,e,t)),Km=new WeakMap;class rR extends At{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=Fe.OBJECT,this.updateAfterType=Fe.OBJECT,this.previousModelWorldMatrix=Ne(new $e),this.previousProjectionMatrix=Ne(new $e).setGroup(Pe),this.previousCameraViewMatrix=Ne(new $e)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:n}){const i=Jm(n);this.previousModelWorldMatrix.value.copy(i);const s=w_(t);s.frameId!==e&&(s.frameId=e,s.previousProjectionMatrix===void 0?(s.previousProjectionMatrix=new $e,s.previousCameraViewMatrix=new $e,s.currentProjectionMatrix=new $e,s.currentCameraViewMatrix=new $e,s.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),s.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(s.previousProjectionMatrix.copy(s.currentProjectionMatrix),s.previousCameraViewMatrix.copy(s.currentCameraViewMatrix)),s.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),s.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(s.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(s.previousCameraViewMatrix))}updateAfter({object:e}){Jm(e).copy(e.matrixWorld)}setup(){const e=this.projectionMatrix===null?xs:Ne(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),n=e.mul(or).mul(St),i=this.previousProjectionMatrix.mul(t).mul(vl),s=n.xy.div(n.w),r=i.xy.div(i.w);return Ye(s,r)}}function w_(c){let e=Km.get(c);return e===void 0&&(e={},Km.set(c,e)),e}function Jm(c,e=0){const t=w_(c);let n=t[e];return n===void 0&&(t[e]=n=new $e),n}const oR=ue(rR),M_=F(([c,e])=>xn(1,c.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),A_=F(([c,e])=>xn(c.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),N_=F(([c,e])=>c.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),C_=F(([c,e])=>tt(c.mul(2).mul(e),c.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),Bl(.5,c))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),aR=F(([c,e])=>{const t=e.a.add(c.a.mul(e.a.oneMinus()));return Ae(e.rgb.mul(e.a).add(c.rgb.mul(c.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),cR=(...c)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),M_(c)),lR=(...c)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),A_(c)),uR=(...c)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),N_(c)),hR=(...c)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),C_(c)),dR=F(([c])=>Zl(c.rgb)),fR=F(([c,e=b(1)])=>e.mix(Zl(c.rgb),c.rgb)),pR=F(([c,e=b(1)])=>{const t=Rt(c.r,c.g,c.b).div(3),n=c.r.max(c.g.max(c.b)),i=n.sub(t).mul(e).mul(-3);return tt(c.rgb,n,i)}),mR=F(([c,e=b(1)])=>{const t=R(.57735,.57735,.57735),n=e.cos();return R(c.rgb.mul(n).add(t.cross(c.rgb).mul(e.sin()).add(t.mul(Ss(t,c.rgb).mul(n.oneMinus())))))}),Zl=(c,e=R(Nt.getLuminanceCoefficients(new P)))=>Ss(c,e),gR=(c,e)=>tt(R(0),c,Zl(c).sub(e).max(0)),vR=F(([c,e=R(1),t=R(0),n=R(1),i=b(1),s=R(Nt.getLuminanceCoefficients(new P,Bi))])=>{const r=c.rgb.dot(R(s)),o=wt(c.rgb.mul(e).add(t),0).toVar(),a=o.pow(n).toVar();return Ve(o.r.greaterThan(0),()=>{o.r.assign(a.r)}),Ve(o.g.greaterThan(0),()=>{o.g.assign(a.g)}),Ve(o.b.greaterThan(0),()=>{o.b.assign(a.b)}),o.assign(r.add(o.sub(r).mul(i))),Ae(o.rgb,c.a)});class yR extends At{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const xR=q(yR),_R=new he;class E_ extends gi{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Qm extends E_{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class _i extends At{static get type(){return"PassNode"}constructor(e,t,n,i={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const s=new nr;s.isRenderTargetTexture=!0,s.name="depth";const r=new _s(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Qn,...i});r.texture.name="output",r.depthTexture=s,this.renderTarget=r,this.updateBeforeType=Fe.FRAME,this._textures={output:r.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Ne(0),this._cameraFar=Ne(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const n=this._textures[e],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=K(new Qm(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=K(new Qm(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[e]=t=Vf(this.getTextureNode(e),n,i)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const n=this._cameraNear,i=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=Yr(s,n,i)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===_i.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n,camera:i}=this;this._pixelRatio=t.getPixelRatio();const s=t.getSize(_R);this.setSize(s.width,s.height);const r=t.getRenderTarget(),o=t.getMRT();this._cameraNear.value=i.near,this._cameraFar.value=i.far;for(const a in this._previousTextures)this.toggleTexture(a);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,i),t.setRenderTarget(r),t.setMRT(o)}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget.setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}_i.COLOR="color";_i.DEPTH="depth";const SR=(c,e,t)=>K(new _i(_i.COLOR,c,e,t)),bR=(c,e)=>K(new E_(c,e)),TR=(c,e)=>K(new _i(_i.DEPTH,c,e));class wR extends _i{static get type(){return"ToonOutlinePassNode"}constructor(e,t,n,i,s){super(_i.COLOR,e,t),this.colorNode=n,this.thicknessNode=i,this.alphaNode=s,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,n=t.getRenderObjectFunction();t.setRenderObjectFunction((i,s,r,o,a,l,u,h)=>{if((a.isMeshToonMaterial||a.isMeshToonNodeMaterial)&&a.wireframe===!1){const d=this._getOutlineMaterial(a);t.renderObject(i,s,r,o,d,l,u,h)}t.renderObject(i,s,r,o,a,l,u,h)}),super.updateBefore(e),t.setRenderObjectFunction(n)}_createMaterial(){const e=new Mt;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=Gn;const t=_n.negate(),n=xs.mul(or),i=b(1),s=n.mul(Ae(St,1)),r=n.mul(Ae(St.add(t),1)),o=Hi(s.sub(r));return e.vertexNode=s.add(o.mul(this.thicknessNode).mul(s.w).mul(i)),e.colorNode=Ae(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const MR=(c,e,t=new He(0,0,0),n=.003,i=1)=>K(new wR(c,e,K(t),K(n),K(i))),R_=F(([c,e])=>c.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),P_=F(([c,e])=>(c=c.mul(e),c.div(c.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),U_=F(([c,e])=>{c=c.mul(e),c=c.sub(.004).max(0);const t=c.mul(c.mul(6.2).add(.5)),n=c.mul(c.mul(6.2).add(1.7)).add(.06);return t.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),AR=F(([c])=>{const e=c.mul(c.add(.0245786)).sub(90537e-9),t=c.mul(c.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),D_=F(([c,e])=>{const t=on(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=on(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return c=c.mul(e).div(.6),c=t.mul(c),c=AR(c),c=n.mul(c),c.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),NR=on(R(1.6605,-.1246,-.0182),R(-.5876,1.1329,-.1006),R(-.0728,-.0083,1.1187)),CR=on(R(.6274,.0691,.0164),R(.3293,.9195,.088),R(.0433,.0113,.8956)),ER=F(([c])=>{const e=R(c).toVar(),t=R(e.mul(e)).toVar(),n=R(t.mul(t)).toVar();return b(15.5).mul(n.mul(t)).sub(Ie(40.14,n.mul(e))).add(Ie(31.96,n).sub(Ie(6.868,t.mul(e))).add(Ie(.4298,t).add(Ie(.1191,e).sub(.00232))))}),L_=F(([c,e])=>{const t=R(c).toVar(),n=on(R(.856627153315983,.137318972929847,.11189821299995),R(.0951212405381588,.761241990602591,.0767994186031903),R(.0482516061458583,.101439036467562,.811302368396859)),i=on(R(1.1271005818144368,-.1413297634984383,-.14132976349843826),R(-.11060664309660323,1.157823702216272,-.11060664309660294),R(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=b(-12.47393),r=b(4.026069);return t.mulAssign(e),t.assign(CR.mul(t)),t.assign(n.mul(t)),t.assign(wt(t,1e-10)),t.assign(hi(t)),t.assign(t.sub(s).div(r.sub(s))),t.assign(pi(t,0,1)),t.assign(ER(t)),t.assign(i.mul(t)),t.assign(Jn(wt(R(0),t),R(2.2))),t.assign(NR.mul(t)),t.assign(pi(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),F_=F(([c,e])=>{const t=b(.76),n=b(.15);c=c.mul(e);const i=xn(c.r,xn(c.g,c.b)),s=Yt(i.lessThan(.08),i.sub(Ie(6.25,i.mul(i))),.04);c.subAssign(s);const r=wt(c.r,wt(c.g,c.b));Ve(r.lessThan(t),()=>c);const o=Ye(1,t),a=Ye(1,o.mul(o).div(r.add(o.sub(t))));c.mulAssign(a.div(r));const l=Ye(1,ti(1,n.mul(r.sub(a)).add(1)));return tt(c,R(a),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Lt extends Ee{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=n,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const i of t)i.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Kl=q(Lt),RR=(c,e)=>Kl(c,e,"js"),PR=(c,e)=>Kl(c,e,"wgsl"),UR=(c,e)=>Kl(c,e,"glsl");class I_ extends Lt{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return n===void 0&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),i=n.name,s=n.type,r=e.getCodeFromNode(this,s);i!==""&&(r.name=i);const o=e.getPropertyName(r),a=this.getNodeFunction(e).getCode(o);return r.code=a+`
`,t==="property"?o:e.format(`${o}()`,s,t)}}const B_=(c,e=[],t="")=>{for(let s=0;s<e.length;s++){const r=e[s];typeof r=="function"&&(e[s]=r.functionNode)}const n=K(new I_(c,e,t)),i=(...s)=>n.call(...s);return i.functionNode=n,i},DR=(c,e)=>B_(c,e,"glsl"),LR=(c,e)=>B_(c,e,"wgsl");class FR extends Ee{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new er,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:b()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=Xv(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=Yv(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const Yc=q(FR);class O_ extends Map{get(e,t=null,...n){if(this.has(e))return super.get(e);if(t!==null){const i=t(...n);return this.set(e,i),i}}}class IR{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const Zc=new O_;class BR extends Ee{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new O_,this._output=Yc(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const n=this._outputs;return n[e]===void 0?n[e]=Yc(t):n[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const n=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),n[e]=t,n[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),n[e]=t,n[e].events.addEventListener("refresh",this.onRefresh)):n[e]===void 0?(n[e]=Yc(t),n[e].events.addEventListener("refresh",this.onRefresh)):n[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const i=this.getObject()[e];if(typeof i=="function")return i(...t)}async callAsync(e,...t){const i=this.getObject()[e];if(typeof i=="function")return i.constructor.name==="AsyncFunction"?await i(...t):i(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;const e=()=>this.refresh(),t=(l,u)=>this.setOutput(l,u),n=new IR(this),i=Zc.get("THREE"),s=Zc.get("TSL"),r=this.getMethod(this.codeNode),o=[n,this._local,Zc,e,t,i,s];this._object=r(...o);const a=this._object.layout;if(a&&(a.cache===!1&&this._local.clear(),this._output.outputType=a.outputType||null,Array.isArray(a.elements)))for(const l of a.elements){const u=l.id||l.name;l.inputType&&(this.getParameter(u)===void 0&&this.setParameter(u,null),this.getParameter(u).inputType=l.inputType),l.outputType&&(this.getOutput(u)===void 0&&this.setOutput(u,null),this.getOutput(u).outputType=l.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let n=this.parameters[t];n.isScriptableNode&&(n=n.getDefaultOutput()),n.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:b()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;const e=["parameters","local","global","refresh","setOutput","THREE","TSL"],n=["layout","init","main","dispose"].join(", "),i="var "+n+`; var output = {};
`,s=`
return { ...output, `+n+" };",r=i+this.codeNode.code+s;return this._method=new Function(...e,r),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[Gv(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const n in this.parameters)t.push(this.parameters[n].getCacheKey(e));return ef(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const OR=q(BR);class Kf extends Ee{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const n=e.context.getViewZ;return n!==void 0&&(t=n(this)),(t||It.z).negate()}setup(){return this.factorNode}}const VR=q(Kf);class kR extends Kf{static get type(){return"FogRangeNode"}constructor(e,t,n){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=n}setup(e){const t=this.getViewZNode(e);return Wi(this.nearNode,this.farNode,t)}}const V_=q(kR);class zR extends Kf{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),n=this.densityNode;return n.mul(n,t,t).negate().exp().oneMinus()}}const k_=q(zR);let Rs=null,Ps=null;class GR extends Ee{static get type(){return"RangeNode"}constructor(e=b(),t=b()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(fs(this.minNode.value)),n=e.getTypeLength(fs(this.maxNode.value));return t>n?t:n}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let n=null;if(t.count>1){const i=this.minNode.value,s=this.maxNode.value,r=e.getTypeLength(fs(i)),o=e.getTypeLength(fs(s));Rs=Rs||new Ke,Ps=Ps||new Ke,Rs.setScalar(0),Ps.setScalar(0),r===1?Rs.setScalar(i):i.isColor?Rs.set(i.r,i.g,i.b):Rs.set(i.x,i.y,i.z||0,i.w||0),o===1?Ps.setScalar(s):s.isColor?Ps.set(s.r,s.g,s.b):Ps.set(s.x,s.y,s.z||0,s.w||0);const a=4,l=a*t.count,u=new Float32Array(l);for(let d=0;d<l;d++){const f=d%a,p=Rs.getComponent(f),m=Ps.getComponent(f);u[d]=xv.lerp(p,m,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)n=Ea(u,"vec4",t.count).element(Da).convert(h);else{const d=new Nl(u,4);e.geometry.setAttribute("__range"+this.id,d),n=gl(d).convert(h)}}else n=b(0);return n}}const HR=q(GR);class WR extends Ee{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){const n=this.getBuiltinName(e),i=this.getNodeType(e);return e.shaderStage==="compute"?e.format(n,i,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${n} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(i))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const Jl=(c,e)=>K(new WR(c,e)),qR=Jl("numWorkgroups","uvec3"),$R=Jl("workgroupId","uvec3"),jR=Jl("localId","uvec3"),XR=Jl("subgroupSize","uint");class YR extends Ee{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}const Jf=q(YR),ZR=()=>Jf("workgroup").append(),KR=()=>Jf("storage").append(),JR=()=>Jf("texture").append();class QR extends rr{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let n;const i=e.context.assign;if(n=super.generate(e),i!==!0){const s=this.getNodeType(e);n=e.format(n,s,t)}return n}}class e3 extends Ee{constructor(e,t,n=0){super(t),this.bufferType=t,this.bufferCount=n,this.isWorkgroupInfoNode=!0,this.scope=e}label(e){return this.name=e,this}getHash(){return this.uuid}setScope(e){return this.scope=e,this}getInputType(){return`${this.scope}Array`}element(e){return K(new QR(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const t3=(c,e)=>K(new e3("Workgroup",c,e));class Wt extends At{static get type(){return"AtomicFunctionNode"}constructor(e,t,n,i=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.storeNode=i}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,n=this.getNodeType(e),i=this.getInputType(e),s=this.pointerNode,r=this.valueNode,o=[];o.push(`&${s.build(e,i)}`),o.push(r.build(e,i));const a=`${e.getMethod(t,n)}( ${o.join(", ")} )`;if(this.storeNode!==null){const l=this.storeNode.build(e,i);e.addLineFlowCode(`${l} = ${a}`,this)}else e.addLineFlowCode(a,this)}}Wt.ATOMIC_LOAD="atomicLoad";Wt.ATOMIC_STORE="atomicStore";Wt.ATOMIC_ADD="atomicAdd";Wt.ATOMIC_SUB="atomicSub";Wt.ATOMIC_MAX="atomicMax";Wt.ATOMIC_MIN="atomicMin";Wt.ATOMIC_AND="atomicAnd";Wt.ATOMIC_OR="atomicOr";Wt.ATOMIC_XOR="atomicXor";const n3=q(Wt),$i=(c,e,t,n)=>{const i=n3(c,e,t,n);return i.append(),i},i3=(c,e,t=null)=>$i(Wt.ATOMIC_STORE,c,e,t),s3=(c,e,t=null)=>$i(Wt.ATOMIC_ADD,c,e,t),r3=(c,e,t=null)=>$i(Wt.ATOMIC_SUB,c,e,t),o3=(c,e,t=null)=>$i(Wt.ATOMIC_MAX,c,e,t),a3=(c,e,t=null)=>$i(Wt.ATOMIC_MIN,c,e,t),c3=(c,e,t=null)=>$i(Wt.ATOMIC_AND,c,e,t),l3=(c,e,t=null)=>$i(Wt.ATOMIC_OR,c,e,t),u3=(c,e,t=null)=>$i(Wt.ATOMIC_XOR,c,e,t);let Rc;function Fa(c){Rc=Rc||new WeakMap;let e=Rc.get(c);return e===void 0&&Rc.set(c,e={}),e}function Qf(c){const e=Fa(c);return e.shadowMatrix||(e.shadowMatrix=Ne("mat4").setGroup(Pe).onRenderUpdate(()=>(c.shadow.updateMatrices(c),c.shadow.matrix)))}function z_(c){const e=Fa(c);if(e.projectionUV===void 0){const t=Qf(c).mul(ki);e.projectionUV=t.xyz.div(t.w)}return e.projectionUV}function ep(c){const e=Fa(c);return e.position||(e.position=Ne(new P).setGroup(Pe).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(c.matrixWorld)))}function G_(c){const e=Fa(c);return e.targetPosition||(e.targetPosition=Ne(new P).setGroup(Pe).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(c.target.matrixWorld)))}function Ql(c){const e=Fa(c);return e.viewPosition||(e.viewPosition=Ne(new P).setGroup(Pe).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new P,n.value.setFromMatrixPosition(c.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}const tp=c=>bn.transformDirection(ep(c).sub(G_(c))),h3=c=>c.sort((e,t)=>e.id-t.id),d3=(c,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===c)return t;return null},dh=new WeakMap;class np extends Ee{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=R().toVar("totalDiffuse"),this.totalSpecularNode=R().toVar("totalSpecular"),this.outgoingLightNode=R().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const n of this._lightNodes)t.push(n.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const n of t.nodes)n.build(e)}setupLightsNode(e){const t=[],n=this._lightNodes,i=h3(this._lights),s=e.renderer.library;for(const r of i)if(r.isNode)t.push(K(r));else{let o=null;if(n!==null&&(o=d3(r.id,n)),o===null){const a=s.getLightNodeClass(r.constructor);if(a===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${r.constructor.name}`);continue}let l=null;dh.has(r)?l=dh.get(r):(l=K(new a(r)),dh.set(r,l)),t.push(l)}}this._lightNodes=t}setupLights(e,t){for(const n of t)n.build(e)}setup(e){this._lightNodes===null&&this.setupLightsNode(e);const t=e.context,n=t.lightingModel;let i=this.outgoingLightNode;if(n){const{_lightNodes:s,totalDiffuseNode:r,totalSpecularNode:o}=this;t.outgoingLight=i;const a=e.addStack(),l=e.getDataFromNode(this);l.nodes=a.nodes,n.start(t,a,e),this.setupLights(e,s),n.indirect(t,a,e);const{backdrop:u,backdropAlpha:h}=t,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:m}=t.reflectedLight;let g=d.add(p);u!==null&&(h!==null?g=R(h.mix(g,u)):g=R(u),t.material.transparent=!0),r.assign(g),o.assign(f.add(m)),i.assign(r.add(o)),n.finish(t,a,e),i=i.bypass(e.removeStack())}return i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const f3=(c=[])=>K(new np).setLights(c),eg=new WeakMap,tg=R().toVar("shadowWorldPosition"),p3=F(([c,e,t])=>{let n=ki.sub(c).length();return n=n.sub(e).div(t.sub(e)),n=n.saturate(),n}),m3=c=>{const e=c.shadow.camera,t=rt("near","float",e).setGroup(Pe),n=rt("far","float",e).setGroup(Pe),i=Oy(c);return p3(i,t,n)},g3=c=>{let e=eg.get(c);if(e===void 0){const t=c.isPointLight?m3(c):null;e=new Mt,e.colorNode=Ae(0,0,0,1),e.depthNode=t,e.isShadowNodeMaterial=!0,e.blending=js,e.name="ShadowMaterial",eg.set(c,e)}return e},H_=F(({depthTexture:c,shadowCoord:e})=>qe(c,e.xy).compare(e.z)),W_=F(({depthTexture:c,shadowCoord:e,shadow:t})=>{const n=(m,g)=>qe(c,m).compare(g),i=rt("mapSize","vec2",t).setGroup(Pe),s=rt("radius","float",t).setGroup(Pe),r=Q(1).div(i),o=r.x.negate().mul(s),a=r.y.negate().mul(s),l=r.x.mul(s),u=r.y.mul(s),h=o.div(2),d=a.div(2),f=l.div(2),p=u.div(2);return Rt(n(e.xy.add(Q(o,a)),e.z),n(e.xy.add(Q(0,a)),e.z),n(e.xy.add(Q(l,a)),e.z),n(e.xy.add(Q(h,d)),e.z),n(e.xy.add(Q(0,d)),e.z),n(e.xy.add(Q(f,d)),e.z),n(e.xy.add(Q(o,0)),e.z),n(e.xy.add(Q(h,0)),e.z),n(e.xy,e.z),n(e.xy.add(Q(f,0)),e.z),n(e.xy.add(Q(l,0)),e.z),n(e.xy.add(Q(h,p)),e.z),n(e.xy.add(Q(0,p)),e.z),n(e.xy.add(Q(f,p)),e.z),n(e.xy.add(Q(o,u)),e.z),n(e.xy.add(Q(0,u)),e.z),n(e.xy.add(Q(l,u)),e.z)).mul(1/17)}),q_=F(({depthTexture:c,shadowCoord:e,shadow:t})=>{const n=(u,h)=>qe(c,u).compare(h),i=rt("mapSize","vec2",t).setGroup(Pe),s=Q(1).div(i),r=s.x,o=s.y,a=e.xy,l=qi(a.mul(i).add(.5));return a.subAssign(l.mul(s)),Rt(n(a,e.z),n(a.add(Q(r,0)),e.z),n(a.add(Q(0,o)),e.z),n(a.add(s),e.z),tt(n(a.add(Q(r.negate(),0)),e.z),n(a.add(Q(r.mul(2),0)),e.z),l.x),tt(n(a.add(Q(r.negate(),o)),e.z),n(a.add(Q(r.mul(2),o)),e.z),l.x),tt(n(a.add(Q(0,o.negate())),e.z),n(a.add(Q(0,o.mul(2))),e.z),l.y),tt(n(a.add(Q(r,o.negate())),e.z),n(a.add(Q(r,o.mul(2))),e.z),l.y),tt(tt(n(a.add(Q(r.negate(),o.negate())),e.z),n(a.add(Q(r.mul(2),o.negate())),e.z),l.x),tt(n(a.add(Q(r.negate(),o.mul(2))),e.z),n(a.add(Q(r.mul(2),o.mul(2))),e.z),l.x),l.y)).mul(1/9)}),$_=F(({depthTexture:c,shadowCoord:e})=>{const t=b(1).toVar(),n=qe(c).uv(e.xy).rg,i=Bl(e.z,n.x);return Ve(i.notEqual(b(1)),()=>{const s=e.z.sub(n.x),r=wt(0,n.y.mul(n.y));let o=r.div(r.add(s.mul(s)));o=pi(Ye(o,.3).div(.95-.3)),t.assign(pi(wt(i,o)))}),t}),v3=F(({samples:c,radius:e,size:t,shadowPass:n})=>{const i=b(0).toVar(),s=b(0).toVar(),r=c.lessThanEqual(b(1)).select(b(0),b(2).div(c.sub(1))),o=c.lessThanEqual(b(1)).select(b(0),b(-1));nt({start:N(0),end:N(c),type:"int",condition:"<"},({i:l})=>{const u=o.add(b(l).mul(r)),h=n.uv(Rt(La.xy,Q(0,u).mul(e)).div(t)).x;i.addAssign(h),s.addAssign(h.mul(h))}),i.divAssign(c),s.divAssign(c);const a=bi(s.sub(i.mul(i)));return Q(i,a)}),y3=F(({samples:c,radius:e,size:t,shadowPass:n})=>{const i=b(0).toVar(),s=b(0).toVar(),r=c.lessThanEqual(b(1)).select(b(0),b(2).div(c.sub(1))),o=c.lessThanEqual(b(1)).select(b(0),b(-1));nt({start:N(0),end:N(c),type:"int",condition:"<"},({i:l})=>{const u=o.add(b(l).mul(r)),h=n.uv(Rt(La.xy,Q(u,0).mul(e)).div(t));i.addAssign(h.x),s.addAssign(Rt(h.y.mul(h.y),h.x.mul(h.x)))}),i.divAssign(c),s.divAssign(c);const a=bi(s.sub(i.mul(i)));return Q(i,a)}),x3=[H_,W_,q_,$_],Pc=new Zf;class j_ extends Ee{static get type(){return"ShadowNode"}constructor(e,t=null){super(),this.light=e,this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=Fe.RENDER,this._node=null,this.isShadowNode=!0}setupShadowFilter(e,{filterFn:t,depthTexture:n,shadowCoord:i,shadow:s}){const r=i.x.greaterThanEqual(0).and(i.x.lessThanEqual(1)).and(i.y.greaterThanEqual(0)).and(i.y.lessThanEqual(1)).and(i.z.lessThanEqual(1)),o=t({depthTexture:n,shadowCoord:i,shadow:s});return r.select(o,b(1))}setupShadowCoord(e,t){const{shadow:n}=this,{renderer:i}=e,s=rt("bias","float",n).setGroup(Pe);let r=t,o;if(n.camera.isOrthographicCamera||i.logarithmicDepthBuffer!==!0)r=r.xyz.div(r.w),o=r.z,i.coordinateSystem===zi&&(o=o.mul(2).sub(1));else{const a=r.w;r=r.xy.div(a);const l=rt("near","float",n.camera).setGroup(Pe),u=rt("far","float",n.camera).setGroup(Pe);o=kf(a.negate(),l,u)}return r=R(r.x,r.y.oneMinus(),o.add(s)),r}getShadowFilterFn(e){return x3[e]}setupShadow(e){const{renderer:t}=e,{light:n,shadow:i}=this,s=t.shadowMap.type,r=new nr(i.mapSize.width,i.mapSize.height);r.compareFunction=zd;const o=e.createRenderTarget(i.mapSize.width,i.mapSize.height);if(o.depthTexture=r,i.camera.updateProjectionMatrix(),s===Za){r.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:na,type:Qn}),this.vsmShadowMapHorizontal=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:na,type:Qn});const y=qe(r),_=qe(this.vsmShadowMapVertical.texture),x=rt("blurSamples","float",i).setGroup(Pe),S=rt("radius","float",i).setGroup(Pe),w=rt("mapSize","vec2",i).setGroup(Pe);let A=this.vsmMaterialVertical||(this.vsmMaterialVertical=new Mt);A.fragmentNode=v3({samples:x,radius:S,size:w,shadowPass:y}).context(e.getSharedContext()),A.name="VSMVertical",A=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new Mt),A.fragmentNode=y3({samples:x,radius:S,size:w,shadowPass:_}).context(e.getSharedContext()),A.name="VSMHorizontal"}const a=rt("intensity","float",i).setGroup(Pe),l=rt("normalBias","float",i).setGroup(Pe),u=Qf(n).mul(tg.add(Gl.mul(l))),h=this.setupShadowCoord(e,u),d=i.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(d===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=s===Za?this.vsmShadowMapHorizontal.texture:r,p=this.setupShadowFilter(e,{filterFn:d,shadowTexture:o.texture,depthTexture:f,shadowCoord:h,shadow:i}),m=qe(o.texture,h),g=tt(1,p.rgb.mix(m,1),a.mul(m.a)).toVar();return this.shadowMap=o,this.shadow.map=o,g}setup(e){if(e.renderer.shadowMap.enabled!==!1)return F(({material:t})=>{tg.assign(t.shadowPositionNode||ki);let n=this._node;return n===null&&(this._node=n=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(n=e.material.receivedShadowNode(n)),n})()}renderShadow(e){const{shadow:t,shadowMap:n}=this,{renderer:i,scene:s}=e;n.setSize(t.mapSize.width,t.mapSize.height),i.render(s,t.camera)}updateShadow(e){const{shadowMap:t,light:n,shadow:i}=this,{renderer:s,scene:r,camera:o}=e,a=s.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const u=r.overrideMaterial;r.overrideMaterial=g3(n),i.camera.layers.mask=o.layers.mask;const h=s.getRenderTarget(),d=s.getRenderObjectFunction(),f=s.getMRT();s.setMRT(null),s.setRenderObjectFunction((p,...m)=>{(p.castShadow===!0||p.receiveShadow&&a===Za)&&s.renderObject(p,...m)}),s.setRenderTarget(t),this.renderShadow(e),s.setRenderObjectFunction(d),n.isPointLight!==!0&&a===Za&&this.vsmPass(s),s.setRenderTarget(h),s.setMRT(f),r.overrideMaterial=u}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),Pc.material=this.vsmMaterialVertical,Pc.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),Pc.material=this.vsmMaterialHorizontal,Pc.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=Fe.NONE}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const X_=(c,e)=>K(new j_(c,e));class cr extends co{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new He,this.colorNode=e&&e.colorNode||Ne(this.color).setGroup(Pe),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=Fe.FRAME}getCacheKey(){return Hv(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadowNode(){return X_(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){const i=this.light.shadow.shadowNode;let s;i!==void 0?s=K(i):s=this.setupShadowNode(e),this.shadowNode=s,this.shadowColorNode=n=this.colorNode.mul(s),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const ip=F(c=>{const{lightDistance:e,cutoffDistance:t,decayExponent:n}=c,i=e.pow(n).max(.01).reciprocal();return t.greaterThan(0).select(i.mul(e.div(t).pow4().oneMinus().clamp().pow2()),i)}),_3=new He,ri=F(([c,e])=>{const t=c.toVar(),n=ut(t),i=ti(1,wt(n.x,wt(n.y,n.z)));n.mulAssign(i),t.mulAssign(i.mul(e.mul(2).oneMinus()));const s=Q(t.xy).toVar(),o=e.mul(1.5).oneMinus();return Ve(n.z.greaterThanEqual(o),()=>{Ve(t.z.greaterThan(0),()=>{s.x.assign(Ye(4,t.x))})}).ElseIf(n.x.greaterThanEqual(o),()=>{const a=pa(t.x);s.x.assign(t.z.mul(a).add(a.mul(2)))}).ElseIf(n.y.greaterThanEqual(o),()=>{const a=pa(t.y);s.x.assign(t.x.add(a.mul(2)).add(2)),s.y.assign(t.z.mul(a).sub(2))}),Q(.125,.25).mul(s).add(Q(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),S3=F(({depthTexture:c,bd3D:e,dp:t,texelSize:n})=>qe(c,ri(e,n.y)).compare(t)),b3=F(({depthTexture:c,bd3D:e,dp:t,texelSize:n,shadow:i})=>{const s=rt("radius","float",i).setGroup(Pe),r=Q(-1,1).mul(s).mul(n.y);return qe(c,ri(e.add(r.xyy),n.y)).compare(t).add(qe(c,ri(e.add(r.yyy),n.y)).compare(t)).add(qe(c,ri(e.add(r.xyx),n.y)).compare(t)).add(qe(c,ri(e.add(r.yyx),n.y)).compare(t)).add(qe(c,ri(e,n.y)).compare(t)).add(qe(c,ri(e.add(r.xxy),n.y)).compare(t)).add(qe(c,ri(e.add(r.yxy),n.y)).compare(t)).add(qe(c,ri(e.add(r.xxx),n.y)).compare(t)).add(qe(c,ri(e.add(r.yxx),n.y)).compare(t)).mul(1/9)}),T3=F(({filterFn:c,depthTexture:e,shadowCoord:t,shadow:n})=>{const i=t.xyz.toVar(),s=i.length(),r=Ne("float").setGroup(Pe).onRenderUpdate(()=>n.camera.near),o=Ne("float").setGroup(Pe).onRenderUpdate(()=>n.camera.far),a=rt("bias","float",n).setGroup(Pe),l=Ne(n.mapSize).setGroup(Pe),u=b(1).toVar();return Ve(s.sub(o).lessThanEqual(0).and(s.sub(r).greaterThanEqual(0)),()=>{const h=s.sub(r).div(o.sub(r)).toVar();h.addAssign(a);const d=i.normalize(),f=Q(1).div(l.mul(Q(4,2)));u.assign(c({depthTexture:e,bd3D:d,dp:h,texelSize:f,shadow:n}))}),u}),ng=new Ke,Er=new he,Fo=new he;class w3 extends j_{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===GS?S3:b3}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:s,shadow:r}){return T3({filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:s,shadow:r})}renderShadow(e){const{shadow:t,shadowMap:n,light:i}=this,{renderer:s,scene:r}=e,o=t.getFrameExtents();Fo.copy(t.mapSize),Fo.multiply(o),n.setSize(Fo.width,Fo.height),Er.copy(t.mapSize);const a=s.autoClear,l=s.getClearColor(_3),u=s.getClearAlpha();s.autoClear=!1,s.setClearColor(t.clearColor,t.clearAlpha),s.clear();const h=t.getViewportCount();for(let d=0;d<h;d++){const f=t.getViewport(d),p=Er.x*f.x,m=Fo.y-Er.y-Er.y*f.y;ng.set(p,m,Er.x*f.z,Er.y*f.w),n.viewport.copy(ng),t.updateMatrices(i,d),s.render(r,t.camera)}s.autoClear=a,s.setClearColor(l,u)}}const M3=(c,e)=>K(new w3(c,e)),Y_=F(({color:c,lightViewPosition:e,cutoffDistance:t,decayExponent:n},i)=>{const s=i.context.lightingModel,r=e.sub(It),o=r.normalize(),a=r.length(),l=ip({lightDistance:a,cutoffDistance:t,decayExponent:n}),u=c.mul(l),h=i.context.reflectedLight;s.direct({lightDirection:o,lightColor:u,reflectedLight:h},i.stack,i)});class A3 extends cr{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=Ne(0).setGroup(Pe),this.decayExponentNode=Ne(0).setGroup(Pe)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return M3(this.light)}setup(e){super.setup(e),Y_({color:this.colorNode,lightViewPosition:Ql(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const N3=F(([c=xt()])=>{const e=c.mul(2),t=e.x.floor(),n=e.y.floor();return t.add(n).mod(2).sign()}),Qo=F(([c,e,t])=>{const n=b(t).toVar(),i=b(e).toVar(),s=Gi(c).toVar();return Yt(s,i,n)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),Sl=F(([c,e])=>{const t=Gi(e).toVar(),n=b(c).toVar();return Yt(t,n.negate(),n)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),Ct=F(([c])=>{const e=b(c).toVar();return N(di(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),pt=F(([c,e])=>{const t=b(c).toVar();return e.assign(Ct(t)),t.sub(b(e))}),C3=F(([c,e,t,n,i,s])=>{const r=b(s).toVar(),o=b(i).toVar(),a=b(n).toVar(),l=b(t).toVar(),u=b(e).toVar(),h=b(c).toVar(),d=b(Ye(1,o)).toVar();return Ye(1,r).mul(h.mul(d).add(u.mul(o))).add(r.mul(l.mul(d).add(a.mul(o))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),E3=F(([c,e,t,n,i,s])=>{const r=b(s).toVar(),o=b(i).toVar(),a=R(n).toVar(),l=R(t).toVar(),u=R(e).toVar(),h=R(c).toVar(),d=b(Ye(1,o)).toVar();return Ye(1,r).mul(h.mul(d).add(u.mul(o))).add(r.mul(l.mul(d).add(a.mul(o))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),Z_=Jt([C3,E3]),R3=F(([c,e,t,n,i,s,r,o,a,l,u])=>{const h=b(u).toVar(),d=b(l).toVar(),f=b(a).toVar(),p=b(o).toVar(),m=b(r).toVar(),g=b(s).toVar(),y=b(i).toVar(),_=b(n).toVar(),x=b(t).toVar(),S=b(e).toVar(),w=b(c).toVar(),A=b(Ye(1,f)).toVar(),T=b(Ye(1,d)).toVar();return b(Ye(1,h)).toVar().mul(T.mul(w.mul(A).add(S.mul(f))).add(d.mul(x.mul(A).add(_.mul(f))))).add(h.mul(T.mul(y.mul(A).add(g.mul(f))).add(d.mul(m.mul(A).add(p.mul(f))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),P3=F(([c,e,t,n,i,s,r,o,a,l,u])=>{const h=b(u).toVar(),d=b(l).toVar(),f=b(a).toVar(),p=R(o).toVar(),m=R(r).toVar(),g=R(s).toVar(),y=R(i).toVar(),_=R(n).toVar(),x=R(t).toVar(),S=R(e).toVar(),w=R(c).toVar(),A=b(Ye(1,f)).toVar(),T=b(Ye(1,d)).toVar();return b(Ye(1,h)).toVar().mul(T.mul(w.mul(A).add(S.mul(f))).add(d.mul(x.mul(A).add(_.mul(f))))).add(h.mul(T.mul(y.mul(A).add(g.mul(f))).add(d.mul(m.mul(A).add(p.mul(f))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),K_=Jt([R3,P3]),U3=F(([c,e,t])=>{const n=b(t).toVar(),i=b(e).toVar(),s=pe(c).toVar(),r=pe(s.bitAnd(pe(7))).toVar(),o=b(Qo(r.lessThan(pe(4)),i,n)).toVar(),a=b(Ie(2,Qo(r.lessThan(pe(4)),n,i))).toVar();return Sl(o,Gi(r.bitAnd(pe(1)))).add(Sl(a,Gi(r.bitAnd(pe(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),D3=F(([c,e,t,n])=>{const i=b(n).toVar(),s=b(t).toVar(),r=b(e).toVar(),o=pe(c).toVar(),a=pe(o.bitAnd(pe(15))).toVar(),l=b(Qo(a.lessThan(pe(8)),r,s)).toVar(),u=b(Qo(a.lessThan(pe(4)),s,Qo(a.equal(pe(12)).or(a.equal(pe(14))),r,i))).toVar();return Sl(l,Gi(a.bitAnd(pe(1)))).add(Sl(u,Gi(a.bitAnd(pe(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),zt=Jt([U3,D3]),L3=F(([c,e,t])=>{const n=b(t).toVar(),i=b(e).toVar(),s=ao(c).toVar();return R(zt(s.x,i,n),zt(s.y,i,n),zt(s.z,i,n))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),F3=F(([c,e,t,n])=>{const i=b(n).toVar(),s=b(t).toVar(),r=b(e).toVar(),o=ao(c).toVar();return R(zt(o.x,r,s,i),zt(o.y,r,s,i),zt(o.z,r,s,i))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Ln=Jt([L3,F3]),I3=F(([c])=>{const e=b(c).toVar();return Ie(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),B3=F(([c])=>{const e=b(c).toVar();return Ie(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),O3=F(([c])=>{const e=R(c).toVar();return Ie(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),J_=Jt([I3,O3]),V3=F(([c])=>{const e=R(c).toVar();return Ie(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),Q_=Jt([B3,V3]),Cn=F(([c,e])=>{const t=N(e).toVar(),n=pe(c).toVar();return n.shiftLeft(t).bitOr(n.shiftRight(N(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),eS=F(([c,e,t])=>{c.subAssign(t),c.bitXorAssign(Cn(t,N(4))),t.addAssign(e),e.subAssign(c),e.bitXorAssign(Cn(c,N(6))),c.addAssign(t),t.subAssign(e),t.bitXorAssign(Cn(e,N(8))),e.addAssign(c),c.subAssign(t),c.bitXorAssign(Cn(t,N(16))),t.addAssign(e),e.subAssign(c),e.bitXorAssign(Cn(c,N(19))),c.addAssign(t),t.subAssign(e),t.bitXorAssign(Cn(e,N(4))),e.addAssign(c)}),Ia=F(([c,e,t])=>{const n=pe(t).toVar(),i=pe(e).toVar(),s=pe(c).toVar();return n.bitXorAssign(i),n.subAssign(Cn(i,N(14))),s.bitXorAssign(n),s.subAssign(Cn(n,N(11))),i.bitXorAssign(s),i.subAssign(Cn(s,N(25))),n.bitXorAssign(i),n.subAssign(Cn(i,N(16))),s.bitXorAssign(n),s.subAssign(Cn(n,N(4))),i.bitXorAssign(s),i.subAssign(Cn(s,N(14))),n.bitXorAssign(i),n.subAssign(Cn(i,N(24))),n}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),sn=F(([c])=>{const e=pe(c).toVar();return b(e).div(b(pe(N(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),fi=F(([c])=>{const e=b(c).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),k3=F(([c])=>{const e=N(c).toVar(),t=pe(pe(1)).toVar(),n=pe(pe(N(3735928559)).add(t.shiftLeft(pe(2))).add(pe(13))).toVar();return Ia(n.add(pe(e)),n,n)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),z3=F(([c,e])=>{const t=N(e).toVar(),n=N(c).toVar(),i=pe(pe(2)).toVar(),s=pe().toVar(),r=pe().toVar(),o=pe().toVar();return s.assign(r.assign(o.assign(pe(N(3735928559)).add(i.shiftLeft(pe(2))).add(pe(13))))),s.addAssign(pe(n)),r.addAssign(pe(t)),Ia(s,r,o)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),G3=F(([c,e,t])=>{const n=N(t).toVar(),i=N(e).toVar(),s=N(c).toVar(),r=pe(pe(3)).toVar(),o=pe().toVar(),a=pe().toVar(),l=pe().toVar();return o.assign(a.assign(l.assign(pe(N(3735928559)).add(r.shiftLeft(pe(2))).add(pe(13))))),o.addAssign(pe(s)),a.addAssign(pe(i)),l.addAssign(pe(n)),Ia(o,a,l)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),H3=F(([c,e,t,n])=>{const i=N(n).toVar(),s=N(t).toVar(),r=N(e).toVar(),o=N(c).toVar(),a=pe(pe(4)).toVar(),l=pe().toVar(),u=pe().toVar(),h=pe().toVar();return l.assign(u.assign(h.assign(pe(N(3735928559)).add(a.shiftLeft(pe(2))).add(pe(13))))),l.addAssign(pe(o)),u.addAssign(pe(r)),h.addAssign(pe(s)),eS(l,u,h),l.addAssign(pe(i)),Ia(l,u,h)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),W3=F(([c,e,t,n,i])=>{const s=N(i).toVar(),r=N(n).toVar(),o=N(t).toVar(),a=N(e).toVar(),l=N(c).toVar(),u=pe(pe(5)).toVar(),h=pe().toVar(),d=pe().toVar(),f=pe().toVar();return h.assign(d.assign(f.assign(pe(N(3735928559)).add(u.shiftLeft(pe(2))).add(pe(13))))),h.addAssign(pe(l)),d.addAssign(pe(a)),f.addAssign(pe(o)),eS(h,d,f),h.addAssign(pe(r)),d.addAssign(pe(s)),Ia(h,d,f)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),ot=Jt([k3,z3,G3,H3,W3]),q3=F(([c,e])=>{const t=N(e).toVar(),n=N(c).toVar(),i=pe(ot(n,t)).toVar(),s=ao().toVar();return s.x.assign(i.bitAnd(N(255))),s.y.assign(i.shiftRight(N(8)).bitAnd(N(255))),s.z.assign(i.shiftRight(N(16)).bitAnd(N(255))),s}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),$3=F(([c,e,t])=>{const n=N(t).toVar(),i=N(e).toVar(),s=N(c).toVar(),r=pe(ot(s,i,n)).toVar(),o=ao().toVar();return o.x.assign(r.bitAnd(N(255))),o.y.assign(r.shiftRight(N(8)).bitAnd(N(255))),o.z.assign(r.shiftRight(N(16)).bitAnd(N(255))),o}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),In=Jt([q3,$3]),j3=F(([c])=>{const e=Q(c).toVar(),t=N().toVar(),n=N().toVar(),i=b(pt(e.x,t)).toVar(),s=b(pt(e.y,n)).toVar(),r=b(fi(i)).toVar(),o=b(fi(s)).toVar(),a=b(Z_(zt(ot(t,n),i,s),zt(ot(t.add(N(1)),n),i.sub(1),s),zt(ot(t,n.add(N(1))),i,s.sub(1)),zt(ot(t.add(N(1)),n.add(N(1))),i.sub(1),s.sub(1)),r,o)).toVar();return J_(a)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),X3=F(([c])=>{const e=R(c).toVar(),t=N().toVar(),n=N().toVar(),i=N().toVar(),s=b(pt(e.x,t)).toVar(),r=b(pt(e.y,n)).toVar(),o=b(pt(e.z,i)).toVar(),a=b(fi(s)).toVar(),l=b(fi(r)).toVar(),u=b(fi(o)).toVar(),h=b(K_(zt(ot(t,n,i),s,r,o),zt(ot(t.add(N(1)),n,i),s.sub(1),r,o),zt(ot(t,n.add(N(1)),i),s,r.sub(1),o),zt(ot(t.add(N(1)),n.add(N(1)),i),s.sub(1),r.sub(1),o),zt(ot(t,n,i.add(N(1))),s,r,o.sub(1)),zt(ot(t.add(N(1)),n,i.add(N(1))),s.sub(1),r,o.sub(1)),zt(ot(t,n.add(N(1)),i.add(N(1))),s,r.sub(1),o.sub(1)),zt(ot(t.add(N(1)),n.add(N(1)),i.add(N(1))),s.sub(1),r.sub(1),o.sub(1)),a,l,u)).toVar();return Q_(h)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),sp=Jt([j3,X3]),Y3=F(([c])=>{const e=Q(c).toVar(),t=N().toVar(),n=N().toVar(),i=b(pt(e.x,t)).toVar(),s=b(pt(e.y,n)).toVar(),r=b(fi(i)).toVar(),o=b(fi(s)).toVar(),a=R(Z_(Ln(In(t,n),i,s),Ln(In(t.add(N(1)),n),i.sub(1),s),Ln(In(t,n.add(N(1))),i,s.sub(1)),Ln(In(t.add(N(1)),n.add(N(1))),i.sub(1),s.sub(1)),r,o)).toVar();return J_(a)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Z3=F(([c])=>{const e=R(c).toVar(),t=N().toVar(),n=N().toVar(),i=N().toVar(),s=b(pt(e.x,t)).toVar(),r=b(pt(e.y,n)).toVar(),o=b(pt(e.z,i)).toVar(),a=b(fi(s)).toVar(),l=b(fi(r)).toVar(),u=b(fi(o)).toVar(),h=R(K_(Ln(In(t,n,i),s,r,o),Ln(In(t.add(N(1)),n,i),s.sub(1),r,o),Ln(In(t,n.add(N(1)),i),s,r.sub(1),o),Ln(In(t.add(N(1)),n.add(N(1)),i),s.sub(1),r.sub(1),o),Ln(In(t,n,i.add(N(1))),s,r,o.sub(1)),Ln(In(t.add(N(1)),n,i.add(N(1))),s.sub(1),r,o.sub(1)),Ln(In(t,n.add(N(1)),i.add(N(1))),s,r.sub(1),o.sub(1)),Ln(In(t.add(N(1)),n.add(N(1)),i.add(N(1))),s.sub(1),r.sub(1),o.sub(1)),a,l,u)).toVar();return Q_(h)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),rp=Jt([Y3,Z3]),K3=F(([c])=>{const e=b(c).toVar(),t=N(Ct(e)).toVar();return sn(ot(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),J3=F(([c])=>{const e=Q(c).toVar(),t=N(Ct(e.x)).toVar(),n=N(Ct(e.y)).toVar();return sn(ot(t,n))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),Q3=F(([c])=>{const e=R(c).toVar(),t=N(Ct(e.x)).toVar(),n=N(Ct(e.y)).toVar(),i=N(Ct(e.z)).toVar();return sn(ot(t,n,i))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),eP=F(([c])=>{const e=Ae(c).toVar(),t=N(Ct(e.x)).toVar(),n=N(Ct(e.y)).toVar(),i=N(Ct(e.z)).toVar(),s=N(Ct(e.w)).toVar();return sn(ot(t,n,i,s))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),tP=Jt([K3,J3,Q3,eP]),nP=F(([c])=>{const e=b(c).toVar(),t=N(Ct(e)).toVar();return R(sn(ot(t,N(0))),sn(ot(t,N(1))),sn(ot(t,N(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),iP=F(([c])=>{const e=Q(c).toVar(),t=N(Ct(e.x)).toVar(),n=N(Ct(e.y)).toVar();return R(sn(ot(t,n,N(0))),sn(ot(t,n,N(1))),sn(ot(t,n,N(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),sP=F(([c])=>{const e=R(c).toVar(),t=N(Ct(e.x)).toVar(),n=N(Ct(e.y)).toVar(),i=N(Ct(e.z)).toVar();return R(sn(ot(t,n,i,N(0))),sn(ot(t,n,i,N(1))),sn(ot(t,n,i,N(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),rP=F(([c])=>{const e=Ae(c).toVar(),t=N(Ct(e.x)).toVar(),n=N(Ct(e.y)).toVar(),i=N(Ct(e.z)).toVar(),s=N(Ct(e.w)).toVar();return R(sn(ot(t,n,i,s,N(0))),sn(ot(t,n,i,s,N(1))),sn(ot(t,n,i,s,N(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),tS=Jt([nP,iP,sP,rP]),bl=F(([c,e,t,n])=>{const i=b(n).toVar(),s=b(t).toVar(),r=N(e).toVar(),o=R(c).toVar(),a=b(0).toVar(),l=b(1).toVar();return nt(r,()=>{a.addAssign(l.mul(sp(o))),l.mulAssign(i),o.mulAssign(s)}),a}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),nS=F(([c,e,t,n])=>{const i=b(n).toVar(),s=b(t).toVar(),r=N(e).toVar(),o=R(c).toVar(),a=R(0).toVar(),l=b(1).toVar();return nt(r,()=>{a.addAssign(l.mul(rp(o))),l.mulAssign(i),o.mulAssign(s)}),a}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),oP=F(([c,e,t,n])=>{const i=b(n).toVar(),s=b(t).toVar(),r=N(e).toVar(),o=R(c).toVar();return Q(bl(o,r,s,i),bl(o.add(R(N(19),N(193),N(17))),r,s,i))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),aP=F(([c,e,t,n])=>{const i=b(n).toVar(),s=b(t).toVar(),r=N(e).toVar(),o=R(c).toVar(),a=R(nS(o,r,s,i)).toVar(),l=b(bl(o.add(R(N(19),N(193),N(17))),r,s,i)).toVar();return Ae(a,l)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),cP=F(([c,e,t,n,i,s,r])=>{const o=N(r).toVar(),a=b(s).toVar(),l=N(i).toVar(),u=N(n).toVar(),h=N(t).toVar(),d=N(e).toVar(),f=Q(c).toVar(),p=R(tS(Q(d.add(u),h.add(l)))).toVar(),m=Q(p.x,p.y).toVar();m.subAssign(.5),m.mulAssign(a),m.addAssign(.5);const g=Q(Q(b(d),b(h)).add(m)).toVar(),y=Q(g.sub(f)).toVar();return Ve(o.equal(N(2)),()=>ut(y.x).add(ut(y.y))),Ve(o.equal(N(3)),()=>wt(ut(y.x),ut(y.y))),Ss(y,y)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),lP=F(([c,e,t,n,i,s,r,o,a])=>{const l=N(a).toVar(),u=b(o).toVar(),h=N(r).toVar(),d=N(s).toVar(),f=N(i).toVar(),p=N(n).toVar(),m=N(t).toVar(),g=N(e).toVar(),y=R(c).toVar(),_=R(tS(R(g.add(f),m.add(d),p.add(h)))).toVar();_.subAssign(.5),_.mulAssign(u),_.addAssign(.5);const x=R(R(b(g),b(m),b(p)).add(_)).toVar(),S=R(x.sub(y)).toVar();return Ve(l.equal(N(2)),()=>ut(S.x).add(ut(S.y)).add(ut(S.z))),Ve(l.equal(N(3)),()=>wt(wt(ut(S.x),ut(S.y)),ut(S.z))),Ss(S,S)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),lo=Jt([cP,lP]),uP=F(([c,e,t])=>{const n=N(t).toVar(),i=b(e).toVar(),s=Q(c).toVar(),r=N().toVar(),o=N().toVar(),a=Q(pt(s.x,r),pt(s.y,o)).toVar(),l=b(1e6).toVar();return nt({start:-1,end:N(1),name:"x",condition:"<="},({x:u})=>{nt({start:-1,end:N(1),name:"y",condition:"<="},({y:h})=>{const d=b(lo(a,u,h,r,o,i,n)).toVar();l.assign(xn(l,d))})}),Ve(n.equal(N(0)),()=>{l.assign(bi(l))}),l}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),hP=F(([c,e,t])=>{const n=N(t).toVar(),i=b(e).toVar(),s=Q(c).toVar(),r=N().toVar(),o=N().toVar(),a=Q(pt(s.x,r),pt(s.y,o)).toVar(),l=Q(1e6,1e6).toVar();return nt({start:-1,end:N(1),name:"x",condition:"<="},({x:u})=>{nt({start:-1,end:N(1),name:"y",condition:"<="},({y:h})=>{const d=b(lo(a,u,h,r,o,i,n)).toVar();Ve(d.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.y.assign(d)})})}),Ve(n.equal(N(0)),()=>{l.assign(bi(l))}),l}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),dP=F(([c,e,t])=>{const n=N(t).toVar(),i=b(e).toVar(),s=Q(c).toVar(),r=N().toVar(),o=N().toVar(),a=Q(pt(s.x,r),pt(s.y,o)).toVar(),l=R(1e6,1e6,1e6).toVar();return nt({start:-1,end:N(1),name:"x",condition:"<="},({x:u})=>{nt({start:-1,end:N(1),name:"y",condition:"<="},({y:h})=>{const d=b(lo(a,u,h,r,o,i,n)).toVar();Ve(d.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(d)}).ElseIf(d.lessThan(l.z),()=>{l.z.assign(d)})})}),Ve(n.equal(N(0)),()=>{l.assign(bi(l))}),l}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),fP=F(([c,e,t])=>{const n=N(t).toVar(),i=b(e).toVar(),s=R(c).toVar(),r=N().toVar(),o=N().toVar(),a=N().toVar(),l=R(pt(s.x,r),pt(s.y,o),pt(s.z,a)).toVar(),u=b(1e6).toVar();return nt({start:-1,end:N(1),name:"x",condition:"<="},({x:h})=>{nt({start:-1,end:N(1),name:"y",condition:"<="},({y:d})=>{nt({start:-1,end:N(1),name:"z",condition:"<="},({z:f})=>{const p=b(lo(l,h,d,f,r,o,a,i,n)).toVar();u.assign(xn(u,p))})})}),Ve(n.equal(N(0)),()=>{u.assign(bi(u))}),u}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),pP=Jt([uP,fP]),mP=F(([c,e,t])=>{const n=N(t).toVar(),i=b(e).toVar(),s=R(c).toVar(),r=N().toVar(),o=N().toVar(),a=N().toVar(),l=R(pt(s.x,r),pt(s.y,o),pt(s.z,a)).toVar(),u=Q(1e6,1e6).toVar();return nt({start:-1,end:N(1),name:"x",condition:"<="},({x:h})=>{nt({start:-1,end:N(1),name:"y",condition:"<="},({y:d})=>{nt({start:-1,end:N(1),name:"z",condition:"<="},({z:f})=>{const p=b(lo(l,h,d,f,r,o,a,i,n)).toVar();Ve(p.lessThan(u.x),()=>{u.y.assign(u.x),u.x.assign(p)}).ElseIf(p.lessThan(u.y),()=>{u.y.assign(p)})})})}),Ve(n.equal(N(0)),()=>{u.assign(bi(u))}),u}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),gP=Jt([hP,mP]),vP=F(([c,e,t])=>{const n=N(t).toVar(),i=b(e).toVar(),s=R(c).toVar(),r=N().toVar(),o=N().toVar(),a=N().toVar(),l=R(pt(s.x,r),pt(s.y,o),pt(s.z,a)).toVar(),u=R(1e6,1e6,1e6).toVar();return nt({start:-1,end:N(1),name:"x",condition:"<="},({x:h})=>{nt({start:-1,end:N(1),name:"y",condition:"<="},({y:d})=>{nt({start:-1,end:N(1),name:"z",condition:"<="},({z:f})=>{const p=b(lo(l,h,d,f,r,o,a,i,n)).toVar();Ve(p.lessThan(u.x),()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(p)}).ElseIf(p.lessThan(u.y),()=>{u.z.assign(u.y),u.y.assign(p)}).ElseIf(p.lessThan(u.z),()=>{u.z.assign(p)})})})}),Ve(n.equal(N(0)),()=>{u.assign(bi(u))}),u}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),yP=Jt([dP,vP]),xP=F(([c])=>{const e=c.y,t=c.z,n=R().toVar();return Ve(e.lessThan(1e-4),()=>{n.assign(R(t,t,t))}).Else(()=>{let i=c.x;i=i.sub(di(i)).mul(6).toVar();const s=N(bf(i)),r=i.sub(b(s)),o=t.mul(e.oneMinus()),a=t.mul(e.mul(r).oneMinus()),l=t.mul(e.mul(r.oneMinus()).oneMinus());Ve(s.equal(N(0)),()=>{n.assign(R(t,l,o))}).ElseIf(s.equal(N(1)),()=>{n.assign(R(a,t,o))}).ElseIf(s.equal(N(2)),()=>{n.assign(R(o,t,l))}).ElseIf(s.equal(N(3)),()=>{n.assign(R(o,a,t))}).ElseIf(s.equal(N(4)),()=>{n.assign(R(l,o,t))}).Else(()=>{n.assign(R(t,o,a))})}),n}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),_P=F(([c])=>{const e=R(c).toVar(),t=b(e.x).toVar(),n=b(e.y).toVar(),i=b(e.z).toVar(),s=b(xn(t,xn(n,i))).toVar(),r=b(wt(t,wt(n,i))).toVar(),o=b(r.sub(s)).toVar(),a=b().toVar(),l=b().toVar(),u=b().toVar();return u.assign(r),Ve(r.greaterThan(0),()=>{l.assign(o.div(r))}).Else(()=>{l.assign(0)}),Ve(l.lessThanEqual(0),()=>{a.assign(0)}).Else(()=>{Ve(t.greaterThanEqual(r),()=>{a.assign(n.sub(i).div(o))}).ElseIf(n.greaterThanEqual(r),()=>{a.assign(Rt(2,i.sub(t).div(o)))}).Else(()=>{a.assign(Rt(4,t.sub(n).div(o)))}),a.mulAssign(1/6),Ve(a.lessThan(0),()=>{a.addAssign(1)})}),R(a,l,u)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),SP=F(([c])=>{const e=R(c).toVar(),t=af(vf(e,R(.04045))).toVar(),n=R(e.div(12.92)).toVar(),i=R(Jn(wt(e.add(R(.055)),R(0)).div(1.055),R(2.4))).toVar();return tt(n,i,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),iS=(c,e)=>{c=b(c),e=b(e);const t=Q(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return Wi(c.sub(t),c.add(t),e)},sS=(c,e,t,n)=>tt(c,e,t[n].clamp()),bP=(c,e,t=xt())=>sS(c,e,t,"x"),TP=(c,e,t=xt())=>sS(c,e,t,"y"),rS=(c,e,t,n,i)=>tt(c,e,iS(t,n[i])),wP=(c,e,t,n=xt())=>rS(c,e,t,n,"x"),MP=(c,e,t,n=xt())=>rS(c,e,t,n,"y"),AP=(c=1,e=0,t=xt())=>t.mul(c).add(e),NP=(c,e=1)=>(c=b(c),c.abs().pow(e).mul(c.sign())),CP=(c,e=1,t=.5)=>b(c).sub(t).mul(e).add(t),EP=(c=xt(),e=1,t=0)=>sp(c.convert("vec2|vec3")).mul(e).add(t),RP=(c=xt(),e=1,t=0)=>rp(c.convert("vec2|vec3")).mul(e).add(t),PP=(c=xt(),e=1,t=0)=>(c=c.convert("vec2|vec3"),Ae(rp(c),sp(c.add(Q(19,73)))).mul(e).add(t)),UP=(c=xt(),e=1)=>pP(c.convert("vec2|vec3"),e,N(1)),DP=(c=xt(),e=1)=>gP(c.convert("vec2|vec3"),e,N(1)),LP=(c=xt(),e=1)=>yP(c.convert("vec2|vec3"),e,N(1)),FP=(c=xt())=>tP(c.convert("vec2|vec3")),IP=(c=xt(),e=3,t=2,n=.5,i=1)=>bl(c,N(e),t,n).mul(i),BP=(c=xt(),e=3,t=2,n=.5,i=1)=>oP(c,N(e),t,n).mul(i),OP=(c=xt(),e=3,t=2,n=.5,i=1)=>nS(c,N(e),t,n).mul(i),VP=(c=xt(),e=3,t=2,n=.5,i=1)=>aP(c,N(e),t,n).mul(i),kP=F(([c,e,t])=>{const n=Hi(c).toVar("nDir"),i=Ye(b(.5).mul(e.sub(t)),ki).div(n).toVar("rbmax"),s=Ye(b(-.5).mul(e.sub(t)),ki).div(n).toVar("rbmin"),r=R().toVar("rbminmax");r.x=n.x.greaterThan(b(0)).select(i.x,s.x),r.y=n.y.greaterThan(b(0)).select(i.y,s.y),r.z=n.z.greaterThan(b(0)).select(i.z,s.z);const o=xn(xn(r.x,r.y),r.z).toVar("correction");return ki.add(n.mul(o)).toVar("boxIntersection").sub(t)}),oS=F(([c,e])=>{const t=c.x,n=c.y,i=c.z;let s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(2*.511664).mul(n)),s=s.add(e.element(2).mul(2*.511664).mul(i)),s=s.add(e.element(3).mul(2*.511664).mul(t)),s=s.add(e.element(4).mul(2*.429043).mul(t).mul(n)),s=s.add(e.element(5).mul(2*.429043).mul(n).mul(i)),s=s.add(e.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(2*.429043).mul(t).mul(i)),s=s.add(e.element(8).mul(.429043).mul(Ie(t,t).sub(Ie(n,n)))),s});var v=Object.freeze({__proto__:null,BRDF_GGX:xd,BRDF_Lambert:Js,BasicShadowFilter:H_,Break:Ox,Continue:XN,DFGApprox:qf,D_GGX:Qx,Discard:Dy,EPSILON:F0,F_Schlick:io,Fn:F,INFINITY:kA,If:Ve,Loop:nt,NodeAccess:nn,NodeShaderStage:cd,NodeType:gA,NodeUpdateType:Fe,PCFShadowFilter:W_,PCFSoftShadowFilter:q_,PI:ml,PI2:zA,Return:eN,Schlick_to_F0:t_,ScriptableNodeResources:Zc,ShaderNode:jo,TBNViewMatrix:Vs,VSMShadowFilter:$_,V_GGX_SmithCorrelated:Jx,abs:ut,acesFilmicToneMapping:D_,acos:H0,add:Rt,addMethodChaining:X,addNodeElement:nN,agxToneMapping:L_,all:yf,alphaT:dl,and:w0,anisotropy:as,anisotropyB:Ws,anisotropyT:Xo,any:I0,append:n0,arrayBuffer:FA,asin:G0,assign:v0,atan:W0,atan2:K0,atomicAdd:s3,atomicAnd:c3,atomicFunc:$i,atomicMax:o3,atomicMin:a3,atomicOr:l3,atomicStore:i3,atomicSub:r3,atomicXor:u3,attenuationColor:pf,attenuationDistance:ff,attribute:mi,attributeArray:YE,backgroundBlurriness:S_,backgroundIntensity:Md,backgroundRotation:b_,batch:Fx,billboarding:NE,bitAnd:C0,bitNot:E0,bitOr:R0,bitXor:P0,bitangentGeometry:NN,bitangentLocal:CN,bitangentView:Zy,bitangentWorld:EN,bitcast:GA,blendBurn:M_,blendColor:aR,blendDodge:A_,blendOverlay:C_,blendScreen:N_,blur:c_,bool:Gi,buffer:Ea,bufferAttribute:Na,bumpMap:ex,burn:cR,bvec2:r0,bvec3:af,bvec4:l0,bypass:Cy,cache:Zo,call:y0,cameraFar:us,cameraNear:ls,cameraNormalMatrix:cN,cameraPosition:By,cameraProjectionMatrix:xs,cameraProjectionMatrixInverse:oN,cameraViewMatrix:bn,cameraWorldMatrix:aN,cbrt:sy,cdl:vR,ceil:Il,checker:N3,cineonToneMapping:U_,clamp:pi,clearcoat:hl,clearcoatRoughness:da,code:Kl,color:i0,colorSpaceToWorking:Nf,colorToDirection:T2,compute:Ny,cond:hy,context:Vl,convert:h0,convertColorSpace:qA,convertToTexture:kE,cos:Ui,cross:Ol,cubeTexture:no,dFdx:_f,dFdy:Sf,dashSize:$c,defaultBuildStages:ld,defaultShaderStages:Zv,defined:ca,degrees:V0,deltaTime:y_,densityFog:k_,depth:zf,depthPass:TR,difference:ey,diffuseColor:et,directPointLight:Y_,directionToColor:qx,dispersion:mf,distance:Q0,div:ti,dodge:lR,dot:Ss,drawIndex:Ux,dynamicBufferAttribute:Ay,element:u0,emissive:fd,equal:x0,equals:B0,equirectUV:Gf,exp:xf,exp2:to,expression:ys,faceDirection:Ca,faceForward:ay,float:b,floor:di,fog:VR,fract:qi,frameGroup:p0,frameId:vE,frontFacing:ky,fwidth:Y0,gain:hE,gapSize:pd,getConstNodeType:t0,getCurrentStack:of,getDirection:o_,getDistanceAttenuation:ip,getGeometryRoughness:Kx,getNormalFromDepth:GE,getParallaxCorrectNormal:kP,getRoughness:Wf,getScreenPosition:zE,getShIrradianceAt:oS,getTextureIndex:m_,getViewPosition:Fr,glsl:UR,glslFn:DR,grayscale:dR,greaterThan:vf,greaterThanEqual:T0,hash:uE,highPrecisionModelNormalViewMatrix:xN,highPrecisionModelViewMatrix:yN,hue:mR,instance:HN,instanceIndex:Da,instancedArray:ZE,instancedBufferAttribute:gl,instancedDynamicBufferAttribute:md,instancedMesh:Lx,int:N,inverseSqrt:k0,invocationLocalIndex:GN,invocationSubgroupIndex:zN,ior:Yo,iridescence:Ll,iridescenceIOR:uf,iridescenceThickness:hf,ivec2:Vt,ivec3:o0,ivec4:a0,js:RR,label:fy,length:Vi,lengthSq:ry,lessThan:S0,lessThanEqual:b0,lightPosition:ep,lightProjectionUV:z_,lightShadowMatrix:Qf,lightTargetDirection:tp,lightTargetPosition:G_,lightViewPosition:Ql,lightingContext:kx,lights:f3,linearDepth:yl,linearToneMapping:R_,localId:jR,log:Fl,log2:hi,logarithmicDepthToViewZ:c2,loop:YN,luminance:Zl,mat2:Ul,mat3:on,mat4:Hs,matcapUV:l_,materialAOMap:Rx,materialAlphaTest:tx,materialAnisotropy:gx,materialAnisotropyVector:Lr,materialAttenuationColor:wx,materialAttenuationDistance:Tx,materialClearcoat:ux,materialClearcoatNormal:dx,materialClearcoatRoughness:hx,materialColor:nx,materialDispersion:Ex,materialEmissive:sx,materialIOR:bx,materialIridescence:vx,materialIridescenceIOR:yx,materialIridescenceThickness:xx,materialLightMap:Lf,materialLineDashOffset:Cx,materialLineDashSize:Ax,materialLineGapSize:Nx,materialLineScale:Mx,materialLineWidth:BN,materialMetalness:cx,materialNormal:lx,materialOpacity:Df,materialPointWidth:ON,materialReference:Fi,materialReflectivity:jc,materialRefractionRatio:Hy,materialRotation:fx,materialRoughness:ax,materialSheen:px,materialSheenRoughness:mx,materialShininess:ix,materialSpecular:rx,materialSpecularColor:ox,materialSpecularIntensity:yd,materialSpecularStrength:Ko,materialThickness:Sx,materialTransmission:_x,max:wt,maxMipLevel:Iy,metalness:ha,min:xn,mix:tt,mixElement:ly,mod:Tf,modInt:gf,modelDirection:fN,modelNormalMatrix:Vy,modelPosition:pN,modelScale:mN,modelViewMatrix:or,modelViewPosition:gN,modelViewProjection:Ff,modelWorldMatrix:kn,modelWorldMatrixInverse:vN,morphReference:Vx,mrt:g_,mul:Ie,mx_aastep:iS,mx_cell_noise_float:FP,mx_contrast:CP,mx_fractal_noise_float:IP,mx_fractal_noise_vec2:BP,mx_fractal_noise_vec3:OP,mx_fractal_noise_vec4:VP,mx_hsvtorgb:xP,mx_noise_float:EP,mx_noise_vec3:RP,mx_noise_vec4:PP,mx_ramplr:bP,mx_ramptb:TP,mx_rgbtohsv:_P,mx_safepower:NP,mx_splitlr:wP,mx_splittb:MP,mx_srgb_texture_to_lin_rec709:SP,mx_transform_uv:AP,mx_worley_noise_float:UP,mx_worley_noise_vec2:DP,mx_worley_noise_vec3:LP,negate:q0,neutralToneMapping:F_,nodeArray:Gs,nodeImmutable:ue,nodeObject:K,nodeObjects:Ta,nodeProxy:q,normalFlat:zy,normalGeometry:kl,normalLocal:_n,normalMap:vd,normalView:Hn,normalWorld:zl,normalize:Hi,not:A0,notEqual:_0,numWorkgroups:qR,objectDirection:lN,objectGroup:lf,objectPosition:Oy,objectScale:hN,objectViewPosition:dN,objectWorldMatrix:uN,oneMinus:$0,or:M0,orthographicDepthToViewZ:a2,oscSawtooth:wE,oscSine:SE,oscSquare:bE,oscTriangle:TE,output:g0,outputStruct:cE,overlay:hR,overloadingFn:Jt,parabola:wd,parallaxDirection:Jy,parallaxUV:PN,parameter:rE,pass:SR,passTexture:bR,pcurve:dE,perspectiveDepthToViewZ:Vf,pmremTexture:$f,pointUV:eR,pointWidth:BA,positionGeometry:Cf,positionLocal:St,positionPrevious:vl,positionView:It,positionViewDirection:dt,positionWorld:ki,positionWorldDirection:Ef,posterize:xR,pow:Jn,pow2:wf,pow3:ty,pow4:ny,property:m0,radians:O0,rand:cy,range:HR,rangeFog:V_,reciprocal:X0,reference:rt,referenceBuffer:gd,reflect:J0,reflectVector:$y,reflectView:Wy,reflector:FE,refract:Mf,refractVector:jy,refractView:qy,reinhardToneMapping:P_,remainder:L0,remap:Ry,remapClamp:Py,renderGroup:Pe,renderOutput:Ly,rendererReference:Ty,rotate:jf,rotateUV:ME,roughness:ci,round:j0,rtt:__,sRGBTransferEOTF:vy,sRGBTransferOETF:yy,sampler:rN,saturate:oy,saturation:fR,screen:uR,screenCoordinate:La,screenSize:ma,screenUV:yi,scriptable:OR,scriptableValue:Yc,select:Yt,setCurrentStack:la,shaderStages:ud,shadow:X_,sharedUniformGroup:cf,sheen:Os,sheenRoughness:Dl,shiftLeft:U0,shiftRight:D0,shininess:fl,sign:pa,sin:En,sinc:fE,skinning:$N,skinningReference:Bx,smoothstep:Wi,smoothstepElement:uy,specularColor:gn,specularF90:fa,spherizeUV:AE,split:IA,spritesheetUV:RE,sqrt:bi,stack:Xc,step:Bl,storage:Yl,storageBarrier:KR,storageObject:XE,storageTexture:T_,string:LA,sub:Ye,subgroupIndex:kN,subgroupSize:XR,tan:z0,tangentGeometry:Wl,tangentLocal:Ra,tangentView:Pa,tangentWorld:Yy,temp:gy,texture:qe,texture3D:LC,textureBarrier:JR,textureBicubic:s_,textureCubeUV:a_,textureLoad:bt,textureSize:qs,textureStore:nR,thickness:df,threshold:gR,time:ar,timerDelta:_E,timerGlobal:xE,timerLocal:yE,toOutputColorSpace:xy,toWorkingColorSpace:_y,toneMapping:wy,toneMappingExposure:My,toonOutlinePass:MR,transformDirection:iy,transformNormal:Gy,transformNormalToView:Rf,transformedBentNormalView:Qy,transformedBitangentView:Ky,transformedBitangentWorld:RN,transformedClearcoatNormalView:zr,transformedNormalView:Tt,transformedNormalWorld:Gl,transformedTangentView:Uf,transformedTangentWorld:AN,transmission:pl,transpose:Z0,tri:ai,tri3:v_,triNoise3D:pE,triplanarTexture:UE,triplanarTextures:x_,trunc:bf,tslFn:DA,uint:pe,uniform:Ne,uniformArray:Li,uniformGroup:f0,uniforms:TN,userData:sR,uv:xt,uvec2:s0,uvec3:ao,uvec4:c0,varying:Sn,varyingProperty:ua,vec2:Q,vec3:R,vec4:Ae,vectorComponents:sr,velocity:oR,vertexColor:JE,vertexIndex:Px,vibrance:pR,viewZToLogarithmicDepth:kf,viewZToOrthographicDepth:Yr,viewZToPerspectiveDepth:Hx,viewport:If,viewportBottomLeft:s2,viewportCoordinate:Gx,viewportDepthTexture:Of,viewportLinearDepth:l2,viewportMipTexture:Bf,viewportResolution:n2,viewportSafeUV:CE,viewportSharedTexture:b2,viewportSize:zx,viewportTexture:r2,viewportTopLeft:i2,viewportUV:t2,wgsl:PR,wgslFn:LR,workgroupArray:t3,workgroupBarrier:ZR,workgroupId:$R,workingToColorSpace:Sy,xor:N0});const Pi=new Xf;class zP extends bs{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){const i=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background;let r=!1;if(s===null)i._clearColor.getRGB(Pi,Bi),Pi.a=i._clearColor.a;else if(s.isColor===!0)s.getRGB(Pi,Bi),Pi.a=1,r=!0;else if(s.isNode===!0){const o=this.get(e),a=s;Pi.copy(i._clearColor);let l=o.backgroundMesh;if(l===void 0){const h=Vl(Ae(a).mul(Md),{getUV:()=>b_.mul(zl),getTextureLevel:()=>S_});let d=Ff();d=d.setZ(d.w);const f=new Mt;f.name="Background.material",f.side=Gn,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=d,f.colorNode=h,o.backgroundMeshNode=h,o.backgroundMesh=l=new Un(new Zd(1,32,32),f),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(p,m,g){this.matrixWorld.copyPosition(g.matrixWorld)}}const u=a.getCacheKey();o.backgroundCacheKey!==u&&(o.backgroundMeshNode.node=Ae(a).mul(Md),o.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,o.backgroundCacheKey=u),t.unshift(l,l.geometry,l.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);if(i.autoClear===!0||r===!0){const o=n.clearColorValue;o.r=Pi.r,o.g=Pi.g,o.b=Pi.b,o.a=Pi.a,(i.backend.isWebGLBackend===!0||i.alpha===!0)&&(o.r*=o.a,o.g*=o.a,o.b*=o.a),n.depthClearValue=i._clearDepth,n.stencilClearValue=i._clearStencil,n.clearColor=i.autoClearColor===!0,n.clearDepth=i.autoClearDepth===!0,n.clearStencil=i.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let GP=0;class Ad{constructor(e="",t=[],n=0,i=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=i,this.id=GP++}}class HP{constructor(e,t,n,i,s,r,o,a,l,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=u,this.nodeAttributes=i,this.bindings=s,this.updateNodes=r,this.updateBeforeNodes=o,this.updateAfterNodes=a,this.monitor=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const i=new Ad(t.name,[],t.index,t);e.push(i);for(const s of t.bindings)i.bindings.push(s.clone())}else e.push(t);return e}}class ig{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}}class WP{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class aS{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class qP extends aS{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class $P{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let jP=0;class fh{constructor(e=null){this.id=jP++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class lr{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class XP extends lr{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class YP extends lr{constructor(e,t=new he){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class ZP extends lr{constructor(e,t=new P){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class KP extends lr{constructor(e,t=new Ke){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class JP extends lr{constructor(e,t=new He){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class QP extends lr{constructor(e,t=new dn){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class eU extends lr{constructor(e,t=new $e){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class tU extends XP{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class nU extends YP{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class iU extends ZP{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class sU extends KP{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class rU extends JP{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class oU extends QP{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class aU extends eU{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const Gr=4,sg=[.125,.215,.35,.446,.526,.582],Is=20,ph=new Qd(-1,1,1,-1,0,1),cU=new oi(90,1),rg=new He;let mh=null,gh=0,vh=0;const Fs=(1+Math.sqrt(5))/2,Rr=1/Fs,og=[new P(-Fs,Rr,0),new P(Fs,Rr,0),new P(-Rr,0,Fs),new P(Rr,0,Fs),new P(0,Fs,-Rr),new P(0,Fs,Rr),new P(-1,1,-1),new P(1,1,-1),new P(-1,1,1),new P(1,1,1)],lU=[3,1,5,0,4,2],yh=o_(xt(),mi("faceIndex")).normalize(),op=R(yh.x,yh.y.negate(),yh.z);class uU{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,n=.1,i=100,s=null){if(this._setSize(256),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const o=s||this._allocateTargets();return this.fromSceneAsync(e,t,n,i,o),o}mh=this._renderer.getRenderTarget(),gh=this._renderer.getActiveCubeFace(),vh=this._renderer.getActiveMipmapLevel();const r=s||this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}async fromSceneAsync(e,t=0,n=.1,i=100,s=null){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,n,i,s)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTargets();return this.fromEquirectangularAsync(e,n),n}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTargets();return this.fromCubemapAsync(e,t),n}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=cg(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=lg(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Xs||e.mapping===Kr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(mh,gh,vh),e.scissorTest=!1,Uc(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),mh=this._renderer.getRenderTarget(),gh=this._renderer.getActiveCubeFace(),vh=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Kt,minFilter:Kt,generateMipmaps:!1,type:Qn,format:Ys,colorSpace:Bi},i=ag(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ag(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=hU(s)),this._blurMaterial=dU(s,e,t)}return i}async _compileMaterial(e){const t=new Un(this._lodPlanes[0],e);await this._renderer.compile(t,ph)}_sceneToCubeUV(e,t,n,i){const s=cU;s.near=t,s.far=n;const r=[-1,1,-1,-1,-1,-1],o=[1,1,1,-1,-1,-1],a=this._renderer,l=a.autoClear;a.getClearColor(rg),a.autoClear=!1;let u=this._backgroundBox;if(u===null){const f=new Sa({name:"PMREM.Background",side:Gn,depthWrite:!1,depthTest:!1});u=new Un(new ro,f)}let h=!1;const d=e.background;d?d.isColor&&(u.material.color.copy(d),e.background=null,h=!0):(u.material.color.copy(rg),h=!0),a.setRenderTarget(i),a.clear(),h&&a.render(u,s);for(let f=0;f<6;f++){const p=f%3;p===0?(s.up.set(0,r[f],0),s.lookAt(o[f],0,0)):p===1?(s.up.set(0,0,r[f]),s.lookAt(0,o[f],0)):(s.up.set(0,r[f],0),s.lookAt(0,0,o[f]));const m=this._cubeSize;Uc(i,p*m,f>2?m:0,m,m),a.render(e,s)}a.autoClear=l,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Xs||e.mapping===Kr;i?this._cubemapMaterial===null&&(this._cubemapMaterial=cg(e)):this._equirectMaterial===null&&(this._equirectMaterial=lg(e));const s=i?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;const r=this._lodMeshes[0];r.material=s;const o=this._cubeSize;Uc(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(r,ph)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=og[(i-s-1)%og.length];this._blur(e,s-1,s,r,o)}t.autoClear=n}_blur(e,t,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,o){const a=this._renderer,l=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[i];h.material=l;const d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Is-1),m=s/p,g=isFinite(s)?1+Math.floor(u*m):Is;g>Is&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Is}`);const y=[];let _=0;for(let T=0;T<Is;++T){const M=T/m,L=Math.exp(-M*M/2);y.push(L),T===0?_+=L:T<g&&(_+=2*L)}for(let T=0;T<y.length;T++)y[T]=y[T]/_;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=y,d.latitudinal.value=r==="latitudinal"?1:0,o&&(d.poleAxis.value=o);const{_lodMax:x}=this;d.dTheta.value=p,d.mipInt.value=x-n;const S=this._sizeLods[i],w=3*S*(i>x-Gr?i-x+Gr:0),A=4*(this._cubeSize-S);Uc(t,w,A,3*S,2*S),a.setRenderTarget(t),a.render(h,ph)}}function hU(c){const e=[],t=[],n=[],i=[];let s=c;const r=c-Gr+1+sg.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);t.push(a);let l=1/a;o>c-Gr?l=sg[o-c+Gr-1]:o===0&&(l=0),n.push(l);const u=1/(a-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,m=6,g=3,y=2,_=1,x=new Float32Array(g*m*p),S=new Float32Array(y*m*p),w=new Float32Array(_*m*p);for(let T=0;T<p;T++){const M=T%3*2/3-1,L=T>2?0:-1,I=[M,L,0,M+2/3,L,0,M+2/3,L+1,0,M,L,0,M+2/3,L+1,0,M,L+1,0],W=lU[T];x.set(I,g*m*W),S.set(f,y*m*W);const U=[W,W,W,W,W,W];w.set(U,_*m*W)}const A=new Wn;A.setAttribute("position",new Pn(x,g)),A.setAttribute("uv",new Pn(S,y)),A.setAttribute("faceIndex",new Pn(w,_)),e.push(A),i.push(new Un(A,null)),s>Gr&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n,lodMeshes:i}}function ag(c,e,t){const n=new _s(c,e,t);return n.texture.mapping=Fh,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function Uc(c,e,t,n,i){c.viewport.set(e,t,n,i),c.scissor.set(e,t,n,i)}function ap(c){const e=new Mt;return e.depthTest=!1,e.depthWrite=!1,e.blending=js,e.name=`PMREM_${c}`,e}function dU(c,e,t){const n=Li(new Array(Is).fill(0)),i=Ne(new P(0,1,0)),s=Ne(0),r=b(Is),o=Ne(0),a=Ne(1),l=qe(null),u=Ne(0),h=b(1/e),d=b(1/t),f=b(c),p={n:r,latitudinal:o,weights:n,poleAxis:i,outputDirection:op,dTheta:s,samples:a,envMap:l,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},m=ap("blur");return m.uniforms=p,m.fragmentNode=c_({...p,latitudinal:o.equal(1)}),m}function cg(c){const e=ap("cubemap");return e.fragmentNode=no(c,op),e}function lg(c){const e=ap("equirect");return e.fragmentNode=qe(c,Gf(op),0),e}const ug=new WeakMap,fU=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Dc=c=>/e/g.test(c)?String(c).replace(/\+/g,""):(c=Number(c),c+(c%1?"":".0"));class cS{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Xc(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new fh,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=ug.get(this.renderer);return e===void 0&&(e=new xi,ug.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new _s(e,t,n)}createCubeRenderTarget(e,t){return new $x(e,t)}createPMREMGenerator(){return new uU(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const n=this.getBindGroupsCache(),i=[];let s=!0;for(const o of t)i.push(o),s=s&&o.groupNode.shared!==!0;let r;return s?(r=n.get(i),r===void 0&&(r=new Ad(e,i,this.bindingsIndexes[e].group,i),n.set(i,r))):r=new Ad(e,i,this.bindingsIndexes[e].group,i),r}getBindGroupArray(e,t){const n=this.bindings[t];let i=n[e];return i===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=i=[]),i}getBindings(){let e=this.bindGroups;if(e===null){const t={},n=this.bindings;for(const i of ud)for(const s in n[i]){const r=n[i][s];(t[s]||(t[s]=[])).push(...r)}e=[];for(const i in t){const s=t[i],r=this._getBindGroup(i,s);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,n)=>t.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==Fe.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==Fe.NONE&&this.updateBeforeNodes.push(e.getSelf()),n!==Fe.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===Kt||e.magFilter===Bh||e.magFilter===qr||e.magFilter===Ii||e.minFilter===Kt||e.minFilter===Bh||e.minFilter===qr||e.minFilter===Ii}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const n=this.getDataFromNode(e);return n.cache===void 0&&(n.cache=new fh(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new He:e==="vec2"?t=new he:e==="vec3"?t=new P:e==="vec4"&&(t=new Ke)),e==="float")return Dc(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Dc(t.r)}, ${Dc(t.g)}, ${Dc(t.b)} )`;const n=this.getTypeLength(e),i=this.getComponentType(e),s=r=>this.generateConst(i,r);if(n===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(n===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(n===4)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(n>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const n=this.attributes;for(const s of n)if(s.name===e)return s;const i=new ig(e,t);return n.push(i),i}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===un)return"int";if(t===Xt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;const n=qv(e);return(t==="float"?"":t[0])+n}getTypeFromArray(e){return fU.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const n=t.array,i=e.itemSize,s=e.normalized;let r;return!(e instanceof Mv)&&s!==!0&&(r=this.getTypeFromArray(n)),this.getTypeFromLength(i,r)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return n!==null?Number(n[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Xc(this.stack),this.stacks.push(of()||this.stack),la(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,la(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){n=n===null?e.isGlobal(this)?this.globalCache:this.cache:n;let i=n.getData(e);return i===void 0&&(i={},n.setData(e,i)),i[t]===void 0&&(i[t]={}),i[t]}getNodeProperties(e,t="any"){const n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const n=this.getDataFromNode(e);let i=n.bufferAttribute;if(i===void 0){const s=this.uniforms.index++;i=new ig("nodeAttribute"+s,t,e),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeFromNode(e,t=this.shaderStage){const n=this.getDataFromNode(e,t);if(n.structType===void 0){const i=this.structs.index++;e.name=`StructType${i}`,this.structs[t].push(e),n.structType=e}return e}getUniformFromNode(e,t,n=this.shaderStage,i=null){const s=this.getDataFromNode(e,n,this.globalCache);let r=s.uniform;if(r===void 0){const o=this.uniforms.index++;r=new WP(i||"nodeUniform"+o,t,e),this.uniforms[n].push(r),s.uniform=r}return r}getVarFromNode(e,t=null,n=e.getNodeType(this),i=this.shaderStage){const s=this.getDataFromNode(e,i);let r=s.variable;if(r===void 0){const o=this.vars[i]||(this.vars[i]=[]);t===null&&(t="nodeVar"+o.length),r=new aS(t,n),o.push(r),s.variable=r}return r}getVaryingFromNode(e,t=null,n=e.getNodeType(this)){const i=this.getDataFromNode(e,"any");let s=i.varying;if(s===void 0){const r=this.varyings,o=r.length;t===null&&(t="nodeVarying"+o),s=new qP(t,n),r.push(s),i.varying=s}return s}getCodeFromNode(e,t,n=this.shaderStage){const i=this.getDataFromNode(e);let s=i.code;if(s===void 0){const r=this.codes[n]||(this.codes[n]=[]),o=r.length;s=new $P("nodeCode"+o,t),r.push(s),i.code=s}return s}addFlowCodeHierarchy(e,t){const{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(e);let s=!0,r=t;for(;r;){if(i.get(r)===!0){s=!1;break}r=this.getDataFromNode(r).parentNodeBlock}if(s)for(const o of n)this.addLineFlowCode(o)}addLineFlowCodeBlock(e,t,n){const i=this.getDataFromNode(e),s=i.flowCodes||(i.flowCodes=[]),r=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);s.push(t),r.set(n,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}buildFunctionNode(e){const t=new I_,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){const t=e.layout,n={[Symbol.iterator](){let r=0;const o=Object.values(this);return{next:()=>({value:o[r],done:r++>=o.length})}}};for(const r of t.inputs)n[r.name]=new f_(r.type,r.name);e.layout=null;const i=e.call(n),s=this.flowStagesNode(i,t.type);return e.layout=t,s}flowStagesNode(e,t=null){const n=this.flow,i=this.vars,s=this.cache,r=this.buildStage,o=this.stack,a={code:""};this.flow=a,this.vars={},this.cache=new fh,this.stack=Xc();for(const l of ld)this.setBuildStage(l),a.result=e.build(this,t);return a.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.cache=s,this.stack=o,this.setBuildStage(r),a}getFunctionOperator(){return null}flowChildNode(e,t=null){const n=this.flow,i={code:""};return this.flow=i,i.result=e.build(this,t),this.flow=n,i}flowNodeFromShaderStage(e,t,n=null,i=null){const s=this.shaderStage;this.setShaderStage(e);const r=this.flowChildNode(t,n);return i!==null&&(r.code+=`${this.tab+i} = ${r.result};
`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(s),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const n=this.vars[e];if(n!==void 0)for(const i of n)t+=`${this.getVar(i.type,i.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";if(t!==void 0)for(const i of t)n+=i.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:n}=this;if(t!==null){let i=n.library.fromMaterial(t);i===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),i=new Mt),i.build(this)}else this.addFlow("compute",e);for(const i of ld){this.setBuildStage(i),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const s of ud){this.setShaderStage(s);const r=this.flowNodes[s];for(const o of r)i==="generate"?this.flowNode(o):o.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new tU(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new nU(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new iU(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new sU(e);if(t==="color")return new rU(e);if(t==="mat3")return new oU(e);if(t==="mat4")return new aU(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,n){if(t=this.getVectorType(t),n=this.getVectorType(n),t===n||n===null||this.isReference(n))return e;const i=this.getTypeLength(t),s=this.getTypeLength(n);return i===16&&s===9?`${this.getType(n)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:i===9&&s===4?`${this.getType(n)}(${e}[0].xy, ${e}[1].xy)`:i>4||s>4||s===0?e:i===s?`${this.getType(n)}( ${e} )`:i>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(t)),n):s===4&&i>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:i===2?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(i===1&&s>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r${wl} - Node System
`}}class hg{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return n===void 0&&(n={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,n)),n}updateBeforeNode(e){const t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===Fe.FRAME){const{frameMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.frameId&&e.updateBefore(this)!==!1&&i.set(n,this.frameId)}else if(t===Fe.RENDER){const{renderMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.renderId&&e.updateBefore(this)!==!1&&i.set(n,this.renderId)}else t===Fe.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===Fe.FRAME){const{frameMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.frameId&&e.updateAfter(this)!==!1&&i.set(n,this.frameId)}else if(t===Fe.RENDER){const{renderMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.renderId&&e.updateAfter(this)!==!1&&i.set(n,this.renderId)}else t===Fe.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),n=e.updateReference(this);if(t===Fe.FRAME){const{frameMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.frameId&&e.update(this)!==!1&&i.set(n,this.frameId)}else if(t===Fe.RENDER){const{renderMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.renderId&&e.update(this)!==!1&&i.set(n,this.renderId)}else t===Fe.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class cp{constructor(e,t,n=null,i="",s=!1){this.type=e,this.name=t,this.count=n,this.qualifier=i,this.isConst=s}}cp.isNodeFunctionInput=!0;class pU extends cr{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,n=this.colorNode,i=tp(this.light),s=e.context.reflectedLight;t.direct({lightDirection:i,lightColor:n,reflectedLight:s},e.stack,e)}}const xh=new $e,Lc=new $e;let Io=null;class mU extends cr{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=Ne(new P).setGroup(Pe),this.halfWidth=Ne(new P).setGroup(Pe),this.updateType=Fe.RENDER}update(e){super.update(e);const{light:t}=this,n=e.camera.matrixWorldInverse;Lc.identity(),xh.copy(t.matrixWorld),xh.premultiply(n),Lc.extractRotation(xh),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(Lc),this.halfHeight.value.applyMatrix4(Lc)}setup(e){super.setup(e);let t,n;e.isAvailable("float32Filterable")?(t=qe(Io.LTC_FLOAT_1),n=qe(Io.LTC_FLOAT_2)):(t=qe(Io.LTC_HALF_1),n=qe(Io.LTC_HALF_2));const{colorNode:i,light:s}=this,r=e.context.lightingModel,o=Ql(s),a=e.context.reflectedLight;r.directRectArea({lightColor:i,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:a,ltc_1:t,ltc_2:n},e.stack,e)}static setLTC(e){Io=e}}class lS extends cr{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=Ne(0).setGroup(Pe),this.penumbraCosNode=Ne(0).setGroup(Pe),this.cutoffDistanceNode=Ne(0).setGroup(Pe),this.decayExponentNode=Ne(0).setGroup(Pe)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:n}=this;return Wi(t,n,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:n,cutoffDistanceNode:i,decayExponentNode:s,light:r}=this,o=Ql(r).sub(It),a=o.normalize(),l=a.dot(tp(r)),u=this.getSpotAttenuation(l),h=o.length(),d=ip({lightDistance:h,cutoffDistance:i,decayExponent:s});let f=n.mul(u).mul(d);if(r.map){const m=z_(r),g=qe(r.map,m.xy).onRenderUpdate(()=>r.map);f=m.mul(2).sub(1).abs().lessThan(1).all().select(f.mul(g),f)}const p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:f,reflectedLight:p},e.stack,e)}}class gU extends lS{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let n=null;if(t&&t.isTexture===!0){const i=e.acos().mul(1/Math.PI);n=qe(t,Q(i,0),0).r}else n=super.getSpotAttenuation(e);return n}}class vU extends cr{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class yU extends cr{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=ep(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Ne(new He).setGroup(Pe)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:i}=this,r=Hn.dot(i).mul(.5).add(.5),o=tt(n,t,r);e.context.irradiance.addAssign(o)}}class xU extends cr{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let n=0;n<9;n++)t.push(new P);this.lightProbe=Li(t)}update(e){const{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){const t=oS(zl,this.lightProbe);e.context.irradiance.addAssign(t)}}class uS{parseFunction(){console.warn("Abstract function.")}}class lp{constructor(e,t,n="",i=""){this.type=e,this.inputs=t,this.name=n,this.precision=i}getCode(){console.warn("Abstract function.")}}lp.isNodeFunction=!0;const _U=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,SU=/[a-z_0-9]+/ig,dg="#pragma main",bU=c=>{c=c.trim();const e=c.indexOf(dg),t=e!==-1?c.slice(e+dg.length):c,n=t.match(_U);if(n!==null&&n.length===5){const i=n[4],s=[];let r=null;for(;(r=SU.exec(i))!==null;)s.push(r);const o=[];let a=0;for(;a<s.length;){const p=s[a][0]==="const";p===!0&&a++;let m=s[a][0];m==="in"||m==="out"||m==="inout"?a++:m="";const g=s[a++][0];let y=Number.parseInt(s[a][0]);Number.isNaN(y)===!1?a++:y=null;const _=s[a++][0];o.push(new cp(g,_,y,m,p))}const l=t.substring(n[0].length),u=n[3]!==void 0?n[3]:"",h=n[2],d=n[1]!==void 0?n[1]:"",f=e!==-1?c.slice(0,e):"";return{type:h,inputs:o,name:u,precision:d,inputsCode:i,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class TU extends lp{constructor(e){const{type:t,inputs:n,name:i,precision:s,inputsCode:r,blockCode:o,headerCode:a}=bU(e);super(t,n,i,s),this.inputsCode=r,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const n=this.blockCode;if(n!==""){const{type:i,inputsCode:s,headerCode:r,precision:o}=this;let a=`${i} ${e} ( ${s.trim()} )`;o!==""&&(a=`${o} ${a}`),t=r+a+n}else t="";return t}}class wU extends uS{parseFunction(e){return new TU(e)}}const fg=new WeakMap;class MU extends bs{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new hg,this.nodeBuilderCache=new Map,this.callHashCache=new xi,this.groupsData=new xi}updateGroup(e){const t=e.groupNode,n=t.name;if(n===lf.name)return!0;if(n===Pe.name){const r=this.get(e),o=this.nodeFrame.renderId;return r.renderId!==o?(r.renderId=o,!0):!1}if(n===p0.name){const r=this.get(e),o=this.nodeFrame.frameId;return r.frameId!==o?(r.frameId=o,!0):!1}const i=[t,e];let s=this.groupsData.get(i);return s===void 0&&this.groupsData.set(i,s={}),s.version!==t.version?(s.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const{nodeBuilderCache:i}=this,s=this.getForRenderCacheKey(e);if(n=i.get(s),n===void 0){const r=this.backend.createNodeBuilder(e.object,this.renderer);r.scene=e.scene,r.material=e.material,r.camera=e.camera,r.context.material=e.material,r.lightsNode=e.lightsNode,r.environmentNode=this.getEnvironmentNode(e.scene),r.fogNode=this.getFogNode(e.scene),r.clippingContext=e.clippingContext,r.build(),n=this._createNodeBuilderState(r),i.set(s,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const i=this.backend.createNodeBuilder(e,this.renderer);i.build(),n=this._createNodeBuilderState(i),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new HP(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const n=[e,t],i=this.renderer.info.calls;let s=this.callHashCache.get(n);if(s===void 0||s.callId!==i){const r=this.getEnvironmentNode(e),o=this.getFogNode(e),a=[];t&&a.push(t.getCacheKey(!0)),r&&a.push(r.getCacheKey()),o&&a.push(o.getCacheKey()),a.push(this.renderer.shadowMap.enabled?1:0),s={callId:i,cacheKey:ef(a)},this.callHashCache.set(n,s)}return s.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),n=e.background;if(n){const i=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==n||i){let s=null;if(n.isCubeTexture===!0||n.mapping===ga||n.mapping===va||n.mapping===Fh)if(e.backgroundBlurriness>0||n.mapping===Fh)s=$f(n);else{let r;n.isCubeTexture===!0?r=no(n):r=qe(n),s=Xx(r)}else n.isTexture===!0?s=qe(n,yi.flipY()).setUpdateMatrix(!0):n.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",n);t.backgroundNode=s,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),n=e.fog;if(n){if(t.fog!==n){let i=null;if(n.isFogExp2){const s=rt("color","color",n).setGroup(Pe),r=rt("density","float",n).setGroup(Pe);i=k_(s,r)}else if(n.isFog){const s=rt("color","color",n).setGroup(Pe),r=rt("near","float",n).setGroup(Pe),o=rt("far","float",n).setGroup(Pe);i=V_(s,r,o)}else console.error("WebGPUNodes: Unsupported fog configuration.",n);t.fogNode=i,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),n=e.environment;if(n){if(t.environment!==n){let i=null;n.isCubeTexture===!0?i=no(n):n.isTexture===!0?i=qe(n):console.error("Nodes: Unsupported environment configuration.",n),t.environmentNode=i,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,i=null,s=null){const r=this.nodeFrame;return r.renderer=e,r.scene=t,r.object=n,r.camera=i,r.material=s,r}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return fg.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,n=this.getOutputCacheKey(),i=qe(e,yi).renderOutput(t.toneMapping,t.currentColorSpace);return fg.set(e,n),i}updateBefore(e){const t=e.getNodeBuilderState();for(const n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){const t=e.getNodeBuilderState();for(const n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){const t=this.getNodeFrame(),n=this.getForCompute(e);for(const i of n.updateNodes)t.updateNode(i)}updateForRender(e){const t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(const i of n.updateNodes)t.updateNode(i)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new hg,this.nodeBuilderCache=new Map}}const _h=new os;class Tl{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",e===null?(this.intersectionPlanes=[],this.unionPlanes=[],this.viewNormalMatrix=new dn,this.clippingGroupContexts=new WeakMap,this.shadowPass=!1):(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix),this.parentVersion=null}projectPlanes(e,t,n){const i=e.length;for(let s=0;s<i;s++){_h.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const r=t[n+s],o=_h.normal;r.x=-o.x,r.y=-o.y,r.z=-o.z,r.w=_h.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowNodeMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let n=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const i=t.clippingPlanes,s=i.length;let r,o;if(this.clipIntersection?(r=this.intersectionPlanes,o=e.intersectionPlanes.length):(r=this.unionPlanes,o=e.unionPlanes.length),r.length!==o+s){r.length=o+s;for(let a=0;a<s;a++)r[o+a]=new Ke;n=!0}this.projectPlanes(i,r,o),n&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new Tl(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class AU{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class NU{constructor(){this.lists=new xi}get(e,t){const n=this.lists,i=[e,t];let s=n.get(i);return s===void 0&&(s=new AU(e,t),n.set(i,s)),s}dispose(){this.lists=new xi}}class hS{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const n=this.getMaterialNodeClass(e.type);if(n!==null){t=new n;for(const i in e)t[i]=e[i]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}addClass(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}}const CU=new np;class EU extends xi{constructor(){super()}createNode(e=[]){return new np().setLights(e)}getNode(e,t){if(e.isQuadMesh)return CU;const n=[e,t];let i=this.get(n);return i===void 0&&(i=this.createNode(),this.set(n,i)),i}}const pg=new qd,Fc=new he,Sh=new Ke,bh=new Ev,Ic=new $e,ss=new Ke;class RU{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:i=!0,depth:s=!0,stencil:r=!1,antialias:o=!1,samples:a=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=a||o===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=n,this.outputColorSpace=Re,this.toneMapping=Wr,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=r,this.info=new qC,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new hS,this.lighting=new EU,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Ke(0,0,this._width,this._height),this._scissor=new Ke(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new Zf(new Mt),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const u=this.alpha===!0?0:1;this._clearColor=new Xf(0,0,0,u),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:HS},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(h,d,f)=>{await this.compileAsync(h,d);const p=this._renderLists.get(h,d),m=this._renderContexts.get(h,d,this._renderTarget),g=h.overrideMaterial||f.material,y=this._objects.get(f,g,h,d,p.lightsNode,m,m.clippingContext),{fragmentShader:_,vertexShader:x}=y.getNodeBuilderState();return{fragmentShader:_,vertexShader:x}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(i){if(this._getFallback!==null)try{this.backend=n=this._getFallback(i),await n.init(this)}catch(s){t(s);return}else{t(i);return}}this._nodes=new MU(this,n),this._animation=new FC(this._nodes,this.info),this._attributes=new GC(n),this._background=new zP(this,this._nodes),this._geometries=new WC(this._attributes,this.info),this._textures=new sE(this,n,this.info),this._pipelines=new YC(n,this._nodes),this._bindings=new ZC(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new VC(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new QC(this.lighting),this._bundles=new NU,this._renderContexts=new nE,this._animation.start(),this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const i=this._nodes.nodeFrame,s=i.renderId,r=this._currentRenderContext,o=this._currentRenderObjectFunction,a=this._compilationPromises,l=e.isScene===!0?e:pg;n===null&&(n=e);const u=this._renderTarget,h=this._renderContexts.get(n,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,i.renderId++,i.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new Tl),h.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,u);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,h.clippingContext),n!==e&&n.traverseVisible(function(x){x.isLight&&x.layers.test(t.layers)&&p.pushLight(x)}),p.finish(),u!==null){this._textures.updateRenderTarget(u,d);const x=this._textures.get(u);h.textures=x.textures,h.depthTexture=x.depthTexture}else h.textures=null,h.depthTexture=null;this._nodes.updateScene(l),this._background.update(l,p,h);const m=p.opaque,g=p.transparent,y=p.transparentDoublePass,_=p.lightsNode;this.opaque===!0&&m.length>0&&this._renderObjects(m,t,l,_),this.transparent===!0&&g.length>0&&this._renderTransparents(g,y,t,l,_),i.renderId=s,this._currentRenderContext=r,this._currentRenderObjectFunction=o,this._compilationPromises=a,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init();const n=this._renderScene(e,t);await this.backend.resolveTimestampAsync(n,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,n){const{bundleGroup:i,camera:s,renderList:r}=e,o=this._currentRenderContext,a=this._bundles.get(i,s),l=this.backend.get(a);l.renderContexts===void 0&&(l.renderContexts=new Set);const u=i.version!==l.version,h=l.renderContexts.has(o)===!1||u;if(l.renderContexts.add(o),h){this.backend.beginBundle(o),(l.renderObjects===void 0||u)&&(l.renderObjects=[]),this._currentRenderBundle=a;const d=r.opaque;this.opaque===!0&&d.length>0&&this._renderObjects(d,s,t,n),this._currentRenderBundle=null,this.backend.finishBundle(o,a),l.version=i.version}else{const{renderObjects:d}=l;for(let f=0,p=d.length;f<p;f++){const m=d[f];this._nodes.needsRefresh(m)&&(this._nodes.updateBefore(m),this._nodes.updateForRender(m),this._bindings.updateForRender(m),this._nodes.updateAfter(m))}}this.backend.addBundle(o,a)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==Wr===!1&&t!==Bi===!1)return null;const{width:s,height:r}=this.getDrawingBufferSize(Fc),{depth:o,stencil:a}=this;let l=this._frameBufferTarget;return l===null&&(l=new _s(s,r,{depthBuffer:o,stencilBuffer:a,type:Qn,format:Ys,colorSpace:Bi,generateMipmaps:!1,minFilter:Kt,magFilter:Kt,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l),l.depthBuffer=o,l.stencilBuffer=a,l.setSize(s,r),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l}_renderScene(e,t,n=!0){if(this._isDeviceLost===!0)return;const i=n?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,r=s.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,l=e.isScene===!0?e:pg,u=this._renderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel;let f;i!==null?(f=i,this.setRenderTarget(f)):f=u;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;const m=this.coordinateSystem;t.coordinateSystem!==m&&(t.coordinateSystem=m,t.updateProjectionMatrix()),e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld();let g=this._viewport,y=this._scissor,_=this._pixelRatio;f!==null&&(g=f.viewport,y=f.scissor,_=1),this.getDrawingBufferSize(Fc),Sh.set(0,0,Fc.width,Fc.height);const x=g.minDepth===void 0?0:g.minDepth,S=g.maxDepth===void 0?1:g.maxDepth;p.viewportValue.copy(g).multiplyScalar(_).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=x,p.viewportValue.maxDepth=S,p.viewport=p.viewportValue.equals(Sh)===!1,p.scissorValue.copy(y).multiplyScalar(_).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(Sh)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new Tl),p.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,f),Ic.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),bh.setFromProjectionMatrix(Ic,m);const w=this._renderLists.get(e,t);if(w.begin(),this._projectObject(e,t,0,w,p.clippingContext),w.finish(),this.sortObjects===!0&&w.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const W=this._textures.get(f);p.textures=W.textures,p.depthTexture=W.depthTexture,p.width=W.width,p.height=W.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=h,p.activeMipmapLevel=d,p.occlusionQueryCount=w.occlusionQueryCount,this._nodes.updateScene(l),this._background.update(l,w,p),this.backend.beginRender(p);const{bundles:A,lightsNode:T,transparentDoublePass:M,transparent:L,opaque:I}=w;if(A.length>0&&this._renderBundles(A,l,T),this.opaque===!0&&I.length>0&&this._renderObjects(I,t,l,T),this.transparent===!0&&L.length>0&&this._renderTransparents(L,M,t,l,T),this.backend.finishRender(p),s.renderId=r,this._currentRenderContext=o,this._currentRenderObjectFunction=a,i!==null){this.setRenderTarget(u,h,d);const W=this._quad;this._nodes.hasOutputChange(f.texture)&&(W.material.fragmentNode=this._nodes.getOutputNode(f.texture),W.material.needsUpdate=!0),this._renderScene(W,W.camera,!1)}return l.onAfterRender(this,e,t,f),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,n=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),n===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,i){const s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,n,i)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,i,s=0,r=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,n,i),o.minDepth=s,o.maxDepth=r}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,n);const i=this._renderTarget||this._getFrameBufferTarget();let s=null;if(i!==null&&(this._textures.updateRenderTarget(i),s=this._textures.get(i)),this.backend.clear(e,t,n,s),i!==null&&this._renderTarget===null){const r=this._quad;this._nodes.hasOutputChange(i.texture)&&(r.material.fragmentNode=this._nodes.getOutputNode(i.texture),r.material.needsUpdate=!0),this._renderScene(r,r.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){this._initialized===!1&&await this.init(),this.clear(e,t,n)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?Wr:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?Bi:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this.isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,n=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const i=this.backend,s=this._pipelines,r=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(a[0]===void 0||a[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");i.beginCompute(e);for(const l of a){if(s.has(l)===!1){const d=()=>{l.removeEventListener("dispose",d),s.delete(l),r.delete(l),o.delete(l)};l.addEventListener("dispose",d);const f=l.onInitFunction;f!==null&&f.call(l,{renderer:this})}o.updateForCompute(l),r.updateForCompute(l);const u=r.getForCompute(l),h=s.getForCompute(l,u);i.compute(e,l,u,h)}i.finishCompute(e),t.renderId=n}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e),await this.backend.resolveTimestampAsync(e,"compute")}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){if(this._initialized===!1)return console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),!1;this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=ss.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=ss.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=ss.set(0,0,e.image.width,e.image.height);let n=this._currentRenderContext,i;n!==null?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),i!==null&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(e,{renderTarget:i}),this.backend.copyFramebufferToTexture(e,n,t)}copyTextureToTexture(e,t,n=null,i=null,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,i,s)}readRenderTargetPixelsAsync(e,t,n,i,s,r=0,o=0){return this.backend.copyTextureToBuffer(e.textures[r],t,n,i,s,o)}_projectObject(e,t,n,i,s){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder,e.isClippingGroup&&e.enabled&&(s=s.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)i.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||bh.intersectsSprite(e)){this.sortObjects===!0&&ss.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ic);const{geometry:a,material:l}=e;l.visible&&i.push(e,a,l,n,ss.z,null,s)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||bh.intersectsObject(e))){const{geometry:a,material:l}=e;if(this.sortObjects===!0&&(a.boundingSphere===null&&a.computeBoundingSphere(),ss.copy(a.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Ic)),Array.isArray(l)){const u=a.groups;for(let h=0,d=u.length;h<d;h++){const f=u[h],p=l[f.materialIndex];p&&p.visible&&i.push(e,a,p,n,ss.z,f,s)}}else l.visible&&i.push(e,a,l,n,ss.z,null,s)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const a=i;i=this._renderLists.get(e,t),i.begin(),a.pushBundle({bundleGroup:e,camera:t,renderList:i}),i.finish()}const o=e.children;for(let a=0,l=o.length;a<l;a++)this._projectObject(o[a],t,n,i,s)}_renderBundles(e,t,n){for(const i of e)this._renderBundle(i,t,n)}_renderTransparents(e,t,n,i,s){if(t.length>0){for(const{material:r}of t)r.side=Gn;this._renderObjects(t,n,i,s,"backSide");for(const{material:r}of t)r.side=Zr;this._renderObjects(e,n,i,s);for(const{material:r}of t)r.side=ks}else this._renderObjects(e,n,i,s)}_renderObjects(e,t,n,i,s=null){for(let r=0,o=e.length;r<o;r++){const a=e[r],{object:l,geometry:u,material:h,group:d,clippingContext:f}=a;if(t.isArrayCamera){const p=t.cameras;for(let m=0,g=p.length;m<g;m++){const y=p[m];if(l.layers.test(y.layers)){const _=y.viewport,x=_.minDepth===void 0?0:_.minDepth,S=_.maxDepth===void 0?1:_.maxDepth,w=this._currentRenderContext.viewportValue;w.copy(_).multiplyScalar(this._pixelRatio).floor(),w.minDepth=x,w.maxDepth=S,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(l,n,y,u,h,d,i,f,s)}}}else this._currentRenderObjectFunction(l,n,t,u,h,d,i,f,s)}}renderObject(e,t,n,i,s,r,o,a=null,l=null){let u,h,d;if(e.onBeforeRender(this,t,n,i,s,r),t.overrideMaterial!==null){const f=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(u=f.positionNode,f.positionNode=s.positionNode),f.alphaTest=s.alphaTest,f.alphaMap=s.alphaMap,f.isShadowNodeMaterial&&(f.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(d=f.depthNode,f.depthNode=s.depthNode),s.castShadowNode&&s.castShadowNode.isNode&&(h=f.colorNode,f.colorNode=s.castShadowNode)),s=f}s.transparent===!0&&s.side===ks&&s.forceSinglePass===!1?(s.side=Gn,this._handleObjectFunction(e,s,t,n,o,r,a,"backSide"),s.side=Zr,this._handleObjectFunction(e,s,t,n,o,r,a,l),s.side=ks):this._handleObjectFunction(e,s,t,n,o,r,a,l),u!==void 0&&(t.overrideMaterial.positionNode=u),d!==void 0&&(t.overrideMaterial.depthNode=d),h!==void 0&&(t.overrideMaterial.colorNode=h),e.onAfterRender(this,t,n,i,s,r)}_renderObjectDirect(e,t,n,i,s,r,o,a){const l=this._objects.get(e,t,n,i,s,this._currentRenderContext,o,a);l.drawRange=e.geometry.drawRange,l.group=r;const u=this._nodes.needsRefresh(l);u&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.scene),this.backend.draw(l,this.info),u&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,n,i,s,r,o){const a=this._objects.get(e,t,n,i,s,this._currentRenderContext,r,o);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class up{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function PU(c){return c+(hs-c%hs)%hs}class dS extends up{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return PU(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class fS extends dS{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let UU=0;class pS extends fS{constructor(e,t){super("UniformBuffer_"+UU++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class DU extends fS{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,n=this.uniforms.length;t<n;t++){const i=this.uniforms[t],{boundary:s,itemSize:r}=i,o=e%hs,a=hs-o;o!==0&&a-s<0?e+=hs-o:o%s!==0&&(e+=o%s),i.offset=e/this.bytesPerElement,e+=r*this.bytesPerElement}return Math.ceil(e/hs)*hs}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s]!==i){const o=this._getBufferForType(r);o[s]=n[s]=i,t=!0}return t}updateVector2(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y){const o=this._getBufferForType(r);o[s+0]=n[s+0]=i.x,o[s+1]=n[s+1]=i.y,t=!0}return t}updateVector3(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y||n[s+2]!==i.z){const o=this._getBufferForType(r);o[s+0]=n[s+0]=i.x,o[s+1]=n[s+1]=i.y,o[s+2]=n[s+2]=i.z,t=!0}return t}updateVector4(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y||n[s+2]!==i.z||n[s+4]!==i.w){const o=this._getBufferForType(r);o[s+0]=n[s+0]=i.x,o[s+1]=n[s+1]=i.y,o[s+2]=n[s+2]=i.z,o[s+3]=n[s+3]=i.w,t=!0}return t}updateColor(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset;if(n[s+0]!==i.r||n[s+1]!==i.g||n[s+2]!==i.b){const r=this.buffer;r[s+0]=n[s+0]=i.r,r[s+1]=n[s+1]=i.g,r[s+2]=n[s+2]=i.b,t=!0}return t}updateMatrix3(e){let t=!1;const n=this.values,i=e.getValue().elements,s=e.offset;if(n[s+0]!==i[0]||n[s+1]!==i[1]||n[s+2]!==i[2]||n[s+4]!==i[3]||n[s+5]!==i[4]||n[s+6]!==i[5]||n[s+8]!==i[6]||n[s+9]!==i[7]||n[s+10]!==i[8]){const r=this.buffer;r[s+0]=n[s+0]=i[0],r[s+1]=n[s+1]=i[1],r[s+2]=n[s+2]=i[2],r[s+4]=n[s+4]=i[3],r[s+5]=n[s+5]=i[4],r[s+6]=n[s+6]=i[5],r[s+8]=n[s+8]=i[6],r[s+9]=n[s+9]=i[7],r[s+10]=n[s+10]=i[8],t=!0}return t}updateMatrix4(e){let t=!1;const n=this.values,i=e.getValue().elements,s=e.offset;return FU(n,i,s)===!1&&(this.buffer.set(i,s),LU(n,i,s),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function LU(c,e,t){for(let n=0,i=e.length;n<i;n++)c[t+n]=e[n]}function FU(c,e,t){for(let n=0,i=e.length;n<i;n++)if(c[t+n]!==e[n])return!1;return!0}let IU=0;class mS extends DU{constructor(e,t){super(e),this.id=IU++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const n=t.nodeUniform.node;if(!n)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(n)}return e}}let BU=0;class OU extends up{constructor(e,t){super(e),this.id=BU++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class eu extends OU{constructor(e,t,n,i=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=i}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class gS extends eu{constructor(e,t,n,i){super(e,t,n,i),this.isSampledCubeTexture=!0}}class vS extends eu{constructor(e,t,n,i){super(e,t,n,i),this.isSampledTexture3D=!0}}const VU={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},kU={low:"lowp",medium:"mediump",high:"highp"},mg={swizzleAssign:!0,storageBuffer:!1},gg=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class zU extends cS{constructor(e,t){super(e,t,new wU),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]},this.useComparisonMethod=!0}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Zs}getMethod(e){return VU[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const r of t.inputs)i.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${i.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const n=t.array,i=t.count*t.itemSize,{itemSize:s}=t,r=t.array.constructor.name.toLowerCase().includes("int");let o=r?Od:Bd;s===2?o=r?Vd:na:s===3?o=r?ob:Id:s===4&&(o=r?kd:Ys);const a={Float32Array:Rn,Uint8Array:ms,Uint16Array:Br,Uint32Array:Xt,Int8Array:zo,Int16Array:Go,Int32Array:un,Uint8ClampedArray:ms},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/s))));let u=Math.ceil(i/s/l);l*u*s<i&&u++;const h=l*u*s,d=new n.constructor(h);d.set(n,0),t.array=d;const f=new m1(t.array,l,u,o,a[t.array.constructor.name]||Rn);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new gi(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:n}=e,i=t.value;if(this.renderer.backend.has(i)){const u=this.renderer.backend.get(i);u.pbo=i.pbo}const s=this.getUniformFromNode(i.pboNode,"texture",this.shaderStage,this.context.label),r=this.getPropertyName(s);this.increaseUsage(n);const o=n.build(this,"uint"),a=this.getDataFromNode(e);let l=a.propertyName;if(l===void 0){const u=this.getVarFromNode(e);l=this.getPropertyName(u);const h=this.getDataFromNode(t);let d=h.propertySizeName;d===void 0&&(d=l+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${r}, 0 ).x )`,e),h.propertySizeName=d);const{itemSize:f}=i,p="."+sr.join("").slice(0,f),m=`ivec2(${o} % ${d}, ${o} / ${d})`,g=this.generateTextureLoad(null,r,m,null,"0");let y="vec4";i.pbo.type===Xt?y="uvec4":i.pbo.type===un&&(y="ivec4"),this.addLineFlowCode(`${l} = ${y}(${g})${p}`,e),a.propertyName=l}return l}generateTextureLoad(e,t,n,i,s="0"){return i?`texelFetch( ${t}, ivec3( ${n}, ${i} ), ${s} )`:`texelFetch( ${t}, ${n}, ${s} )`}generateTexture(e,t,n,i){return e.isDepthTexture?`texture( ${t}, ${n} ).x`:(i&&(n=`vec3( ${n}, ${i} )`),`texture( ${t}, ${n} )`)}generateTextureLevel(e,t,n,i){return`textureLod( ${t}, ${n}, ${i} )`}generateTextureBias(e,t,n,i){return`texture( ${t}, ${n}, ${i} )`}generateTextureGrad(e,t,n,i){return`textureGrad( ${t}, ${n}, ${i[0]}, ${i[1]} )`}generateTextureCompare(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`texture( ${t}, vec3( ${n}, ${i} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const i of n)t.push(`${this.getVar(i.type,i.name)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],n=[],i={};for(const r of t){let o=null,a=!1;if(r.type==="texture"){const u=r.node.value;let h="";u.isDataTexture===!0&&(u.type===Xt?h="u":u.type===un&&(h="i")),u.compareFunction?o=`sampler2DShadow ${r.name};`:u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?o=`${h}sampler2DArray ${r.name};`:o=`${h}sampler2D ${r.name};`}else if(r.type==="cubeTexture")o=`samplerCube ${r.name};`;else if(r.type==="texture3D")o=`sampler3D ${r.name};`;else if(r.type==="buffer"){const u=r.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";o=`${u.name} {
	${h} ${r.name}[${f}];
};
`}else o=`${this.getVectorType(r.type)} ${this.getPropertyName(r,e)};`,a=!0;const l=r.node.precision;if(l!==null&&(o=kU[l]+" "+o),a){o="	"+o;const u=r.groupNode.name;(i[u]||(i[u]=[])).push(o)}else o="uniform "+o,n.push(o)}let s="";for(const r in i){const o=i[r];s+=this._getGLSLUniformStruct(e+"_"+r,o.join(`
`))+`
`}return s+=n.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==un){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const i=n.array;i instanceof Uint32Array||i instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const n=this.getAttributesArray();let i=0;for(const s of n)t+=`layout( location = ${i++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){const t=[],n=e.getMemberTypes();for(let i=0;i<n.length;i++){const s=n[i];t.push(`layout( location = ${i} ) out ${s} m${i};`)}return t.join(`
`)}getStructs(e){const t=[],n=this.structs[e];if(n.length===0)return`layout( location = 0 ) out vec4 fragColor;
`;for(let i=0,s=n.length;i<s;i++){const r=n[i];let o=`
`;o+=this.getStructMembers(r),o+=`
`,t.push(o)}return t.join(`

`)}getVaryings(e){let t="";const n=this.varyings;if(e==="vertex"||e==="compute")for(const i of n){e==="compute"&&(i.needsInterpolation=!0);const s=this.getType(i.type),r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}${i.needsInterpolation?"out":"/*out*/"} ${s} ${i.name};
`}else if(e==="fragment"){for(const i of n)if(i.needsInterpolation){const s=this.getType(i.type),r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}in ${s} ${i.name};
`}}for(const i of this.builtins[e])t+=`${i};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,i)=>n*i,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){const i=this.extensions[n]||(this.extensions[n]=new Map);i.has(e)===!1&&i.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const i=this.renderer.backend.extensions;this.object.isBatchedMesh&&i.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const n=this.extensions[e];if(n!==void 0)for(const{name:i,behavior:s}of n.values())t.push(`#extension ${i} : ${s}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=mg[e];if(t===void 0){let n;switch(t=!1,e){case"float32Filterable":n="OES_texture_float_linear";break;case"clipDistance":n="WEBGL_clip_cull_distance";break}if(n!==void 0){const i=this.renderer.backend.extensions;i.has(n)&&(i.get(n),t=!0)}mg[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let n=0;n<e.length;n++){const i=e[n],s=this.getPropertyName(i.attributeNode);t+=`${i.varyingName} = ${s};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${gg}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${gg}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let n=`// code

`;n+=this.flowCode[t];const i=this.flowNodes[t],s=i[i.length-1];for(const o of i){const a=this.getFlowData(o),l=o.name;l&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${l}
	`),n+=`${a.code}
	`,o===s&&t!=="compute"&&(n+=`// result
	`,t==="vertex"?(n+="gl_Position = ",n+=`${a.result};`):t==="fragment"&&(o.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${a.result};`)))}const r=e[t];r.extensions=this.getExtensions(t),r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.vars=this.getVars(t),r.structs=this.getStructs(t),r.codes=this.getCodes(t),r.transforms=this.getTransforms(t),r.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,i=null){const s=super.getUniformFromNode(e,t,n,i),r=this.getDataFromNode(e,n,this.globalCache);let o=r.uniformGPU;if(o===void 0){const a=e.groupNode,l=a.name,u=this.getBindGroupArray(l,n);if(t==="texture")o=new eu(s.name,s.node,a),u.push(o);else if(t==="cubeTexture")o=new gS(s.name,s.node,a),u.push(o);else if(t==="texture3D")o=new vS(s.name,s.node,a),u.push(o);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;const h=new pS(e,a);h.name=e.name,u.push(h),o=h}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new mS(n+"_"+l,a),h[l]=d,u.push(d)),o=this.getNodeUniform(s,t),d.addUniform(o)}r.uniformGPU=o}return s}}let Th=null,wh=null,Pr=null;class yS{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:n}=e;return n.isInstancedBufferGeometry?n.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return Th=Th||new he,this.renderer.getDrawingBufferSize(Th)}getScissor(){return wh=wh||new Ke,this.renderer.getScissor(wh)}setScissorTest(){}getClearColor(){const e=this.renderer;return Pr=Pr||new Xf,e.getClearColor(Pr),Pr.getRGB(Pr,this.renderer.currentColorSpace),Pr}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:Gb(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${wl} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let GU=0;class HU{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class WU{constructor(e){this.backend=e}createAttribute(e,t){const n=this.backend,{gl:i}=n,s=e.array,r=e.usage||i.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=n.get(o);let l=a.bufferGPU;l===void 0&&(l=this._createBuffer(i,t,s,r),a.bufferGPU=l,a.bufferType=t,a.version=o.version);let u;if(s instanceof Float32Array)u=i.FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?u=i.HALF_FLOAT:u=i.UNSIGNED_SHORT;else if(s instanceof Int16Array)u=i.SHORT;else if(s instanceof Uint32Array)u=i.UNSIGNED_INT;else if(s instanceof Int32Array)u=i.INT;else if(s instanceof Int8Array)u=i.BYTE;else if(s instanceof Uint8Array)u=i.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)u=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let h={bufferGPU:l,bufferType:t,type:u,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===i.INT||u===i.UNSIGNED_INT||e.gpuType===un,id:GU++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(i,t,s,r);h=new HU(h,d)}n.set(e,h)}updateAttribute(e){const t=this.backend,{gl:n}=t,i=e.array,s=e.isInterleavedBufferAttribute?e.data:e,r=t.get(s),o=r.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(o,r.bufferGPU),a.length===0)n.bufferSubData(o,0,i);else{for(let l=0,u=a.length;l<u;l++){const h=a[l];n.bufferSubData(o,h.start*i.BYTES_PER_ELEMENT,i,h.start,h.count)}s.clearUpdateRanges()}n.bindBuffer(o,null),r.version=s.version}destroyAttribute(e){const t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const i=t.get(e);n.deleteBuffer(i.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:n}=t,i=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(i),r=e.array,o=r.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,s);const a=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,a),n.bufferData(n.COPY_WRITE_BUFFER,o,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,o),await t.utils._clientWaitAsync();const l=new e.array.constructor(r.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,a),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(a),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,n,i){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,n,i),e.bindBuffer(t,null),s}}let vg=!1,Mh,Bo;class qU{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},vg===!1&&(this._init(this.gl),vg=!0)}_init(e){Mh={[cs]:e.FUNC_ADD,[jg]:e.FUNC_SUBTRACT,[Xg]:e.FUNC_REVERSE_SUBTRACT},Bo={[Yg]:e.ZERO,[Zg]:e.ONE,[Kg]:e.SRC_COLOR,[nl]:e.SRC_ALPHA,[iv]:e.SRC_ALPHA_SATURATE,[tv]:e.DST_COLOR,[Qg]:e.DST_ALPHA,[Jg]:e.ONE_MINUS_SRC_COLOR,[il]:e.ONE_MINUS_SRC_ALPHA,[nv]:e.ONE_MINUS_DST_COLOR,[ev]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==VS?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===kS?t.cullFace(t.BACK):e===zS?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,i,s,r,o,a){const{gl:l}=this;if(e===js){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),e!==$g){if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==cs||this.currentBlendEquationAlpha!==cs)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=cs,this.currentBlendEquationAlpha=cs),a)switch(e){case ps:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Qc:l.blendFunc(l.ONE,l.ONE);break;case el:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case tl:l.blendFuncSeparate(l.ZERO,l.SRC_COLOR,l.ZERO,l.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case ps:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Qc:l.blendFunc(l.SRC_ALPHA,l.ONE);break;case el:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case tl:l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}return}s=s||t,r=r||n,o=o||i,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(Mh[t],Mh[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(n!==this.currentBlendSrc||i!==this.currentBlendDst||r!==this.currentBlendSrcAlpha||o!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(Bo[n],Bo[i],Bo[r],Bo[o]),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=r,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case sv:t.depthFunc(t.NEVER);break;case rv:t.depthFunc(t.ALWAYS);break;case ov:t.depthFunc(t.LESS);break;case sl:t.depthFunc(t.LEQUAL);break;case av:t.depthFunc(t.EQUAL);break;case cv:t.depthFunc(t.GEQUAL);break;case lv:t.depthFunc(t.GREATER);break;case uv:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==n)&&(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t,n){const{gl:i}=this;e.side===ks?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let s=e.side===Gn;t&&(s=!s),this.setFlipSided(s),e.blending===ps&&e.transparent===!1?this.setBlending(js):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const r=e.stencilWrite;if(this.setStencilTest(r),r&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE),n>0&&this.currentClippingPlanes!==n)for(let a=0;a<8;a++)a<n?this.enable(12288+a):this.disable(12288+a)}setPolygonOffset(e,t,n){const{gl:i}=this;e?(this.enable(i.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==n)&&(i.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(i.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){const{gl:n,currentBoundFramebuffers:i}=this;return i[e]!==t?(n.bindFramebuffer(e,t),i[e]=t,e===n.DRAW_FRAMEBUFFER&&(i[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(i[n.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:n}=this;let i=[],s=!1;if(e.textures!==null){i=this.currentDrawbuffers.get(t),i===void 0&&(i=[],this.currentDrawbuffers.set(t,i));const r=e.textures;if(i.length!==r.length||i[0]!==n.COLOR_ATTACHMENT0){for(let o=0,a=r.length;o<a;o++)i[o]=n.COLOR_ATTACHMENT0+o;i.length=r.length,s=!0}}else i[0]!==n.BACK&&(i[0]=n.BACK,s=!0);s&&n.drawBuffers(i)}activeTexture(e){const{gl:t,currentTextureSlot:n,maxTextures:i}=this;e===void 0&&(e=t.TEXTURE0+i-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){const{gl:i,currentTextureSlot:s,currentBoundTextures:r,maxTextures:o}=this;n===void 0&&(s===null?n=i.TEXTURE0+o-1:n=s);let a=r[n];a===void 0&&(a={type:void 0,texture:void 0},r[n]=a),(a.type!==e||a.texture!==t)&&(s!==n&&(i.activeTexture(n),this.currentTextureSlot=n),i.bindTexture(e,t),a.type=e,a.texture=t)}bindBufferBase(e,t,n){const{gl:i}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==n?(i.bindBufferBase(e,t,n),this.currentBoundBufferBases[s]=n,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,i=n[t];i!==void 0&&i.type!==void 0&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)}}class $U{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=Zs){const{gl:n,extensions:i}=this;let s;if(e===ms)return n.UNSIGNED_BYTE;if(e===tb)return n.UNSIGNED_SHORT_4_4_4_4;if(e===nb)return n.UNSIGNED_SHORT_5_5_5_1;if(e===hv)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===zo)return n.BYTE;if(e===Go)return n.SHORT;if(e===Br)return n.UNSIGNED_SHORT;if(e===un)return n.INT;if(e===Xt)return n.UNSIGNED_INT;if(e===Rn)return n.FLOAT;if(e===Qn)return n.HALF_FLOAT;if(e===ib)return n.ALPHA;if(e===Id)return n.RGB;if(e===Ys)return n.RGBA;if(e===sb)return n.LUMINANCE;if(e===rb)return n.LUMINANCE_ALPHA;if(e===zs)return n.DEPTH_COMPONENT;if(e===Qr)return n.DEPTH_STENCIL;if(e===Bd)return n.RED;if(e===Od)return n.RED_INTEGER;if(e===na)return n.RG;if(e===Vd)return n.RG_INTEGER;if(e===kd)return n.RGBA_INTEGER;if(e===bu||e===Gc||e===Hc||e===Wc)if(t===Re)if(s=i.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===bu)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Gc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Hc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Wc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=i.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===bu)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Gc)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Hc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Wc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Ip||e===Bp||e===Op||e===Vp)if(s=i.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===Ip)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Bp)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Op)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Vp)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===kp||e===Oh||e===Vh)if(s=i.get("WEBGL_compressed_texture_etc"),s!==null){if(e===kp||e===Oh)return t===Re?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===Vh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===kh||e===zh||e===Gh||e===Hh||e===Wh||e===qh||e===$h||e===jh||e===Xh||e===Yh||e===Zh||e===Kh||e===Jh||e===Qh)if(s=i.get("WEBGL_compressed_texture_astc"),s!==null){if(e===kh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===zh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Gh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Hh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Wh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===qh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===$h)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===jh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Xh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Yh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Zh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Kh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Jh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Qh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===Tu)if(s=i.get("EXT_texture_compression_bptc"),s!==null){if(e===Tu)return t===Re?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===ab||e===zp||e===Gp||e===Hp)if(s=i.get("EXT_texture_compression_rgtc"),s!==null){if(e===Tu)return s.COMPRESSED_RED_RGTC1_EXT;if(e===zp)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Gp)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Hp)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===ya?n.UNSIGNED_INT_24_8:n[e]!==void 0?n[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,i)=>{function s(){const r=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(r===e.WAIT_FAILED){e.deleteSync(t),i();return}if(r===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),n()}s()})}}let yg=!1,Bc,Ah,xg;class jU{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},yg===!1&&(this._init(this.gl),yg=!0)}_init(e){Bc={[gs]:e.REPEAT,[ds]:e.CLAMP_TO_EDGE,[Jr]:e.MIRRORED_REPEAT},Ah={[Gt]:e.NEAREST,[Ih]:e.NEAREST_MIPMAP_NEAREST,[qr]:e.NEAREST_MIPMAP_LINEAR,[Kt]:e.LINEAR,[Bh]:e.LINEAR_MIPMAP_NEAREST,[Ii]:e.LINEAR_MIPMAP_LINEAR},xg={[dv]:e.NEVER,[yv]:e.ALWAYS,[zd]:e.LESS,[pv]:e.LEQUAL,[fv]:e.EQUAL,[vv]:e.GEQUAL,[mv]:e.GREATER,[gv]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===Gt||e===Ih||e===qr?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let n;return e.isCubeTexture===!0?n=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?n=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?n=t.TEXTURE_3D:n=t.TEXTURE_2D,n}getInternalFormat(e,t,n,i,s=!1){const{gl:r,extensions:o}=this;if(e!==null){if(r[e]!==void 0)return r[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===r.RED&&(n===r.FLOAT&&(a=r.R32F),n===r.HALF_FLOAT&&(a=r.R16F),n===r.UNSIGNED_BYTE&&(a=r.R8),n===r.UNSIGNED_SHORT&&(a=r.R16),n===r.UNSIGNED_INT&&(a=r.R32UI),n===r.BYTE&&(a=r.R8I),n===r.SHORT&&(a=r.R16I),n===r.INT&&(a=r.R32I)),t===r.RED_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.R8UI),n===r.UNSIGNED_SHORT&&(a=r.R16UI),n===r.UNSIGNED_INT&&(a=r.R32UI),n===r.BYTE&&(a=r.R8I),n===r.SHORT&&(a=r.R16I),n===r.INT&&(a=r.R32I)),t===r.RG&&(n===r.FLOAT&&(a=r.RG32F),n===r.HALF_FLOAT&&(a=r.RG16F),n===r.UNSIGNED_BYTE&&(a=r.RG8),n===r.UNSIGNED_SHORT&&(a=r.RG16),n===r.UNSIGNED_INT&&(a=r.RG32UI),n===r.BYTE&&(a=r.RG8I),n===r.SHORT&&(a=r.RG16I),n===r.INT&&(a=r.RG32I)),t===r.RG_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.RG8UI),n===r.UNSIGNED_SHORT&&(a=r.RG16UI),n===r.UNSIGNED_INT&&(a=r.RG32UI),n===r.BYTE&&(a=r.RG8I),n===r.SHORT&&(a=r.RG16I),n===r.INT&&(a=r.RG32I)),t===r.RGB&&(n===r.FLOAT&&(a=r.RGB32F),n===r.HALF_FLOAT&&(a=r.RGB16F),n===r.UNSIGNED_BYTE&&(a=r.RGB8),n===r.UNSIGNED_SHORT&&(a=r.RGB16),n===r.UNSIGNED_INT&&(a=r.RGB32UI),n===r.BYTE&&(a=r.RGB8I),n===r.SHORT&&(a=r.RGB16I),n===r.INT&&(a=r.RGB32I),n===r.UNSIGNED_BYTE&&(a=i===Re&&s===!1?r.SRGB8:r.RGB8),n===r.UNSIGNED_SHORT_5_6_5&&(a=r.RGB565),n===r.UNSIGNED_SHORT_5_5_5_1&&(a=r.RGB5_A1),n===r.UNSIGNED_SHORT_4_4_4_4&&(a=r.RGB4),n===r.UNSIGNED_INT_5_9_9_9_REV&&(a=r.RGB9_E5)),t===r.RGB_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.RGB8UI),n===r.UNSIGNED_SHORT&&(a=r.RGB16UI),n===r.UNSIGNED_INT&&(a=r.RGB32UI),n===r.BYTE&&(a=r.RGB8I),n===r.SHORT&&(a=r.RGB16I),n===r.INT&&(a=r.RGB32I)),t===r.RGBA&&(n===r.FLOAT&&(a=r.RGBA32F),n===r.HALF_FLOAT&&(a=r.RGBA16F),n===r.UNSIGNED_BYTE&&(a=r.RGBA8),n===r.UNSIGNED_SHORT&&(a=r.RGBA16),n===r.UNSIGNED_INT&&(a=r.RGBA32UI),n===r.BYTE&&(a=r.RGBA8I),n===r.SHORT&&(a=r.RGBA16I),n===r.INT&&(a=r.RGBA32I),n===r.UNSIGNED_BYTE&&(a=i===Re&&s===!1?r.SRGB8_ALPHA8:r.RGBA8),n===r.UNSIGNED_SHORT_4_4_4_4&&(a=r.RGBA4),n===r.UNSIGNED_SHORT_5_5_5_1&&(a=r.RGB5_A1)),t===r.RGBA_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.RGBA8UI),n===r.UNSIGNED_SHORT&&(a=r.RGBA16UI),n===r.UNSIGNED_INT&&(a=r.RGBA32UI),n===r.BYTE&&(a=r.RGBA8I),n===r.SHORT&&(a=r.RGBA16I),n===r.INT&&(a=r.RGBA32I)),t===r.DEPTH_COMPONENT&&(n===r.UNSIGNED_INT&&(a=r.DEPTH24_STENCIL8),n===r.FLOAT&&(a=r.DEPTH_COMPONENT32F)),t===r.DEPTH_STENCIL&&n===r.UNSIGNED_INT_24_8&&(a=r.DEPTH24_STENCIL8),(a===r.R16F||a===r.R32F||a===r.RG16F||a===r.RG32F||a===r.RGBA16F||a===r.RGBA32F)&&o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:n,extensions:i,backend:s}=this;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE),n.texParameteri(e,n.TEXTURE_WRAP_S,Bc[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,Bc[t.wrapT]),(e===n.TEXTURE_3D||e===n.TEXTURE_2D_ARRAY)&&n.texParameteri(e,n.TEXTURE_WRAP_R,Bc[t.wrapR]),n.texParameteri(e,n.TEXTURE_MAG_FILTER,Ah[t.magFilter]);const r=t.mipmaps!==void 0&&t.mipmaps.length>0,o=t.minFilter===Kt&&r?Ii:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,Ah[o]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,xg[t.compareFunction])),i.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Gt||t.minFilter!==qr&&t.minFilter!==Ii||t.type===Rn&&i.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const a=i.get("EXT_texture_filter_anisotropic");n.texParameterf(e,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:n,defaultTextures:i}=this,s=this.getGLTextureType(e);let r=i[s];r===void 0&&(r=t.createTexture(),n.state.bindTexture(s,r),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),i[s]=r),n.set(e,{textureGPU:r,glTextureType:s,isDefault:!0})}createTexture(e,t){const{gl:n,backend:i}=this,{levels:s,width:r,height:o,depth:a}=t,l=i.utils.convert(e.format,e.colorSpace),u=i.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,l,u,e.colorSpace,e.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(e);i.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,s,h,r,o,a):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,s,h,r,o,a):e.isVideoTexture||n.texStorage2D(f,s,h,r,o),i.set(e,{textureGPU:d,glTextureType:f,glFormat:l,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){const{gl:n,backend:i}=this,{textureGPU:s,glTextureType:r,glFormat:o,glType:a}=i.get(t),{width:l,height:u}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),i.state.bindTexture(r,s),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(r,0,0,0,l,u,o,a,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),i.state.unbindTexture()}updateTexture(e,t){const{gl:n}=this,{width:i,height:s}=t,{textureGPU:r,glTextureType:o,glFormat:a,glType:l,glInternalFormat:u}=this.backend.get(e);if(e.isRenderTargetTexture||r===void 0)return;const h=d=>d.isDataTexture?d.image.data:typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&d instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&d instanceof ImageBitmap||d instanceof OffscreenCanvas?d:d.data;if(this.backend.state.bindTexture(o,r),this.setTextureParameters(o,e),e.isCompressedTexture){const d=e.mipmaps,f=t.image;for(let p=0;p<d.length;p++){const m=d[p];e.isCompressedArrayTexture?e.format!==n.RGBA?a!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,a,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,a,l,m.data):a!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,p,0,0,m.width,m.height,a,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let f=0;f<6;f++){const p=h(d[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,i,s,a,l,p)}}else if(e.isDataArrayTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,a,l,d.data)}else if(e.isData3DTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,a,l,d.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(o,0,u,a,l,t.image);else{const d=h(t.image);n.texSubImage2D(o,0,0,0,i,s,a,l,d)}}generateMipmaps(e){const{gl:t,backend:n}=this,{textureGPU:i,glTextureType:s}=n.get(e);n.state.bindTexture(s,i),t.generateMipmap(s)}deallocateRenderBuffers(e){const{gl:t,backend:n}=this;if(e){const i=n.get(e);if(i.renderBufferStorageSetup=void 0,i.framebuffers){for(const s in i.framebuffers)t.deleteFramebuffer(i.framebuffers[s]);delete i.framebuffers}if(i.depthRenderbuffer&&(t.deleteRenderbuffer(i.depthRenderbuffer),delete i.depthRenderbuffer),i.stencilRenderbuffer&&(t.deleteRenderbuffer(i.stencilRenderbuffer),delete i.stencilRenderbuffer),i.msaaFrameBuffer&&(t.deleteFramebuffer(i.msaaFrameBuffer),delete i.msaaFrameBuffer),i.msaaRenderbuffers){for(let s=0;s<i.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(i.msaaRenderbuffers[s]);delete i.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:n}=this,{textureGPU:i,renderTarget:s}=n.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(i),n.delete(e)}copyTextureToTexture(e,t,n=null,i=null,s=0){const{gl:r,backend:o}=this,{state:a}=this.backend,{textureGPU:l,glTextureType:u,glType:h,glFormat:d}=o.get(t);let f,p,m,g,y,_;n!==null?(f=n.max.x-n.min.x,p=n.max.y-n.min.y,m=n.min.x,g=n.min.y):(f=e.image.width,p=e.image.height,m=0,g=0),i!==null?(y=i.x,_=i.y):(y=0,_=0),a.bindTexture(u,l),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment);const x=r.getParameter(r.UNPACK_ROW_LENGTH),S=r.getParameter(r.UNPACK_IMAGE_HEIGHT),w=r.getParameter(r.UNPACK_SKIP_PIXELS),A=r.getParameter(r.UNPACK_SKIP_ROWS),T=r.getParameter(r.UNPACK_SKIP_IMAGES),M=e.isCompressedTexture?e.mipmaps[s]:e.image;if(r.pixelStorei(r.UNPACK_ROW_LENGTH,M.width),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,M.height),r.pixelStorei(r.UNPACK_SKIP_PIXELS,m),r.pixelStorei(r.UNPACK_SKIP_ROWS,g),e.isRenderTargetTexture||e.isDepthTexture){const L=o.get(e),I=o.get(t),W=o.get(L.renderTarget),U=o.get(I.renderTarget),k=W.framebuffers[L.cacheKey],O=U.framebuffers[I.cacheKey];a.bindFramebuffer(r.READ_FRAMEBUFFER,k),a.bindFramebuffer(r.DRAW_FRAMEBUFFER,O);let te=r.COLOR_BUFFER_BIT;e.isDepthTexture&&(te=r.DEPTH_BUFFER_BIT),r.blitFramebuffer(m,g,f,p,y,_,f,p,te,r.NEAREST),a.bindFramebuffer(r.READ_FRAMEBUFFER,null),a.bindFramebuffer(r.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?r.texSubImage2D(r.TEXTURE_2D,s,y,_,f,p,d,h,M.data):e.isCompressedTexture?r.compressedTexSubImage2D(r.TEXTURE_2D,s,y,_,M.width,M.height,d,M.data):r.texSubImage2D(r.TEXTURE_2D,s,y,_,f,p,d,h,M);r.pixelStorei(r.UNPACK_ROW_LENGTH,x),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,S),r.pixelStorei(r.UNPACK_SKIP_PIXELS,w),r.pixelStorei(r.UNPACK_SKIP_ROWS,A),r.pixelStorei(r.UNPACK_SKIP_IMAGES,T),s===0&&t.generateMipmaps&&r.generateMipmap(r.TEXTURE_2D),a.unbindTexture()}copyFramebufferToTexture(e,t,n){const{gl:i}=this,{state:s}=this.backend,{textureGPU:r}=this.backend.get(e),{x:o,y:a,z:l,w:u}=n,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(h){const f=o!==0||a!==0;let p,m;if(e.isDepthTexture===!0?(p=i.DEPTH_BUFFER_BIT,m=i.DEPTH_ATTACHMENT,t.stencil&&(p|=i.STENCIL_BUFFER_BIT)):(p=i.COLOR_BUFFER_BIT,m=i.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),y=g.framebuffers[t.getCacheKey()],_=g.msaaFrameBuffer;s.bindFramebuffer(i.DRAW_FRAMEBUFFER,y),s.bindFramebuffer(i.READ_FRAMEBUFFER,_);const x=d-a-u;i.blitFramebuffer(o,x,o+l,x+u,o,x,o+l,x+u,p,i.NEAREST),s.bindFramebuffer(i.READ_FRAMEBUFFER,y),s.bindTexture(i.TEXTURE_2D,r),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,o,x,l,u),s.unbindTexture()}else{const g=i.createFramebuffer();s.bindFramebuffer(i.DRAW_FRAMEBUFFER,g),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,m,i.TEXTURE_2D,r,0),i.blitFramebuffer(0,0,l,u,0,0,l,u,p,i.NEAREST),i.deleteFramebuffer(g)}}else s.bindTexture(i.TEXTURE_2D,r),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,o,d-u-a,l,u),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:n}=this,i=t.renderTarget,{samples:s,depthTexture:r,depthBuffer:o,stencilBuffer:a,width:l,height:u}=i;if(n.bindRenderbuffer(n.RENDERBUFFER,e),o&&!a){let h=n.DEPTH_COMPONENT24;s>0?(r&&r.isDepthTexture&&r.type===n.FLOAT&&(h=n.DEPTH_COMPONENT32F),n.renderbufferStorageMultisample(n.RENDERBUFFER,s,h,l,u)):n.renderbufferStorage(n.RENDERBUFFER,h,l,u),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,e)}else o&&a&&(s>0?n.renderbufferStorageMultisample(n.RENDERBUFFER,s,n.DEPTH24_STENCIL8,l,u):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,l,u),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,n,i,s,r){const{backend:o,gl:a}=this,{textureGPU:l,glFormat:u,glType:h}=this.backend.get(e),d=a.createFramebuffer();a.bindFramebuffer(a.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?a.TEXTURE_CUBE_MAP_POSITIVE_X+r:a.TEXTURE_2D;a.framebufferTexture2D(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,f,l,0);const p=this._getTypedArrayType(h),m=this._getBytesPerTexel(h,u),y=i*s*m,_=a.createBuffer();a.bindBuffer(a.PIXEL_PACK_BUFFER,_),a.bufferData(a.PIXEL_PACK_BUFFER,y,a.STREAM_READ),a.readPixels(t,n,i,s,u,h,0),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),await o.utils._clientWaitAsync();const x=new p(y/p.BYTES_PER_ELEMENT);return a.bindBuffer(a.PIXEL_PACK_BUFFER,_),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,x),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),a.deleteFramebuffer(d),x}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:n}=this;let i=0;if(e===n.UNSIGNED_BYTE&&(i=1),(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT||e===n.HALF_FLOAT)&&(i=2),(e===n.UNSIGNED_INT||e===n.FLOAT)&&(i=4),t===n.RGBA)return i*4;if(t===n.RGB)return i*3;if(t===n.ALPHA)return i}}class XU{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class YU{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const _g={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class ZU{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:i,object:s,type:r,info:o,index:a}=this;a!==0?n.drawElements(i,t,r,e):n.drawArrays(i,e,t),o.update(s,t,i,1)}renderInstances(e,t,n){const{gl:i,mode:s,type:r,index:o,object:a,info:l}=this;n!==0&&(o!==0?i.drawElementsInstanced(s,t,r,e,n):i.drawArraysInstanced(s,e,t,n),l.update(a,t,s,n))}renderMultiDraw(e,t,n){const{extensions:i,mode:s,object:r,info:o}=this;if(n===0)return;const a=i.get("WEBGL_multi_draw");if(a===null)for(let l=0;l<n;l++)this.render(e[l],t[l]);else{this.index!==0?a.multiDrawElementsWEBGL(s,t,0,this.type,e,0,n):a.multiDrawArraysWEBGL(s,e,0,t,0,n);let l=0;for(let u=0;u<n;u++)l+=t[u];o.update(r,l,s,1)}}renderMultiDrawInstances(e,t,n,i){const{extensions:s,mode:r,object:o,info:a}=this;if(n===0)return;const l=s.get("WEBGL_multi_draw");if(l===null)for(let u=0;u<n;u++)this.renderInstances(e[u],t[u],i[u]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(r,t,0,this.type,e,0,i,0,n):l.multiDrawArraysInstancedWEBGL(r,e,0,t,0,i,0,n);let u=0;for(let h=0;h<n;h++)u+=t[h]*i[h];a.update(o,u,r,1)}}}class Sg extends yS{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,n=t.context!==void 0?t.context:e.domElement.getContext("webgl2");function i(s){s.preventDefault();const r={api:"WebGL",message:s.statusMessage||"Unknown reason",reason:null,originalEvent:s};e.onDeviceLost(r)}this._onContextLost=i,e.domElement.addEventListener("webglcontextlost",i,!1),this.gl=n,this.extensions=new XU(this),this.capabilities=new YU(this),this.attributeUtils=new WU(this),this.textureUtils=new jU(this),this.bufferRenderer=new ZU(this),this.state=new qU(this),this.utils=new $U(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=t.trackTimestamp===!0,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return Kn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning){t.queryQueue||(t.queryQueue=[]),t.queryQueue.push(e);return}t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),t.activeQuery!==null&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const n=t.queryQueue.shift();this.initTimestampQuery(n)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const n=this.get(e);n.gpuQueries||(n.gpuQueries=[]);for(let i=0;i<n.gpuQueries.length;i++){const s=n.gpuQueries[i],r=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT_AVAILABLE),o=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(r&&!o){const a=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT),l=Number(a)/1e6;this.gl.deleteQuery(s.query),n.gpuQueries.splice(i,1),i--,this.renderer.info.updateTimestamp(t,l)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,n=this.get(e);if(this.initTimestampQuery(e),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:o,height:a}=e.scissorValue;t.scissor(s,e.height-a-r,o,a)}const i=e.occlusionQueryCount;i>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(i),n.occlusionQueryObjects=new Array(i),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:n}=this,i=this.get(e),s=i.previousContext,r=e.occlusionQueryCount;r>0&&(r>i.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const o=e.textures;if(o!==null)for(let a=0;a<o.length;a++){const l=o[a];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=s,e.textures!==null&&e.renderTarget){const a=this.get(e.renderTarget),{samples:l}=e.renderTarget;if(l>0){const u=a.framebuffers[e.getCacheKey()],h=t.COLOR_BUFFER_BIT,d=a.msaaFrameBuffer,f=e.textures;n.bindFramebuffer(t.READ_FRAMEBUFFER,d),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u);for(let p=0;p<f.length;p++)if(e.scissor){const{x:m,y:g,width:y,height:_}=e.scissorValue,x=e.height-_-g;t.blitFramebuffer(m,x,m+y,x+_,m,x,m+y,x+_,h,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,a.invalidationArray,m,x,y,_)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,h,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,a.invalidationArray)}}s!==null&&(this._setFramebuffer(s),s.viewport?this.updateViewport(s):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const s=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const o=()=>{let a=0;for(let l=0;l<n.length;l++){const u=n[l];u!==null&&r.getQueryParameter(u,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(u,r.QUERY_RESULT)>0&&s.add(i[l]),n[l]=null,r.deleteQuery(u),a++)}a<n.length?requestAnimationFrame(o):t.occluded=s};o()}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){const t=this.gl,{x:n,y:i,width:s,height:r}=e.viewportValue;t.viewport(n,e.height-r-i,s,r)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,n,i=null,s=!0){const{gl:r}=this;if(i===null){const a=this.getClearColor();a.r*=a.a,a.g*=a.a,a.b*=a.a,i={textures:null,clearColorValue:a}}let o=0;if(e&&(o|=r.COLOR_BUFFER_BIT),t&&(o|=r.DEPTH_BUFFER_BIT),n&&(o|=r.STENCIL_BUFFER_BIT),o!==0){let a;if(i.clearColorValue?a=i.clearColorValue:(a=this.getClearColor(),a.r*=a.a,a.g*=a.a,a.b*=a.a),t&&this.state.setDepthMask(!0),i.textures===null)r.clearColor(a.r,a.g,a.b,a.a),r.clear(o);else{if(s&&this._setFramebuffer(i),e)for(let l=0;l<i.textures.length;l++)r.clearBufferfv(r.COLOR,l,[a.r,a.g,a.b,a.a]);t&&n?r.clearBufferfi(r.DEPTH_STENCIL,0,1,0):t?r.clearBufferfv(r.DEPTH,0,[1]):n&&r.clearBufferiv(r.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:n}=this;t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,n,i){const{state:s,gl:r}=this;this.discard||(r.enable(r.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:o,transformBuffers:a,attributes:l}=this.get(i),u=this._getVaoKey(null,l),h=this.vaoCache[u];h===void 0?this._createVao(null,l):r.bindVertexArray(h),s.useProgram(o),this._bindUniforms(n);const d=this._getTransformFeedback(a);r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,d),r.beginTransformFeedback(r.POINTS),l[0].isStorageInstancedBufferAttribute?r.drawArraysInstanced(r.POINTS,0,1,t.count):r.drawArrays(r.POINTS,0,t.count),r.endTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null);for(let f=0;f<a.length;f++){const p=a[f];p.pbo&&this.textureUtils.copyBufferToTexture(p.transformBuffer,p.pbo),p.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:n,material:i,context:s,hardwareClippingPlanes:r}=e,{programGPU:o}=this.get(n),{gl:a,state:l}=this,u=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(i,d,r),l.useProgram(o);const f=this.get(e);let p=f.staticVao;if(p===void 0||f.geometryId!==e.geometry.id){const w=this._getVaoKey(e.getIndex(),e.getAttributes());if(p=this.vaoCache[w],p===void 0){let A;({vaoGPU:p,staticVao:A}=this._createVao(e.getIndex(),e.getAttributes())),A&&(f.staticVao=p,f.geometryId=e.geometry.id)}}a.bindVertexArray(p);const m=e.getIndex(),g=u.lastOcclusionObject;if(g!==t&&g!==void 0){if(g!==null&&g.occlusionTest===!0&&(a.endQuery(a.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),t.occlusionTest===!0){const w=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,w),u.occlusionQueries[u.occlusionQueryIndex]=w,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const y=this.bufferRenderer;t.isPoints?y.mode=a.POINTS:t.isLineSegments?y.mode=a.LINES:t.isLine?y.mode=a.LINE_STRIP:t.isLineLoop?y.mode=a.LINE_LOOP:i.wireframe===!0?(l.setLineWidth(i.wireframeLinewidth*this.renderer.getPixelRatio()),y.mode=a.LINES):y.mode=a.TRIANGLES;const{vertexCount:_,instanceCount:x}=h;let{firstVertex:S}=h;if(y.object=t,m!==null){S*=m.array.BYTES_PER_ELEMENT;const w=this.get(m);y.index=m.count,y.type=w.type}else y.index=0;t.isBatchedMesh?t._multiDrawInstances!==null?y.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?y.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Hb("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):x>1?y.renderInstances(S,_,x):y.render(S,_),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,n,i,s,r){return this.textureUtils.copyTextureToBuffer(e,t,n,i,s,r)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new zU(e,t)}createProgram(e){const t=this.gl,{stage:n,code:i}=e,s=n==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,i),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const n=this.gl,i=e.pipeline,{fragmentProgram:s,vertexProgram:r}=i,o=n.createProgram(),a=this.get(s).shaderGPU,l=this.get(r).shaderGPU;if(n.attachShader(o,a),n.attachShader(o,l),n.linkProgram(o),this.set(i,{programGPU:o,fragmentShader:a,vertexShader:l}),t!==null&&this.parallel){const u=new Promise(h=>{const d=this.parallel,f=()=>{n.getProgramParameter(o,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,i),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,i)}_handleSource(e,t){const n=e.split(`
`),i=[],s=Math.max(t-6,0),r=Math.min(t+6,n.length);for(let o=s;o<r;o++){const a=o+1;i.push(`${a===t?">":" "} ${a}: ${n[o]}`)}return i.join(`
`)}_getShaderErrors(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(i&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return n.toUpperCase()+`

`+s+`

`+this._handleSource(e.getShaderSource(t),o)}else return s}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){const i=this.gl,s=i.getProgramInfoLog(e).trim();if(i.getProgramParameter(e,i.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(i,e,n,t);else{const r=this._getShaderErrors(i,n,"vertex"),o=this._getShaderErrors(i,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(e,i.VALIDATE_STATUS)+`

Program Info Log: `+s+`
`+r+`
`+o)}else s!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",s)}}_completeCompile(e,t){const{state:n,gl:i}=this,s=this.get(t),{programGPU:r,fragmentShader:o,vertexShader:a}=s;i.getProgramParameter(r,i.LINK_STATUS)===!1&&this._logProgramError(r,o,a),n.useProgram(r);const l=e.getBindings();this._setupBindings(l,r),this.set(t,{programGPU:r})}createComputePipeline(e,t){const{state:n,gl:i}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);const{computeProgram:r}=e,o=i.createProgram(),a=this.get(s).shaderGPU,l=this.get(r).shaderGPU,u=r.transforms,h=[],d=[];for(let g=0;g<u.length;g++){const y=u[g];h.push(y.varyingName),d.push(y.attributeNode)}i.attachShader(o,a),i.attachShader(o,l),i.transformFeedbackVaryings(o,h,i.SEPARATE_ATTRIBS),i.linkProgram(o),i.getProgramParameter(o,i.LINK_STATUS)===!1&&this._logProgramError(o,a,l),n.useProgram(o),this._setupBindings(t,o);const f=r.attributes,p=[],m=[];for(let g=0;g<f.length;g++){const y=f[g].node.attribute;p.push(y),this.has(y)||this.attributeUtils.createAttribute(y,i.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const y=d[g].attribute;this.has(y)||this.attributeUtils.createAttribute(y,i.ARRAY_BUFFER);const _=this.get(y);m.push(_)}this.set(e,{programGPU:o,transformBuffers:m,attributes:p})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let n=0,i=0;for(const s of t){this.set(s,{textures:i,uniformBuffers:n});for(const r of s.bindings)r.isUniformBuffer&&n++,r.isSampledTexture&&i++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,n=this.get(e);let i=n.uniformBuffers,s=n.textures;for(const r of e.bindings)if(r.isUniformsGroup||r.isUniformBuffer){const o=r.buffer,a=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,a),t.bufferData(t.UNIFORM_BUFFER,o,t.DYNAMIC_DRAW),this.set(r,{index:i++,bufferGPU:a})}else if(r.isSampledTexture){const{textureGPU:o,glTextureType:a}=this.get(r.texture);this.set(r,{index:s++,textureGPU:o,glTextureType:a})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const i=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(_g).filter(i=>_g[i]===e),n=this.extensions;for(let i=0;i<t.length;i++)if(n.has(t[i]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n,i,s){this.textureUtils.copyTextureToTexture(e,t,n,i,s)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){const{gl:t,state:n}=this;let i=null;if(e.textures!==null){const s=e.renderTarget,r=this.get(s),{samples:o,depthBuffer:a,stencilBuffer:l}=s,u=s.isWebGLCubeRenderTarget===!0;let h=r.msaaFrameBuffer,d=r.depthRenderbuffer;const f=d_(e);let p;if(u?(r.cubeFramebuffers||(r.cubeFramebuffers={}),p=r.cubeFramebuffers[f]):(r.framebuffers||(r.framebuffers={}),p=r.framebuffers[f]),p===void 0){p=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,p);const m=e.textures;if(u){r.cubeFramebuffers[f]=p;const{textureGPU:g}=this.get(m[0]),y=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+y,g,0)}else{r.framebuffers[f]=p;for(let g=0;g<m.length;g++){const y=m[g],_=this.get(y);_.renderTarget=e.renderTarget,_.cacheKey=f;const x=t.COLOR_ATTACHMENT0+g;t.framebufferTexture2D(t.FRAMEBUFFER,x,t.TEXTURE_2D,_.textureGPU,0)}n.drawBuffers(e,p)}if(e.depthTexture!==null){const g=this.get(e.depthTexture),y=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;g.renderTarget=e.renderTarget,g.cacheKey=f,t.framebufferTexture2D(t.FRAMEBUFFER,y,t.TEXTURE_2D,g.textureGPU,0)}}if(o>0){if(h===void 0){const m=[];h=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,h);const g=[],y=e.textures;for(let _=0;_<y.length;_++){if(g[_]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,g[_]),m.push(t.COLOR_ATTACHMENT0+_),a){const w=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;m.push(w)}const x=e.textures[_],S=this.get(x);t.renderbufferStorageMultisample(t.RENDERBUFFER,o,S.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+_,t.RENDERBUFFER,g[_])}if(r.msaaFrameBuffer=h,r.msaaRenderbuffers=g,d===void 0){d=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(d,e),r.depthRenderbuffer=d;const _=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;m.push(_)}r.invalidationArray=m}i=r.msaaFrameBuffer}else i=p}n.bindFramebuffer(t.FRAMEBUFFER,i)}_getVaoKey(e,t){let n=[];if(e!==null){const i=this.get(e);n+=":"+i.id}for(let i=0;i<t.length;i++){const s=this.get(t[i]);n+=":"+s.id}return n}_createVao(e,t){const{gl:n}=this,i=n.createVertexArray();let s="",r=!0;if(n.bindVertexArray(i),e!==null){const o=this.get(e);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,o.bufferGPU),s+=":"+o.id}for(let o=0;o<t.length;o++){const a=t[o],l=this.get(a);s+=":"+l.id,n.bindBuffer(n.ARRAY_BUFFER,l.bufferGPU),n.enableVertexAttribArray(o),(a.isStorageBufferAttribute||a.isStorageInstancedBufferAttribute)&&(r=!1);let u,h;a.isInterleavedBufferAttribute===!0?(u=a.data.stride*l.bytesPerElement,h=a.offset*l.bytesPerElement):(u=0,h=0),l.isInteger?n.vertexAttribIPointer(o,a.itemSize,l.type,u,h):n.vertexAttribPointer(o,a.itemSize,l.type,a.normalized,u,h),a.isInstancedBufferAttribute&&!a.isInterleavedBufferAttribute?n.vertexAttribDivisor(o,a.meshPerAttribute):a.isInterleavedBufferAttribute&&a.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(o,a.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),this.vaoCache[s]=i,{vaoGPU:i,staticVao:r}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let n=this.transformFeedbackCache[t];if(n!==void 0)return n;const{gl:i}=this;n=i.createTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,n);for(let s=0;s<e.length;s++){const r=e[s];i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,s,r.transformBuffer)}return i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){const n=this.gl;for(const i of e)for(const s of i.bindings){const o=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){const a=n.getUniformBlockIndex(t,s.name);n.uniformBlockBinding(t,a,o)}else if(s.isSampledTexture){const a=n.getUniformLocation(t,s.name);n.uniform1i(a,o)}}}_bindUniforms(e){const{gl:t,state:n}=this;for(const i of e)for(const s of i.bindings){const r=this.get(s),o=r.index;s.isUniformsGroup||s.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,o,r.bufferGPU):s.isSampledTexture&&n.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+o)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const Hr={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},qt={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},jt={Store:"store",Discard:"discard"},Dt={Load:"load",Clear:"clear"},Nh={CCW:"ccw",CW:"cw"},Ch={None:"none",Front:"front",Back:"back"},so={Uint16:"uint16",Uint32:"uint32"},C={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Eh={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},Bs={Linear:"linear",Nearest:"nearest"},Be={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Us={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},bg={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},rs={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},Rh={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},Ph={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},Oo={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},Tg={OneD:"1d",TwoD:"2d",ThreeD:"3d"},Bn={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},KU={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},Oc={Vertex:"vertex",Instance:"instance"},Nd={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class JU extends up{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class QU extends JU{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){this.texture=this.textureNode.value}}class eD extends dS{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let tD=0;class nD extends eD{constructor(e,t){super("StorageBuffer_"+tD++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:nn.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class iD extends bs{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:Bs.Linear}),this.flipYSampler=e.createSampler({minFilter:Bs.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:i})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Hr.TriangleStrip,stripIndexFormat:so.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Hr.TriangleStrip,stripIndexFormat:so.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){const i=t.format,{width:s,height:r}=t.size,o=this.getTransferPipeline(i),a=this.getFlipYPipeline(i),l=this.device.createTexture({size:{width:s,height:r,depthOrArrayLayers:1},format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Bn.TwoD,baseArrayLayer:n}),h=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:Bn.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,m,g)=>{const y=p.getBindGroupLayout(0),_=this.device.createBindGroup({layout:y,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:m}]}),x=d.beginRenderPass({colorAttachments:[{view:g,loadOp:Dt.Clear,storeOp:jt.Store,clearValue:[0,0,0,0]}]});x.setPipeline(p),x.setBindGroup(0,_),x.draw(4,1,0,0),x.end()};f(o,u,h),f(a,h,u),this.device.queue.submit([d.finish()]),l.destroy()}generateMipmaps(e,t,n=0){const i=this.get(e);i.useCount===void 0&&(i.useCount=0,i.layers=[]);const s=i.layers[n]||this._mipmapCreateBundles(e,t,n),r=this.device.createCommandEncoder({});this._mipmapRunBundles(r,s),this.device.queue.submit([r.finish()]),i.useCount!==0&&(i.layers[n]=s),i.useCount++}_mipmapCreateBundles(e,t,n){const i=this.getTransferPipeline(t.format),s=i.getBindGroupLayout(0);let r=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Bn.TwoD,baseArrayLayer:n});const o=[];for(let a=1;a<t.mipLevelCount;a++){const l=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:r}]}),u=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:Bn.TwoD,baseArrayLayer:n}),h={colorAttachments:[{view:u,loadOp:Dt.Clear,storeOp:jt.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(i),d.setBindGroup(0,l),d.draw(4,1,0,0),o.push({renderBundles:[d.finish()],passDescriptor:h}),r=u}return o}_mipmapRunBundles(e,t){const n=t.length;for(let i=0;i<n;i++){const s=t[i],r=e.beginRenderPass(s.passDescriptor);r.executeBundles(s.renderBundles),r.end()}}}const sD={[dv]:"never",[zd]:"less",[fv]:"equal",[pv]:"less-equal",[mv]:"greater",[vv]:"greater-equal",[yv]:"always",[gv]:"not-equal"},rD=[0,1,3,2,4,5];class oD{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new nr,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,n=t.device,i=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};s.magFilter===Bs.Linear&&s.minFilter===Bs.Linear&&s.mipmapFilter===Bs.Linear&&(s.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(s.compare=sD[e.compareFunction]),i.sampler=n.createSampler(s)}createDefaultTexture(e){let t;const n=Cd(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(n):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){const n=this.backend,i=n.get(e);if(i.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:s,height:r,depth:o,levels:a}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),u=e.internalFormat||t.format||Cd(e,n.device);i.format=u;let h=t.sampleCount!==void 0?t.sampleCount:1;h=n.utils.getSampleCount(h);const d=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:h;let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:s,height:r,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:d,dimension:l,format:u,usage:f};if(e.isVideoTexture){const m=e.source.data,g=new VideoFrame(m);p.size.width=g.displayWidth,p.size.height=g.displayHeight,g.close(),i.externalTexture=m}else{if(u===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);i.texture=n.device.createTexture(p)}if(e.isRenderTargetTexture&&h>1&&!e.isMultisampleRenderTargetTexture){const m=Object.assign({},p);m.label=m.label+"-msaa",m.sampleCount=h,i.msaaTexture=n.device.createTexture(m)}i.initialized=!0,i.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,n=t.get(e);n.texture!==void 0&&n.texture.destroy(),n.msaaTexture!==void 0&&n.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const n=this.backend.get(e);delete n.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n);else{const n=e.image.depth||1;for(let i=0;i<n;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:n}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:n,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const n=this.backend,{width:i,height:s}=n.getDrawingBufferSize(),r=this.depthTexture,o=n.get(r).texture;let a,l;if(t?(a=Qr,l=ya):e&&(a=zs,l=Xt),o!==void 0){if(r.image.width===i&&r.image.height===s&&r.format===a&&r.type===l)return o;this.destroyTexture(r)}return r.name="depthBuffer",r.format=a,r.type=l,r.image.width=i,r.image.height=s,this.createTexture(r,{sampleCount:n.utils.getSampleCount(n.renderer.samples),width:i,height:s}),n.get(r).texture}updateTexture(e,t){const n=this.backend.get(e),{textureDescriptorGPU:i}=n;if(!(e.isRenderTargetTexture||i===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,n.texture,i,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,n.texture,i,s,e.flipY,s);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,i);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,n.texture,i,e.flipY);else if(e.isVideoTexture){const s=e.source.data;n.externalTexture=s}else this._copyImageToTexture(t.image,n.texture,i,0,e.flipY);n.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,n,i,s,r){const o=this.backend.device,a=this.backend.get(e),l=a.texture,u=a.textureDescriptorGPU.format,h=this._getBytesPerTexel(u);let d=i*h;d=Math.ceil(d/256)*256;const f=o.createBuffer({size:i*s*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=o.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:t,y:n,z:r}},{buffer:f,bytesPerRow:d},{width:i,height:s});const m=this._getTypedArrayType(u);o.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new m(g)}_isEnvironmentTexture(e){const t=e.mapping;return t===ga||t===va||t===Xs||t===Kr}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Ht;n.minFilter=Gt,n.magFilter=Gt,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Wd;n.minFilter=Gt,n.magFilter=Gt,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,n,i){for(let s=0;s<6;s++){const r=e[s],o=i===!0?rD[s]:s;r.isDataTexture?this._copyBufferToTexture(r.image,t,n,o,i):this._copyImageToTexture(r,t,n,o,i)}}_copyImageToTexture(e,t,n,i,s){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:i}},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,n,i)}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new iD(this.backend.device)),e}_generateMipmaps(e,t,n=0){this._getPassUtils().generateMipmaps(e,t,n)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,i,s,r=0){const o=this.backend.device,a=e.data,l=this._getBytesPerTexel(n.format),u=e.width*l;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:i}},a,{offset:e.width*e.height*l*r,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,n,i)}_copyCompressedBufferToTexture(e,t,n){const i=this.backend.device,s=this._getBlockData(n.format),r=n.size.depthOrArrayLayers>1;for(let o=0;o<e.length;o++){const a=e[o],l=a.width,u=a.height,h=r?n.size.depthOrArrayLayers:1,d=Math.ceil(l/s.width)*s.byteLength,f=d*Math.ceil(u/s.height);for(let p=0;p<h;p++)i.queue.writeTexture({texture:t,mipLevel:o,origin:{x:0,y:0,z:p}},a.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/s.height)},{width:Math.ceil(l/s.width)*s.width,height:Math.ceil(u/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===C.BC1RGBAUnorm||e===C.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===C.BC2RGBAUnorm||e===C.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===C.BC3RGBAUnorm||e===C.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===C.BC4RUnorm||e===C.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===C.BC5RGUnorm||e===C.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===C.BC6HRGBUFloat||e===C.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===C.BC7RGBAUnorm||e===C.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===C.ETC2RGB8Unorm||e===C.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===C.ETC2RGB8A1Unorm||e===C.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===C.ETC2RGBA8Unorm||e===C.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===C.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===C.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===C.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===C.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===C.ASTC4x4Unorm||e===C.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===C.ASTC5x4Unorm||e===C.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===C.ASTC5x5Unorm||e===C.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===C.ASTC6x5Unorm||e===C.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===C.ASTC6x6Unorm||e===C.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===C.ASTC8x5Unorm||e===C.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===C.ASTC8x6Unorm||e===C.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===C.ASTC8x8Unorm||e===C.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===C.ASTC10x5Unorm||e===C.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===C.ASTC10x6Unorm||e===C.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===C.ASTC10x8Unorm||e===C.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===C.ASTC10x10Unorm||e===C.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===C.ASTC12x10Unorm||e===C.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===C.ASTC12x12Unorm||e===C.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Eh.ClampToEdge;return e===gs?t=Eh.Repeat:e===Jr&&(t=Eh.MirrorRepeat),t}_convertFilterMode(e){let t=Bs.Linear;return(e===Gt||e===Ih||e===qr)&&(t=Bs.Nearest),t}_getBytesPerTexel(e){if(e===C.R8Unorm||e===C.R8Snorm||e===C.R8Uint||e===C.R8Sint)return 1;if(e===C.R16Uint||e===C.R16Sint||e===C.R16Float||e===C.RG8Unorm||e===C.RG8Snorm||e===C.RG8Uint||e===C.RG8Sint)return 2;if(e===C.R32Uint||e===C.R32Sint||e===C.R32Float||e===C.RG16Uint||e===C.RG16Sint||e===C.RG16Float||e===C.RGBA8Unorm||e===C.RGBA8UnormSRGB||e===C.RGBA8Snorm||e===C.RGBA8Uint||e===C.RGBA8Sint||e===C.BGRA8Unorm||e===C.BGRA8UnormSRGB||e===C.RGB9E5UFloat||e===C.RGB10A2Unorm||e===C.RG11B10UFloat||e===C.Depth32Float||e===C.Depth24Plus||e===C.Depth24PlusStencil8||e===C.Depth32FloatStencil8)return 4;if(e===C.RG32Uint||e===C.RG32Sint||e===C.RG32Float||e===C.RGBA16Uint||e===C.RGBA16Sint||e===C.RGBA16Float)return 8;if(e===C.RGBA32Uint||e===C.RGBA32Sint||e===C.RGBA32Float)return 16}_getTypedArrayType(e){if(e===C.R8Uint)return Uint8Array;if(e===C.R8Sint)return Int8Array;if(e===C.R8Unorm)return Uint8Array;if(e===C.R8Snorm)return Int8Array;if(e===C.RG8Uint)return Uint8Array;if(e===C.RG8Sint)return Int8Array;if(e===C.RG8Unorm)return Uint8Array;if(e===C.RG8Snorm)return Int8Array;if(e===C.RGBA8Uint)return Uint8Array;if(e===C.RGBA8Sint)return Int8Array;if(e===C.RGBA8Unorm)return Uint8Array;if(e===C.RGBA8Snorm)return Int8Array;if(e===C.R16Uint)return Uint16Array;if(e===C.R16Sint)return Int16Array;if(e===C.RG16Uint)return Uint16Array;if(e===C.RG16Sint)return Int16Array;if(e===C.RGBA16Uint)return Uint16Array;if(e===C.RGBA16Sint)return Int16Array;if(e===C.R16Float||e===C.RG16Float||e===C.RGBA16Float)return Uint16Array;if(e===C.R32Uint)return Uint32Array;if(e===C.R32Sint)return Int32Array;if(e===C.R32Float)return Float32Array;if(e===C.RG32Uint)return Uint32Array;if(e===C.RG32Sint)return Int32Array;if(e===C.RG32Float)return Float32Array;if(e===C.RGBA32Uint)return Uint32Array;if(e===C.RGBA32Sint)return Int32Array;if(e===C.RGBA32Float)return Float32Array;if(e===C.BGRA8Unorm||e===C.BGRA8UnormSRGB)return Uint8Array;if(e===C.RGB10A2Unorm||e===C.RGB9E5UFloat||e===C.RG11B10UFloat)return Uint32Array;if(e===C.Depth32Float)return Float32Array;if(e===C.Depth24Plus||e===C.Depth24PlusStencil8)return Uint32Array;if(e===C.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=Tg.ThreeD:t=Tg.TwoD,t}}function Cd(c,e=null){const t=c.format,n=c.type,i=c.colorSpace;let s;if(c.isCompressedTexture===!0||c.isCompressedArrayTexture===!0)switch(t){case Gc:s=i===Re?C.BC1RGBAUnormSRGB:C.BC1RGBAUnorm;break;case Hc:s=i===Re?C.BC2RGBAUnormSRGB:C.BC2RGBAUnorm;break;case Wc:s=i===Re?C.BC3RGBAUnormSRGB:C.BC3RGBAUnorm;break;case Oh:s=i===Re?C.ETC2RGB8UnormSRGB:C.ETC2RGB8Unorm;break;case Vh:s=i===Re?C.ETC2RGBA8UnormSRGB:C.ETC2RGBA8Unorm;break;case kh:s=i===Re?C.ASTC4x4UnormSRGB:C.ASTC4x4Unorm;break;case zh:s=i===Re?C.ASTC5x4UnormSRGB:C.ASTC5x4Unorm;break;case Gh:s=i===Re?C.ASTC5x5UnormSRGB:C.ASTC5x5Unorm;break;case Hh:s=i===Re?C.ASTC6x5UnormSRGB:C.ASTC6x5Unorm;break;case Wh:s=i===Re?C.ASTC6x6UnormSRGB:C.ASTC6x6Unorm;break;case qh:s=i===Re?C.ASTC8x5UnormSRGB:C.ASTC8x5Unorm;break;case $h:s=i===Re?C.ASTC8x6UnormSRGB:C.ASTC8x6Unorm;break;case jh:s=i===Re?C.ASTC8x8UnormSRGB:C.ASTC8x8Unorm;break;case Xh:s=i===Re?C.ASTC10x5UnormSRGB:C.ASTC10x5Unorm;break;case Yh:s=i===Re?C.ASTC10x6UnormSRGB:C.ASTC10x6Unorm;break;case Zh:s=i===Re?C.ASTC10x8UnormSRGB:C.ASTC10x8Unorm;break;case Kh:s=i===Re?C.ASTC10x10UnormSRGB:C.ASTC10x10Unorm;break;case Jh:s=i===Re?C.ASTC12x10UnormSRGB:C.ASTC12x10Unorm;break;case Qh:s=i===Re?C.ASTC12x12UnormSRGB:C.ASTC12x12Unorm;break;case Ys:s=i===Re?C.RGBA8UnormSRGB:C.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case Ys:switch(n){case zo:s=C.RGBA8Snorm;break;case Go:s=C.RGBA16Sint;break;case Br:s=C.RGBA16Uint;break;case Xt:s=C.RGBA32Uint;break;case un:s=C.RGBA32Sint;break;case ms:s=i===Re?C.RGBA8UnormSRGB:C.RGBA8Unorm;break;case Qn:s=C.RGBA16Float;break;case Rn:s=C.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case Id:switch(n){case hv:s=C.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case Bd:switch(n){case zo:s=C.R8Snorm;break;case Go:s=C.R16Sint;break;case Br:s=C.R16Uint;break;case Xt:s=C.R32Uint;break;case un:s=C.R32Sint;break;case ms:s=C.R8Unorm;break;case Qn:s=C.R16Float;break;case Rn:s=C.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case na:switch(n){case zo:s=C.RG8Snorm;break;case Go:s=C.RG16Sint;break;case Br:s=C.RG16Uint;break;case Xt:s=C.RG32Uint;break;case un:s=C.RG32Sint;break;case ms:s=C.RG8Unorm;break;case Qn:s=C.RG16Float;break;case Rn:s=C.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case zs:switch(n){case Br:s=C.Depth16Unorm;break;case Xt:s=C.Depth24Plus;break;case Rn:s=C.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case Qr:switch(n){case ya:s=C.Depth24PlusStencil8;break;case Rn:e&&e.features.has(Nd.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=C.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case Od:switch(n){case un:s=C.R32Sint;break;case Xt:s=C.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case Vd:switch(n){case un:s=C.RG32Sint;break;case Xt:s=C.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case kd:switch(n){case un:s=C.RGBA32Sint;break;case Xt:s=C.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return s}const aD=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,cD=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,wg={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},lD=c=>{c=c.trim();const e=c.match(aD);if(e!==null&&e.length===4){const t=e[2],n=[];let i=null;for(;(i=cD.exec(t))!==null;)n.push({name:i[1],type:i[2]});const s=[];for(let u=0;u<n.length;u++){const{name:h,type:d}=n[u];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=wg[f]),s.push(new cp(f,h))}const r=c.substring(e[0].length),o=e[3]||"void",a=e[1]!==void 0?e[1]:"";return{type:wg[o]||o,inputs:s,name:a,inputsCode:t,blockCode:r,outputType:o}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class uD extends lp{constructor(e){const{type:t,inputs:n,name:i,inputsCode:s,blockCode:r,outputType:o}=lD(e);super(t,n,i),this.inputsCode=s,this.blockCode=r,this.outputType=o}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class hD extends uS{parseFunction(e){return new uD(e)}}const Ur=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},dD={[nn.READ_ONLY]:"read",[nn.WRITE_ONLY]:"write",[nn.READ_WRITE]:"read_write"},Mg={[gs]:"repeat",[ds]:"clamp",[Jr]:"mirror"},Vc={vertex:Ur?Ur.VERTEX:1,fragment:Ur?Ur.FRAGMENT:2,compute:Ur?Ur.COMPUTE:4},Ag={instance:!0,swizzleAssign:!1,storageBuffer:!0},fD={"^^":"tsl_xor"},pD={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Ng={},On={tsl_xor:new Lt("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Lt("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Lt("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Lt("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Lt("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Lt("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Lt("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Lt("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Lt("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Lt("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Lt("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Lt("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Lt(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},ko={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(On.pow_float=new Lt("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),On.pow_vec2=new Lt("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[On.pow_float]),On.pow_vec3=new Lt("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[On.pow_float]),On.pow_vec4=new Lt("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[On.pow_float]),ko.pow_float="tsl_pow_float",ko.pow_vec2="tsl_pow_vec2",ko.pow_vec3="tsl_pow_vec3",ko.pow_vec4="tsl_pow_vec4");let xS="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(xS+=`diagnostic( off, derivative_uniformity );
`);class mD extends cS{constructor(e,t){super(e,t,new hD),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Zs}_generateTextureSample(e,t,n,i,s=this.shaderStage){return s==="fragment"?i?`textureSample( ${t}, ${t}_sampler, ${n}, ${i} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n):this.generateTextureLod(e,t,n,i,"0")}_generateVideoSample(e,t,n=this.shaderStage){if(n==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${n} shader.`)}_generateTextureSampleLevel(e,t,n,i,s,r=this.shaderStage){return r==="fragment"&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,i):this.generateTextureLod(e,t,n,s,i)}generateWrapFunction(e){const t=`tsl_coord_${Mg[e.wrapS]}S_${Mg[e.wrapT]}T`;let n=Ng[t];if(n===void 0){const i=[];let s=`fn ${t}( coord : vec2f ) -> vec2f {

	return vec2f(
`;const r=(o,a)=>{o===gs?(i.push(On.repeatWrapping_float),s+=`		tsl_repeatWrapping_float( coord.${a} )`):o===ds?(i.push(On.clampWrapping_float),s+=`		tsl_clampWrapping_float( coord.${a} )`):o===Jr?(i.push(On.mirrorWrapping_float),s+=`		tsl_mirrorWrapping_float( coord.${a} )`):(s+=`		coord.${a}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${o}" for vertex shader.`))};r(e.wrapS,"x"),s+=`,
`,r(e.wrapT,"y"),s+=`
	);

}
`,Ng[t]=n=new Lt(s,i)}return n.build(this),t}generateTextureDimension(e,t,n){const i=this.getDataFromNode(e,this.shaderStage,this.globalCache);i.dimensionsSnippet===void 0&&(i.dimensionsSnippet={});let s=i.dimensionsSnippet[n];if(i.dimensionsSnippet[n]===void 0){let r;e.isMultisampleRenderTargetTexture===!0?r=t:r=`${t}, u32( ${n} )`,s=new py(new Uy(`textureDimensions( ${r} )`,"uvec2")),i.dimensionsSnippet[n]=s}return s.build(this)}generateFilteredTexture(e,t,n,i="0u"){this._include("biquadraticTexture");const s=this.generateWrapFunction(e),r=this.generateTextureDimension(e,t,i);return`tsl_biquadraticTexture( ${t}, ${s}( ${n} ), ${r}, u32( ${i} ) )`}generateTextureLod(e,t,n,i,s="0u"){const r=this.generateWrapFunction(e),o=this.generateTextureDimension(e,t,s),a=`vec2u( ${r}( ${n} ) * vec2f( ${o} ) )`;return this.generateTextureLoad(e,t,a,i,s)}generateTextureLoad(e,t,n,i,s="0u"){return e.isVideoTexture===!0||e.isStorageTexture===!0?`textureLoad( ${t}, ${n} )`:i?`textureLoad( ${t}, ${n}, ${i}, u32( ${s} ) )`:`textureLoad( ${t}, ${n}, u32( ${s} ) )`}generateTextureStore(e,t,n,i){return`textureStore( ${t}, ${n}, ${i} )`}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===Rn||this.isSampleCompare(e)===!1&&e.minFilter===Gt&&e.magFilter===Gt||e.isMultisampleRenderTargetTexture===!0}generateTexture(e,t,n,i,s=this.shaderStage){let r=null;return e.isVideoTexture===!0?r=this._generateVideoSample(t,n,s):this.isUnfilterable(e)?r=this.generateTextureLod(e,t,n,i,"0",s):r=this._generateTextureSample(e,t,n,i,s),r}generateTextureGrad(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${r} shader.`)}generateTextureCompare(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}generateTextureLevel(e,t,n,i,s,r=this.shaderStage){let o=null;return e.isVideoTexture===!0?o=this._generateVideoSample(t,n,r):o=this._generateTextureSampleLevel(e,t,n,i,s,r),o}generateTextureBias(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${r} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const n=e.name,i=e.type;return i==="texture"||i==="cubeTexture"||i==="storageTexture"||i==="texture3D"?n:i==="buffer"||i==="storageBuffer"||i==="indirectStorageBuffer"?`NodeBuffer_${e.id}.${n}`:e.groupNode.name+"."+n}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=fD[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?nn.READ_ONLY:e.access}getStorageAccess(e,t){return dD[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,n,i=null){const s=super.getUniformFromNode(e,t,n,i),r=this.getDataFromNode(e,n,this.globalCache);if(r.uniformGPU===void 0){let o;const a=e.groupNode,l=a.name,u=this.getBindGroupArray(l,n);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null;const d=this.getNodeAccess(e,n);if(t==="texture"||t==="storageTexture"?h=new eu(s.name,s.node,a,d):t==="cubeTexture"?h=new gS(s.name,s.node,a,d):t==="texture3D"&&(h=new vS(s.name,s.node,a,d)),h.store=e.isStorageTextureNode===!0,h.setVisibility(Vc[n]),n==="fragment"&&this.isUnfilterable(e.value)===!1&&h.store===!1){const f=new QU(`${s.name}_sampler`,s.node,a);f.setVisibility(Vc[n]),u.push(f,h),o=[f,h]}else u.push(h),o=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const h=t==="buffer"?pS:nD,d=new h(e,a);d.setVisibility(Vc[n]),u.push(d),o=d}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new mS(l,a),d.setVisibility(Vc[n]),h[l]=d,u.push(d)),o=this.getNodeUniform(s,t),d.addUniform(o)}r.uniformGPU=o}return s}getBuiltin(e,t,n,i=this.shaderStage){const s=this.builtins[i]||(this.builtins[i]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const r of t.inputs)i.push(r.name+" : "+this.getType(r.type));let s=`fn ${t.name}( ${i.join(", ")} ) -> ${this.getType(t.type)} {
${n.vars}
${n.code}
`;return n.result&&(s+=`	return ${n.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],n=this.directives[e];if(n!==void 0)for(const i of n)t.push(`enable ${i};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],n=this.builtins[e];if(n!==void 0)for(const{name:i,property:s,type:r}of n.values())t.push(`@builtin( ${i} ) ${s} : ${r}`);return t.join(`,
	`)}getScopedArray(e,t,n,i){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:i}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:n,scope:i,bufferType:s,bufferCount:r}of this.scopedArrays.values()){const o=this.getType(s);t.push(`var<${i}> ${n}: array< ${o}, ${r} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const n=this.getBuiltins("attribute");n&&t.push(n);const i=this.getAttributesArray();for(let s=0,r=i.length;s<r;s++){const o=i[s],a=o.name,l=this.getType(o.type);t.push(`@location( ${s} ) ${a} : ${l}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[],n=e.getMemberTypes();for(let s=0;s<n.length;s++){const r=n[s];t.push(`	@location( ${s} ) m${s} : ${r}<f32>`)}const i=this.getBuiltins("output");return i&&t.push("	"+i),t.join(`,
`)}getStructs(e){const t=[],n=this.structs[e];for(let i=0,s=n.length;i<s;i++){const r=n[i],o=r.name;let a=`struct ${o} {
`;a+=this.getStructMembers(r),a+=`
}`,t.push(a),t.push(`
var<private> output : ${o};

`)}return t.join(`

`)}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const i of n)t.push(`	${this.getVar(i.type,i.name)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const s=this.varyings,r=this.vars[e];for(let o=0;o<s.length;o++){const a=s[o];if(a.needsInterpolation){let l=`@location( ${o} )`;/^(int|uint|ivec|uvec)/.test(a.type)&&(l+=" @interpolate( flat )"),t.push(`${l} ${a.name} : ${this.getType(a.type)}`)}else e==="vertex"&&r.includes(a)===!1&&r.push(a)}}const n=this.getBuiltins(e);n&&t.push(n);const i=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+i):i}getUniforms(e){const t=this.uniforms[e],n=[],i=[],s=[],r={};for(const a of t){const l=a.groupNode.name,u=this.bindingsIndexes[l];if(a.type==="texture"||a.type==="cubeTexture"||a.type==="storageTexture"||a.type==="texture3D"){const h=a.node.value;e==="fragment"&&this.isUnfilterable(h)===!1&&a.node.isStorageTextureNode!==!0&&(this.isSampleCompare(h)?n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${a.name}_sampler : sampler_comparison;`):n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${a.name}_sampler : sampler;`));let d,f="";if(h.isMultisampleRenderTargetTexture===!0&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(h.isVideoTexture===!0)d="texture_external";else if(h.isData3DTexture===!0)d="texture_3d<f32>";else if(a.node.isStorageTextureNode===!0){const p=Cd(h),m=this.getStorageAccess(a.node,e);d=`texture_storage_2d<${p}, ${m}>`}else{const p=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${p}32>`}n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${a.name} : ${d};`)}else if(a.type==="buffer"||a.type==="storageBuffer"||a.type==="indirectStorageBuffer"){const h=a.node,d=this.getType(h.bufferType),f=h.bufferCount,p=f>0&&a.type==="buffer"?", "+f:"",m=h.isAtomic?`atomic<${d}>`:`${d}`,g=`	${a.name} : array< ${m}${p} >
`,y=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h,e)}`:"uniform";i.push(this._getWGSLStructBinding("NodeBuffer_"+h.id,g,y,u.binding++,u.group))}else{const h=this.getType(this.getVectorType(a.type)),d=a.groupNode.name;(r[d]||(r[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${a.name} : ${h}`)}}for(const a in r){const l=r[a];s.push(this._getWGSLStructBinding(a,l.snippets.join(`,
`),"uniform",l.index,l.id))}let o=n.join(`
`);return o+=i.join(`
`),o+=s.join(`
`),o}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let i=`// code

`;i+=this.flowCode[t];const s=this.flowNodes[t],r=s[s.length-1],o=r.outputNode,a=o!==void 0&&o.isOutputStructNode===!0;for(const l of s){const u=this.getFlowData(l),h=l.name;if(h&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${h}
	`),i+=`${u.code}
	`,l===r&&t!=="compute"){if(i+=`// result

	`,t==="vertex")i+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(a)n.returnType=o.nodeType,i+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;

`,i+=`output.color = ${u.result};

	return output;`}}}n.flow=i}this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let n;return t!==null&&(n=this._getWGSLMethod(e+"_"+t)),n===void 0&&(n=this._getWGSLMethod(e)),n||e}getType(e){return pD[e]||e}isAvailable(e){let t=Ag[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),Ag[e]=t),t}_getWGSLMethod(e){return On[e]!==void 0&&this._include(e),ko[e]}_include(e){const t=On[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${xS}

// uniforms
${e.uniforms}

// structs
${e.structs}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,n,i=0,s=0){const r=e+"Struct";return`${this._getWGSLStruct(r,t)}
@binding( ${i} ) @group( ${s} )
var<${n}> ${e} : ${r};`}}class gD{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=C.Depth24PlusStencil8:e.depth&&(t=C.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return Hr.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return Hr.LineList;if(e.isLine)return Hr.LineStrip;if(e.isMesh)return Hr.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?C.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const vD=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),yD=new Map([[Mv,["float16"]]]),xD=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class _D{constructor(e){this.backend=e}createAttribute(e,t){const n=this._getBufferAttribute(e),i=this.backend,s=i.get(n);let r=s.buffer;if(r===void 0){const o=i.device;let a=n.array;if(e.normalized===!1&&(a.constructor===Int16Array||a.constructor===Uint16Array)){const u=new Uint32Array(a.length);for(let h=0;h<a.length;h++)u[h]=a[h];a=u}if(n.array=a,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){a=new a.constructor(n.count*4);for(let u=0;u<n.count;u++)a.set(n.array.subarray(u*3,u*3+3),u*4);n.itemSize=4,n.array=a}const l=a.byteLength+(4-a.byteLength%4)%4;r=o.createBuffer({label:n.name,size:l,usage:t,mappedAtCreation:!0}),new a.constructor(r.getMappedRange()).set(a),r.unmap(),s.buffer=r}}updateAttribute(e){const t=this._getBufferAttribute(e),n=this.backend,i=n.device,s=n.get(t).buffer,r=t.array,o=this._isTypedArray(r),a=t.updateRanges;if(a.length===0)i.queue.writeBuffer(s,0,r,0);else{const l=o?1:r.BYTES_PER_ELEMENT;for(let u=0,h=a.length;u<h;u++){const d=a[u],f=d.start*l,p=d.count*l;i.queue.writeBuffer(s,0,r,f,p)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),n=new Map;for(let i=0;i<t.length;i++){const s=t[i],r=s.array.BYTES_PER_ELEMENT,o=this._getBufferAttribute(s);let a=n.get(o);if(a===void 0){let h,d;s.isInterleavedBufferAttribute===!0?(h=s.data.stride*r,d=s.data.isInstancedInterleavedBuffer?Oc.Instance:Oc.Vertex):(h=s.itemSize*r,d=s.isInstancedBufferAttribute?Oc.Instance:Oc.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(h=4),a={arrayStride:h,attributes:[],stepMode:d},n.set(o,a)}const l=this._getVertexFormat(s),u=s.isInterleavedBufferAttribute===!0?s.offset*r:0;a.attributes.push({shaderLocation:i,offset:u,format:l})}return Array.from(n.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,n=t.device,s=t.get(this._getBufferAttribute(e)).buffer,r=s.size,o=n.createBuffer({label:e.name,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=n.createCommandEncoder({});a.copyBufferToBuffer(s,0,o,0,r),o.unmap();const l=a.finish();return n.queue.submit([l]),await o.mapAsync(GPUMapMode.READ),o.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:n}=e,i=e.array.constructor,s=e.constructor;let r;if(t==1)r=xD.get(i);else{const a=(yD.get(s)||vD.get(i))[n?1:0];if(a){const l=i.BYTES_PER_ELEMENT*t,h=Math.floor((l+3)/4)*4/i.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");r=`${a}x${h}`}}return r||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),r}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class SD{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const n=this.backend.device,i=[];let s=0;for(const r of e.bindings){const o={binding:s++,visibility:r.visibility};if(r.isUniformBuffer||r.isStorageBuffer){const a={};r.isStorageBuffer&&(r.visibility&4&&(r.access===nn.READ_WRITE||r.access===nn.WRITE_ONLY)?a.type=Rh.Storage:a.type=Rh.ReadOnlyStorage),o.buffer=a}else if(r.isSampler){const a={};r.texture.isDepthTexture&&r.texture.compareFunction!==null&&(a.type="comparison"),o.sampler=a}else if(r.isSampledTexture&&r.texture.isVideoTexture)o.externalTexture={};else if(r.isSampledTexture&&r.store){const a={};a.format=this.backend.get(r.texture).texture.format;const l=r.access;l===nn.READ_WRITE?a.access=Ph.ReadWrite:l===nn.WRITE_ONLY?a.access=Ph.WriteOnly:a.access=Ph.ReadOnly,o.storageTexture=a}else if(r.isSampledTexture){const a={};if(r.texture.isMultisampleRenderTargetTexture===!0&&(a.multisampled=!0),r.texture.isDepthTexture)a.sampleType=Oo.Depth;else if(r.texture.isDataTexture||r.texture.isDataArrayTexture||r.texture.isData3DTexture){const l=r.texture.type;l===un?a.sampleType=Oo.SInt:l===Xt?a.sampleType=Oo.UInt:l===Rn&&(this.backend.hasFeature("float32-filterable")?a.sampleType=Oo.Float:a.sampleType=Oo.UnfilterableFloat)}r.isSampledCubeTexture?a.viewDimension=Bn.Cube:r.texture.isDataArrayTexture||r.texture.isCompressedArrayTexture?a.viewDimension=Bn.TwoDArray:r.isSampledTexture3D&&(a.viewDimension=Bn.ThreeD),o.texture=a}else console.error(`WebGPUBindingUtils: Unsupported binding "${r}".`);i.push(o)}return n.createBindGroupLayout({entries:i})}createBindings(e,t,n,i=0){const{backend:s,bindGroupLayoutCache:r}=this,o=s.get(e);let a=r.get(e.bindingsReference);a===void 0&&(a=this.createBindingsLayout(e),r.set(e.bindingsReference,a));let l;n>0&&(o.groups===void 0&&(o.groups=[],o.versions=[]),o.versions[n]===i&&(l=o.groups[n])),l===void 0&&(l=this.createBindGroup(e,a),n>0&&(o.groups[n]=l,o.versions[n]=i)),o.group=l,o.layout=a}updateBinding(e){const t=this.backend,n=t.device,i=e.buffer,s=t.get(e).buffer;n.queue.writeBuffer(s,0,i,0)}createBindGroup(e,t){const n=this.backend,i=n.device;let s=0;const r=[];for(const o of e.bindings){if(o.isUniformBuffer){const a=n.get(o);if(a.buffer===void 0){const l=o.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=i.createBuffer({label:"bindingBuffer_"+o.name,size:l,usage:u});a.buffer=h}r.push({binding:s,resource:{buffer:a.buffer}})}else if(o.isStorageBuffer){const a=n.get(o);if(a.buffer===void 0){const l=o.attribute;a.buffer=n.get(l).buffer}r.push({binding:s,resource:{buffer:a.buffer}})}else if(o.isSampler){const a=n.get(o.texture);r.push({binding:s,resource:a.sampler})}else if(o.isSampledTexture){const a=n.get(o.texture);let l;if(a.externalTexture!==void 0)l=i.importExternalTexture({source:a.externalTexture});else{const u=o.store?1:a.texture.mipLevelCount,h=`view-${a.texture.width}-${a.texture.height}-${u}`;if(l=a[h],l===void 0){const d=KU.All;let f;o.isSampledCubeTexture?f=Bn.Cube:o.isSampledTexture3D?f=Bn.ThreeD:o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?f=Bn.TwoDArray:f=Bn.TwoD,l=a[h]=a.texture.createView({aspect:d,dimension:f,mipLevelCount:u})}}r.push({binding:s,resource:l})}s++}return i.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:r})}}class bD{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:n,material:i,geometry:s,pipeline:r}=e,{vertexProgram:o,fragmentProgram:a}=r,l=this.backend,u=l.device,h=l.utils,d=l.get(r),f=[];for(const k of e.getBindings()){const O=l.get(k);f.push(O.layout)}const p=l.attributeUtils.createShaderVertexBuffers(e);let m;i.transparent===!0&&i.blending!==js&&(m=this._getBlending(i));let g={};i.stencilWrite===!0&&(g={compare:this._getStencilCompare(i),failOp:this._getStencilOperation(i.stencilFail),depthFailOp:this._getStencilOperation(i.stencilZFail),passOp:this._getStencilOperation(i.stencilZPass)});const y=this._getColorWriteMask(i),_=[];if(e.context.textures!==null){const k=e.context.textures;for(let O=0;O<k.length;O++){const te=h.getTextureFormatGPU(k[O]);_.push({format:te,blend:m,writeMask:y})}}else{const k=h.getCurrentColorFormat(e.context);_.push({format:k,blend:m,writeMask:y})}const x=l.get(o).module,S=l.get(a).module,w=this._getPrimitiveState(n,s,i),A=this._getDepthCompare(i),T=h.getCurrentDepthStencilFormat(e.context),M=this._getSampleCount(e.context),L={label:`renderPipeline_${i.name||i.type}_${i.id}`,vertex:Object.assign({},x,{buffers:p}),fragment:Object.assign({},S,{targets:_}),primitive:w,multisample:{count:M,alphaToCoverageEnabled:i.alphaToCoverage&&M>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},I={},W=e.context.depth,U=e.context.stencil;if((W===!0||U===!0)&&(W===!0&&(I.format=T,I.depthWriteEnabled=i.depthWrite,I.depthCompare=A),U===!0&&(I.stencilFront=g,I.stencilBack={},I.stencilReadMask=i.stencilFuncMask,I.stencilWriteMask=i.stencilWriteMask),L.depthStencil=I),t===null)d.pipeline=u.createRenderPipeline(L);else{const k=new Promise(O=>{u.createRenderPipelineAsync(L).then(te=>{d.pipeline=te,O()})});t.push(k)}}createBundleEncoder(e){const t=this.backend,{utils:n,device:i}=t,s=n.getCurrentDepthStencilFormat(e),r=n.getCurrentColorFormat(e),o=this._getSampleCount(e),a={label:"renderBundleEncoder",colorFormats:[r],depthStencilFormat:s,sampleCount:o};return i.createRenderBundleEncoder(a)}createComputePipeline(e,t){const n=this.backend,i=n.device,s=n.get(e.computeProgram).module,r=n.get(e),o=[];for(const a of t){const l=n.get(a);o.push(l.layout)}r.pipeline=i.createComputePipeline({compute:s,layout:i.createPipelineLayout({bindGroupLayouts:o})})}_getBlending(e){let t,n;const i=e.blending,s=e.blendSrc,r=e.blendDst,o=e.blendEquation;if(i===$g){const a=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,l=e.blendDstAlpha!==null?e.blendDstAlpha:r,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:o;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(r),operation:this._getBlendOperation(o)},n={srcFactor:this._getBlendFactor(a),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(u)}}else{const a=e.premultipliedAlpha,l=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:Us.Add},n={srcFactor:d,dstFactor:f,operation:Us.Add}};if(a)switch(i){case ps:l(Be.One,Be.OneMinusSrcAlpha,Be.One,Be.OneMinusSrcAlpha);break;case Qc:l(Be.One,Be.One,Be.One,Be.One);break;case el:l(Be.Zero,Be.OneMinusSrc,Be.Zero,Be.One);break;case tl:l(Be.Zero,Be.Src,Be.Zero,Be.SrcAlpha);break}else switch(i){case ps:l(Be.SrcAlpha,Be.OneMinusSrcAlpha,Be.One,Be.OneMinusSrcAlpha);break;case Qc:l(Be.SrcAlpha,Be.One,Be.SrcAlpha,Be.One);break;case el:l(Be.Zero,Be.OneMinusSrc,Be.Zero,Be.One);break;case tl:l(Be.Zero,Be.Src,Be.Zero,Be.Src);break}}if(t!==void 0&&n!==void 0)return{color:t,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",i)}_getBlendFactor(e){let t;switch(e){case Yg:t=Be.Zero;break;case Zg:t=Be.One;break;case Kg:t=Be.Src;break;case Jg:t=Be.OneMinusSrc;break;case nl:t=Be.SrcAlpha;break;case il:t=Be.OneMinusSrcAlpha;break;case tv:t=Be.Dst;break;case nv:t=Be.OneMinusDstColor;break;case Qg:t=Be.DstAlpha;break;case ev:t=Be.OneMinusDstAlpha;break;case iv:t=Be.SrcAlphaSaturated;break;case kC:t=Be.Constant;break;case zC:t=Be.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const n=e.stencilFunc;switch(n){case yb:t=qt.Never;break;case ed:t=qt.Always;break;case xb:t=qt.Less;break;case Sb:t=qt.LessEqual;break;case _b:t=qt.Equal;break;case wb:t=qt.GreaterEqual;break;case bb:t=qt.Greater;break;case Tb:t=qt.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case Ls:t=rs.Keep;break;case hb:t=rs.Zero;break;case db:t=rs.Replace;break;case vb:t=rs.Invert;break;case fb:t=rs.IncrementClamp;break;case pb:t=rs.DecrementClamp;break;case mb:t=rs.IncrementWrap;break;case gb:t=rs.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case cs:t=Us.Add;break;case jg:t=Us.Subtract;break;case Xg:t=Us.ReverseSubtract;break;case WS:t=Us.Min;break;case qS:t=Us.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){const i={},s=this.backend.utils;switch(i.topology=s.getPrimitiveTopology(e,n),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(i.stripIndexFormat=t.index.array instanceof Uint16Array?so.Uint16:so.Uint32),n.side){case Zr:i.frontFace=Nh.CCW,i.cullMode=Ch.Back;break;case Gn:i.frontFace=Nh.CCW,i.cullMode=Ch.Front;break;case ks:i.frontFace=Nh.CCW,i.cullMode=Ch.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",n.side);break}return i}_getColorWriteMask(e){return e.colorWrite===!0?bg.All:bg.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=qt.Always;else{const n=e.depthFunc;switch(n){case sv:t=qt.Never;break;case rv:t=qt.Always;break;case ov:t=qt.Less;break;case sl:t=qt.LessEqual;break;case av:t=qt.Equal;break;case cv:t=qt.GreaterEqual;break;case lv:t=qt.Greater;break;case uv:t=qt.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return t}}class TD extends yS{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new gD(this),this.attributeUtils=new _D(this),this.bindingUtils=new SD(this),this.pipelineUtils=new bD(this),this.textureUtils=new oD(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let n;if(t.device===void 0){const r={powerPreference:t.powerPreference},o=typeof navigator<"u"?await navigator.gpu.requestAdapter(r):null;if(o===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const a=Object.values(Nd),l=[];for(const h of a)o.features.has(h)&&l.push(h);const u={requiredFeatures:l,requiredLimits:t.requiredLimits};n=await o.requestDevice(u)}else n=t.device;n.lost.then(r=>{const o={api:"WebGPU",message:r.message||"Unknown reason",reason:r.reason||null,originalEvent:r};e.onDeviceLost(o)});const i=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=n,this.context=i;const s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Nd.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return zi}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const n=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()});const i=e.colorAttachments[0];this.renderer.samples>0?i.view=this.colorBuffer.createView():i.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,n=this.get(t);let i=n.descriptors;if(i===void 0||n.width!==t.width||n.height!==t.height||n.activeMipmapLevel!==t.activeMipmapLevel||n.samples!==t.samples){i={},n.descriptors=i;const o=()=>{t.removeEventListener("dispose",o),this.delete(t)};t.addEventListener("dispose",o)}const s=e.getCacheKey();let r=i[s];if(r===void 0){const o=e.textures,a=[];for(let l=0;l<o.length;l++){const u=this.get(o[l]),h=u.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Bn.TwoD});let d,f;u.msaaTexture!==void 0?(d=u.msaaTexture.createView(),f=h):(d=h,f=void 0),a.push({view:d,resolveTarget:f,loadOp:Dt.Load,storeOp:jt.Store})}if(r={colorAttachments:a},e.depth){const u={view:this.get(e.depthTexture).texture.createView()};r.depthStencilAttachment=u}i[s]=r,n.width=t.width,n.height=t.height,n.samples=t.samples,n.activeMipmapLevel=t.activeMipmapLevel}return r}beginRender(e){const t=this.get(e),n=this.device,i=e.occlusionQueryCount;let s;i>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=n.createQuerySet({type:"occlusion",count:i,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(i),t.lastOcclusionObject=null);let r;e.textures===null?r=this._getDefaultRenderPassDescriptor():r=this._getRenderPassDescriptor(e),this.initTimestampQuery(e,r),r.occlusionQuerySet=s;const o=r.depthStencilAttachment;if(e.textures!==null){const u=r.colorAttachments;for(let h=0;h<u.length;h++){const d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=Dt.Clear,d.storeOp=jt.Store):(d.loadOp=Dt.Load,d.storeOp=jt.Store)}}else{const u=r.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=Dt.Clear,u.storeOp=jt.Store):(u.loadOp=Dt.Load,u.storeOp=jt.Store)}e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=Dt.Clear,o.depthStoreOp=jt.Store):(o.depthLoadOp=Dt.Load,o.depthStoreOp=jt.Store)),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=Dt.Clear,o.stencilStoreOp=jt.Store):(o.stencilLoadOp=Dt.Load,o.stencilStoreOp=jt.Store));const a=n.createCommandEncoder({label:"renderContext_"+e.id}),l=a.beginRenderPass(r);if(t.descriptor=r,t.encoder=a,t.currentPass=l,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;l.setScissorRect(u,h,d,f)}}finishRender(e){const t=this.get(e),n=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),n>0){const i=n*8;let s=this.occludedResolveCache.get(i);s===void 0&&(s=this.device.createBuffer({size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(i,s));const r=this.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,s,0),t.encoder.copyBufferToBuffer(s,0,r,0,i),t.occlusionQueryBuffer=r,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const i=e.textures;for(let s=0;s<i.length;s++){const r=i[s];r.generateMipmaps===!0&&this.textureUtils.generateMipmaps(r)}}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const r=n.getMappedRange(),o=new BigUint64Array(r);for(let a=0;a<i.length;a++)o[a]!==BigInt(0)&&s.add(i[a]);n.destroy(),t.occluded=s}}updateViewport(e){const{currentPass:t}=this.get(e),{x:n,y:i,width:s,height:r,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(n,i,s,r,o,a)}clear(e,t,n,i=null){const s=this.device,r=this.renderer;let o=[],a,l,u,h;if(e){const p=this.getClearColor();if(this.renderer.alpha===!0){const m=p.a;l={r:p.r*m,g:p.g*m,b:p.b*m,a:m}}else l={r:p.r,g:p.g,b:p.b,a:p.a}}if(i===null){u=r.depth,h=r.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){o=p.colorAttachments;const m=o[0];m.clearValue=l,m.loadOp=Dt.Clear,m.storeOp=jt.Store}(u||h)&&(a=p.depthStencilAttachment)}else{if(u=i.depth,h=i.stencil,e)for(const p of i.textures){const m=this.get(p),g=m.texture.createView();let y,_;m.msaaTexture!==void 0?(y=m.msaaTexture.createView(),_=g):(y=g,_=void 0),o.push({view:y,resolveTarget:_,clearValue:l,loadOp:Dt.Clear,storeOp:jt.Store})}(u||h)&&(a={view:this.get(i.depthTexture).texture.createView()})}u&&(t?(a.depthLoadOp=Dt.Clear,a.depthClearValue=r.getClearDepth(),a.depthStoreOp=jt.Store):(a.depthLoadOp=Dt.Load,a.depthStoreOp=jt.Store)),h&&(n?(a.stencilLoadOp=Dt.Clear,a.stencilClearValue=r.getClearStencil(),a.stencilStoreOp=jt.Store):(a.stencilLoadOp=Dt.Load,a.stencilStoreOp=jt.Store));const d=s.createCommandEncoder({});d.beginRenderPass({colorAttachments:o,depthStencilAttachment:a}).end(),s.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),n={};this.initTimestampQuery(e,n),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,i){const{passEncoderGPU:s}=this.get(e),r=this.get(i).pipeline;s.setPipeline(r);for(let u=0,h=n.length;u<h;u++){const d=n[u],f=this.get(d);s.setBindGroup(u,f.group)}const o=this.device.limits.maxComputeWorkgroupsPerDimension,a=this.get(t);a.dispatchSize===void 0&&(a.dispatchSize={x:0,y:1,z:1});const{dispatchSize:l}=a;t.dispatchCount>o?(l.x=Math.min(t.dispatchCount,o),l.y=Math.ceil(t.dispatchCount/o)):l.x=t.dispatchCount,s.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:n,context:i,pipeline:s}=e,r=e.getBindings(),o=this.get(i),a=this.get(s).pipeline,l=o.currentSets,u=o.currentPass,h=e.getDrawParameters();if(h===null)return;l.pipeline!==a&&(u.setPipeline(a),l.pipeline=a);const d=l.bindingGroups;for(let g=0,y=r.length;g<y;g++){const _=r[g],x=this.get(_);d[_.index]!==_.id&&(u.setBindGroup(_.index,x.group),d[_.index]=_.id)}const f=e.getIndex(),p=f!==null;if(p===!0&&l.index!==f){const g=this.get(f).buffer,y=f.array instanceof Uint16Array?so.Uint16:so.Uint32;u.setIndexBuffer(g,y),l.index=f}const m=e.getVertexBuffers();for(let g=0,y=m.length;g<y;g++){const _=m[g];if(l.attributes[g]!==_){const x=this.get(_).buffer;u.setVertexBuffer(g,x),l.attributes[g]=_}}if(o.occlusionQuerySet!==void 0){const g=o.lastOcclusionObject;g!==n&&(g!==null&&g.occlusionTest===!0&&(u.endOcclusionQuery(),o.occlusionQueryIndex++),n.occlusionTest===!0&&(u.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=n),o.lastOcclusionObject=n)}if(n.isBatchedMesh===!0){const g=n._multiDrawStarts,y=n._multiDrawCounts,_=n._multiDrawCount,x=n._multiDrawInstances,S=p?f.array.BYTES_PER_ELEMENT:1;for(let w=0;w<_;w++){const A=x?x[w]:1,T=A>1?0:w;u.drawIndexed(y[w],A,g[w]/S,0,T)}}else if(p===!0){const{vertexCount:g,instanceCount:y,firstVertex:_}=h,x=e.getIndirect();if(x!==null){const S=this.get(x).buffer;u.drawIndexedIndirect(S,0)}else u.drawIndexed(g,y,_,0,0);t.update(n,g,y)}else{const{vertexCount:g,instanceCount:y,firstVertex:_}=h,x=e.getIndirect();if(x!==null){const S=this.get(x).buffer;u.drawIndirect(S,0)}else u.draw(g,y,_,0);t.update(n,g,y)}}needsRenderUpdate(e){const t=this.get(e),{object:n,material:i}=e,s=this.utils,r=s.getSampleCountRenderContext(e.context),o=s.getCurrentColorSpace(e.context),a=s.getCurrentColorFormat(e.context),l=s.getCurrentDepthStencilFormat(e.context),u=s.getPrimitiveTopology(n,i);let h=!1;return(t.material!==i||t.materialVersion!==i.version||t.transparent!==i.transparent||t.blending!==i.blending||t.premultipliedAlpha!==i.premultipliedAlpha||t.blendSrc!==i.blendSrc||t.blendDst!==i.blendDst||t.blendEquation!==i.blendEquation||t.blendSrcAlpha!==i.blendSrcAlpha||t.blendDstAlpha!==i.blendDstAlpha||t.blendEquationAlpha!==i.blendEquationAlpha||t.colorWrite!==i.colorWrite||t.depthWrite!==i.depthWrite||t.depthTest!==i.depthTest||t.depthFunc!==i.depthFunc||t.stencilWrite!==i.stencilWrite||t.stencilFunc!==i.stencilFunc||t.stencilFail!==i.stencilFail||t.stencilZFail!==i.stencilZFail||t.stencilZPass!==i.stencilZPass||t.stencilFuncMask!==i.stencilFuncMask||t.stencilWriteMask!==i.stencilWriteMask||t.side!==i.side||t.alphaToCoverage!==i.alphaToCoverage||t.sampleCount!==r||t.colorSpace!==o||t.colorFormat!==a||t.depthStencilFormat!==l||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=i,t.materialVersion=i.version,t.transparent=i.transparent,t.blending=i.blending,t.premultipliedAlpha=i.premultipliedAlpha,t.blendSrc=i.blendSrc,t.blendDst=i.blendDst,t.blendEquation=i.blendEquation,t.blendSrcAlpha=i.blendSrcAlpha,t.blendDstAlpha=i.blendDstAlpha,t.blendEquationAlpha=i.blendEquationAlpha,t.colorWrite=i.colorWrite,t.depthWrite=i.depthWrite,t.depthTest=i.depthTest,t.depthFunc=i.depthFunc,t.stencilWrite=i.stencilWrite,t.stencilFunc=i.stencilFunc,t.stencilFail=i.stencilFail,t.stencilZFail=i.stencilZFail,t.stencilZPass=i.stencilZPass,t.stencilFuncMask=i.stencilFuncMask,t.stencilWriteMask=i.stencilWriteMask,t.side=i.side,t.alphaToCoverage=i.alphaToCoverage,t.sampleCount=r,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=l,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,h=!0),h}getRenderCacheKey(e){const{object:t,material:n}=e,i=this.utils,s=e.context;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,i.getSampleCountRenderContext(s),i.getCurrentColorSpace(s),i.getCurrentColorFormat(s),i.getCurrentDepthStencilFormat(s),i.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,n,i,s,r){return this.textureUtils.copyTextureToBuffer(e,t,n,i,s,r)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const n=this.get(e);if(!n.timeStampQuerySet){const i=e.isComputeNode?"compute":"render",s=this.device.createQuerySet({type:"timestamp",count:2,label:`timestamp_${i}_${e.id}`});Object.assign(t,{timestampWrites:{querySet:s,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}}),n.timeStampQuerySet=s}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const n=this.get(e),i=2*BigInt64Array.BYTES_PER_ELEMENT;n.currentTimestampQueryBuffers===void 0&&(n.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})});const{resolveBuffer:s,resultBuffer:r}=n.currentTimestampQueryBuffers;t.resolveQuerySet(n.timeStampQuerySet,0,2,s,0),r.mapState==="unmapped"&&t.copyBufferToBuffer(s,0,r,0,i)}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const n=this.get(e);if(n.currentTimestampQueryBuffers===void 0)return;const{resultBuffer:i}=n.currentTimestampQueryBuffers;await this.device.queue.onSubmittedWorkDone(),i.mapState==="unmapped"&&i.mapAsync(GPUMapMode.READ).then(()=>{const s=new BigUint64Array(i.getMappedRange()),r=Number(s[1]-s[0])/1e6;this.renderer.info.updateTimestamp(t,r),i.unmap()})}createNodeBuilder(e,t){return new mD(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const n=this.get(e),s=n.currentPass.finish();this.get(t).bundleGPU=s,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,n=null,i=null,s=0){let r=0,o=0,a=0,l=0,u=0,h=0,d=e.image.width,f=e.image.height;n!==null&&(l=n.x,u=n.y,h=n.z||0,d=n.width,f=n.height),i!==null&&(r=i.x,o=i.y,a=i.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,g=this.get(t).texture;p.copyTextureToTexture({texture:m,mipLevel:s,origin:{x:l,y:u,z:h}},{texture:g,mipLevel:s,origin:{x:r,y:o,z:a}},[d,f,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t,n){const i=this.get(t);let s=null;t.renderTarget?e.isDepthTexture?s=this.get(t.depthTexture).texture:s=this.get(t.textures[0]).texture:e.isDepthTexture?s=this.textureUtils.getDepthBuffer(t.depth,t.stencil):s=this.context.getCurrentTexture();const r=this.get(e).texture;if(s.format!==r.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",s.format,r.format);return}let o;if(i.currentPass?(i.currentPass.end(),o=i.encoder):o=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),o.copyTextureToTexture({texture:s,origin:[n.x,n.y,0]},{texture:r},[n.z,n.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),i.currentPass){const{descriptor:a}=i;for(let l=0;l<a.colorAttachments.length;l++)a.colorAttachments[l].loadOp=Dt.Load;if(t.depth&&(a.depthStencilAttachment.depthLoadOp=Dt.Load),t.stencil&&(a.depthStencilAttachment.stencilLoadOp=Dt.Load),i.currentPass=o.beginRenderPass(a),i.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:l,y:u,width:h,height:d}=t.scissorValue;i.currentPass.setScissorRect(l,u,h,d)}}else this.device.queue.submit([o.finish()])}}class wD extends Vv{constructor(e,t,n,i,s,r){super(e,t,n,i,s,r),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class MD extends hS{constructor(){super(),this.addMaterial(O2,"MeshPhongMaterial"),this.addMaterial(Xl,"MeshStandardMaterial"),this.addMaterial(gC,"MeshPhysicalMaterial"),this.addMaterial(_C,"MeshToonMaterial"),this.addMaterial(P2,"MeshBasicMaterial"),this.addMaterial(I2,"MeshLambertMaterial"),this.addMaterial(M2,"MeshNormalMaterial"),this.addMaterial(TC,"MeshMatcapMaterial"),this.addMaterial(y2,"LineBasicMaterial"),this.addMaterial(_2,"LineDashedMaterial"),this.addMaterial(MC,"PointsMaterial"),this.addMaterial(CC,"SpriteMaterial"),this.addMaterial(PC,"ShadowMaterial"),this.addLight(A3,xT),this.addLight(pU,kv),this.addLight(mU,ST),this.addLight(lS,Vv),this.addLight(vU,zv),this.addLight(yU,gT),this.addLight(xU,TT),this.addLight(gU,wD),this.addToneMapping(R_,XS),this.addToneMapping(P_,YS),this.addToneMapping(U_,ZS),this.addToneMapping(D_,KS),this.addToneMapping(L_,JS),this.addToneMapping(F_,QS)}}class AD extends RU{constructor(e={}){let t;e.forceWebGL?t=Sg:(t=TD,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Sg(e)));const n=new t(e);super(n,e),this.library=new MD,this.isWebGPURenderer=!0}}function ND(){var c=Object.create(null);function e(i,s){var r=i.id,o=i.name,a=i.dependencies;a===void 0&&(a=[]);var l=i.init;l===void 0&&(l=function(){});var u=i.getTransferables;if(u===void 0&&(u=null),!c[r])try{a=a.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=c[d.id].value),d}),l=n("<"+o+">.init",l),u&&(u=n("<"+o+">.getTransferables",u));var h=null;typeof l=="function"?h=l.apply(void 0,a):console.error("worker module init function failed to rehydrate"),c[r]={id:r,value:h,getTransferables:u},s(h)}catch(d){d&&d.noLog||console.error(d),s(d)}}function t(i,s){var r,o=i.id,a=i.args;(!c[o]||typeof c[o].value!="function")&&s(new Error("Worker module "+o+": not found or its 'init' did not return a function"));try{var l=(r=c[o]).value.apply(r,a);l&&typeof l.then=="function"?l.then(u,function(h){return s(h instanceof Error?h:new Error(""+h))}):u(l)}catch(h){s(h)}function u(h){try{var d=c[o].getTransferables&&c[o].getTransferables(h);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),s(h,d)}catch(f){console.error(f),s(f)}}}function n(i,s){var r=void 0;self.troikaDefine=function(a){return r=a};var o=URL.createObjectURL(new Blob(["/** "+i.replace(/\*/g,"")+` **/

troikaDefine(
`+s+`
)`],{type:"application/javascript"}));try{importScripts(o)}catch(a){console.error(a)}return URL.revokeObjectURL(o),delete self.troikaDefine,r}self.addEventListener("message",function(i){var s=i.data,r=s.messageId,o=s.action,a=s.data;try{o==="registerModule"&&e(a,function(l){l instanceof Error?postMessage({messageId:r,success:!1,error:l.message}):postMessage({messageId:r,success:!0,result:{isCallable:typeof l=="function"}})}),o==="callModule"&&t(a,function(l,u){l instanceof Error?postMessage({messageId:r,success:!1,error:l.message}):postMessage({messageId:r,success:!0,result:l},u||void 0)})}catch(l){postMessage({messageId:r,success:!1,error:l.stack})}})}function CD(c){var e=function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];return e._getInitResult().then(function(i){if(typeof i=="function")return i.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=c.dependencies,n=c.init;t=Array.isArray(t)?t.map(function(s){return s&&(s=s.onMainThread||s,s._getInitResult&&(s=s._getInitResult())),s}):[];var i=Promise.all(t).then(function(s){return n.apply(null,s)});return e._getInitResult=function(){return i},i},e}var _S=function(){var c=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),c=!0}catch(t){typeof process<"u",console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return _S=function(){return c},c},ED=0,RD=0,Uh=!1,ea=Object.create(null),ta=Object.create(null),Ed=Object.create(null);function uo(c){if((!c||typeof c.init!="function")&&!Uh)throw new Error("requires `options.init` function");var e=c.dependencies,t=c.init,n=c.getTransferables,i=c.workerId,s=CD(c);i==null&&(i="#default");var r="workerModule"+ ++ED,o=c.name||r,a=null;e=e&&e.map(function(u){return typeof u=="function"&&!u.workerModuleData&&(Uh=!0,u=uo({workerId:i,name:"<"+o+"> function dependency: "+u.name,init:`function(){return (
`+Kc(u)+`
)}`}),Uh=!1),u&&u.workerModuleData&&(u=u.workerModuleData),u});function l(){for(var u=[],h=arguments.length;h--;)u[h]=arguments[h];if(!_S())return s.apply(void 0,u);if(!a){a=Cg(i,"registerModule",l.workerModuleData);var d=function(){a=null,ta[i].delete(d)};(ta[i]||(ta[i]=new Set)).add(d)}return a.then(function(f){var p=f.isCallable;if(p)return Cg(i,"callModule",{id:r,args:u});throw new Error("Worker module function was called but `init` did not return a callable function")})}return l.workerModuleData={isWorkerModule:!0,id:r,name:o,dependencies:e,init:Kc(t),getTransferables:n&&Kc(n)},l.onMainThread=s,l}function PD(c){ta[c]&&ta[c].forEach(function(e){e()}),ea[c]&&(ea[c].terminate(),delete ea[c])}function Kc(c){var e=c.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function UD(c){var e=ea[c];if(!e){var t=Kc(ND);e=ea[c]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+c.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(n){var i=n.data,s=i.messageId,r=Ed[s];if(!r)throw new Error("WorkerModule response with empty or unknown messageId");delete Ed[s],r(i)}}return e}function Cg(c,e,t){return new Promise(function(n,i){var s=++RD;Ed[s]=function(r){r.success?n(r.result):i(new Error("Error in worker "+e+" call: "+r.error))},UD(c).postMessage({messageId:s,action:e,data:t})})}function SS(){var c=function(e){function t(Y,$,E,V,G,J,z,ae){var Z=1-z;ae.x=Z*Z*Y+2*Z*z*E+z*z*G,ae.y=Z*Z*$+2*Z*z*V+z*z*J}function n(Y,$,E,V,G,J,z,ae,Z,re){var xe=1-Z;re.x=xe*xe*xe*Y+3*xe*xe*Z*E+3*xe*Z*Z*G+Z*Z*Z*z,re.y=xe*xe*xe*$+3*xe*xe*Z*V+3*xe*Z*Z*J+Z*Z*Z*ae}function i(Y,$){for(var E=/([MLQCZ])([^MLQCZ]*)/g,V,G,J,z,ae;V=E.exec(Y);){var Z=V[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(re){return parseFloat(re)});switch(V[1]){case"M":z=G=Z[0],ae=J=Z[1];break;case"L":(Z[0]!==z||Z[1]!==ae)&&$("L",z,ae,z=Z[0],ae=Z[1]);break;case"Q":{$("Q",z,ae,z=Z[2],ae=Z[3],Z[0],Z[1]);break}case"C":{$("C",z,ae,z=Z[4],ae=Z[5],Z[0],Z[1],Z[2],Z[3]);break}case"Z":(z!==G||ae!==J)&&$("L",z,ae,G,J);break}}}function s(Y,$,E){E===void 0&&(E=16);var V={x:0,y:0};i(Y,function(G,J,z,ae,Z,re,xe,Se,le){switch(G){case"L":$(J,z,ae,Z);break;case"Q":{for(var B=J,oe=z,ee=1;ee<E;ee++)t(J,z,re,xe,ae,Z,ee/(E-1),V),$(B,oe,V.x,V.y),B=V.x,oe=V.y;break}case"C":{for(var ce=J,se=z,ve=1;ve<E;ve++)n(J,z,re,xe,Se,le,ae,Z,ve/(E-1),V),$(ce,se,V.x,V.y),ce=V.x,se=V.y;break}}})}var r="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",o="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",a=new WeakMap,l={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function u(Y,$){var E=Y.getContext?Y.getContext("webgl",l):Y,V=a.get(E);if(!V){let ce=function(j){var we=J[j];if(!we&&(we=J[j]=E.getExtension(j),!we))throw new Error(j+" not supported");return we},se=function(j,we){var fe=E.createShader(we);return E.shaderSource(fe,j),E.compileShader(fe),fe},ve=function(j,we,fe,ye){if(!z[j]){var _e={},st={},Te=E.createProgram();E.attachShader(Te,se(we,E.VERTEX_SHADER)),E.attachShader(Te,se(fe,E.FRAGMENT_SHADER)),E.linkProgram(Te),z[j]={program:Te,transaction:function(De){E.useProgram(Te),De({setUniform:function(Ze,at){for(var ke=[],Oe=arguments.length-2;Oe-- >0;)ke[Oe]=arguments[Oe+2];var Me=st[at]||(st[at]=E.getUniformLocation(Te,at));E["uniform"+Ze].apply(E,[Me].concat(ke))},setAttribute:function(Ze,at,ke,Oe,Me){var Je=_e[Ze];Je||(Je=_e[Ze]={buf:E.createBuffer(),loc:E.getAttribLocation(Te,Ze),data:null}),E.bindBuffer(E.ARRAY_BUFFER,Je.buf),E.vertexAttribPointer(Je.loc,at,E.FLOAT,!1,0,0),E.enableVertexAttribArray(Je.loc),G?E.vertexAttribDivisor(Je.loc,Oe):ce("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(Je.loc,Oe),Me!==Je.data&&(E.bufferData(E.ARRAY_BUFFER,Me,ke),Je.data=Me)}})}}}z[j].transaction(ye)},ne=function(j,we){Z++;try{E.activeTexture(E.TEXTURE0+Z);var fe=ae[j];fe||(fe=ae[j]=E.createTexture(),E.bindTexture(E.TEXTURE_2D,fe),E.texParameteri(E.TEXTURE_2D,E.TEXTURE_MIN_FILTER,E.NEAREST),E.texParameteri(E.TEXTURE_2D,E.TEXTURE_MAG_FILTER,E.NEAREST)),E.bindTexture(E.TEXTURE_2D,fe),we(fe,Z)}finally{Z--}},de=function(j,we,fe){var ye=E.createFramebuffer();re.push(ye),E.bindFramebuffer(E.FRAMEBUFFER,ye),E.activeTexture(E.TEXTURE0+we),E.bindTexture(E.TEXTURE_2D,j),E.framebufferTexture2D(E.FRAMEBUFFER,E.COLOR_ATTACHMENT0,E.TEXTURE_2D,j,0);try{fe(ye)}finally{E.deleteFramebuffer(ye),E.bindFramebuffer(E.FRAMEBUFFER,re[--re.length-1]||null)}},me=function(){J={},z={},ae={},Z=-1,re.length=0};var xe=ce,Se=se,le=ve,B=ne,oe=de,ee=me,G=typeof WebGL2RenderingContext<"u"&&E instanceof WebGL2RenderingContext,J={},z={},ae={},Z=-1,re=[];E.canvas.addEventListener("webglcontextlost",function(j){me(),j.preventDefault()},!1),a.set(E,V={gl:E,isWebGL2:G,getExtension:ce,withProgram:ve,withTexture:ne,withTextureFramebuffer:de,handleContextLoss:me})}$(V)}function h(Y,$,E,V,G,J,z,ae){z===void 0&&(z=15),ae===void 0&&(ae=null),u(Y,function(Z){var re=Z.gl,xe=Z.withProgram,Se=Z.withTexture;Se("copy",function(le,B){re.texImage2D(re.TEXTURE_2D,0,re.RGBA,G,J,0,re.RGBA,re.UNSIGNED_BYTE,$),xe("copy",r,o,function(oe){var ee=oe.setUniform,ce=oe.setAttribute;ce("aUV",2,re.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),ee("1i","image",B),re.bindFramebuffer(re.FRAMEBUFFER,ae||null),re.disable(re.BLEND),re.colorMask(z&8,z&4,z&2,z&1),re.viewport(E,V,G,J),re.scissor(E,V,G,J),re.drawArrays(re.TRIANGLES,0,3)})})})}function d(Y,$,E){var V=Y.width,G=Y.height;u(Y,function(J){var z=J.gl,ae=new Uint8Array(V*G*4);z.readPixels(0,0,V,G,z.RGBA,z.UNSIGNED_BYTE,ae),Y.width=$,Y.height=E,h(z,ae,0,0,V,G)})}var f=Object.freeze({__proto__:null,withWebGLContext:u,renderImageData:h,resizeWebGLCanvasWithoutClearing:d});function p(Y,$,E,V,G,J){J===void 0&&(J=1);var z=new Uint8Array(Y*$),ae=V[2]-V[0],Z=V[3]-V[1],re=[];s(E,function(ce,se,ve,ne){re.push({x1:ce,y1:se,x2:ve,y2:ne,minX:Math.min(ce,ve),minY:Math.min(se,ne),maxX:Math.max(ce,ve),maxY:Math.max(se,ne)})}),re.sort(function(ce,se){return ce.maxX-se.maxX});for(var xe=0;xe<Y;xe++)for(var Se=0;Se<$;Se++){var le=oe(V[0]+ae*(xe+.5)/Y,V[1]+Z*(Se+.5)/$),B=Math.pow(1-Math.abs(le)/G,J)/2;le<0&&(B=1-B),B=Math.max(0,Math.min(255,Math.round(B*255))),z[Se*Y+xe]=B}return z;function oe(ce,se){for(var ve=1/0,ne=1/0,de=re.length;de--;){var me=re[de];if(me.maxX+ne<=ce)break;if(ce+ne>me.minX&&se-ne<me.maxY&&se+ne>me.minY){var j=y(ce,se,me.x1,me.y1,me.x2,me.y2);j<ve&&(ve=j,ne=Math.sqrt(ve))}}return ee(ce,se)&&(ne=-ne),ne}function ee(ce,se){for(var ve=0,ne=re.length;ne--;){var de=re[ne];if(de.maxX<=ce)break;var me=de.y1>se!=de.y2>se&&ce<(de.x2-de.x1)*(se-de.y1)/(de.y2-de.y1)+de.x1;me&&(ve+=de.y1<de.y2?1:-1)}return ve!==0}}function m(Y,$,E,V,G,J,z,ae,Z,re){J===void 0&&(J=1),ae===void 0&&(ae=0),Z===void 0&&(Z=0),re===void 0&&(re=0),g(Y,$,E,V,G,J,z,null,ae,Z,re)}function g(Y,$,E,V,G,J,z,ae,Z,re,xe){J===void 0&&(J=1),Z===void 0&&(Z=0),re===void 0&&(re=0),xe===void 0&&(xe=0);for(var Se=p(Y,$,E,V,G,J),le=new Uint8Array(Se.length*4),B=0;B<Se.length;B++)le[B*4+xe]=Se[B];h(z,le,Z,re,Y,$,1<<3-xe,ae)}function y(Y,$,E,V,G,J){var z=G-E,ae=J-V,Z=z*z+ae*ae,re=Z?Math.max(0,Math.min(1,((Y-E)*z+($-V)*ae)/Z)):0,xe=Y-(E+re*z),Se=$-(V+re*ae);return xe*xe+Se*Se}var _=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:m,generateIntoFramebuffer:g}),x="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",S="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",w="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",A=new Float32Array([0,0,2,0,0,2]),T=null,M=!1,L={},I=new WeakMap;function W(Y){if(!M&&!te(Y))throw new Error("WebGL generation not supported")}function U(Y,$,E,V,G,J,z){if(J===void 0&&(J=1),z===void 0&&(z=null),!z&&(z=T,!z)){var ae=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!ae)throw new Error("OffscreenCanvas or DOM canvas not supported");z=T=ae.getContext("webgl",{depth:!1})}W(z);var Z=new Uint8Array(Y*$*4);u(z,function(le){var B=le.gl,oe=le.withTexture,ee=le.withTextureFramebuffer;oe("readable",function(ce,se){B.texImage2D(B.TEXTURE_2D,0,B.RGBA,Y,$,0,B.RGBA,B.UNSIGNED_BYTE,null),ee(ce,se,function(ve){O(Y,$,E,V,G,J,B,ve,0,0,0),B.readPixels(0,0,Y,$,B.RGBA,B.UNSIGNED_BYTE,Z)})})});for(var re=new Uint8Array(Y*$),xe=0,Se=0;xe<Z.length;xe+=4)re[Se++]=Z[xe];return re}function k(Y,$,E,V,G,J,z,ae,Z,re){J===void 0&&(J=1),ae===void 0&&(ae=0),Z===void 0&&(Z=0),re===void 0&&(re=0),O(Y,$,E,V,G,J,z,null,ae,Z,re)}function O(Y,$,E,V,G,J,z,ae,Z,re,xe){J===void 0&&(J=1),Z===void 0&&(Z=0),re===void 0&&(re=0),xe===void 0&&(xe=0),W(z);var Se=[];s(E,function(le,B,oe,ee){Se.push(le,B,oe,ee)}),Se=new Float32Array(Se),u(z,function(le){var B=le.gl,oe=le.isWebGL2,ee=le.getExtension,ce=le.withProgram,se=le.withTexture,ve=le.withTextureFramebuffer,ne=le.handleContextLoss;if(se("rawDistances",function(de,me){(Y!==de._lastWidth||$!==de._lastHeight)&&B.texImage2D(B.TEXTURE_2D,0,B.RGBA,de._lastWidth=Y,de._lastHeight=$,0,B.RGBA,B.UNSIGNED_BYTE,null),ce("main",x,S,function(j){var we=j.setAttribute,fe=j.setUniform,ye=!oe&&ee("ANGLE_instanced_arrays"),_e=!oe&&ee("EXT_blend_minmax");we("aUV",2,B.STATIC_DRAW,0,A),we("aLineSegment",4,B.DYNAMIC_DRAW,1,Se),fe.apply(void 0,["4f","uGlyphBounds"].concat(V)),fe("1f","uMaxDistance",G),fe("1f","uExponent",J),ve(de,me,function(st){B.enable(B.BLEND),B.colorMask(!0,!0,!0,!0),B.viewport(0,0,Y,$),B.scissor(0,0,Y,$),B.blendFunc(B.ONE,B.ONE),B.blendEquationSeparate(B.FUNC_ADD,oe?B.MAX:_e.MAX_EXT),B.clear(B.COLOR_BUFFER_BIT),oe?B.drawArraysInstanced(B.TRIANGLES,0,3,Se.length/4):ye.drawArraysInstancedANGLE(B.TRIANGLES,0,3,Se.length/4)})}),ce("post",r,w,function(j){j.setAttribute("aUV",2,B.STATIC_DRAW,0,A),j.setUniform("1i","tex",me),B.bindFramebuffer(B.FRAMEBUFFER,ae),B.disable(B.BLEND),B.colorMask(xe===0,xe===1,xe===2,xe===3),B.viewport(Z,re,Y,$),B.scissor(Z,re,Y,$),B.drawArrays(B.TRIANGLES,0,3)})}),B.isContextLost())throw ne(),new Error("webgl context lost")})}function te(Y){var $=!Y||Y===T?L:Y.canvas||Y,E=I.get($);if(E===void 0){M=!0;var V=null;try{var G=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],J=U(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,Y);E=J&&G.length===J.length&&J.every(function(z,ae){return z===G[ae]}),E||(V="bad trial run results",console.info(G,J))}catch(z){E=!1,V=z.message}V&&console.warn("WebGL SDF generation not supported:",V),M=!1,I.set($,E)}return E}var ie=Object.freeze({__proto__:null,generate:U,generateIntoCanvas:k,generateIntoFramebuffer:O,isSupported:te});function ge(Y,$,E,V,G,J){G===void 0&&(G=Math.max(V[2]-V[0],V[3]-V[1])/2),J===void 0&&(J=1);try{return U.apply(ie,arguments)}catch(z){return console.info("WebGL SDF generation failed, falling back to JS",z),p.apply(_,arguments)}}function be(Y,$,E,V,G,J,z,ae,Z,re){G===void 0&&(G=Math.max(V[2]-V[0],V[3]-V[1])/2),J===void 0&&(J=1),ae===void 0&&(ae=0),Z===void 0&&(Z=0),re===void 0&&(re=0);try{return k.apply(ie,arguments)}catch(xe){return console.info("WebGL SDF generation failed, falling back to JS",xe),m.apply(_,arguments)}}return e.forEachPathCommand=i,e.generate=ge,e.generateIntoCanvas=be,e.javascript=_,e.pathToLineSegments=s,e.webgl=ie,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return c}function DD(){var c=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},n={},i={};n.L=1,i[1]="L",Object.keys(t).forEach(function(ne,de){n[ne]=1<<de+1,i[n[ne]]=ne}),Object.freeze(n);var s=n.LRI|n.RLI|n.FSI,r=n.L|n.R|n.AL,o=n.B|n.S|n.WS|n.ON|n.FSI|n.LRI|n.RLI|n.PDI,a=n.BN|n.RLE|n.LRE|n.RLO|n.LRO|n.PDF,l=n.S|n.WS|n.B|s|n.PDI|a,u=null;function h(){if(!u){u=new Map;var ne=function(me){if(t.hasOwnProperty(me)){var j=0;t[me].split(",").forEach(function(we){var fe=we.split("+"),ye=fe[0],_e=fe[1];ye=parseInt(ye,36),_e=_e?parseInt(_e,36):0,u.set(j+=ye,n[me]);for(var st=0;st<_e;st++)u.set(++j,n[me])})}};for(var de in t)ne(de)}}function d(ne){return h(),u.get(ne.codePointAt(0))||n.L}function f(ne){return i[d(ne)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function m(ne,de){var me=36,j=0,we=new Map,fe=de&&new Map,ye;return ne.split(",").forEach(function _e(st){if(st.indexOf("+")!==-1)for(var Te=+st;Te--;)_e(ye);else{ye=st;var Ue=st.split(">"),De=Ue[0],je=Ue[1];De=String.fromCodePoint(j+=parseInt(De,me)),je=String.fromCodePoint(j+=parseInt(je,me)),we.set(De,je),de&&fe.set(je,De)}}),{map:we,reverseMap:fe}}var g,y,_;function x(){if(!g){var ne=m(p.pairs,!0),de=ne.map,me=ne.reverseMap;g=de,y=me,_=m(p.canonical,!1).map}}function S(ne){return x(),g.get(ne)||null}function w(ne){return x(),y.get(ne)||null}function A(ne){return x(),_.get(ne)||null}var T=n.L,M=n.R,L=n.EN,I=n.ES,W=n.ET,U=n.AN,k=n.CS,O=n.B,te=n.S,ie=n.ON,ge=n.BN,be=n.NSM,Y=n.AL,$=n.LRO,E=n.RLO,V=n.LRE,G=n.RLE,J=n.PDF,z=n.LRI,ae=n.RLI,Z=n.FSI,re=n.PDI;function xe(ne,de){for(var me=125,j=new Uint32Array(ne.length),we=0;we<ne.length;we++)j[we]=d(ne[we]);var fe=new Map;function ye(pn,jn){var mn=j[pn];j[pn]=jn,fe.set(mn,fe.get(mn)-1),mn&o&&fe.set(o,fe.get(o)-1),fe.set(jn,(fe.get(jn)||0)+1),jn&o&&fe.set(o,(fe.get(o)||0)+1)}for(var _e=new Uint8Array(ne.length),st=new Map,Te=[],Ue=null,De=0;De<ne.length;De++)Ue||Te.push(Ue={start:De,end:ne.length-1,level:de==="rtl"?1:de==="ltr"?0:Lp(De,!1)}),j[De]&O&&(Ue.end=De,Ue=null);for(var je=G|V|E|$|s|re|J|O,Ze=function(pn){return pn+(pn&1?1:2)},at=function(pn){return pn+(pn&1?2:1)},ke=0;ke<Te.length;ke++){Ue=Te[ke];var Oe=[{_level:Ue.level,_override:0,_isolate:0}],Me=void 0,Je=0,mt=0,fn=0;fe.clear();for(var ht=Ue.start;ht<=Ue.end;ht++){var Le=j[ht];if(Me=Oe[Oe.length-1],fe.set(Le,(fe.get(Le)||0)+1),Le&o&&fe.set(o,(fe.get(o)||0)+1),Le&je)if(Le&(G|V)){_e[ht]=Me._level;var ct=(Le===G?at:Ze)(Me._level);ct<=me&&!Je&&!mt?Oe.push({_level:ct,_override:0,_isolate:0}):Je||mt++}else if(Le&(E|$)){_e[ht]=Me._level;var ji=(Le===E?at:Ze)(Me._level);ji<=me&&!Je&&!mt?Oe.push({_level:ji,_override:Le&E?M:T,_isolate:0}):Je||mt++}else if(Le&s){Le&Z&&(Le=Lp(ht+1,!0)===1?ae:z),_e[ht]=Me._level,Me._override&&ye(ht,Me._override);var lt=(Le===ae?at:Ze)(Me._level);lt<=me&&Je===0&&mt===0?(fn++,Oe.push({_level:lt,_override:0,_isolate:1,_isolInitIndex:ht})):Je++}else if(Le&re){if(Je>0)Je--;else if(fn>0){for(mt=0;!Oe[Oe.length-1]._isolate;)Oe.pop();var Xe=Oe[Oe.length-1]._isolInitIndex;Xe!=null&&(st.set(Xe,ht),st.set(ht,Xe)),Oe.pop(),fn--}Me=Oe[Oe.length-1],_e[ht]=Me._level,Me._override&&ye(ht,Me._override)}else Le&J?(Je===0&&(mt>0?mt--:!Me._isolate&&Oe.length>1&&(Oe.pop(),Me=Oe[Oe.length-1])),_e[ht]=Me._level):Le&O&&(_e[ht]=Ue.level);else _e[ht]=Me._level,Me._override&&Le!==ge&&ye(ht,Me._override)}for(var Pt=[],gt=null,Ge=Ue.start;Ge<=Ue.end;Ge++){var vt=j[Ge];if(!(vt&a)){var an=_e[Ge],Qt=vt&s,Ot=vt===re;gt&&an===gt._level?(gt._end=Ge,gt._endsWithIsolInit=Qt):Pt.push(gt={_start:Ge,_end:Ge,_level:an,_startsWithPDI:Ot,_endsWithIsolInit:Qt})}}for(var qn=[],Xi=0;Xi<Pt.length;Xi++){var Ti=Pt[Xi];if(!Ti._startsWithPDI||Ti._startsWithPDI&&!st.has(Ti._start)){for(var Yi=[gt=Ti],Ts=void 0;gt&&gt._endsWithIsolInit&&(Ts=st.get(gt._end))!=null;)for(var wi=Xi+1;wi<Pt.length;wi++)if(Pt[wi]._start===Ts){Yi.push(gt=Pt[wi]);break}for(var cn=[],ws=0;ws<Yi.length;ws++)for(var pp=Yi[ws],nu=pp._start;nu<=pp._end;nu++)cn.push(nu);for(var DS=_e[cn[0]],mp=Ue.level,Ba=cn[0]-1;Ba>=0;Ba--)if(!(j[Ba]&a)){mp=_e[Ba];break}var iu=cn[cn.length-1],LS=_e[iu],gp=Ue.level;if(!(j[iu]&s)){for(var Oa=iu+1;Oa<=Ue.end;Oa++)if(!(j[Oa]&a)){gp=_e[Oa];break}}qn.push({_seqIndices:cn,_sosType:Math.max(mp,DS)%2?M:T,_eosType:Math.max(gp,LS)%2?M:T})}}for(var su=0;su<qn.length;su++){var ru=qn[su],Ce=ru._seqIndices,ho=ru._sosType,FS=ru._eosType,ur=_e[Ce[0]]&1?M:T;if(fe.get(be))for(var Va=0;Va<Ce.length;Va++){var vp=Ce[Va];if(j[vp]&be){for(var ou=ho,ka=Va-1;ka>=0;ka--)if(!(j[Ce[ka]]&a)){ou=j[Ce[ka]];break}ye(vp,ou&(s|re)?ie:ou)}}if(fe.get(L))for(var za=0;za<Ce.length;za++){var yp=Ce[za];if(j[yp]&L)for(var Ga=za-1;Ga>=-1;Ga--){var xp=Ga===-1?ho:j[Ce[Ga]];if(xp&r){xp===Y&&ye(yp,U);break}}}if(fe.get(Y))for(var au=0;au<Ce.length;au++){var _p=Ce[au];j[_p]&Y&&ye(_p,M)}if(fe.get(I)||fe.get(k))for(var fo=1;fo<Ce.length-1;fo++){var cu=Ce[fo];if(j[cu]&(I|k)){for(var hr=0,lu=0,uu=fo-1;uu>=0&&(hr=j[Ce[uu]],!!(hr&a));uu--);for(var hu=fo+1;hu<Ce.length&&(lu=j[Ce[hu]],!!(lu&a));hu++);hr===lu&&(j[cu]===I?hr===L:hr&(L|U))&&ye(cu,hr)}}if(fe.get(L))for(var ii=0;ii<Ce.length;ii++){var IS=Ce[ii];if(j[IS]&L){for(var Ha=ii-1;Ha>=0&&j[Ce[Ha]]&(W|a);Ha--)ye(Ce[Ha],L);for(ii++;ii<Ce.length&&j[Ce[ii]]&(W|a|L);ii++)j[Ce[ii]]!==L&&ye(Ce[ii],L)}}if(fe.get(W)||fe.get(I)||fe.get(k))for(var po=0;po<Ce.length;po++){var Sp=Ce[po];if(j[Sp]&(W|I|k)){ye(Sp,ie);for(var Wa=po-1;Wa>=0&&j[Ce[Wa]]&a;Wa--)ye(Ce[Wa],ie);for(var qa=po+1;qa<Ce.length&&j[Ce[qa]]&a;qa++)ye(Ce[qa],ie)}}if(fe.get(L))for(var du=0,bp=ho;du<Ce.length;du++){var Tp=Ce[du],fu=j[Tp];fu&L?bp===T&&ye(Tp,T):fu&r&&(bp=fu)}if(fe.get(o)){var mo=M|L|U,wp=mo|T,$a=[];{for(var dr=[],fr=0;fr<Ce.length;fr++)if(j[Ce[fr]]&o){var go=ne[Ce[fr]],Mp=void 0;if(S(go)!==null)if(dr.length<63)dr.push({char:go,seqIndex:fr});else break;else if((Mp=w(go))!==null)for(var vo=dr.length-1;vo>=0;vo--){var pu=dr[vo].char;if(pu===Mp||pu===w(A(go))||S(A(pu))===go){$a.push([dr[vo].seqIndex,fr]),dr.length=vo;break}}}$a.sort(function(pn,jn){return pn[0]-jn[0]})}for(var mu=0;mu<$a.length;mu++){for(var Ap=$a[mu],ja=Ap[0],gu=Ap[1],Np=!1,$n=0,vu=ja+1;vu<gu;vu++){var Cp=Ce[vu];if(j[Cp]&wp){Np=!0;var Ep=j[Cp]&mo?M:T;if(Ep===ur){$n=Ep;break}}}if(Np&&!$n){$n=ho;for(var yu=ja-1;yu>=0;yu--){var Rp=Ce[yu];if(j[Rp]&wp){var Pp=j[Rp]&mo?M:T;Pp!==ur?$n=Pp:$n=ur;break}}}if($n){if(j[Ce[ja]]=j[Ce[gu]]=$n,$n!==ur){for(var yo=ja+1;yo<Ce.length;yo++)if(!(j[Ce[yo]]&a)){d(ne[Ce[yo]])&be&&(j[Ce[yo]]=$n);break}}if($n!==ur){for(var xo=gu+1;xo<Ce.length;xo++)if(!(j[Ce[xo]]&a)){d(ne[Ce[xo]])&be&&(j[Ce[xo]]=$n);break}}}}for(var Zi=0;Zi<Ce.length;Zi++)if(j[Ce[Zi]]&o){for(var Up=Zi,xu=Zi,_u=ho,_o=Zi-1;_o>=0;_o--)if(j[Ce[_o]]&a)Up=_o;else{_u=j[Ce[_o]]&mo?M:T;break}for(var Dp=FS,So=Zi+1;So<Ce.length;So++)if(j[Ce[So]]&(o|a))xu=So;else{Dp=j[Ce[So]]&mo?M:T;break}for(var Su=Up;Su<=xu;Su++)j[Ce[Su]]=_u===Dp?_u:ur;Zi=xu}}}for(var Tn=Ue.start;Tn<=Ue.end;Tn++){var BS=_e[Tn],Xa=j[Tn];if(BS&1?Xa&(T|L|U)&&_e[Tn]++:Xa&M?_e[Tn]++:Xa&(U|L)&&(_e[Tn]+=2),Xa&a&&(_e[Tn]=Tn===0?Ue.level:_e[Tn-1]),Tn===Ue.end||d(ne[Tn])&(te|O))for(var Ya=Tn;Ya>=0&&d(ne[Ya])&l;Ya--)_e[Ya]=Ue.level}}return{levels:_e,paragraphs:Te};function Lp(pn,jn){for(var mn=pn;mn<ne.length;mn++){var Ki=j[mn];if(Ki&(M|Y))return 1;if(Ki&(O|T)||jn&&Ki===re)return 0;if(Ki&s){var Fp=OS(mn);mn=Fp===-1?ne.length:Fp}}return 0}function OS(pn){for(var jn=1,mn=pn+1;mn<ne.length;mn++){var Ki=j[mn];if(Ki&O)break;if(Ki&re){if(--jn===0)return mn}else Ki&s&&jn++}return-1}}var Se="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",le;function B(){if(!le){var ne=m(Se,!0),de=ne.map,me=ne.reverseMap;me.forEach(function(j,we){de.set(we,j)}),le=de}}function oe(ne){return B(),le.get(ne)||null}function ee(ne,de,me,j){var we=ne.length;me=Math.max(0,me==null?0:+me),j=Math.min(we-1,j==null?we-1:+j);for(var fe=new Map,ye=me;ye<=j;ye++)if(de[ye]&1){var _e=oe(ne[ye]);_e!==null&&fe.set(ye,_e)}return fe}function ce(ne,de,me,j){var we=ne.length;me=Math.max(0,me==null?0:+me),j=Math.min(we-1,j==null?we-1:+j);var fe=[];return de.paragraphs.forEach(function(ye){var _e=Math.max(me,ye.start),st=Math.min(j,ye.end);if(_e<st){for(var Te=de.levels.slice(_e,st+1),Ue=st;Ue>=_e&&d(ne[Ue])&l;Ue--)Te[Ue]=ye.level;for(var De=ye.level,je=1/0,Ze=0;Ze<Te.length;Ze++){var at=Te[Ze];at>De&&(De=at),at<je&&(je=at|1)}for(var ke=De;ke>=je;ke--)for(var Oe=0;Oe<Te.length;Oe++)if(Te[Oe]>=ke){for(var Me=Oe;Oe+1<Te.length&&Te[Oe+1]>=ke;)Oe++;Oe>Me&&fe.push([Me+_e,Oe+_e])}}}),fe}function se(ne,de,me,j){var we=ve(ne,de,me,j),fe=[].concat(ne);return we.forEach(function(ye,_e){fe[_e]=(de.levels[ye]&1?oe(ne[ye]):null)||ne[ye]}),fe.join("")}function ve(ne,de,me,j){for(var we=ce(ne,de,me,j),fe=[],ye=0;ye<ne.length;ye++)fe[ye]=ye;return we.forEach(function(_e){for(var st=_e[0],Te=_e[1],Ue=fe.slice(st,Te+1),De=Ue.length;De--;)fe[Te-De]=Ue[De]}),fe}return e.closingToOpeningBracket=w,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=A,e.getEmbeddingLevels=xe,e.getMirroredCharacter=oe,e.getMirroredCharactersMap=ee,e.getReorderSegments=ce,e.getReorderedIndices=ve,e.getReorderedString=se,e.openingToClosingBracket=S,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return c}const bS=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Rd(c){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(n,i){let s=cA[i];return s?Rd(s):n}return c.replace(e,t)}const $t=[];for(let c=0;c<256;c++)$t[c]=(c<16?"0":"")+c.toString(16);function LD(){const c=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return($t[c&255]+$t[c>>8&255]+$t[c>>16&255]+$t[c>>24&255]+"-"+$t[e&255]+$t[e>>8&255]+"-"+$t[e>>16&15|64]+$t[e>>24&255]+"-"+$t[t&63|128]+$t[t>>8&255]+"-"+$t[t>>16&255]+$t[t>>24&255]+$t[n&255]+$t[n>>8&255]+$t[n>>16&255]+$t[n>>24&255]).toUpperCase()}const Ds=Object.assign||function(){let c=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let n=arguments[e];if(n)for(let i in n)Object.prototype.hasOwnProperty.call(n,i)&&(c[i]=n[i])}return c},FD=Date.now(),Eg=new WeakMap,Rg=new Map;let ID=1e10;function Pd(c,e){const t=kD(e);let n=Eg.get(c);if(n||Eg.set(c,n=Object.create(null)),n[t])return new n[t];const i=`_onBeforeCompile${t}`,s=function(l,u){c.onBeforeCompile.call(this,l,u);const h=this.customProgramCacheKey()+"|"+l.vertexShader+"|"+l.fragmentShader;let d=Rg[h];if(!d){const f=BD(this,l,e,t);d=Rg[h]=f}l.vertexShader=d.vertexShader,l.fragmentShader=d.fragmentShader,Ds(l.uniforms,this.uniforms),e.timeUniform&&(l.uniforms[e.timeUniform]={get value(){return Date.now()-FD}}),this[i]&&this[i](l)},r=function(){return o(e.chained?c:c.clone())},o=function(l){const u=Object.create(l,a);return Object.defineProperty(u,"baseMaterial",{value:c}),Object.defineProperty(u,"id",{value:ID++}),u.uuid=LD(),u.uniforms=Ds({},l.uniforms,e.uniforms),u.defines=Ds({},l.defines,e.defines),u.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",u.extensions=Ds({},l.extensions,e.extensions),u._listeners=void 0,u},a={constructor:{value:r},isDerivedMaterial:{value:!0},type:{get:()=>c.type,set:l=>{c.type=l}},isDerivedFrom:{writable:!0,configurable:!0,value:function(l){const u=this.baseMaterial;return l===u||u.isDerivedMaterial&&u.isDerivedFrom(l)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return c.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return s},set(l){this[i]=l}},copy:{writable:!0,configurable:!0,value:function(l){return c.copy.call(this,l),!c.isShaderMaterial&&!c.isDerivedMaterial&&(Ds(this.extensions,l.extensions),Ds(this.defines,l.defines),Ds(this.uniforms,l1.clone(l.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const l=new c.constructor;return o(l).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let l=this._depthMaterial;return l||(l=this._depthMaterial=Pd(c.isDerivedMaterial?c.getDepthMaterial():new aT({depthPacking:lb}),e),l.defines.IS_DEPTH_MATERIAL="",l.uniforms=this.uniforms),l}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let l=this._distanceMaterial;return l||(l=this._distanceMaterial=Pd(c.isDerivedMaterial?c.getDistanceMaterial():new cT,e),l.defines.IS_DISTANCE_MATERIAL="",l.uniforms=this.uniforms),l}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:l,_distanceMaterial:u}=this;l&&l.dispose(),u&&u.dispose(),c.dispose.call(this)}}};return n[t]=r,new r}function BD(c,{vertexShader:e,fragmentShader:t},n,i){let{vertexDefs:s,vertexMainIntro:r,vertexMainOutro:o,vertexTransform:a,fragmentDefs:l,fragmentMainIntro:u,fragmentMainOutro:h,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=n;if(s=s||"",r=r||"",o=o||"",l=l||"",u=u||"",h=h||"",(a||f)&&(e=Rd(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=Rd(t)),f){let m=f({vertexShader:e,fragmentShader:t});e=m.vertexShader,t=m.fragmentShader}if(d){let m=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,g=>(m.push(g),"")),h=`${d}
${m.join(`
`)}
${h}`}if(p){const m=`
uniform float ${p};
`;s=m+s,l=m+l}return a&&(e=`vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`,s=`${s}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${a}
}
`,r=`
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${r}
`,e=e.replace(/\b(position|normal|uv)\b/g,(m,g,y,_)=>/\battribute\s+vec[23]\s+$/.test(_.substr(0,y))?g:`troika_${g}_${i}`),c.map&&c.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${i}`))),e=Pg(e,i,s,r,o),t=Pg(t,i,l,u,h),{vertexShader:e,fragmentShader:t}}function Pg(c,e,t,n,i){return(n||i||t)&&(c=c.replace(bS,`
${t}
void troikaOrigMain${e}() {`),c+=`
void main() {
  ${n}
  troikaOrigMain${e}();
  ${i}
}`),c}function OD(c,e){return c==="uniforms"?void 0:typeof e=="function"?e.toString():e}let VD=0;const Ug=new Map;function kD(c){const e=JSON.stringify(c,OD);let t=Ug.get(e);return t==null&&Ug.set(e,t=++VD),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function zD(){return typeof window>"u"&&(self.window=self),function(c){var e={parse:function(i){var s=e._bin,r=new Uint8Array(i);if(s.readASCII(r,0,4)=="ttcf"){var o=4;s.readUshort(r,o),o+=2,s.readUshort(r,o),o+=2;var a=s.readUint(r,o);o+=4;for(var l=[],u=0;u<a;u++){var h=s.readUint(r,o);o+=4,l.push(e._readFont(r,h))}return l}return[e._readFont(r,0)]},_readFont:function(i,s){var r=e._bin,o=s;r.readFixed(i,s),s+=4;var a=r.readUshort(i,s);s+=2,r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2;for(var l=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],u={_data:i,_offset:o},h={},d=0;d<a;d++){var f=r.readASCII(i,s,4);s+=4,r.readUint(i,s),s+=4;var p=r.readUint(i,s);s+=4;var m=r.readUint(i,s);s+=4,h[f]={offset:p,length:m}}for(d=0;d<l.length;d++){var g=l[d];h[g]&&(u[g.trim()]=e[g.trim()].parse(i,h[g].offset,h[g].length,u))}return u},_tabOffset:function(i,s,r){for(var o=e._bin,a=o.readUshort(i,r+4),l=r+12,u=0;u<a;u++){var h=o.readASCII(i,l,4);l+=4,o.readUint(i,l),l+=4;var d=o.readUint(i,l);if(l+=4,o.readUint(i,l),l+=4,h==s)return d}return 0}};e._bin={readFixed:function(i,s){return(i[s]<<8|i[s+1])+(i[s+2]<<8|i[s+3])/65540},readF2dot14:function(i,s){return e._bin.readShort(i,s)/16384},readInt:function(i,s){return e._bin._view(i).getInt32(s)},readInt8:function(i,s){return e._bin._view(i).getInt8(s)},readShort:function(i,s){return e._bin._view(i).getInt16(s)},readUshort:function(i,s){return e._bin._view(i).getUint16(s)},readUshorts:function(i,s,r){for(var o=[],a=0;a<r;a++)o.push(e._bin.readUshort(i,s+2*a));return o},readUint:function(i,s){return e._bin._view(i).getUint32(s)},readUint64:function(i,s){return 4294967296*e._bin.readUint(i,s)+e._bin.readUint(i,s+4)},readASCII:function(i,s,r){for(var o="",a=0;a<r;a++)o+=String.fromCharCode(i[s+a]);return o},readUnicode:function(i,s,r){for(var o="",a=0;a<r;a++){var l=i[s++]<<8|i[s++];o+=String.fromCharCode(l)}return o},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(i,s,r){var o=e._bin._tdec;return o&&s==0&&r==i.length?o.decode(i):e._bin.readASCII(i,s,r)},readBytes:function(i,s,r){for(var o=[],a=0;a<r;a++)o.push(i[s+a]);return o},readASCIIArray:function(i,s,r){for(var o=[],a=0;a<r;a++)o.push(String.fromCharCode(i[s+a]));return o},_view:function(i){return i._dataView||(i._dataView=i.buffer?new DataView(i.buffer,i.byteOffset,i.byteLength):new DataView(new Uint8Array(i).buffer))}},e._lctf={},e._lctf.parse=function(i,s,r,o,a){var l=e._bin,u={},h=s;l.readFixed(i,s),s+=4;var d=l.readUshort(i,s);s+=2;var f=l.readUshort(i,s);s+=2;var p=l.readUshort(i,s);return s+=2,u.scriptList=e._lctf.readScriptList(i,h+d),u.featureList=e._lctf.readFeatureList(i,h+f),u.lookupList=e._lctf.readLookupList(i,h+p,a),u},e._lctf.readLookupList=function(i,s,r){var o=e._bin,a=s,l=[],u=o.readUshort(i,s);s+=2;for(var h=0;h<u;h++){var d=o.readUshort(i,s);s+=2;var f=e._lctf.readLookupTable(i,a+d,r);l.push(f)}return l},e._lctf.readLookupTable=function(i,s,r){var o=e._bin,a=s,l={tabs:[]};l.ltype=o.readUshort(i,s),s+=2,l.flag=o.readUshort(i,s),s+=2;var u=o.readUshort(i,s);s+=2;for(var h=l.ltype,d=0;d<u;d++){var f=o.readUshort(i,s);s+=2;var p=r(i,h,a+f,l);l.tabs.push(p)}return l},e._lctf.numOfOnes=function(i){for(var s=0,r=0;r<32;r++)i>>>r&1&&s++;return s},e._lctf.readClassDef=function(i,s){var r=e._bin,o=[],a=r.readUshort(i,s);if(s+=2,a==1){var l=r.readUshort(i,s);s+=2;var u=r.readUshort(i,s);s+=2;for(var h=0;h<u;h++)o.push(l+h),o.push(l+h),o.push(r.readUshort(i,s)),s+=2}if(a==2){var d=r.readUshort(i,s);for(s+=2,h=0;h<d;h++)o.push(r.readUshort(i,s)),s+=2,o.push(r.readUshort(i,s)),s+=2,o.push(r.readUshort(i,s)),s+=2}return o},e._lctf.getInterval=function(i,s){for(var r=0;r<i.length;r+=3){var o=i[r],a=i[r+1];if(i[r+2],o<=s&&s<=a)return r}return-1},e._lctf.readCoverage=function(i,s){var r=e._bin,o={};o.fmt=r.readUshort(i,s),s+=2;var a=r.readUshort(i,s);return s+=2,o.fmt==1&&(o.tab=r.readUshorts(i,s,a)),o.fmt==2&&(o.tab=r.readUshorts(i,s,3*a)),o},e._lctf.coverageIndex=function(i,s){var r=i.tab;if(i.fmt==1)return r.indexOf(s);if(i.fmt==2){var o=e._lctf.getInterval(r,s);if(o!=-1)return r[o+2]+(s-r[o])}return-1},e._lctf.readFeatureList=function(i,s){var r=e._bin,o=s,a=[],l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readASCII(i,s,4);s+=4;var d=r.readUshort(i,s);s+=2;var f=e._lctf.readFeatureTable(i,o+d);f.tag=h.trim(),a.push(f)}return a},e._lctf.readFeatureTable=function(i,s){var r=e._bin,o=s,a={},l=r.readUshort(i,s);s+=2,l>0&&(a.featureParams=o+l);var u=r.readUshort(i,s);s+=2,a.tab=[];for(var h=0;h<u;h++)a.tab.push(r.readUshort(i,s+2*h));return a},e._lctf.readScriptList=function(i,s){var r=e._bin,o=s,a={},l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readASCII(i,s,4);s+=4;var d=r.readUshort(i,s);s+=2,a[h.trim()]=e._lctf.readScriptTable(i,o+d)}return a},e._lctf.readScriptTable=function(i,s){var r=e._bin,o=s,a={},l=r.readUshort(i,s);s+=2,l>0&&(a.default=e._lctf.readLangSysTable(i,o+l));var u=r.readUshort(i,s);s+=2;for(var h=0;h<u;h++){var d=r.readASCII(i,s,4);s+=4;var f=r.readUshort(i,s);s+=2,a[d.trim()]=e._lctf.readLangSysTable(i,o+f)}return a},e._lctf.readLangSysTable=function(i,s){var r=e._bin,o={};r.readUshort(i,s),s+=2,o.reqFeature=r.readUshort(i,s),s+=2;var a=r.readUshort(i,s);return s+=2,o.features=r.readUshorts(i,s,a),o},e.CFF={},e.CFF.parse=function(i,s,r){var o=e._bin;(i=new Uint8Array(i.buffer,s,r))[s=0],i[++s],i[++s],i[++s],s++;var a=[];s=e.CFF.readIndex(i,s,a);for(var l=[],u=0;u<a.length-1;u++)l.push(o.readASCII(i,s+a[u],a[u+1]-a[u]));s+=a[a.length-1];var h=[];s=e.CFF.readIndex(i,s,h);var d=[];for(u=0;u<h.length-1;u++)d.push(e.CFF.readDict(i,s+h[u],s+h[u+1]));s+=h[h.length-1];var f=d[0],p=[];s=e.CFF.readIndex(i,s,p);var m=[];for(u=0;u<p.length-1;u++)m.push(o.readASCII(i,s+p[u],p[u+1]-p[u]));if(s+=p[p.length-1],e.CFF.readSubrs(i,s,f),f.CharStrings){s=f.CharStrings,p=[],s=e.CFF.readIndex(i,s,p);var g=[];for(u=0;u<p.length-1;u++)g.push(o.readBytes(i,s+p[u],p[u+1]-p[u]));f.CharStrings=g}if(f.ROS){s=f.FDArray;var y=[];for(s=e.CFF.readIndex(i,s,y),f.FDArray=[],u=0;u<y.length-1;u++){var _=e.CFF.readDict(i,s+y[u],s+y[u+1]);e.CFF._readFDict(i,_,m),f.FDArray.push(_)}s+=y[y.length-1],s=f.FDSelect,f.FDSelect=[];var x=i[s];if(s++,x!=3)throw x;var S=o.readUshort(i,s);for(s+=2,u=0;u<S+1;u++)f.FDSelect.push(o.readUshort(i,s),i[s+2]),s+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(i,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(i,f.charset,f.CharStrings.length)),e.CFF._readFDict(i,f,m),f},e.CFF._readFDict=function(i,s,r){var o;for(var a in s.Private&&(o=s.Private[1],s.Private=e.CFF.readDict(i,o,o+s.Private[0]),s.Private.Subrs&&e.CFF.readSubrs(i,o+s.Private.Subrs,s.Private)),s)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(a)!=-1&&(s[a]=r[s[a]-426+35])},e.CFF.readSubrs=function(i,s,r){var o=e._bin,a=[];s=e.CFF.readIndex(i,s,a);var l,u=a.length;l=u<1240?107:u<33900?1131:32768,r.Bias=l,r.Subrs=[];for(var h=0;h<a.length-1;h++)r.Subrs.push(o.readBytes(i,s+a[h],a[h+1]-a[h]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(i,s){for(var r=0;r<i.charset.length;r++)if(i.charset[r]==s)return r;return-1},e.CFF.glyphBySE=function(i,s){return s<0||s>255?-1:e.CFF.glyphByUnicode(i,e.CFF.tableSE[s])},e.CFF.readEncoding=function(i,s,r){e._bin;var o=[".notdef"],a=i[s];if(s++,a!=0)throw"error: unknown encoding format: "+a;var l=i[s];s++;for(var u=0;u<l;u++)o.push(i[s+u]);return o},e.CFF.readCharset=function(i,s,r){var o=e._bin,a=[".notdef"],l=i[s];if(s++,l==0)for(var u=0;u<r;u++){var h=o.readUshort(i,s);s+=2,a.push(h)}else{if(l!=1&&l!=2)throw"error: format: "+l;for(;a.length<r;){h=o.readUshort(i,s),s+=2;var d=0;for(l==1?(d=i[s],s++):(d=o.readUshort(i,s),s+=2),u=0;u<=d;u++)a.push(h),h++}}return a},e.CFF.readIndex=function(i,s,r){var o=e._bin,a=o.readUshort(i,s)+1,l=i[s+=2];if(s++,l==1)for(var u=0;u<a;u++)r.push(i[s+u]);else if(l==2)for(u=0;u<a;u++)r.push(o.readUshort(i,s+2*u));else if(l==3)for(u=0;u<a;u++)r.push(16777215&o.readUint(i,s+3*u-1));else if(a!=1)throw"unsupported offset size: "+l+", count: "+a;return(s+=a*l)-1},e.CFF.getCharString=function(i,s,r){var o=e._bin,a=i[s],l=i[s+1];i[s+2],i[s+3],i[s+4];var u=1,h=null,d=null;a<=20&&(h=a,u=1),a==12&&(h=100*a+l,u=2),21<=a&&a<=27&&(h=a,u=1),a==28&&(d=o.readShort(i,s+1),u=3),29<=a&&a<=31&&(h=a,u=1),32<=a&&a<=246&&(d=a-139,u=1),247<=a&&a<=250&&(d=256*(a-247)+l+108,u=2),251<=a&&a<=254&&(d=256*-(a-251)-l-108,u=2),a==255&&(d=o.readInt(i,s+1)/65535,u=5),r.val=d??"o"+h,r.size=u},e.CFF.readCharString=function(i,s,r){for(var o=s+r,a=e._bin,l=[];s<o;){var u=i[s],h=i[s+1];i[s+2],i[s+3],i[s+4];var d=1,f=null,p=null;u<=20&&(f=u,d=1),u==12&&(f=100*u+h,d=2),u!=19&&u!=20||(f=u,d=2),21<=u&&u<=27&&(f=u,d=1),u==28&&(p=a.readShort(i,s+1),d=3),29<=u&&u<=31&&(f=u,d=1),32<=u&&u<=246&&(p=u-139,d=1),247<=u&&u<=250&&(p=256*(u-247)+h+108,d=2),251<=u&&u<=254&&(p=256*-(u-251)-h-108,d=2),u==255&&(p=a.readInt(i,s+1)/65535,d=5),l.push(p??"o"+f),s+=d}return l},e.CFF.readDict=function(i,s,r){for(var o=e._bin,a={},l=[];s<r;){var u=i[s],h=i[s+1];i[s+2],i[s+3],i[s+4];var d=1,f=null,p=null;if(u==28&&(p=o.readShort(i,s+1),d=3),u==29&&(p=o.readInt(i,s+1),d=5),32<=u&&u<=246&&(p=u-139,d=1),247<=u&&u<=250&&(p=256*(u-247)+h+108,d=2),251<=u&&u<=254&&(p=256*-(u-251)-h-108,d=2),u==255)throw p=o.readInt(i,s+1)/65535,d=5,"unknown number";if(u==30){var m=[];for(d=1;;){var g=i[s+d];d++;var y=g>>4,_=15&g;if(y!=15&&m.push(y),_!=15&&m.push(_),_==15)break}for(var x="",S=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],w=0;w<m.length;w++)x+=S[m[w]];p=parseFloat(x)}u<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][u],d=1,u==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][h],d=2)),f!=null?(a[f]=l.length==1?l[0]:l,l=[]):l.push(p),s+=d}return a},e.cmap={},e.cmap.parse=function(i,s,r){i=new Uint8Array(i.buffer,s,r),s=0;var o=e._bin,a={};o.readUshort(i,s),s+=2;var l=o.readUshort(i,s);s+=2;var u=[];a.tables=[];for(var h=0;h<l;h++){var d=o.readUshort(i,s);s+=2;var f=o.readUshort(i,s);s+=2;var p=o.readUint(i,s);s+=4;var m="p"+d+"e"+f,g=u.indexOf(p);if(g==-1){var y;g=a.tables.length,u.push(p);var _=o.readUshort(i,p);_==0?y=e.cmap.parse0(i,p):_==4?y=e.cmap.parse4(i,p):_==6?y=e.cmap.parse6(i,p):_==12?y=e.cmap.parse12(i,p):console.debug("unknown format: "+_,d,f,p),a.tables.push(y)}if(a[m]!=null)throw"multiple tables for one platform+encoding";a[m]=g}return a},e.cmap.parse0=function(i,s){var r=e._bin,o={};o.format=r.readUshort(i,s),s+=2;var a=r.readUshort(i,s);s+=2,r.readUshort(i,s),s+=2,o.map=[];for(var l=0;l<a-6;l++)o.map.push(i[s+l]);return o},e.cmap.parse4=function(i,s){var r=e._bin,o=s,a={};a.format=r.readUshort(i,s),s+=2;var l=r.readUshort(i,s);s+=2,r.readUshort(i,s),s+=2;var u=r.readUshort(i,s);s+=2;var h=u/2;a.searchRange=r.readUshort(i,s),s+=2,a.entrySelector=r.readUshort(i,s),s+=2,a.rangeShift=r.readUshort(i,s),s+=2,a.endCount=r.readUshorts(i,s,h),s+=2*h,s+=2,a.startCount=r.readUshorts(i,s,h),s+=2*h,a.idDelta=[];for(var d=0;d<h;d++)a.idDelta.push(r.readShort(i,s)),s+=2;for(a.idRangeOffset=r.readUshorts(i,s,h),s+=2*h,a.glyphIdArray=[];s<o+l;)a.glyphIdArray.push(r.readUshort(i,s)),s+=2;return a},e.cmap.parse6=function(i,s){var r=e._bin,o={};o.format=r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2,o.firstCode=r.readUshort(i,s),s+=2;var a=r.readUshort(i,s);s+=2,o.glyphIdArray=[];for(var l=0;l<a;l++)o.glyphIdArray.push(r.readUshort(i,s)),s+=2;return o},e.cmap.parse12=function(i,s){var r=e._bin,o={};o.format=r.readUshort(i,s),s+=2,s+=2,r.readUint(i,s),s+=4,r.readUint(i,s),s+=4;var a=r.readUint(i,s);s+=4,o.groups=[];for(var l=0;l<a;l++){var u=s+12*l,h=r.readUint(i,u+0),d=r.readUint(i,u+4),f=r.readUint(i,u+8);o.groups.push([h,d,f])}return o},e.glyf={},e.glyf.parse=function(i,s,r,o){for(var a=[],l=0;l<o.maxp.numGlyphs;l++)a.push(null);return a},e.glyf._parseGlyf=function(i,s){var r=e._bin,o=i._data,a=e._tabOffset(o,"glyf",i._offset)+i.loca[s];if(i.loca[s]==i.loca[s+1])return null;var l={};if(l.noc=r.readShort(o,a),a+=2,l.xMin=r.readShort(o,a),a+=2,l.yMin=r.readShort(o,a),a+=2,l.xMax=r.readShort(o,a),a+=2,l.yMax=r.readShort(o,a),a+=2,l.xMin>=l.xMax||l.yMin>=l.yMax)return null;if(l.noc>0){l.endPts=[];for(var u=0;u<l.noc;u++)l.endPts.push(r.readUshort(o,a)),a+=2;var h=r.readUshort(o,a);if(a+=2,o.length-a<h)return null;l.instructions=r.readBytes(o,a,h),a+=h;var d=l.endPts[l.noc-1]+1;for(l.flags=[],u=0;u<d;u++){var f=o[a];if(a++,l.flags.push(f),(8&f)!=0){var p=o[a];a++;for(var m=0;m<p;m++)l.flags.push(f),u++}}for(l.xs=[],u=0;u<d;u++){var g=(2&l.flags[u])!=0,y=(16&l.flags[u])!=0;g?(l.xs.push(y?o[a]:-o[a]),a++):y?l.xs.push(0):(l.xs.push(r.readShort(o,a)),a+=2)}for(l.ys=[],u=0;u<d;u++)g=(4&l.flags[u])!=0,y=(32&l.flags[u])!=0,g?(l.ys.push(y?o[a]:-o[a]),a++):y?l.ys.push(0):(l.ys.push(r.readShort(o,a)),a+=2);var _=0,x=0;for(u=0;u<d;u++)_+=l.xs[u],x+=l.ys[u],l.xs[u]=_,l.ys[u]=x}else{var S;l.parts=[];do{S=r.readUshort(o,a),a+=2;var w={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(l.parts.push(w),w.glyphIndex=r.readUshort(o,a),a+=2,1&S){var A=r.readShort(o,a);a+=2;var T=r.readShort(o,a);a+=2}else A=r.readInt8(o,a),a++,T=r.readInt8(o,a),a++;2&S?(w.m.tx=A,w.m.ty=T):(w.p1=A,w.p2=T),8&S?(w.m.a=w.m.d=r.readF2dot14(o,a),a+=2):64&S?(w.m.a=r.readF2dot14(o,a),a+=2,w.m.d=r.readF2dot14(o,a),a+=2):128&S&&(w.m.a=r.readF2dot14(o,a),a+=2,w.m.b=r.readF2dot14(o,a),a+=2,w.m.c=r.readF2dot14(o,a),a+=2,w.m.d=r.readF2dot14(o,a),a+=2)}while(32&S);if(256&S){var M=r.readUshort(o,a);for(a+=2,l.instr=[],u=0;u<M;u++)l.instr.push(o[a]),a++}}return l},e.GDEF={},e.GDEF.parse=function(i,s,r,o){var a=s;s+=4;var l=e._bin.readUshort(i,s);return{glyphClassDef:l===0?null:e._lctf.readClassDef(i,a+l)}},e.GPOS={},e.GPOS.parse=function(i,s,r,o){return e._lctf.parse(i,s,r,o,e.GPOS.subt)},e.GPOS.subt=function(i,s,r,o){var a=e._bin,l=r,u={};if(u.fmt=a.readUshort(i,r),r+=2,s==1||s==2||s==3||s==7||s==8&&u.fmt<=2){var h=a.readUshort(i,r);r+=2,u.coverage=e._lctf.readCoverage(i,h+l)}if(s==1&&u.fmt==1){var d=a.readUshort(i,r);r+=2,d!=0&&(u.pos=e.GPOS.readValueRecord(i,r,d))}else if(s==2&&u.fmt>=1&&u.fmt<=2){d=a.readUshort(i,r),r+=2;var f=a.readUshort(i,r);r+=2;var p=e._lctf.numOfOnes(d),m=e._lctf.numOfOnes(f);if(u.fmt==1){u.pairsets=[];var g=a.readUshort(i,r);r+=2;for(var y=0;y<g;y++){var _=l+a.readUshort(i,r);r+=2;var x=a.readUshort(i,_);_+=2;for(var S=[],w=0;w<x;w++){var A=a.readUshort(i,_);_+=2,d!=0&&(U=e.GPOS.readValueRecord(i,_,d),_+=2*p),f!=0&&(k=e.GPOS.readValueRecord(i,_,f),_+=2*m),S.push({gid2:A,val1:U,val2:k})}u.pairsets.push(S)}}if(u.fmt==2){var T=a.readUshort(i,r);r+=2;var M=a.readUshort(i,r);r+=2;var L=a.readUshort(i,r);r+=2;var I=a.readUshort(i,r);for(r+=2,u.classDef1=e._lctf.readClassDef(i,l+T),u.classDef2=e._lctf.readClassDef(i,l+M),u.matrix=[],y=0;y<L;y++){var W=[];for(w=0;w<I;w++){var U=null,k=null;d!=0&&(U=e.GPOS.readValueRecord(i,r,d),r+=2*p),f!=0&&(k=e.GPOS.readValueRecord(i,r,f),r+=2*m),W.push({val1:U,val2:k})}u.matrix.push(W)}}}else if(s==4&&u.fmt==1)u.markCoverage=e._lctf.readCoverage(i,a.readUshort(i,r)+l),u.baseCoverage=e._lctf.readCoverage(i,a.readUshort(i,r+2)+l),u.markClassCount=a.readUshort(i,r+4),u.markArray=e.GPOS.readMarkArray(i,a.readUshort(i,r+6)+l),u.baseArray=e.GPOS.readBaseArray(i,a.readUshort(i,r+8)+l,u.markClassCount);else if(s==6&&u.fmt==1)u.mark1Coverage=e._lctf.readCoverage(i,a.readUshort(i,r)+l),u.mark2Coverage=e._lctf.readCoverage(i,a.readUshort(i,r+2)+l),u.markClassCount=a.readUshort(i,r+4),u.mark1Array=e.GPOS.readMarkArray(i,a.readUshort(i,r+6)+l),u.mark2Array=e.GPOS.readBaseArray(i,a.readUshort(i,r+8)+l,u.markClassCount);else{if(s==9&&u.fmt==1){var O=a.readUshort(i,r);r+=2;var te=a.readUint(i,r);if(r+=4,o.ltype==9)o.ltype=O;else if(o.ltype!=O)throw"invalid extension substitution";return e.GPOS.subt(i,o.ltype,l+te)}console.debug("unsupported GPOS table LookupType",s,"format",u.fmt)}return u},e.GPOS.readValueRecord=function(i,s,r){var o=e._bin,a=[];return a.push(1&r?o.readShort(i,s):0),s+=1&r?2:0,a.push(2&r?o.readShort(i,s):0),s+=2&r?2:0,a.push(4&r?o.readShort(i,s):0),s+=4&r?2:0,a.push(8&r?o.readShort(i,s):0),s+=8&r?2:0,a},e.GPOS.readBaseArray=function(i,s,r){var o=e._bin,a=[],l=s,u=o.readUshort(i,s);s+=2;for(var h=0;h<u;h++){for(var d=[],f=0;f<r;f++)d.push(e.GPOS.readAnchorRecord(i,l+o.readUshort(i,s))),s+=2;a.push(d)}return a},e.GPOS.readMarkArray=function(i,s){var r=e._bin,o=[],a=s,l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=e.GPOS.readAnchorRecord(i,r.readUshort(i,s+2)+a);h.markClass=r.readUshort(i,s),o.push(h),s+=4}return o},e.GPOS.readAnchorRecord=function(i,s){var r=e._bin,o={};return o.fmt=r.readUshort(i,s),o.x=r.readShort(i,s+2),o.y=r.readShort(i,s+4),o},e.GSUB={},e.GSUB.parse=function(i,s,r,o){return e._lctf.parse(i,s,r,o,e.GSUB.subt)},e.GSUB.subt=function(i,s,r,o){var a=e._bin,l=r,u={};if(u.fmt=a.readUshort(i,r),r+=2,s!=1&&s!=2&&s!=4&&s!=5&&s!=6)return null;if(s==1||s==2||s==4||s==5&&u.fmt<=2||s==6&&u.fmt<=2){var h=a.readUshort(i,r);r+=2,u.coverage=e._lctf.readCoverage(i,l+h)}if(s==1&&u.fmt>=1&&u.fmt<=2){if(u.fmt==1)u.delta=a.readShort(i,r),r+=2;else if(u.fmt==2){var d=a.readUshort(i,r);r+=2,u.newg=a.readUshorts(i,r,d),r+=2*u.newg.length}}else if(s==2&&u.fmt==1){d=a.readUshort(i,r),r+=2,u.seqs=[];for(var f=0;f<d;f++){var p=a.readUshort(i,r)+l;r+=2;var m=a.readUshort(i,p);u.seqs.push(a.readUshorts(i,p+2,m))}}else if(s==4)for(u.vals=[],d=a.readUshort(i,r),r+=2,f=0;f<d;f++){var g=a.readUshort(i,r);r+=2,u.vals.push(e.GSUB.readLigatureSet(i,l+g))}else if(s==5&&u.fmt==2){if(u.fmt==2){var y=a.readUshort(i,r);r+=2,u.cDef=e._lctf.readClassDef(i,l+y),u.scset=[];var _=a.readUshort(i,r);for(r+=2,f=0;f<_;f++){var x=a.readUshort(i,r);r+=2,u.scset.push(x==0?null:e.GSUB.readSubClassSet(i,l+x))}}}else if(s==6&&u.fmt==3){if(u.fmt==3){for(f=0;f<3;f++){d=a.readUshort(i,r),r+=2;for(var S=[],w=0;w<d;w++)S.push(e._lctf.readCoverage(i,l+a.readUshort(i,r+2*w)));r+=2*d,f==0&&(u.backCvg=S),f==1&&(u.inptCvg=S),f==2&&(u.ahedCvg=S)}d=a.readUshort(i,r),r+=2,u.lookupRec=e.GSUB.readSubstLookupRecords(i,r,d)}}else{if(s==7&&u.fmt==1){var A=a.readUshort(i,r);r+=2;var T=a.readUint(i,r);if(r+=4,o.ltype==9)o.ltype=A;else if(o.ltype!=A)throw"invalid extension substitution";return e.GSUB.subt(i,o.ltype,l+T)}console.debug("unsupported GSUB table LookupType",s,"format",u.fmt)}return u},e.GSUB.readSubClassSet=function(i,s){var r=e._bin.readUshort,o=s,a=[],l=r(i,s);s+=2;for(var u=0;u<l;u++){var h=r(i,s);s+=2,a.push(e.GSUB.readSubClassRule(i,o+h))}return a},e.GSUB.readSubClassRule=function(i,s){var r=e._bin.readUshort,o={},a=r(i,s),l=r(i,s+=2);s+=2,o.input=[];for(var u=0;u<a-1;u++)o.input.push(r(i,s)),s+=2;return o.substLookupRecords=e.GSUB.readSubstLookupRecords(i,s,l),o},e.GSUB.readSubstLookupRecords=function(i,s,r){for(var o=e._bin.readUshort,a=[],l=0;l<r;l++)a.push(o(i,s),o(i,s+2)),s+=4;return a},e.GSUB.readChainSubClassSet=function(i,s){var r=e._bin,o=s,a=[],l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readUshort(i,s);s+=2,a.push(e.GSUB.readChainSubClassRule(i,o+h))}return a},e.GSUB.readChainSubClassRule=function(i,s){for(var r=e._bin,o={},a=["backtrack","input","lookahead"],l=0;l<a.length;l++){var u=r.readUshort(i,s);s+=2,l==1&&u--,o[a[l]]=r.readUshorts(i,s,u),s+=2*o[a[l]].length}return u=r.readUshort(i,s),s+=2,o.subst=r.readUshorts(i,s,2*u),s+=2*o.subst.length,o},e.GSUB.readLigatureSet=function(i,s){var r=e._bin,o=s,a=[],l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readUshort(i,s);s+=2,a.push(e.GSUB.readLigature(i,o+h))}return a},e.GSUB.readLigature=function(i,s){var r=e._bin,o={chain:[]};o.nglyph=r.readUshort(i,s),s+=2;var a=r.readUshort(i,s);s+=2;for(var l=0;l<a-1;l++)o.chain.push(r.readUshort(i,s)),s+=2;return o},e.head={},e.head.parse=function(i,s,r){var o=e._bin,a={};return o.readFixed(i,s),s+=4,a.fontRevision=o.readFixed(i,s),s+=4,o.readUint(i,s),s+=4,o.readUint(i,s),s+=4,a.flags=o.readUshort(i,s),s+=2,a.unitsPerEm=o.readUshort(i,s),s+=2,a.created=o.readUint64(i,s),s+=8,a.modified=o.readUint64(i,s),s+=8,a.xMin=o.readShort(i,s),s+=2,a.yMin=o.readShort(i,s),s+=2,a.xMax=o.readShort(i,s),s+=2,a.yMax=o.readShort(i,s),s+=2,a.macStyle=o.readUshort(i,s),s+=2,a.lowestRecPPEM=o.readUshort(i,s),s+=2,a.fontDirectionHint=o.readShort(i,s),s+=2,a.indexToLocFormat=o.readShort(i,s),s+=2,a.glyphDataFormat=o.readShort(i,s),s+=2,a},e.hhea={},e.hhea.parse=function(i,s,r){var o=e._bin,a={};return o.readFixed(i,s),s+=4,a.ascender=o.readShort(i,s),s+=2,a.descender=o.readShort(i,s),s+=2,a.lineGap=o.readShort(i,s),s+=2,a.advanceWidthMax=o.readUshort(i,s),s+=2,a.minLeftSideBearing=o.readShort(i,s),s+=2,a.minRightSideBearing=o.readShort(i,s),s+=2,a.xMaxExtent=o.readShort(i,s),s+=2,a.caretSlopeRise=o.readShort(i,s),s+=2,a.caretSlopeRun=o.readShort(i,s),s+=2,a.caretOffset=o.readShort(i,s),s+=2,s+=8,a.metricDataFormat=o.readShort(i,s),s+=2,a.numberOfHMetrics=o.readUshort(i,s),s+=2,a},e.hmtx={},e.hmtx.parse=function(i,s,r,o){for(var a=e._bin,l={aWidth:[],lsBearing:[]},u=0,h=0,d=0;d<o.maxp.numGlyphs;d++)d<o.hhea.numberOfHMetrics&&(u=a.readUshort(i,s),s+=2,h=a.readShort(i,s),s+=2),l.aWidth.push(u),l.lsBearing.push(h);return l},e.kern={},e.kern.parse=function(i,s,r,o){var a=e._bin,l=a.readUshort(i,s);if(s+=2,l==1)return e.kern.parseV1(i,s-2,r,o);var u=a.readUshort(i,s);s+=2;for(var h={glyph1:[],rval:[]},d=0;d<u;d++){s+=2,r=a.readUshort(i,s),s+=2;var f=a.readUshort(i,s);s+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;s=e.kern.readFormat0(i,s,h)}return h},e.kern.parseV1=function(i,s,r,o){var a=e._bin;a.readFixed(i,s),s+=4;var l=a.readUint(i,s);s+=4;for(var u={glyph1:[],rval:[]},h=0;h<l;h++){a.readUint(i,s),s+=4;var d=a.readUshort(i,s);s+=2,a.readUshort(i,s),s+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;s=e.kern.readFormat0(i,s,u)}return u},e.kern.readFormat0=function(i,s,r){var o=e._bin,a=-1,l=o.readUshort(i,s);s+=2,o.readUshort(i,s),s+=2,o.readUshort(i,s),s+=2,o.readUshort(i,s),s+=2;for(var u=0;u<l;u++){var h=o.readUshort(i,s);s+=2;var d=o.readUshort(i,s);s+=2;var f=o.readShort(i,s);s+=2,h!=a&&(r.glyph1.push(h),r.rval.push({glyph2:[],vals:[]}));var p=r.rval[r.rval.length-1];p.glyph2.push(d),p.vals.push(f),a=h}return s},e.loca={},e.loca.parse=function(i,s,r,o){var a=e._bin,l=[],u=o.head.indexToLocFormat,h=o.maxp.numGlyphs+1;if(u==0)for(var d=0;d<h;d++)l.push(a.readUshort(i,s+(d<<1))<<1);if(u==1)for(d=0;d<h;d++)l.push(a.readUint(i,s+(d<<2)));return l},e.maxp={},e.maxp.parse=function(i,s,r){var o=e._bin,a={},l=o.readUint(i,s);return s+=4,a.numGlyphs=o.readUshort(i,s),s+=2,l==65536&&(a.maxPoints=o.readUshort(i,s),s+=2,a.maxContours=o.readUshort(i,s),s+=2,a.maxCompositePoints=o.readUshort(i,s),s+=2,a.maxCompositeContours=o.readUshort(i,s),s+=2,a.maxZones=o.readUshort(i,s),s+=2,a.maxTwilightPoints=o.readUshort(i,s),s+=2,a.maxStorage=o.readUshort(i,s),s+=2,a.maxFunctionDefs=o.readUshort(i,s),s+=2,a.maxInstructionDefs=o.readUshort(i,s),s+=2,a.maxStackElements=o.readUshort(i,s),s+=2,a.maxSizeOfInstructions=o.readUshort(i,s),s+=2,a.maxComponentElements=o.readUshort(i,s),s+=2,a.maxComponentDepth=o.readUshort(i,s),s+=2),a},e.name={},e.name.parse=function(i,s,r){var o=e._bin,a={};o.readUshort(i,s),s+=2;var l=o.readUshort(i,s);s+=2,o.readUshort(i,s);for(var u,h=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=s+=2,f=0;f<l;f++){var p=o.readUshort(i,s);s+=2;var m=o.readUshort(i,s);s+=2;var g=o.readUshort(i,s);s+=2;var y=o.readUshort(i,s);s+=2;var _=o.readUshort(i,s);s+=2;var x=o.readUshort(i,s);s+=2;var S,w=h[y],A=d+12*l+x;if(p==0)S=o.readUnicode(i,A,_/2);else if(p==3&&m==0)S=o.readUnicode(i,A,_/2);else if(m==0)S=o.readASCII(i,A,_);else if(m==1)S=o.readUnicode(i,A,_/2);else if(m==3)S=o.readUnicode(i,A,_/2);else{if(p!=1)throw"unknown encoding "+m+", platformID: "+p;S=o.readASCII(i,A,_),console.debug("reading unknown MAC encoding "+m+" as ASCII")}var T="p"+p+","+g.toString(16);a[T]==null&&(a[T]={}),a[T][w!==void 0?w:y]=S,a[T]._lang=g}for(var M in a)if(a[M].postScriptName!=null&&a[M]._lang==1033)return a[M];for(var M in a)if(a[M].postScriptName!=null&&a[M]._lang==0)return a[M];for(var M in a)if(a[M].postScriptName!=null&&a[M]._lang==3084)return a[M];for(var M in a)if(a[M].postScriptName!=null)return a[M];for(var M in a){u=M;break}return console.debug("returning name table with languageID "+a[u]._lang),a[u]},e["OS/2"]={},e["OS/2"].parse=function(i,s,r){var o=e._bin.readUshort(i,s);s+=2;var a={};if(o==0)e["OS/2"].version0(i,s,a);else if(o==1)e["OS/2"].version1(i,s,a);else if(o==2||o==3||o==4)e["OS/2"].version2(i,s,a);else{if(o!=5)throw"unknown OS/2 table version: "+o;e["OS/2"].version5(i,s,a)}return a},e["OS/2"].version0=function(i,s,r){var o=e._bin;return r.xAvgCharWidth=o.readShort(i,s),s+=2,r.usWeightClass=o.readUshort(i,s),s+=2,r.usWidthClass=o.readUshort(i,s),s+=2,r.fsType=o.readUshort(i,s),s+=2,r.ySubscriptXSize=o.readShort(i,s),s+=2,r.ySubscriptYSize=o.readShort(i,s),s+=2,r.ySubscriptXOffset=o.readShort(i,s),s+=2,r.ySubscriptYOffset=o.readShort(i,s),s+=2,r.ySuperscriptXSize=o.readShort(i,s),s+=2,r.ySuperscriptYSize=o.readShort(i,s),s+=2,r.ySuperscriptXOffset=o.readShort(i,s),s+=2,r.ySuperscriptYOffset=o.readShort(i,s),s+=2,r.yStrikeoutSize=o.readShort(i,s),s+=2,r.yStrikeoutPosition=o.readShort(i,s),s+=2,r.sFamilyClass=o.readShort(i,s),s+=2,r.panose=o.readBytes(i,s,10),s+=10,r.ulUnicodeRange1=o.readUint(i,s),s+=4,r.ulUnicodeRange2=o.readUint(i,s),s+=4,r.ulUnicodeRange3=o.readUint(i,s),s+=4,r.ulUnicodeRange4=o.readUint(i,s),s+=4,r.achVendID=[o.readInt8(i,s),o.readInt8(i,s+1),o.readInt8(i,s+2),o.readInt8(i,s+3)],s+=4,r.fsSelection=o.readUshort(i,s),s+=2,r.usFirstCharIndex=o.readUshort(i,s),s+=2,r.usLastCharIndex=o.readUshort(i,s),s+=2,r.sTypoAscender=o.readShort(i,s),s+=2,r.sTypoDescender=o.readShort(i,s),s+=2,r.sTypoLineGap=o.readShort(i,s),s+=2,r.usWinAscent=o.readUshort(i,s),s+=2,r.usWinDescent=o.readUshort(i,s),s+=2},e["OS/2"].version1=function(i,s,r){var o=e._bin;return s=e["OS/2"].version0(i,s,r),r.ulCodePageRange1=o.readUint(i,s),s+=4,r.ulCodePageRange2=o.readUint(i,s),s+=4},e["OS/2"].version2=function(i,s,r){var o=e._bin;return s=e["OS/2"].version1(i,s,r),r.sxHeight=o.readShort(i,s),s+=2,r.sCapHeight=o.readShort(i,s),s+=2,r.usDefault=o.readUshort(i,s),s+=2,r.usBreak=o.readUshort(i,s),s+=2,r.usMaxContext=o.readUshort(i,s),s+=2},e["OS/2"].version5=function(i,s,r){var o=e._bin;return s=e["OS/2"].version2(i,s,r),r.usLowerOpticalPointSize=o.readUshort(i,s),s+=2,r.usUpperOpticalPointSize=o.readUshort(i,s),s+=2},e.post={},e.post.parse=function(i,s,r){var o=e._bin,a={};return a.version=o.readFixed(i,s),s+=4,a.italicAngle=o.readFixed(i,s),s+=4,a.underlinePosition=o.readShort(i,s),s+=2,a.underlineThickness=o.readShort(i,s),s+=2,a},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(i,s){var r=i.cmap,o=-1;if(r.p0e4!=null?o=r.p0e4:r.p3e1!=null?o=r.p3e1:r.p1e0!=null?o=r.p1e0:r.p0e3!=null&&(o=r.p0e3),o==-1)throw"no familiar platform and encoding!";var a=r.tables[o];if(a.format==0)return s>=a.map.length?0:a.map[s];if(a.format==4){for(var l=-1,u=0;u<a.endCount.length;u++)if(s<=a.endCount[u]){l=u;break}return l==-1||a.startCount[l]>s?0:65535&(a.idRangeOffset[l]!=0?a.glyphIdArray[s-a.startCount[l]+(a.idRangeOffset[l]>>1)-(a.idRangeOffset.length-l)]:s+a.idDelta[l])}if(a.format==12){if(s>a.groups[a.groups.length-1][1])return 0;for(u=0;u<a.groups.length;u++){var h=a.groups[u];if(h[0]<=s&&s<=h[1])return h[2]+(s-h[0])}return 0}throw"unknown cmap table format "+a.format},e.U.glyphToPath=function(i,s){var r={cmds:[],crds:[]};if(i.SVG&&i.SVG.entries[s]){var o=i.SVG.entries[s];return o==null?r:(typeof o=="string"&&(o=e.SVG.toPath(o),i.SVG.entries[s]=o),o)}if(i.CFF){var a={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:i.CFF.Private?i.CFF.Private.defaultWidthX:0,open:!1},l=i.CFF,u=i.CFF.Private;if(l.ROS){for(var h=0;l.FDSelect[h+2]<=s;)h+=2;u=l.FDArray[l.FDSelect[h+1]].Private}e.U._drawCFF(i.CFF.CharStrings[s],a,l,u,r)}else i.glyf&&e.U._drawGlyf(s,i,r);return r},e.U._drawGlyf=function(i,s,r){var o=s.glyf[i];o==null&&(o=s.glyf[i]=e.glyf._parseGlyf(s,i)),o!=null&&(o.noc>-1?e.U._simpleGlyph(o,r):e.U._compoGlyph(o,s,r))},e.U._simpleGlyph=function(i,s){for(var r=0;r<i.noc;r++){for(var o=r==0?0:i.endPts[r-1]+1,a=i.endPts[r],l=o;l<=a;l++){var u=l==o?a:l-1,h=l==a?o:l+1,d=1&i.flags[l],f=1&i.flags[u],p=1&i.flags[h],m=i.xs[l],g=i.ys[l];if(l==o)if(d){if(!f){e.U.P.moveTo(s,m,g);continue}e.U.P.moveTo(s,i.xs[u],i.ys[u])}else f?e.U.P.moveTo(s,i.xs[u],i.ys[u]):e.U.P.moveTo(s,(i.xs[u]+m)/2,(i.ys[u]+g)/2);d?f&&e.U.P.lineTo(s,m,g):p?e.U.P.qcurveTo(s,m,g,i.xs[h],i.ys[h]):e.U.P.qcurveTo(s,m,g,(m+i.xs[h])/2,(g+i.ys[h])/2)}e.U.P.closePath(s)}},e.U._compoGlyph=function(i,s,r){for(var o=0;o<i.parts.length;o++){var a={cmds:[],crds:[]},l=i.parts[o];e.U._drawGlyf(l.glyphIndex,s,a);for(var u=l.m,h=0;h<a.crds.length;h+=2){var d=a.crds[h],f=a.crds[h+1];r.crds.push(d*u.a+f*u.b+u.tx),r.crds.push(d*u.c+f*u.d+u.ty)}for(h=0;h<a.cmds.length;h++)r.cmds.push(a.cmds[h])}},e.U._getGlyphClass=function(i,s){var r=e._lctf.getInterval(s,i);return r==-1?0:s[r+2]},e.U._applySubs=function(i,s,r,o){for(var a=i.length-s-1,l=0;l<r.tabs.length;l++)if(r.tabs[l]!=null){var u,h=r.tabs[l];if(!h.coverage||(u=e._lctf.coverageIndex(h.coverage,i[s]))!=-1){if(r.ltype==1)i[s],h.fmt==1?i[s]=i[s]+h.delta:i[s]=h.newg[u];else if(r.ltype==4)for(var d=h.vals[u],f=0;f<d.length;f++){var p=d[f],m=p.chain.length;if(!(m>a)){for(var g=!0,y=0,_=0;_<m;_++){for(;i[s+y+(1+_)]==-1;)y++;p.chain[_]!=i[s+y+(1+_)]&&(g=!1)}if(g){for(i[s]=p.nglyph,_=0;_<m+y;_++)i[s+_+1]=-1;break}}}else if(r.ltype==5&&h.fmt==2)for(var x=e._lctf.getInterval(h.cDef,i[s]),S=h.cDef[x+2],w=h.scset[S],A=0;A<w.length;A++){var T=w[A],M=T.input;if(!(M.length>a)){for(g=!0,_=0;_<M.length;_++){var L=e._lctf.getInterval(h.cDef,i[s+1+_]);if(x==-1&&h.cDef[L+2]!=M[_]){g=!1;break}}if(g){var I=T.substLookupRecords;for(f=0;f<I.length;f+=2)I[f],I[f+1]}}}else if(r.ltype==6&&h.fmt==3){if(!e.U._glsCovered(i,h.backCvg,s-h.backCvg.length)||!e.U._glsCovered(i,h.inptCvg,s)||!e.U._glsCovered(i,h.ahedCvg,s+h.inptCvg.length))continue;var W=h.lookupRec;for(A=0;A<W.length;A+=2){x=W[A];var U=o[W[A+1]];e.U._applySubs(i,s+x,U,o)}}}}},e.U._glsCovered=function(i,s,r){for(var o=0;o<s.length;o++)if(e._lctf.coverageIndex(s[o],i[r+o])==-1)return!1;return!0},e.U.glyphsToPath=function(i,s,r){for(var o={cmds:[],crds:[]},a=0,l=0;l<s.length;l++){var u=s[l];if(u!=-1){for(var h=l<s.length-1&&s[l+1]!=-1?s[l+1]:0,d=e.U.glyphToPath(i,u),f=0;f<d.crds.length;f+=2)o.crds.push(d.crds[f]+a),o.crds.push(d.crds[f+1]);for(r&&o.cmds.push(r),f=0;f<d.cmds.length;f++)o.cmds.push(d.cmds[f]);r&&o.cmds.push("X"),a+=i.hmtx.aWidth[u],l<s.length-1&&(a+=e.U.getPairAdjustment(i,u,h))}}return o},e.U.P={},e.U.P.moveTo=function(i,s,r){i.cmds.push("M"),i.crds.push(s,r)},e.U.P.lineTo=function(i,s,r){i.cmds.push("L"),i.crds.push(s,r)},e.U.P.curveTo=function(i,s,r,o,a,l,u){i.cmds.push("C"),i.crds.push(s,r,o,a,l,u)},e.U.P.qcurveTo=function(i,s,r,o,a){i.cmds.push("Q"),i.crds.push(s,r,o,a)},e.U.P.closePath=function(i){i.cmds.push("Z")},e.U._drawCFF=function(i,s,r,o,a){for(var l=s.stack,u=s.nStems,h=s.haveWidth,d=s.width,f=s.open,p=0,m=s.x,g=s.y,y=0,_=0,x=0,S=0,w=0,A=0,T=0,M=0,L=0,I=0,W={val:0,size:0};p<i.length;){e.CFF.getCharString(i,p,W);var U=W.val;if(p+=W.size,U=="o1"||U=="o18")l.length%2!=0&&!h&&(d=l.shift()+o.nominalWidthX),u+=l.length>>1,l.length=0,h=!0;else if(U=="o3"||U=="o23")l.length%2!=0&&!h&&(d=l.shift()+o.nominalWidthX),u+=l.length>>1,l.length=0,h=!0;else if(U=="o4")l.length>1&&!h&&(d=l.shift()+o.nominalWidthX,h=!0),f&&e.U.P.closePath(a),g+=l.pop(),e.U.P.moveTo(a,m,g),f=!0;else if(U=="o5")for(;l.length>0;)m+=l.shift(),g+=l.shift(),e.U.P.lineTo(a,m,g);else if(U=="o6"||U=="o7")for(var k=l.length,O=U=="o6",te=0;te<k;te++){var ie=l.shift();O?m+=ie:g+=ie,O=!O,e.U.P.lineTo(a,m,g)}else if(U=="o8"||U=="o24"){k=l.length;for(var ge=0;ge+6<=k;)y=m+l.shift(),_=g+l.shift(),x=y+l.shift(),S=_+l.shift(),m=x+l.shift(),g=S+l.shift(),e.U.P.curveTo(a,y,_,x,S,m,g),ge+=6;U=="o24"&&(m+=l.shift(),g+=l.shift(),e.U.P.lineTo(a,m,g))}else{if(U=="o11")break;if(U=="o1234"||U=="o1235"||U=="o1236"||U=="o1237")U=="o1234"&&(_=g,x=(y=m+l.shift())+l.shift(),I=S=_+l.shift(),A=S,M=g,m=(T=(w=(L=x+l.shift())+l.shift())+l.shift())+l.shift(),e.U.P.curveTo(a,y,_,x,S,L,I),e.U.P.curveTo(a,w,A,T,M,m,g)),U=="o1235"&&(y=m+l.shift(),_=g+l.shift(),x=y+l.shift(),S=_+l.shift(),L=x+l.shift(),I=S+l.shift(),w=L+l.shift(),A=I+l.shift(),T=w+l.shift(),M=A+l.shift(),m=T+l.shift(),g=M+l.shift(),l.shift(),e.U.P.curveTo(a,y,_,x,S,L,I),e.U.P.curveTo(a,w,A,T,M,m,g)),U=="o1236"&&(y=m+l.shift(),_=g+l.shift(),x=y+l.shift(),I=S=_+l.shift(),A=S,T=(w=(L=x+l.shift())+l.shift())+l.shift(),M=A+l.shift(),m=T+l.shift(),e.U.P.curveTo(a,y,_,x,S,L,I),e.U.P.curveTo(a,w,A,T,M,m,g)),U=="o1237"&&(y=m+l.shift(),_=g+l.shift(),x=y+l.shift(),S=_+l.shift(),L=x+l.shift(),I=S+l.shift(),w=L+l.shift(),A=I+l.shift(),T=w+l.shift(),M=A+l.shift(),Math.abs(T-m)>Math.abs(M-g)?m=T+l.shift():g=M+l.shift(),e.U.P.curveTo(a,y,_,x,S,L,I),e.U.P.curveTo(a,w,A,T,M,m,g));else if(U=="o14"){if(l.length>0&&!h&&(d=l.shift()+r.nominalWidthX,h=!0),l.length==4){var be=l.shift(),Y=l.shift(),$=l.shift(),E=l.shift(),V=e.CFF.glyphBySE(r,$),G=e.CFF.glyphBySE(r,E);e.U._drawCFF(r.CharStrings[V],s,r,o,a),s.x=be,s.y=Y,e.U._drawCFF(r.CharStrings[G],s,r,o,a)}f&&(e.U.P.closePath(a),f=!1)}else if(U=="o19"||U=="o20")l.length%2!=0&&!h&&(d=l.shift()+o.nominalWidthX),u+=l.length>>1,l.length=0,h=!0,p+=u+7>>3;else if(U=="o21")l.length>2&&!h&&(d=l.shift()+o.nominalWidthX,h=!0),g+=l.pop(),m+=l.pop(),f&&e.U.P.closePath(a),e.U.P.moveTo(a,m,g),f=!0;else if(U=="o22")l.length>1&&!h&&(d=l.shift()+o.nominalWidthX,h=!0),m+=l.pop(),f&&e.U.P.closePath(a),e.U.P.moveTo(a,m,g),f=!0;else if(U=="o25"){for(;l.length>6;)m+=l.shift(),g+=l.shift(),e.U.P.lineTo(a,m,g);y=m+l.shift(),_=g+l.shift(),x=y+l.shift(),S=_+l.shift(),m=x+l.shift(),g=S+l.shift(),e.U.P.curveTo(a,y,_,x,S,m,g)}else if(U=="o26")for(l.length%2&&(m+=l.shift());l.length>0;)y=m,_=g+l.shift(),m=x=y+l.shift(),g=(S=_+l.shift())+l.shift(),e.U.P.curveTo(a,y,_,x,S,m,g);else if(U=="o27")for(l.length%2&&(g+=l.shift());l.length>0;)_=g,x=(y=m+l.shift())+l.shift(),S=_+l.shift(),m=x+l.shift(),g=S,e.U.P.curveTo(a,y,_,x,S,m,g);else if(U=="o10"||U=="o29"){var J=U=="o10"?o:r;if(l.length==0)console.debug("error: empty stack");else{var z=l.pop(),ae=J.Subrs[z+J.Bias];s.x=m,s.y=g,s.nStems=u,s.haveWidth=h,s.width=d,s.open=f,e.U._drawCFF(ae,s,r,o,a),m=s.x,g=s.y,u=s.nStems,h=s.haveWidth,d=s.width,f=s.open}}else if(U=="o30"||U=="o31"){var Z=l.length,re=(ge=0,U=="o31");for(ge+=Z-(k=-3&Z);ge<k;)re?(_=g,x=(y=m+l.shift())+l.shift(),g=(S=_+l.shift())+l.shift(),k-ge==5?(m=x+l.shift(),ge++):m=x,re=!1):(y=m,_=g+l.shift(),x=y+l.shift(),S=_+l.shift(),m=x+l.shift(),k-ge==5?(g=S+l.shift(),ge++):g=S,re=!0),e.U.P.curveTo(a,y,_,x,S,m,g),ge+=4}else{if((U+"").charAt(0)=="o")throw console.debug("Unknown operation: "+U,i),U;l.push(U)}}}s.x=m,s.y=g,s.nStems=u,s.haveWidth=h,s.width=d,s.open=f};var t=e,n={Typr:t};return c.Typr=t,c.default=n,Object.defineProperty(c,"__esModule",{value:!0}),c}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function GD(){return function(c){var e=Uint8Array,t=Uint16Array,n=Uint32Array,i=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),s=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),r=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),o=function(U,k){for(var O=new t(31),te=0;te<31;++te)O[te]=k+=1<<U[te-1];var ie=new n(O[30]);for(te=1;te<30;++te)for(var ge=O[te];ge<O[te+1];++ge)ie[ge]=ge-O[te]<<5|te;return[O,ie]},a=o(i,2),l=a[0],u=a[1];l[28]=258,u[258]=28;for(var h=o(s,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var m=function(U,k,O){for(var te=U.length,ie=0,ge=new t(k);ie<te;++ie)++ge[U[ie]-1];var be,Y=new t(k);for(ie=0;ie<k;++ie)Y[ie]=Y[ie-1]+ge[ie-1]<<1;{be=new t(1<<k);var $=15-k;for(ie=0;ie<te;++ie)if(U[ie])for(var E=ie<<4|U[ie],V=k-U[ie],G=Y[U[ie]-1]++<<V,J=G|(1<<V)-1;G<=J;++G)be[d[G]>>>$]=E}return be},g=new e(288);for(f=0;f<144;++f)g[f]=8;for(f=144;f<256;++f)g[f]=9;for(f=256;f<280;++f)g[f]=7;for(f=280;f<288;++f)g[f]=8;var y=new e(32);for(f=0;f<32;++f)y[f]=5;var _=m(g,9),x=m(y,5),S=function(U){for(var k=U[0],O=1;O<U.length;++O)U[O]>k&&(k=U[O]);return k},w=function(U,k,O){var te=k/8|0;return(U[te]|U[te+1]<<8)>>(7&k)&O},A=function(U,k){var O=k/8|0;return(U[O]|U[O+1]<<8|U[O+2]<<16)>>(7&k)},T=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],M=function(U,k,O){var te=new Error(k||T[U]);if(te.code=U,Error.captureStackTrace&&Error.captureStackTrace(te,M),!O)throw te;return te},L=function(U,k,O){var te=U.length;if(!te||O&&!O.l&&te<5)return k||new e(0);var ie=!k||O,ge=!O||O.i;O||(O={}),k||(k=new e(3*te));var be,Y=function(Me){var Je=k.length;if(Me>Je){var mt=new e(Math.max(2*Je,Me));mt.set(k),k=mt}},$=O.f||0,E=O.p||0,V=O.b||0,G=O.l,J=O.d,z=O.m,ae=O.n,Z=8*te;do{if(!G){O.f=$=w(U,E,1);var re=w(U,E+1,3);if(E+=3,!re){var xe=U[(me=((be=E)/8|0)+(7&be&&1)+4)-4]|U[me-3]<<8,Se=me+xe;if(Se>te){ge&&M(0);break}ie&&Y(V+xe),k.set(U.subarray(me,Se),V),O.b=V+=xe,O.p=E=8*Se;continue}if(re==1)G=_,J=x,z=9,ae=5;else if(re==2){var le=w(U,E,31)+257,B=w(U,E+10,15)+4,oe=le+w(U,E+5,31)+1;E+=14;for(var ee=new e(oe),ce=new e(19),se=0;se<B;++se)ce[r[se]]=w(U,E+3*se,7);E+=3*B;var ve=S(ce),ne=(1<<ve)-1,de=m(ce,ve);for(se=0;se<oe;){var me,j=de[w(U,E,ne)];if(E+=15&j,(me=j>>>4)<16)ee[se++]=me;else{var we=0,fe=0;for(me==16?(fe=3+w(U,E,3),E+=2,we=ee[se-1]):me==17?(fe=3+w(U,E,7),E+=3):me==18&&(fe=11+w(U,E,127),E+=7);fe--;)ee[se++]=we}}var ye=ee.subarray(0,le),_e=ee.subarray(le);z=S(ye),ae=S(_e),G=m(ye,z),J=m(_e,ae)}else M(1);if(E>Z){ge&&M(0);break}}ie&&Y(V+131072);for(var st=(1<<z)-1,Te=(1<<ae)-1,Ue=E;;Ue=E){var De=(we=G[A(U,E)&st])>>>4;if((E+=15&we)>Z){ge&&M(0);break}if(we||M(2),De<256)k[V++]=De;else{if(De==256){Ue=E,G=null;break}var je=De-254;if(De>264){var Ze=i[se=De-257];je=w(U,E,(1<<Ze)-1)+l[se],E+=Ze}var at=J[A(U,E)&Te],ke=at>>>4;if(at||M(3),E+=15&at,_e=h[ke],ke>3&&(Ze=s[ke],_e+=A(U,E)&(1<<Ze)-1,E+=Ze),E>Z){ge&&M(0);break}ie&&Y(V+131072);for(var Oe=V+je;V<Oe;V+=4)k[V]=k[V-_e],k[V+1]=k[V+1-_e],k[V+2]=k[V+2-_e],k[V+3]=k[V+3-_e];V=Oe}}O.l=G,O.p=Ue,O.b=V,G&&($=1,O.m=z,O.d=J,O.n=ae)}while(!$);return V==k.length?k:function(Me,Je,mt){(mt==null||mt>Me.length)&&(mt=Me.length);var fn=new(Me instanceof t?t:Me instanceof n?n:e)(mt-Je);return fn.set(Me.subarray(Je,mt)),fn}(k,0,V)},I=new e(0),W=typeof TextDecoder<"u"&&new TextDecoder;try{W.decode(I,{stream:!0})}catch{}return c.convert_streams=function(U){var k=new DataView(U),O=0;function te(){var le=k.getUint16(O);return O+=2,le}function ie(){var le=k.getUint32(O);return O+=4,le}function ge(le){xe.setUint16(Se,le),Se+=2}function be(le){xe.setUint32(Se,le),Se+=4}for(var Y={signature:ie(),flavor:ie(),length:ie(),numTables:te(),reserved:te(),totalSfntSize:ie(),majorVersion:te(),minorVersion:te(),metaOffset:ie(),metaLength:ie(),metaOrigLength:ie(),privOffset:ie(),privLength:ie()},$=0;Math.pow(2,$)<=Y.numTables;)$++;$--;for(var E=16*Math.pow(2,$),V=16*Y.numTables-E,G=12,J=[],z=0;z<Y.numTables;z++)J.push({tag:ie(),offset:ie(),compLength:ie(),origLength:ie(),origChecksum:ie()}),G+=16;var ae,Z=new Uint8Array(12+16*J.length+J.reduce(function(le,B){return le+B.origLength+4},0)),re=Z.buffer,xe=new DataView(re),Se=0;return be(Y.flavor),ge(Y.numTables),ge(E),ge($),ge(V),J.forEach(function(le){be(le.tag),be(le.origChecksum),be(G),be(le.origLength),le.outOffset=G,(G+=le.origLength)%4!=0&&(G+=4-G%4)}),J.forEach(function(le){var B,oe=U.slice(le.offset,le.offset+le.compLength);if(le.compLength!=le.origLength){var ee=new Uint8Array(le.origLength);B=new Uint8Array(oe,2),L(B,ee)}else ee=new Uint8Array(oe);Z.set(ee,le.outOffset);var ce=0;(G=le.outOffset+le.origLength)%4!=0&&(ce=4-G%4),Z.set(new Uint8Array(ce).buffer,le.outOffset+le.origLength),ae=G+ce}),re.slice(0,ae)},Object.defineProperty(c,"__esModule",{value:!0}),c}({}).convert_streams}function HD(c,e){const t={M:2,L:2,Q:4,C:6,Z:0},n={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},i=1,s=2,r=4,o=8,a=16,l=32;let u;function h(T){if(!u){const M={R:s,L:i,D:r,C:a,U:l,T:o};u=new Map;for(let L in n){let I=0;n[L].split(",").forEach(W=>{let[U,k]=W.split("+");U=parseInt(U,36),k=k?parseInt(k,36):0,u.set(I+=U,M[L]);for(let O=k;O--;)u.set(++I,M[L])})}}return u.get(T)||l}const d=1,f=2,p=3,m=4,g=[null,"isol","init","fina","medi"];function y(T){const M=new Uint8Array(T.length);let L=l,I=d,W=-1;for(let U=0;U<T.length;U++){const k=T.codePointAt(U);let O=h(k)|0,te=d;O&o||(L&(i|r|a)?O&(s|r|a)?(te=p,(I===d||I===p)&&M[W]++):O&(i|l)&&(I===f||I===m)&&M[W]--:L&(s|l)&&(I===f||I===m)&&M[W]--,I=M[U]=te,L=O,W=U,k>65535&&U++)}return M}function _(T,M){const L=[];for(let W=0;W<M.length;W++){const U=M.codePointAt(W);U>65535&&W++,L.push(c.U.codeToGlyph(T,U))}const I=T.GSUB;if(I){const{lookupList:W,featureList:U}=I;let k;const O=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,te=[];U.forEach(ie=>{if(O.test(ie.tag))for(let ge=0;ge<ie.tab.length;ge++){if(te[ie.tab[ge]])continue;te[ie.tab[ge]]=!0;const be=W[ie.tab[ge]],Y=/^(isol|init|fina|medi)$/.test(ie.tag);Y&&!k&&(k=y(M));for(let $=0;$<L.length;$++)(!k||!Y||g[k[$]]===ie.tag)&&c.U._applySubs(L,$,be,W)}})}return L}function x(T,M){const L=new Int16Array(M.length*3);let I=0;for(;I<M.length;I++){const O=M[I];if(O===-1)continue;L[I*3+2]=T.hmtx.aWidth[O];const te=T.GPOS;if(te){const ie=te.lookupList;for(let ge=0;ge<ie.length;ge++){const be=ie[ge];for(let Y=0;Y<be.tabs.length;Y++){const $=be.tabs[Y];if(be.ltype===1){if(c._lctf.coverageIndex($.coverage,O)!==-1&&$.pos){k($.pos,I);break}}else if(be.ltype===2){let E=null,V=W();if(V!==-1){const G=c._lctf.coverageIndex($.coverage,M[V]);if(G!==-1){if($.fmt===1){const J=$.pairsets[G];for(let z=0;z<J.length;z++)J[z].gid2===O&&(E=J[z])}else if($.fmt===2){const J=c.U._getGlyphClass(M[V],$.classDef1),z=c.U._getGlyphClass(O,$.classDef2);E=$.matrix[J][z]}if(E){E.val1&&k(E.val1,V),E.val2&&k(E.val2,I);break}}}}else if(be.ltype===4){const E=c._lctf.coverageIndex($.markCoverage,O);if(E!==-1){const V=W(U),G=V===-1?-1:c._lctf.coverageIndex($.baseCoverage,M[V]);if(G!==-1){const J=$.markArray[E],z=$.baseArray[G][J.markClass];L[I*3]=z.x-J.x+L[V*3]-L[V*3+2],L[I*3+1]=z.y-J.y+L[V*3+1];break}}}else if(be.ltype===6){const E=c._lctf.coverageIndex($.mark1Coverage,O);if(E!==-1){const V=W();if(V!==-1){const G=M[V];if(S(T,G)===3){const J=c._lctf.coverageIndex($.mark2Coverage,G);if(J!==-1){const z=$.mark1Array[E],ae=$.mark2Array[J][z.markClass];L[I*3]=ae.x-z.x+L[V*3]-L[V*3+2],L[I*3+1]=ae.y-z.y+L[V*3+1];break}}}}}}}}else if(T.kern&&!T.cff){const ie=W();if(ie!==-1){const ge=T.kern.glyph1.indexOf(M[ie]);if(ge!==-1){const be=T.kern.rval[ge].glyph2.indexOf(O);be!==-1&&(L[ie*3+2]+=T.kern.rval[ge].vals[be])}}}}return L;function W(O){for(let te=I-1;te>=0;te--)if(M[te]!==-1&&(!O||O(M[te])))return te;return-1}function U(O){return S(T,O)===1}function k(O,te){for(let ie=0;ie<3;ie++)L[te*3+ie]+=O[ie]||0}}function S(T,M){const L=T.GDEF&&T.GDEF.glyphClassDef;return L?c.U._getGlyphClass(M,L):0}function w(...T){for(let M=0;M<T.length;M++)if(typeof T[M]=="number")return T[M]}function A(T){const M=Object.create(null),L=T["OS/2"],I=T.hhea,W=T.head.unitsPerEm,U=w(L&&L.sTypoAscender,I&&I.ascender,W),k={unitsPerEm:W,ascender:U,descender:w(L&&L.sTypoDescender,I&&I.descender,0),capHeight:w(L&&L.sCapHeight,U),xHeight:w(L&&L.sxHeight,U),lineGap:w(L&&L.sTypoLineGap,I&&I.lineGap),supportsCodePoint(O){return c.U.codeToGlyph(T,O)>0},forEachGlyph(O,te,ie,ge){let be=0;const Y=1/k.unitsPerEm*te,$=_(T,O);let E=0;const V=x(T,$);return $.forEach((G,J)=>{if(G!==-1){let z=M[G];if(!z){const{cmds:ae,crds:Z}=c.U.glyphToPath(T,G);let re="",xe=0;for(let ee=0,ce=ae.length;ee<ce;ee++){const se=t[ae[ee]];re+=ae[ee];for(let ve=1;ve<=se;ve++)re+=(ve>1?",":"")+Z[xe++]}let Se,le,B,oe;if(Z.length){Se=le=1/0,B=oe=-1/0;for(let ee=0,ce=Z.length;ee<ce;ee+=2){let se=Z[ee],ve=Z[ee+1];se<Se&&(Se=se),ve<le&&(le=ve),se>B&&(B=se),ve>oe&&(oe=ve)}}else Se=B=le=oe=0;z=M[G]={index:G,advanceWidth:T.hmtx.aWidth[G],xMin:Se,yMin:le,xMax:B,yMax:oe,path:re}}ge.call(null,z,be+V[J*3]*Y,V[J*3+1]*Y,E),be+=V[J*3+2]*Y,ie&&(be+=ie*te)}E+=O.codePointAt(E)>65535?2:1}),be}};return k}return function(M){const L=new Uint8Array(M,0,4),I=c._bin.readASCII(L,0,4);if(I==="wOFF")M=e(M);else if(I==="wOF2")throw new Error("woff2 fonts not supported");return A(c.parse(M)[0])}}const WD=uo({name:"Typr Font Parser",dependencies:[zD,GD,HD],init(c,e,t){const n=c(),i=e();return t(n,i)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function qD(){return function(c){var e=function(){this.buckets=new Map};e.prototype.add=function(x){var S=x>>5;this.buckets.set(S,(this.buckets.get(S)||0)|1<<(31&x))},e.prototype.has=function(x){var S=this.buckets.get(x>>5);return S!==void 0&&(S&1<<(31&x))!=0},e.prototype.serialize=function(){var x=[];return this.buckets.forEach(function(S,w){x.push((+w).toString(36)+":"+S.toString(36))}),x.join(",")},e.prototype.deserialize=function(x){var S=this;this.buckets.clear(),x.split(",").forEach(function(w){var A=w.split(":");S.buckets.set(parseInt(A[0],36),parseInt(A[1],36))})};var t=Math.pow(2,8),n=t-1,i=~n;function s(x){var S=function(A){return A&i}(x).toString(16),w=function(A){return(A&i)+t-1}(x).toString(16);return"codepoint-index/plane"+(x>>16)+"/"+S+"-"+w+".json"}function r(x,S){var w=x&n,A=S.codePointAt(w/6|0);return((A=(A||48)-48)&1<<w%6)!=0}function o(x,S){var w;(w=x,w.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(A){return A.split("-").map(function(T){return parseInt(T.trim(),16)})})).forEach(function(A){var T=A[0],M=A[1];M===void 0&&(M=T),S(T,M)})}function a(x,S){o(x,function(w,A){for(var T=w;T<=A;T++)S(T)})}var l={},u={},h=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(x){var S=h.get(x);return S||(S=new e,a(x.ranges,function(w){return S.add(w)}),h.set(x,S)),S}var p,m=new Map;function g(x,S,w){return x[S]?S:x[w]?w:function(A){for(var T in A)return T}(x)}function y(x,S){var w=S;if(!x.includes(w)){w=1/0;for(var A=0;A<x.length;A++)Math.abs(x[A]-S)<Math.abs(w-S)&&(w=x[A])}return w}function _(x){return p||(p=new Set,a("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(S){p.add(S)})),p.has(x)}return c.CodePointSet=e,c.clearCache=function(){l={},u={}},c.getFontsForString=function(x,S){S===void 0&&(S={});var w,A=S.lang;A===void 0&&(A=new RegExp("\\p{Script=Hangul}","u").test(w=x)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(w)?"ja":"en");var T=S.category;T===void 0&&(T="sans-serif");var M=S.style;M===void 0&&(M="normal");var L=S.weight;L===void 0&&(L=400);var I=(S.dataUrl||d).replace(/\/$/g,""),W=new Map,U=new Uint8Array(x.length),k={},O={},te=new Array(x.length),ie=new Map,ge=!1;function be(E){var V=m.get(E);return V||(V=fetch(I+"/"+E).then(function(G){if(!G.ok)throw new Error(G.statusText);return G.json().then(function(J){if(!Array.isArray(J)||J[0]!==1)throw new Error("Incorrect schema version; need 1, got "+J[0]);return J[1]})}).catch(function(G){if(I!==d)return ge||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+I+'", trying default CDN. '+G.message),ge=!0),I=d,m.delete(E),be(E);throw G}),m.set(E,V)),V}for(var Y=function(E){var V=x.codePointAt(E),G=s(V);te[E]=G,l[G]||ie.has(G)||ie.set(G,be(G).then(function(J){l[G]=J})),V>65535&&(E++,$=E)},$=0;$<x.length;$++)Y($);return Promise.all(ie.values()).then(function(){ie.clear();for(var E=function(G){var J=x.codePointAt(G),z=null,ae=l[te[G]],Z=void 0;for(var re in ae){var xe=O[re];if(xe===void 0&&(xe=O[re]=new RegExp(re).test(A||"en")),xe){for(var Se in Z=re,ae[re])if(r(J,ae[re][Se])){z=Se;break}break}}if(!z){e:for(var le in ae)if(le!==Z){for(var B in ae[le])if(r(J,ae[le][B])){z=B;break e}}}z||(console.debug("No font coverage for U+"+J.toString(16)),z="latin"),te[G]=z,u[z]||ie.has(z)||ie.set(z,be("font-meta/"+z+".json").then(function(oe){u[z]=oe})),J>65535&&(G++,V=G)},V=0;V<x.length;V++)E(V);return Promise.all(ie.values())}).then(function(){for(var E,V=null,G=0;G<x.length;G++){var J=x.codePointAt(G);if(V&&(_(J)||f(V).has(J)))U[G]=U[G-1];else{V=u[te[G]];var z=k[V.id];if(!z){var ae=V.typeforms,Z=g(ae,T,"sans-serif"),re=g(ae[Z],M,"normal"),xe=y((E=ae[Z])===null||E===void 0?void 0:E[re],L);z=k[V.id]=I+"/font-files/"+V.id+"/"+Z+"."+re+"."+xe+".woff"}var Se=W.get(z);Se==null&&(Se=W.size,W.set(z,Se)),U[G]=Se}J>65535&&(G++,U[G]=U[G-1])}return{fontUrls:Array.from(W.keys()),chars:U}})},Object.defineProperty(c,"__esModule",{value:!0}),c}({})}function $D(c,e){const t=Object.create(null),n=Object.create(null);function i(r,o){const a=l=>{console.error(`Failure loading font ${r}`,l)};try{const l=new XMLHttpRequest;l.open("get",r,!0),l.responseType="arraybuffer",l.onload=function(){if(l.status>=400)a(new Error(l.statusText));else if(l.status>0)try{const u=c(l.response);u.src=r,o(u)}catch(u){a(u)}},l.onerror=a,l.send()}catch(l){a(l)}}function s(r,o){let a=t[r];a?o(a):n[r]?n[r].push(o):(n[r]=[o],i(r,l=>{l.src=r,t[r]=l,n[r].forEach(u=>u(l)),delete n[r]}))}return function(r,o,{lang:a,fonts:l=[],style:u="normal",weight:h="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(r.length),p=[];r.length||_();const m=new Map,g=[];if(u!=="italic"&&(u="normal"),typeof h!="number"&&(h=h==="bold"?700:400),l&&!Array.isArray(l)&&(l=[l]),l=l.slice().filter(S=>!S.lang||S.lang.test(a)).reverse(),l.length){let T=0;(function M(L=0){for(let I=L,W=r.length;I<W;I++){const U=r.codePointAt(I);if(T===1&&p[f[I-1]].supportsCodePoint(U)||I>0&&/\s/.test(r[I]))f[I]=f[I-1],T===2&&(g[g.length-1][1]=I);else for(let k=f[I],O=l.length;k<=O;k++)if(k===O){const te=T===2?g[g.length-1]:g[g.length]=[I,I];te[1]=I,T=2}else{f[I]=k;const{src:te,unicodeRange:ie}=l[k];if(!ie||x(U,ie)){const ge=t[te];if(!ge){s(te,()=>{M(I)});return}if(ge.supportsCodePoint(U)){let be=m.get(ge);typeof be!="number"&&(be=p.length,p.push(ge),m.set(ge,be)),f[I]=be,T=1;break}}}U>65535&&I+1<W&&(f[I+1]=f[I],I++,T===2&&(g[g.length-1][1]=I))}y()})()}else g.push([0,r.length-1]),y();function y(){if(g.length){const S=g.map(w=>r.substring(w[0],w[1]+1)).join(`
`);e.getFontsForString(S,{lang:a||void 0,style:u,weight:h,dataUrl:d}).then(({fontUrls:w,chars:A})=>{const T=p.length;let M=0;g.forEach(I=>{for(let W=0,U=I[1]-I[0];W<=U;W++)f[I[0]+W]=A[M++]+T;M++});let L=0;w.forEach((I,W)=>{s(I,U=>{p[W+T]=U,++L===w.length&&_()})})})}else _()}function _(){o({chars:f,fonts:p})}function x(S,w){for(let A=0;A<w.length;A++){const[T,M=T]=w[A];if(T<=S&&S<=M)return!0}return!1}}}const jD=uo({name:"FontResolver",dependencies:[$D,WD,qD],init(c,e,t){return c(e,t())}});function XD(c,e){const n=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,i="[^\\S\\u00A0]",s=new RegExp(`${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function r({text:p,lang:m,fonts:g,style:y,weight:_,preResolvedFonts:x,unicodeFontsURL:S},w){const A=({chars:T,fonts:M})=>{let L,I;const W=[];for(let U=0;U<T.length;U++)T[U]!==I?(I=T[U],W.push(L={start:U,end:U,fontObj:M[T[U]]})):L.end=U;w(W)};x?A(x):c(p,A,{lang:m,fonts:g,style:y,weight:_,unicodeFontsURL:S})}function o({text:p="",font:m,lang:g,sdfGlyphSize:y=64,fontSize:_=400,fontWeight:x=1,fontStyle:S="normal",letterSpacing:w=0,lineHeight:A="normal",maxWidth:T=1/0,direction:M,textAlign:L="left",textIndent:I=0,whiteSpace:W="normal",overflowWrap:U="normal",anchorX:k=0,anchorY:O=0,metricsOnly:te=!1,unicodeFontsURL:ie,preResolvedFonts:ge=null,includeCaretPositions:be=!1,chunkedBoundsSize:Y=8192,colorRanges:$=null},E){const V=h(),G={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),_=+_,w=+w,T=+T,A=A||"normal",I=+I,r({text:p,lang:g,style:S,weight:x,fonts:typeof m=="string"?[{src:m}]:m,unicodeFontsURL:ie,preResolvedFonts:ge},J=>{G.fontLoad=h()-V;const z=isFinite(T);let ae=null,Z=null,re=null,xe=null,Se=null,le=null,B=null,oe=null,ee=0,ce=0,se=W!=="nowrap";const ve=new Map,ne=h();let de=I,me=0,j=new d;const we=[j];J.forEach(Te=>{const{fontObj:Ue}=Te,{ascender:De,descender:je,unitsPerEm:Ze,lineGap:at,capHeight:ke,xHeight:Oe}=Ue;let Me=ve.get(Ue);if(!Me){const Le=_/Ze,ct=A==="normal"?(De-je+at)*Le:A*_,ji=(ct-(De-je)*Le)/2,lt=Math.min(ct,(De-je)*Le),Xe=(De+je)/2*Le+lt/2;Me={index:ve.size,src:Ue.src,fontObj:Ue,fontSizeMult:Le,unitsPerEm:Ze,ascender:De*Le,descender:je*Le,capHeight:ke*Le,xHeight:Oe*Le,lineHeight:ct,baseline:-ji-De*Le,caretTop:Xe,caretBottom:Xe-lt},ve.set(Ue,Me)}const{fontSizeMult:Je}=Me,mt=p.slice(Te.start,Te.end+1);let fn,ht;Ue.forEachGlyph(mt,_,w,(Le,ct,ji,lt)=>{ct+=me,lt+=Te.start,fn=ct,ht=Le;const Xe=p.charAt(lt),Pt=Le.advanceWidth*Je,gt=j.count;let Ge;if("isEmpty"in Le||(Le.isWhitespace=!!Xe&&new RegExp(i).test(Xe),Le.canBreakAfter=!!Xe&&s.test(Xe),Le.isEmpty=Le.xMin===Le.xMax||Le.yMin===Le.yMax||n.test(Xe)),!Le.isWhitespace&&!Le.isEmpty&&ce++,se&&z&&!Le.isWhitespace&&ct+Pt+de>T&&gt){if(j.glyphAt(gt-1).glyphObj.canBreakAfter)Ge=new d,de=-ct;else for(let an=gt;an--;)if(an===0&&U==="break-word"){Ge=new d,de=-ct;break}else if(j.glyphAt(an).glyphObj.canBreakAfter){Ge=j.splitAt(an+1);const Qt=Ge.glyphAt(0).x;de-=Qt;for(let Ot=Ge.count;Ot--;)Ge.glyphAt(Ot).x-=Qt;break}Ge&&(j.isSoftWrapped=!0,j=Ge,we.push(j),ee=T)}let vt=j.glyphAt(j.count);vt.glyphObj=Le,vt.x=ct+de,vt.y=ji,vt.width=Pt,vt.charIndex=lt,vt.fontData=Me,Xe===`
`&&(j=new d,we.push(j),de=-(ct+Pt+w*_)+I)}),me=fn+ht.advanceWidth*Je+w*_});let fe=0;we.forEach(Te=>{let Ue=!0;for(let De=Te.count;De--;){const je=Te.glyphAt(De);Ue&&!je.glyphObj.isWhitespace&&(Te.width=je.x+je.width,Te.width>ee&&(ee=Te.width),Ue=!1);let{lineHeight:Ze,capHeight:at,xHeight:ke,baseline:Oe}=je.fontData;Ze>Te.lineHeight&&(Te.lineHeight=Ze);const Me=Oe-Te.baseline;Me<0&&(Te.baseline+=Me,Te.cap+=Me,Te.ex+=Me),Te.cap=Math.max(Te.cap,Te.baseline+at),Te.ex=Math.max(Te.ex,Te.baseline+ke)}Te.baseline-=fe,Te.cap-=fe,Te.ex-=fe,fe+=Te.lineHeight});let ye=0,_e=0;if(k&&(typeof k=="number"?ye=-k:typeof k=="string"&&(ye=-ee*(k==="left"?0:k==="center"?.5:k==="right"?1:l(k)))),O&&(typeof O=="number"?_e=-O:typeof O=="string"&&(_e=O==="top"?0:O==="top-baseline"?-we[0].baseline:O==="top-cap"?-we[0].cap:O==="top-ex"?-we[0].ex:O==="middle"?fe/2:O==="bottom"?fe:O==="bottom-baseline"?-we[we.length-1].baseline:l(O)*fe)),!te){const Te=e.getEmbeddingLevels(p,M);ae=new Uint16Array(ce),Z=new Uint8Array(ce),re=new Float32Array(ce*2),xe={},B=[1/0,1/0,-1/0,-1/0],oe=[],be&&(le=new Float32Array(p.length*4)),$&&(Se=new Uint8Array(ce*3));let Ue=0,De=-1,je=-1,Ze,at;if(we.forEach((ke,Oe)=>{let{count:Me,width:Je}=ke;if(Me>0){let mt=0;for(let lt=Me;lt--&&ke.glyphAt(lt).glyphObj.isWhitespace;)mt++;let fn=0,ht=0;if(L==="center")fn=(ee-Je)/2;else if(L==="right")fn=ee-Je;else if(L==="justify"&&ke.isSoftWrapped){let lt=0;for(let Xe=Me-mt;Xe--;)ke.glyphAt(Xe).glyphObj.isWhitespace&&lt++;ht=(ee-Je)/lt}if(ht||fn){let lt=0;for(let Xe=0;Xe<Me;Xe++){let Pt=ke.glyphAt(Xe);const gt=Pt.glyphObj;Pt.x+=fn+lt,ht!==0&&gt.isWhitespace&&Xe<Me-mt&&(lt+=ht,Pt.width+=ht)}}const Le=e.getReorderSegments(p,Te,ke.glyphAt(0).charIndex,ke.glyphAt(ke.count-1).charIndex);for(let lt=0;lt<Le.length;lt++){const[Xe,Pt]=Le[lt];let gt=1/0,Ge=-1/0;for(let vt=0;vt<Me;vt++)if(ke.glyphAt(vt).charIndex>=Xe){let an=vt,Qt=vt;for(;Qt<Me;Qt++){let Ot=ke.glyphAt(Qt);if(Ot.charIndex>Pt)break;Qt<Me-mt&&(gt=Math.min(gt,Ot.x),Ge=Math.max(Ge,Ot.x+Ot.width))}for(let Ot=an;Ot<Qt;Ot++){const qn=ke.glyphAt(Ot);qn.x=Ge-(qn.x+qn.width-gt)}break}}let ct;const ji=lt=>ct=lt;for(let lt=0;lt<Me;lt++){const Xe=ke.glyphAt(lt);ct=Xe.glyphObj;const Pt=ct.index,gt=Te.levels[Xe.charIndex]&1;if(gt){const Ge=e.getMirroredCharacter(p[Xe.charIndex]);Ge&&Xe.fontData.fontObj.forEachGlyph(Ge,0,0,ji)}if(be){const{charIndex:Ge,fontData:vt}=Xe,an=Xe.x+ye,Qt=Xe.x+Xe.width+ye;le[Ge*4]=gt?Qt:an,le[Ge*4+1]=gt?an:Qt,le[Ge*4+2]=ke.baseline+vt.caretBottom+_e,le[Ge*4+3]=ke.baseline+vt.caretTop+_e;const Ot=Ge-De;Ot>1&&u(le,De,Ot),De=Ge}if($){const{charIndex:Ge}=Xe;for(;Ge>je;)je++,$.hasOwnProperty(je)&&(at=$[je])}if(!ct.isWhitespace&&!ct.isEmpty){const Ge=Ue++,{fontSizeMult:vt,src:an,index:Qt}=Xe.fontData,Ot=xe[an]||(xe[an]={});Ot[Pt]||(Ot[Pt]={path:ct.path,pathBounds:[ct.xMin,ct.yMin,ct.xMax,ct.yMax]});const qn=Xe.x+ye,Xi=Xe.y+ke.baseline+_e;re[Ge*2]=qn,re[Ge*2+1]=Xi;const Ti=qn+ct.xMin*vt,Yi=Xi+ct.yMin*vt,Ts=qn+ct.xMax*vt,wi=Xi+ct.yMax*vt;Ti<B[0]&&(B[0]=Ti),Yi<B[1]&&(B[1]=Yi),Ts>B[2]&&(B[2]=Ts),wi>B[3]&&(B[3]=wi),Ge%Y===0&&(Ze={start:Ge,end:Ge,rect:[1/0,1/0,-1/0,-1/0]},oe.push(Ze)),Ze.end++;const cn=Ze.rect;if(Ti<cn[0]&&(cn[0]=Ti),Yi<cn[1]&&(cn[1]=Yi),Ts>cn[2]&&(cn[2]=Ts),wi>cn[3]&&(cn[3]=wi),ae[Ge]=Pt,Z[Ge]=Qt,$){const ws=Ge*3;Se[ws]=at>>16&255,Se[ws+1]=at>>8&255,Se[ws+2]=at&255}}}}}),le){const ke=p.length-De;ke>1&&u(le,De,ke)}}const st=[];ve.forEach(({index:Te,src:Ue,unitsPerEm:De,ascender:je,descender:Ze,lineHeight:at,capHeight:ke,xHeight:Oe})=>{st[Te]={src:Ue,unitsPerEm:De,ascender:je,descender:Ze,lineHeight:at,capHeight:ke,xHeight:Oe}}),G.typesetting=h()-ne,E({glyphIds:ae,glyphFontIndices:Z,glyphPositions:re,glyphData:xe,fontData:st,caretPositions:le,glyphColors:Se,chunkedBounds:oe,fontSize:_,topBaseline:_e+we[0].baseline,blockBounds:[ye,_e-fe,ye+ee,_e],visibleBounds:B,timings:G})})}function a(p,m){o({...p,metricsOnly:!0},g=>{const[y,_,x,S]=g.blockBounds;m({width:x-y,height:S-_})})}function l(p){let m=p.match(/^([\d.]+)%$/),g=m?parseFloat(m[1]):NaN;return isNaN(g)?0:g/100}function u(p,m,g){const y=p[m*4],_=p[m*4+1],x=p[m*4+2],S=p[m*4+3],w=(_-y)/g;for(let A=0;A<g;A++){const T=(m+A)*4;p[T]=y+w*A,p[T+1]=y+w*(A+1),p[T+2]=x,p[T+3]=S}}function h(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let m=d.flyweight;return m.data=this.data,m.index=p,m},splitAt(p){let m=new d;return m.data=this.data.splice(p*f.length),m}},d.flyweight=f.reduce((p,m,g,y)=>(Object.defineProperty(p,m,{get(){return this.data[this.index*f.length+g]},set(_){this.data[this.index*f.length+g]=_}}),p),{data:null,index:0}),{typeset:o,measure:a}}const $s=()=>(self.performance||Date).now(),tu=SS();let Dg;function YD(c,e,t,n,i,s,r,o,a,l,u=!0){return u?KD(c,e,t,n,i,s,r,o,a,l).then(null,h=>(Dg||(console.warn("WebGL SDF generation failed, falling back to JS",h),Dg=!0),Fg(c,e,t,n,i,s,r,o,a,l))):Fg(c,e,t,n,i,s,r,o,a,l)}const Jc=[],ZD=5;let Ud=0;function TS(){const c=$s();for(;Jc.length&&$s()-c<ZD;)Jc.shift()();Ud=Jc.length?setTimeout(TS,0):0}const KD=(...c)=>new Promise((e,t)=>{Jc.push(()=>{const n=$s();try{tu.webgl.generateIntoCanvas(...c),e({timing:$s()-n})}catch(i){t(i)}}),Ud||(Ud=setTimeout(TS,0))}),JD=4,QD=2e3,Lg={};let eL=0;function Fg(c,e,t,n,i,s,r,o,a,l){const u="TroikaTextSDFGenerator_JS_"+eL++%JD;let h=Lg[u];return h||(h=Lg[u]={workerModule:uo({name:u,workerId:u,dependencies:[SS,$s],init(d,f){const p=d().javascript.generate;return function(...m){const g=f();return{textureData:p(...m),timing:f()-g}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),h.requests++,clearTimeout(h.idleTimer),h.workerModule(c,e,t,n,i,s).then(({textureData:d,timing:f})=>{const p=$s(),m=new Uint8Array(d.length*4);for(let g=0;g<d.length;g++)m[g*4+l]=d[g];return tu.webglUtils.renderImageData(r,m,o,a,c,e,1<<3-l),f+=$s()-p,--h.requests===0&&(h.idleTimer=setTimeout(()=>{PD(u)},QD)),{timing:f}})}function tL(c){c._warm||(tu.webgl.isSupported(c),c._warm=!0)}const nL=tu.webglUtils.resizeWebGLCanvasWithoutClearing,Ir={defaultFontURL:null,unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048,useWorker:!0},iL=new He;function Dr(){return(self.performance||Date).now()}const Ig=Object.create(null);function sL(c,e){c=oL({},c);const t=Dr(),{defaultFontURL:n}=Ir,i=[];if(n&&i.push({label:"default",src:Bg(n)}),c.font&&i.push({label:"user",src:Bg(c.font)}),c.font=i,c.text=""+c.text,c.sdfGlyphSize=c.sdfGlyphSize||Ir.sdfGlyphSize,c.unicodeFontsURL=c.unicodeFontsURL||Ir.unicodeFontsURL,c.colorRanges!=null){let f={};for(let p in c.colorRanges)if(c.colorRanges.hasOwnProperty(p)){let m=c.colorRanges[p];typeof m!="number"&&(m=iL.set(m).getHex()),f[p]=m}c.colorRanges=f}Object.freeze(c);const{textureWidth:s,sdfExponent:r}=Ir,{sdfGlyphSize:o}=c,a=s/o*4;let l=Ig[o];if(!l){const f=document.createElement("canvas");f.width=s,f.height=o*256/a,l=Ig[o]={glyphCount:0,sdfGlyphSize:o,sdfCanvas:f,sdfTexture:new Ht(f,void 0,void 0,void 0,Kt,Kt),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,rL(l)}const{sdfTexture:u,sdfCanvas:h}=l;AS(c).then(f=>{const{glyphIds:p,glyphFontIndices:m,fontData:g,glyphPositions:y,fontSize:_,timings:x}=f,S=[],w=new Float32Array(p.length*4);let A=0,T=0;const M=Dr(),L=g.map(O=>{let te=l.glyphsByFont.get(O.src);return te||l.glyphsByFont.set(O.src,te=new Map),te});p.forEach((O,te)=>{const ie=m[te],{src:ge,unitsPerEm:be}=g[ie];let Y=L[ie].get(O);if(!Y){const{path:J,pathBounds:z}=f.glyphData[ge][O],ae=Math.max(z[2]-z[0],z[3]-z[1])/o*(Ir.sdfMargin*o+.5),Z=l.glyphCount++,re=[z[0]-ae,z[1]-ae,z[2]+ae,z[3]+ae];L[ie].set(O,Y={path:J,atlasIndex:Z,sdfViewBox:re}),S.push(Y)}const{sdfViewBox:$}=Y,E=y[T++],V=y[T++],G=_/be;w[A++]=E+$[0]*G,w[A++]=V+$[1]*G,w[A++]=E+$[2]*G,w[A++]=V+$[3]*G,p[te]=Y.atlasIndex}),x.quads=(x.quads||0)+(Dr()-M);const I=Dr();x.sdf={};const W=h.height,U=Math.ceil(l.glyphCount/a),k=Math.pow(2,Math.ceil(Math.log2(U*o)));k>W&&(console.info(`Increasing SDF texture size ${W}->${k}`),nL(h,s,k),u.dispose()),Promise.all(S.map(O=>wS(O,l,c.gpuAccelerateSDF).then(({timing:te})=>{x.sdf[O.atlasIndex]=te}))).then(()=>{S.length&&!l.contextLost&&(MS(l),u.needsUpdate=!0),x.sdfTotal=Dr()-I,x.total=Dr()-t,e(Object.freeze({parameters:c,sdfTexture:u,sdfGlyphSize:o,sdfExponent:r,glyphBounds:w,glyphAtlasIndices:p,glyphColors:f.glyphColors,caretPositions:f.caretPositions,chunkedBounds:f.chunkedBounds,ascender:f.ascender,descender:f.descender,lineHeight:f.lineHeight,capHeight:f.capHeight,xHeight:f.xHeight,topBaseline:f.topBaseline,blockBounds:f.blockBounds,visibleBounds:f.visibleBounds,timings:f.timings}))})}),Promise.resolve().then(()=>{l.contextLost||tL(h)})}function wS({path:c,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:n,sdfCanvas:i,contextLost:s},r){if(s)return Promise.resolve({timing:-1});const{textureWidth:o,sdfExponent:a}=Ir,l=Math.max(t[2]-t[0],t[3]-t[1]),u=Math.floor(e/4),h=u%(o/n)*n,d=Math.floor(u/(o/n))*n,f=e%4;return YD(n,n,c,t,l,a,i,h,d,f,r)}function rL(c){const e=c.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),c.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),c.contextLost=!1;const n=[];c.glyphsByFont.forEach(i=>{i.forEach(s=>{n.push(wS(s,c,!0))})}),Promise.all(n).then(()=>{MS(c),c.sdfTexture.needsUpdate=!0})})}function oL(c,e){for(let t in e)e.hasOwnProperty(t)&&(c[t]=e[t]);return c}let kc;function Bg(c){return kc||(kc=typeof document>"u"?{}:document.createElement("a")),kc.href=c,kc.href}function MS(c){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=c,{width:n,height:i}=e,s=c.sdfCanvas.getContext("webgl");let r=t.image.data;(!r||r.length!==n*i*4)&&(r=new Uint8Array(n*i*4),t.image={width:n,height:i,data:r},t.flipY=!1,t.isDataTexture=!0),s.readPixels(0,0,n,i,s.RGBA,s.UNSIGNED_BYTE,r)}}const aL=uo({name:"Typesetter",dependencies:[XD,jD,DD],init(c,e,t){return c(e,t())}}),AS=uo({name:"Typesetter",dependencies:[aL],init(c){return function(e){return new Promise(t=>{c.typeset(e,t)})}},getTransferables(c){const e=[];for(let t in c)c[t]&&c[t].buffer&&e.push(c[t].buffer);return e}});AS.onMainThread;const Og={};function cL(c){let e=Og[c];return e||(e=Og[c]=new oo(1,1,c,c).translate(.5,.5,0)),e}const lL="aTroikaGlyphBounds",Vg="aTroikaGlyphIndex",uL="aTroikaGlyphColor";class hL extends wT{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new _a,this.boundingBox=new tr}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=cL(e);["position","normal","uv"].forEach(n=>{this.attributes[n]=t.attributes[n].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,n,i,s){this.updateAttributeData(lL,e,4),this.updateAttributeData(Vg,t,1),this.updateAttributeData(uL,s,3),this._blockBounds=n,this._chunkedBounds=i,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:n}=this;if(t){const{PI:i,floor:s,min:r,max:o,sin:a,cos:l}=Math,u=i/2,h=i*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,m=s((f+u)/h)!==s((p+u)/h)?-d:r(a(f)*d,a(p)*d),g=s((f-u)/h)!==s((p-u)/h)?d:o(a(f)*d,a(p)*d),y=s((f+i)/h)!==s((p+i)/h)?d*2:o(d-l(f)*d,d-l(p)*d);n.min.set(m,e[1],t<0?-y:0),n.max.set(g,e[3],t<0?0:y)}else n.min.set(e[0],e[1],0),n.max.set(e[2],e[3],0);n.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(Vg).count,n=this._chunkedBounds;if(n)for(let i=n.length;i--;){t=n[i].end;let s=n[i].rect;if(s[1]<e.w&&s[3]>e.y&&s[0]<e.z&&s[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,n){const i=this.getAttribute(e);t?i&&i.array.length===t.length?(i.array.set(t),i.needsUpdate=!0):(this.setAttribute(e,new Nl(t,n)),delete this._maxInstanceCount,this.dispose()):i&&this.deleteAttribute(e)}}const dL=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,fL=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,pL=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,mL=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function gL(c){const e=Pd(c,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new he},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Ke(0,0,0,0)},uTroikaClipRect:{value:new Ke(0,0,0,0)},uTroikaEdgeOffset:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new he},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new He},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new dn},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:dL,vertexTransform:fL,fragmentDefs:pL,fragmentColorTransform:mL,customRewriter({vertexShader:t,fragmentShader:n}){let i=/\buniform\s+vec3\s+diffuse\b/;return i.test(n)&&(n=n.replace(i,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),i.test(t)||(t=t.replace(bS,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:n}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const hp=new Sa({color:16777215,side:ks,transparent:!0}),kg=8421504,zg=new $e,zc=new P,Dh=new P,Vo=[],vL=new P,Lh="+x+y";function Gg(c){return Array.isArray(c)?c[0]:c}let NS=()=>{const c=new Un(new oo(1,1),hp);return NS=()=>c,c},CS=()=>{const c=new Un(new oo(1,1,32,1),hp);return CS=()=>c,c};const yL={type:"syncstart"},xL={type:"synccomplete"},ES=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],_L=ES.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");class RS extends Un{constructor(){const e=new hL;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=kg,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=Lh,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(yL),sL({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const n=this._queuedSyncs;n&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{n.forEach(i=>i&&i())})),this.dispatchEvent(xL),e&&e()})))}onBeforeRender(e,t,n,i,s,r){this.sync(),s.isTroikaTextMaterial&&this._prepareForRender(s)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return gL(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=hp.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function n(){t.removeEventListener("dispose",n),e.dispose()})),this.hasOutline()){let n=e._outlineMtl;return n||(n=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),n.isTextOutlineMaterial=!0,n.depthWrite=!1,n.map=null,e.addEventListener("dispose",function i(){e.removeEventListener("dispose",i),n.dispose()})),[n,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}hasOutline(){return!!(this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY)}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return Gg(this.material).getDepthMaterial()}get customDistanceMaterial(){return Gg(this.material).getDistanceMaterial()}_prepareForRender(e){const t=e.isTextOutlineMaterial,n=e.uniforms,i=this.textRenderInfo;if(i){const{sdfTexture:o,blockBounds:a}=i;n.uTroikaSDFTexture.value=o,n.uTroikaSDFTextureSize.value.set(o.image.width,o.image.height),n.uTroikaSDFGlyphSize.value=i.sdfGlyphSize,n.uTroikaSDFExponent.value=i.sdfExponent,n.uTroikaTotalBounds.value.fromArray(a),n.uTroikaUseGlyphColors.value=!t&&!!i.glyphColors;let l=0,u=0,h=0,d,f,p,m=0,g=0;if(t){let{outlineWidth:_,outlineOffsetX:x,outlineOffsetY:S,outlineBlur:w,outlineOpacity:A}=this;l=this._parsePercent(_)||0,u=Math.max(0,this._parsePercent(w)||0),d=A,m=this._parsePercent(x)||0,g=this._parsePercent(S)||0}else h=Math.max(0,this._parsePercent(this.strokeWidth)||0),h&&(p=this.strokeColor,n.uTroikaStrokeColor.value.set(p??kg),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;n.uTroikaEdgeOffset.value=l,n.uTroikaPositionOffset.value.set(m,g),n.uTroikaBlurRadius.value=u,n.uTroikaStrokeWidth.value=h,n.uTroikaStrokeOpacity.value=f,n.uTroikaFillOpacity.value=d??1,n.uTroikaCurveRadius.value=this.curveRadius||0;let y=this.clipRect;if(y&&Array.isArray(y)&&y.length===4)n.uTroikaClipRect.value.fromArray(y);else{const _=(this.fontSize||.1)*100;n.uTroikaClipRect.value.set(a[0]-_,a[1]-_,a[2]+_,a[3]+_)}this.geometry.applyClipRect(n.uTroikaClipRect.value)}n.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const s=t?this.outlineColor||0:this.color;if(s==null)delete e.color;else{const o=e.hasOwnProperty("color")?e.color:e.color=new He;(s!==o._input||typeof s=="object")&&o.set(o._input=s)}let r=this.orientation||Lh;if(r!==e._orientation){let o=n.uTroikaOrient.value;r=r.replace(/[^-+xyz]/g,"");let a=r!==Lh&&r.match(/^([-+])([xyz])([-+])([xyz])$/);if(a){let[,l,u,h,d]=a;zc.set(0,0,0)[u]=l==="-"?1:-1,Dh.set(0,0,0)[d]=h==="-"?-1:1,zg.lookAt(vL,zc.cross(Dh),Dh),o.setFromMatrix4(zg)}else o.identity();e._orientation=r}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),n=t?parseFloat(t[1]):NaN;e=(isNaN(n)?0:n/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new he){t.copy(e);const n=this.curveRadius;return n&&(t.x=Math.atan2(e.x,Math.abs(n)-Math.abs(e.z))*Math.abs(n)),t}worldPositionToTextCoords(e,t=new he){return zc.copy(e),this.localPositionToTextCoords(this.worldToLocal(zc),t)}raycast(e,t){const{textRenderInfo:n,curveRadius:i}=this;if(n){const s=n.blockBounds,r=i?CS():NS(),o=r.geometry,{position:a,uv:l}=o.attributes;for(let u=0;u<l.count;u++){let h=s[0]+l.getX(u)*(s[2]-s[0]);const d=s[1]+l.getY(u)*(s[3]-s[1]);let f=0;i&&(f=i-Math.cos(h/i)*i,h=Math.sin(h/i)*i),a.setXYZ(u,h,d,f)}o.boundingSphere=this.geometry.boundingSphere,o.boundingBox=this.geometry.boundingBox,r.matrixWorld=this.matrixWorld,r.material.side=this.material.side,Vo.length=0,r.raycast(e,Vo);for(let u=0;u<Vo.length;u++)Vo[u].object=this,t.push(Vo[u])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,_L.forEach(n=>{this[n]=e[n]}),this}clone(){return new this.constructor().copy(this)}}ES.forEach(c=>{const e="_private_"+c;Object.defineProperty(RS.prototype,c,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new tr;new He;/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */v.BRDF_GGX;v.BRDF_Lambert;v.BasicShadowFilter;v.Break;v.Continue;v.DFGApprox;v.D_GGX;v.Discard;v.EPSILON;v.F_Schlick;v.Fn;v.INFINITY;v.If;v.Loop;v.NodeShaderStage;v.NodeType;v.NodeUpdateType;v.NodeAccess;v.PCFShadowFilter;v.PCFSoftShadowFilter;v.PI;v.PI2;v.Return;v.Schlick_to_F0;v.ScriptableNodeResources;v.ShaderNode;v.TBNViewMatrix;v.VSMShadowFilter;v.V_GGX_SmithCorrelated;v.abs;v.acesFilmicToneMapping;v.acos;const SL=v.add;v.addMethodChaining;v.addNodeElement;v.agxToneMapping;v.all;v.alphaT;v.and;v.anisotropy;v.anisotropyB;v.anisotropyT;v.any;v.append;v.arrayBuffer;v.asin;v.assign;v.atan;v.atan2;v.atomicAdd;v.atomicAnd;v.atomicFunc;v.atomicMax;v.atomicMin;v.atomicOr;v.atomicStore;v.atomicSub;v.atomicXor;v.attenuationColor;v.attenuationDistance;v.attribute;v.attributeArray;v.backgroundBlurriness;v.backgroundIntensity;v.backgroundRotation;v.batch;v.billboarding;v.bitAnd;v.bitNot;v.bitOr;v.bitXor;v.bitangentGeometry;v.bitangentLocal;v.bitangentView;v.bitangentWorld;v.bitcast;v.blendBurn;v.blendColor;v.blendDodge;v.blendOverlay;v.blendScreen;v.blur;v.bool;v.buffer;v.bufferAttribute;v.bumpMap;v.burn;v.bvec2;v.bvec3;v.bvec4;v.bypass;v.cache;v.call;v.cameraFar;v.cameraNear;v.cameraNormalMatrix;v.cameraPosition;v.cameraProjectionMatrix;v.cameraProjectionMatrixInverse;v.cameraViewMatrix;v.cameraWorldMatrix;v.cbrt;v.cdl;v.ceil;v.checker;v.cineonToneMapping;v.clamp;v.clearcoat;v.clearcoatRoughness;v.code;v.color;v.colorSpaceToWorking;v.colorToDirection;v.compute;v.cond;v.context;v.convert;v.convertColorSpace;v.convertToTexture;v.cos;v.cross;v.cubeTexture;v.dFdx;v.dFdy;v.dashSize;v.defaultBuildStages;v.defaultShaderStages;v.defined;v.degrees;v.deltaTime;v.densityFog;v.depth;v.depthPass;v.difference;v.diffuseColor;v.directPointLight;v.directionToColor;v.dispersion;v.distance;const bL=v.div;v.dodge;v.dot;v.drawIndex;v.dynamicBufferAttribute;v.element;v.emissive;v.equal;v.equals;v.equirectUV;v.exp;v.exp2;v.expression;v.faceDirection;v.faceForward;v.float;v.floor;v.fog;v.fract;v.frameGroup;v.frameId;v.frontFacing;v.fwidth;v.gain;v.gapSize;v.getConstNodeType;v.getCurrentStack;v.getDirection;v.getDistanceAttenuation;v.getGeometryRoughness;v.getNormalFromDepth;v.getParallaxCorrectNormal;v.getRoughness;v.getScreenPosition;v.getShIrradianceAt;v.getTextureIndex;v.getViewPosition;v.glsl;v.glslFn;v.grayscale;v.greaterThan;v.greaterThanEqual;v.hash;v.highPrecisionModelNormalViewMatrix;v.highPrecisionModelViewMatrix;v.hue;v.instance;v.instanceIndex;v.instancedArray;v.instancedBufferAttribute;v.instancedDynamicBufferAttribute;v.instancedMesh;v.int;v.inverseSqrt;v.invocationLocalIndex;v.invocationSubgroupIndex;v.ior;v.iridescence;v.iridescenceIOR;v.iridescenceThickness;v.ivec2;v.ivec3;v.ivec4;v.js;v.label;v.length;v.lengthSq;v.lessThan;v.lessThanEqual;v.lightPosition;v.lightTargetDirection;v.lightTargetPosition;v.lightViewPosition;v.lightingContext;v.lights;v.linearDepth;v.linearToneMapping;v.localId;v.log;v.log2;v.logarithmicDepthToViewZ;v.loop;v.luminance;v.mat2;v.mat3;v.mat4;v.matcapUV;v.materialAOMap;v.materialAlphaTest;v.materialAnisotropy;v.materialAnisotropyVector;v.materialAttenuationColor;v.materialAttenuationDistance;v.materialClearcoat;v.materialClearcoatNormal;v.materialClearcoatRoughness;v.materialColor;v.materialDispersion;v.materialEmissive;v.materialIOR;v.materialIridescence;v.materialIridescenceIOR;v.materialIridescenceThickness;v.materialLightMap;v.materialLineDashOffset;v.materialLineDashSize;v.materialLineGapSize;v.materialLineScale;v.materialLineWidth;v.materialMetalness;v.materialNormal;v.materialOpacity;v.materialPointWidth;v.materialReference;v.materialReflectivity;v.materialRefractionRatio;v.materialRotation;v.materialRoughness;v.materialSheen;v.materialSheenRoughness;v.materialShininess;v.materialSpecular;v.materialSpecularColor;v.materialSpecularIntensity;v.materialSpecularStrength;v.materialThickness;v.materialTransmission;v.max;v.maxMipLevel;v.metalness;v.min;const TL=v.mix;v.mixElement;v.mod;v.modInt;v.modelDirection;v.modelNormalMatrix;v.modelPosition;v.modelScale;v.modelViewMatrix;v.modelViewPosition;v.modelViewProjection;v.modelWorldMatrix;v.modelWorldMatrixInverse;v.morphReference;v.mrt;const Hg=v.mul;v.mx_aastep;v.mx_cell_noise_float;v.mx_contrast;v.mx_fractal_noise_float;v.mx_fractal_noise_vec2;v.mx_fractal_noise_vec3;v.mx_fractal_noise_vec4;v.mx_hsvtorgb;const Wg=v.mx_noise_float;v.mx_noise_vec3;v.mx_noise_vec4;v.mx_ramplr;v.mx_ramptb;v.mx_rgbtohsv;v.mx_safepower;v.mx_splitlr;v.mx_splittb;v.mx_srgb_texture_to_lin_rec709;v.mx_transform_uv;v.mx_worley_noise_float;v.mx_worley_noise_vec2;v.mx_worley_noise_vec3;v.negate;v.neutralToneMapping;v.nodeArray;v.nodeImmutable;v.nodeObject;v.nodeObjects;v.nodeProxy;v.normalFlat;v.normalGeometry;v.normalLocal;v.normalMap;v.normalView;v.normalWorld;v.normalize;v.not;v.notEqual;v.numWorkgroups;v.objectDirection;v.objectGroup;v.objectPosition;v.objectScale;v.objectViewPosition;v.objectWorldMatrix;v.oneMinus;v.or;v.orthographicDepthToViewZ;v.oscSawtooth;v.oscSine;v.oscSquare;v.oscTriangle;v.output;v.outputStruct;v.overlay;v.overloadingFn;v.parabola;v.parallaxDirection;v.parallaxUV;v.parameter;v.pass;v.passTexture;v.pcurve;v.perspectiveDepthToViewZ;v.pmremTexture;v.pointUV;v.pointWidth;v.positionGeometry;v.positionLocal;v.positionPrevious;v.positionView;v.positionViewDirection;v.positionWorld;v.positionWorldDirection;v.posterize;v.pow;v.pow2;v.pow3;v.pow4;v.property;v.radians;v.rand;v.range;v.rangeFog;v.reciprocal;v.reference;v.referenceBuffer;v.reflect;v.reflectVector;v.reflectView;v.reflector;v.refract;v.refractVector;v.refractView;v.reinhardToneMapping;v.remainder;v.remap;v.remapClamp;v.renderGroup;v.renderOutput;v.rendererReference;v.rotate;v.rotateUV;v.roughness;v.round;v.rtt;v.sRGBTransferEOTF;v.sRGBTransferOETF;v.sampler;v.saturate;v.saturation;v.screen;v.screenCoordinate;v.screenSize;v.screenUV;v.scriptable;v.scriptableValue;v.select;v.setCurrentStack;v.shaderStages;v.shadow;v.sharedUniformGroup;v.sheen;v.sheenRoughness;v.shiftLeft;v.shiftRight;v.shininess;v.sign;v.sin;v.sinc;v.skinning;v.skinningReference;v.smoothstep;v.smoothstepElement;v.specularColor;v.specularF90;v.spherizeUV;v.split;v.spritesheetUV;v.sqrt;v.stack;v.step;v.storage;v.storageBarrier;v.storageObject;v.storageTexture;v.string;v.sub;v.subgroupIndex;v.subgroupSize;v.tan;v.tangentGeometry;v.tangentLocal;v.tangentView;v.tangentWorld;v.temp;const wL=v.texture;v.texture3D;v.textureBarrier;v.textureBicubic;v.textureCubeUV;v.textureLoad;v.textureSize;v.textureStore;v.thickness;v.threshold;v.time;v.timerDelta;v.timerGlobal;v.timerLocal;v.toOutputColorSpace;v.toWorkingColorSpace;v.toneMapping;v.toneMappingExposure;v.toonOutlinePass;v.transformDirection;v.transformNormal;v.transformNormalToView;v.transformedBentNormalView;v.transformedBitangentView;v.transformedBitangentWorld;v.transformedClearcoatNormalView;v.transformedNormalView;v.transformedNormalWorld;v.transformedTangentView;v.transformedTangentWorld;v.transmission;v.transpose;v.tri;v.tri3;v.triNoise3D;v.triplanarTexture;v.triplanarTextures;v.trunc;v.tslFn;v.uint;v.uniform;v.uniformArray;v.uniformGroup;v.uniforms;v.userData;const ML=v.uv;v.uvec2;v.uvec3;v.uvec4;v.varying;v.varyingProperty;v.vec2;const Dd=v.vec3;v.vec4;v.vectorComponents;v.velocity;v.vertexColor;v.vertexIndex;v.vibrance;v.viewZToLogarithmicDepth;v.viewZToOrthographicDepth;v.viewZToPerspectiveDepth;v.viewport;v.viewportBottomLeft;v.viewportCoordinate;v.viewportDepthTexture;v.viewportLinearDepth;v.viewportMipTexture;v.viewportResolution;v.viewportSafeUV;v.viewportSharedTexture;v.viewportSize;v.viewportTexture;v.viewportTopLeft;v.viewportUV;v.wgsl;v.wgslFn;v.workgroupArray;v.workgroupBarrier;v.workgroupId;v.workingToColorSpace;v.xor;function AL(c){const e=c.replace("#","0x"),t=e>>16&255,n=e>>8&255,i=e&255;return[t,n,i]}function NL(c){return Dd(c[0]/255,c[1]/255,c[2]/255)}function dp(c){return NL(AL(c))}let PS=["#FF3399","#FF66FF","#33FFCC","#FF9933","#FF3366","#66FFFF","#FFCC00","#9966FF"];PS=["#FF66B2","#FF99FF","#66FFD9","#FFB366","#FF6699","#99FFFF","#FFD633","#B399FF"];const Qs=PS;class fp extends Xl{constructor(e,t){super();const i=new mT().load("./images/noise.png");i.wrapS=gs,i.wrapT=gs,i.encoding=void 0;const s=ML();let o=Wg(s);for(let u=t;u>0;u-=1){const h=Wg(Hg(s,Dd(t/u)));o=SL(o,h)}const a=Hg(o,.8),l=TL(e,Dd(.5,.1,.1),a);wL(i,bL(s,1)),this.colorNode=l,this.roughnessNode=1,this.metalnessNode=0}}class US extends Un{constructor(e,t,n,i,s,r,o){super(),this.text=e,this.font=t,this.size=n,this.geometry=new lA(e.replaceAll("b","B"),{font:t,size:n,depth:10,curveSegments:50,bevelEnabled:!1}),this.geometry.computeBoundingBox();const a=-.5*(this.geometry.boundingBox.max.x-this.geometry.boundingBox.min.x);this.geometry.translate(a,0,0),this.geometry.computeVertexNormals();const l=Math.floor(Math.random()*Qs.length),u=Qs[l];console.log(u),this.material=o??new Kd({color:`${u}`}),this.position.x=i??0,this.position.y=s??0,this.position.z=r??0}getEdgesGeometry(e){const t=new F1(this.geometry),n=new x1(t,new Cl({color:e??16777215,linewidth:10}));return n.position.x=this.position.x,n.position.y=this.position.y,n.position.z=this.position.z,n}}class CL extends Rv{constructor(e,t,n,i,s,r,o,a){super(),console.log("Formatting message ",e," with font size ",n);const l=this.convertWorldToNDCCoords(i,s,r,o),u=this.convertNDCToScreenCoords(l.x,l.y,l.z,o),h=new US(e,t,n,u.x,u.y,u.z,a);console.log(h),this.add(h),this.mesh=h}convertNDCToScreenCoords(e,t,n,i){const s=new P(e,t,n);s.unproject(i);const r=s.sub(i.position).normalize(),o=-i.position.z/r.z;return i.position.clone().add(r.multiplyScalar(o))}convertWorldToNDCCoords(e,t,n,i){const s=new P(e,t,n);return s.project(i),s.y=1-s.y,s.y=s.y*2-1,s}}class EL{constructor(e,t,n){this.text=e,this.width=t,this.height=n}formatText(e,t){let n=1,i=t,s={lines:[],fontSize:0,screenCoords:[]};for(;n<=i;){let r=Math.floor((n+i)/2),{lines:o,totalHeight:a,screenCoords:l}=this.getLinesForFontSize(e,r);a<=this.height?(s={lines:o,fontSize:r,screenCoords:l},n=r+1):i=r-1}return s}getLinesForFontSize(e,t){let n=[],i=[],s=this.text.split(" "),r="",o=t+this.getLineHeightAdjustment(r,e,t);for(let l of s){let u=r+l+" ";this.measureText(u,e,t).width>this.width&&r!==""?(n.push(r.trim()),i.push({x:0,y:o}),r=l+" ",o+=t+this.getLineHeightAdjustment(u,e,t)):r=u}n.push(r.trim()),i.push({x:0,y:o});let a=n.length*(t+this.getLineHeightAdjustment(r,e,t));return{lines:n,totalHeight:a,screenCoords:i}}measureText(e,t,n){const s=document.createElement("canvas").getContext("2d");return s.font=`${n}px Barriecito`,s.measureText(e)}getLineHeightAdjustment(e,t,n){const s=document.createElement("canvas").getContext("2d");s.font=`${n}px Barriecito`;const r=s.measureText(e),o=r.actualBoundingBoxAscent||n*.8,a=r.actualBoundingBoxDescent||n*.2;return o+a-n}}function Ld(c){return c[Math.floor(Math.random()*c.length)]}class RL{constructor(e){this.lines=[],this.currentIndex=0,this.filePath=e,this.running=!1,this.isLoaded=!1}loadJson(){return new Promise((e,t)=>{new ad().load("fonts/Barriecito_Regular.json",i=>{this.font=i,new rd().load(this.filePath,(function(r){this.lines=JSON.parse(r),console.log("loaded script: ",this.lines),console.log("script has ",this.lines.length," lines"),this.isLoaded=!0,e()}).bind(this))})})}loadText(){return new Promise((e,t)=>{new ad().load("fonts/Barriecito_Regular.json",i=>{this.font=i,new rd().load(this.filePath,(function(r){this.lines=r.split(`
`).map(o=>o.trim()).map(o=>o.length>0?o:"").map(o=>parseLine(o)),console.log("loaded script: ",this.lines),console.log("script has ",this.lines.length," lines"),this.isLoaded=!0,e()}).bind(this))})})}parseLine(e){let t=e.split(":");if(t.length<=1)return{content:e,duration:1};t[0],t[1],t.length>2&&t[2]}getLines(){return this.lines}getCurrentLine(){return this.lines[this.currentIndex]}nextLine(){this.currentIndex+=1}run(e,t,n){return new Promise(async(i,s)=>{this.isLoaded==!1&&await this.loadJson(),this.runScript(e,t,n).then(()=>{i()})})}runScript(e,t,n){return new Promise((i,s)=>{this.currentIndex>=this.lines.length&&i(),console.log("Running script"),this.running=!0,console.log("Current line: ",this.getCurrentLine());const r=this.getCurrentLine();this.animate(r,e,t,n).then(()=>{document.body.style.backgroundColor=Ld(Qs),this.nextLine(),this.runScript(e,t,n).then(()=>{i()})})})}async animate(e,t,n,i){return new Promise((s,r)=>{console.log("Animating line: ",e);let o=[];console.log("Adding text to scene ",e);const a=new EL(e.content,n.width*1/2,n.height*1/2),{lines:l,fontSize:u,screenCoords:h}=a.formatText(this.font,300);console.log("Formatted lines: font size",u),console.log("Formatted lines: ",l),console.log("Formatted lines: ",h);let d=Ld(Qs),f=new fp(dp(d),100);l.forEach((x,S)=>{console.log("Adding line ",S,x);const w=h[S];let A=new CL(x,this.font,u,w.x,w.y,0,i,f);const T=A.id;t.add(A),o.push(T);const M=A.mesh.getEdgesGeometry();t.add(M),o.push(M.id)});const p=e.duration??1;let m=(Math.random()*2-1)*100+40,g=0,y=Math.random()*2;const _=new P(m,g,y);i.pan(_,p),this.drawMedia(e.media??[]),setTimeout(()=>{for(let x=0;x<o.length;x++){const S=t.getObjectById(o[x]);t.remove(S),S.children.forEach(w=>{t.remove(w),w.geometry.dispose(),w.material.dispose()})}s()},1e3*p)})}async drawMedia(e){const t=document.querySelector(".media-container");t.innerHTML="",e.sort((n,i)=>Math.random()).forEach(n=>{if(console.log(n),n.endsWith("jpg")||n.endsWith("jpeg")||n.endsWith("png")){let i=document.createElement("img");i.src=`./images/${n}`,t.appendChild(i)}if(n.endsWith("mp4")){let i=document.createElement("video");i.src=`./images/${n}`,i.autoplay=!0,i.volume=0,i.loop=!0,t.appendChild(i)}})}}class PL extends oi{constructor(e,t,n,i){super(e,t,n,i),this.lookAtPos=new P(0,0,0)}setPosition(e,t,n){this.position.set(e,t,n)}lerp(e,t,n){const i=e.lerp(t,n);this.lookAt(i.x,i.y,i.z)}pan(e,t){let n=0,i=this.lookAtPos.clone(),s=setInterval(()=>{this.lerp(i,e,n),n+=1/(60*t),n>=1&&(clearInterval(s),this.lookAtPos=e)},1e3*t/60)}}class qg extends Rv{constructor(){super(),this.isLoaded=!1,this.items=[{text:"opheliagame",link:"/"},{text:"code",link:"/notes-garden"},{text:"projects",link:"/notes-garden/projects"},{text:"poems",link:"/notes-garden/poems"},{text:"tools",link:"/notes-garden"},{text:"community",link:"/notes-garden"},{text:"archives",link:"/notes-garden"},{text:"software",link:"/notes-garden"}]}async load(){return console.log("Loading scene 2"),new Promise((e,t)=>{new ad().load("fonts/Barriecito_Regular.json",i=>{this.font=i,this.isLoaded=!0,console.log("making words");let s=window.innerWidth>1e3?-200:0,r=500;for(let o of this.items){const a=Ld(Qs),l=new fp(dp(a),100),u=new US(o.text,i,100,0,0,0,l);u.position.x=s,u.position.y=r,u.position.z=10,u.userData=o,this.add(u),window.innerWidth>1e3&&(s+=100),r-=150}e()})})}async run(e,t,n){return await this.load(),new Promise((i,s)=>{console.log("Running scene 2"),e.add(this),i()})}}class UL{constructor(e,t,n){this.threeScene=e,this.sizes=t,this.camera=n,window.isVisited==!0?this.scenes=[new qg]:this.scenes=[new RL("script.json","https://opheliagame.github.io/work-images/"),new qg],this.currentSceneIndex=0}playLinear(){console.log(this.scenes.length),console.log(this.currentSceneIndex),!(this.currentSceneIndex>=this.scenes.length)&&(console.log("playing scene ",this.currentSceneIndex),this.scenes[this.currentSceneIndex].run(this.threeScene,this.sizes,this.camera).then(()=>{console.log("next scene"),this.nextSceneLinear(),this.playLinear()}))}nextSceneLinear(){this.currentSceneIndex+=1}}class DL{constructor(e){this.clock=new MT,this.scene=new qd,this.sizes={width:window.innerWidth,height:window.innerHeight},this.camera=new PL(75,this.sizes.width/this.sizes.height,.1,2e3),this.camera.setPosition(0,0,1e3),this.camera.lookAt(0,0,0),this.scene.add(this.camera),this.uniforms={time:{value:1}};const t=new zv(16777215,2);this.scene.add(t);const n=new kv(16777215,.6);n.position.set(0,0,100),this.scene.add(n),this.sceneSequencer=new UL(this.scene,this.sizes,this.camera),this.sceneSequencer.playLinear(),this.renderer=new AD({canvas:e,antialias:!0}),this.renderer.setSize(this.sizes.width,this.sizes.height),this.renderer.outputColorSpace=void 0,this.raycaster=new NT,this.pointer=new he,this.intersected=null,this.currentLink=null,document.onpointermove=this.onPointerMove.bind(this),window.onresize=this.onWindowResize.bind(this),document.querySelector("canvas").onclick=this.onClick.bind(this)}debug(){const e=new ro(600,600,10),t=document.createElement("video");t.src="./images/20200624-movement-study.mp4",t.loop=!0,t.muted=!0,t.autoplay=!0,t.play(),console.log(t);const n=new S1(t),i=new Sa({map:n}),s=new Un(e,i);this.scene.add(s),s.position.x=0,s.position.y=0,s.position.z=0}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight),this.sizes.width=window.innerWidth,this.sizes.height=window.innerHeight,console.log("Resizing to ",this.sizes.width,this.sizes.height)}onPointerMove(e){this.pointer.x=e.clientX/window.innerWidth*2-1,this.pointer.y=-(e.clientY/window.innerHeight)*2+1}onClick(e){console.log(`navigating to: ${this.currentLink}`),window.location=this.currentLink}animate(){requestAnimationFrame(()=>{this.animate()});const e=this.clock.getElapsedTime();if(this.uniforms.time.value=e,this.scene.traverse(t=>{t.render&&t.render(e)}),window.isVisited==!0){let t=document.querySelector("canvas");t.style.pointerEvents="auto",this.raycaster.setFromCamera(this.pointer,this.camera);const n=this.scene.children.length<4?this.scene.children:this.scene.children[3].children,i=this.raycaster.intersectObjects(n,!1);i.length>0?(t.style.cursor="pointer",this.intersected!=i[0].object&&(this.intersected=i[0].object,this.currentLink=i[0].object.userData.link)):(this.intersected=null,this.currentLink=null,t.style.cursor="default")}this.render()}render(){this.renderer.renderAsync(this.scene,this.camera)}addBackground(){const e=Math.floor(Math.random()*Qs.length),t=dp(Qs[e]),n=new oo(40,40),i=new Un(n,new fp(t,50));i.position.z=-1,this.scene.add(i)}addObjectsWithTroika(){const e=new RS;this.scene.add(e),e.text="Anushka Trivedi",e.fontSize=.4,e.position.y=0,e.position.x=0,e.position.z=0,e.textAlign="center";let t=this.makeShader();e.material=new Xl({colorNode:t({scale:2.5,rings:4.5,length:1,angle:0,fibers:.3,fibersDensity:10,color:new He(15182336),background:new He(11163904),seed:0})}),e.sync()}makeShader(){var e=Fn(t=>{var n=radians(t.angle).toVar(),i=vec3(sub(positionLocal.x.mul(cos(n)),positionLocal.y.mul(sin(n))),add(positionLocal.x.mul(sin(n)),positionLocal.y.mul(cos(n))),positionLocal.z).toVar(),s=i.mul(exp(t.scale.sub(3)).mul(vec3(reciprocal(t.length),4,reciprocal(t.length)))).add(t.seed).toVar(),r=s.x.add(1).mul(10).mul(t.rings);r=r.add(r.cos()).cos().add(1).div(2);var o=float(0).toVar(),a=float(0).toVar(),l=exp(t.scale.sub(2)).mul(vec3(1,t.fibersDensity,1)).toVar(),u=float(2).toVar();return Loop(10,()=>{a.addAssign(u),l.mulAssign(1.8),u.mulAssign(.6)}),o.assign(mul(o,5).div(a).mul(10).sin().add(1).div(2)),mix(t.color,t.background,mix(r,o,t.fibers))});return e.defaults={$name:"Wood",scale:2.5,rings:4.5,length:1,angle:0,fibers:.3,fibersDensity:10,color:new He(.8,.4,0),background:new He(.4,.1,0),seed:0},e}}function LL(){const c=document.querySelector("canvas.webgl");new DL(c).animate()}LL();
