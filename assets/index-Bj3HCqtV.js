(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Rl="171",Yr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},zr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},jb=0,$b=1,Xb=2,Yb=0,Zb=1,tc=3,no=0,qn=1,Ws=2,Ks=0,vs=1,rl=2,ol=3,al=4,ev=5,hs=100,tv=101,nv=102,Kb=103,Qb=104,iv=200,sv=201,rv=202,ov=203,cl=204,ll=205,av=206,cv=207,lv=208,uv=209,hv=210,dv=0,fv=1,pv=2,ul=3,mv=4,gv=5,vv=6,_v=7,Pl=0,Jb=1,eS=2,Zr=0,tS=1,nS=2,iS=3,sS=4,rS=6,oS=7,zd=300,Qs=301,io=302,Sa=303,Ta=304,Gh=306,ys=1e3,ms=1001,so=1002,Wt=1003,Hh=1004,Kr=1005,Jt=1006,Wh=1007,ki=1008,aS=1008,_s=1009,$o=1010,Xo=1011,Gr=1012,dn=1013,Zt=1014,Un=1015,ni=1016,cS=1017,lS=1018,Ma=1020,yv=35902,uS=1021,Gd=1022,Js=1023,hS=1024,dS=1025,qs=1026,ro=1027,Hd=1028,Wd=1029,ca=1030,qd=1031,fS=1032,jd=1033,Cu=33776,Xc=33777,Yc=33778,Zc=33779,Wp=35840,qp=35841,jp=35842,$p=35843,Xp=36196,qh=37492,jh=37496,$h=37808,Xh=37809,Yh=37810,Zh=37811,Kh=37812,Qh=37813,Jh=37814,ed=37815,td=37816,nd=37817,id=37818,sd=37819,rd=37820,od=37821,Eu=36492,pS=36283,Yp=36284,Zp=36285,Kp=36286,mS=3200,gS=3201,xs=0,vS=1,er="",Re="srgb",zi="srgb-linear",Qp="linear",Yo="srgb",_S=0,Os=7680,yS=7681,xS=7682,bS=7683,SS=34055,TS=34056,MS=5386,wS=512,AS=513,NS=514,CS=515,ES=516,RS=517,PS=518,ad=519,xv=512,$d=513,bv=514,Sv=515,Tv=516,Mv=517,wv=518,Av=519,hl=35044,Hr=35048,ei=2e3,qi=2001;class Ts{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}}const nn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Jp=1234567;const Qr=Math.PI/180,la=180/Math.PI;function fi(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(nn[o&255]+nn[o>>8&255]+nn[o>>16&255]+nn[o>>24&255]+"-"+nn[e&255]+nn[e>>8&255]+"-"+nn[e>>16&15|64]+nn[e>>24&255]+"-"+nn[t&63|128]+nn[t>>8&255]+"-"+nn[t>>16&255]+nn[t>>24&255]+nn[n&255]+nn[n>>8&255]+nn[n>>16&255]+nn[n>>24&255]).toLowerCase()}function Ge(o,e,t){return Math.max(e,Math.min(t,o))}function Xd(o,e){return(o%e+e)%e}function DS(o,e,t,n,i){return n+(o-e)*(i-n)/(t-e)}function US(o,e,t){return o!==e?(t-o)/(e-o):0}function Zo(o,e,t){return(1-t)*o+t*e}function LS(o,e,t,n){return Zo(o,e,1-Math.exp(-t*n))}function FS(o,e=1){return e-Math.abs(Xd(o,e*2)-e)}function IS(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function BS(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function OS(o,e){return o+Math.floor(Math.random()*(e-o+1))}function VS(o,e){return o+Math.random()*(e-o)}function kS(o){return o*(.5-Math.random())}function zS(o){o!==void 0&&(Jp=o);let e=Jp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function GS(o){return o*Qr}function HS(o){return o*la}function WS(o){return(o&o-1)===0&&o!==0}function qS(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function jS(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function $S(o,e,t,n,i){const s=Math.cos,r=Math.sin,a=s(t/2),c=r(t/2),l=s((e+n)/2),u=r((e+n)/2),h=s((e-n)/2),d=r((e-n)/2),f=s((n-e)/2),p=r((n-e)/2);switch(i){case"XYX":o.set(a*u,c*h,c*d,a*l);break;case"YZY":o.set(c*d,a*u,c*h,a*l);break;case"ZXZ":o.set(c*h,c*d,a*u,a*l);break;case"XZX":o.set(a*u,c*p,c*f,a*l);break;case"YXY":o.set(c*f,a*u,c*p,a*l);break;case"ZYZ":o.set(c*p,c*f,a*u,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function fn(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function ze(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}const Yd={DEG2RAD:Qr,RAD2DEG:la,generateUUID:fi,clamp:Ge,euclideanModulo:Xd,mapLinear:DS,inverseLerp:US,lerp:Zo,damp:LS,pingpong:FS,smoothstep:IS,smootherstep:BS,randInt:OS,randFloat:VS,randFloatSpread:kS,seededRandom:zS,degToRad:GS,radToDeg:HS,isPowerOfTwo:WS,ceilPowerOfTwo:qS,floorPowerOfTwo:jS,setQuaternionFromProperEuler:$S,normalize:ze,denormalize:fn};class le{constructor(e=0,t=0){le.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Ge(this.x,e.x,t.x),this.y=Ge(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Ge(this.x,e,t),this.y=Ge(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Ge(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ge(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pn{constructor(e,t,n,i,s,r,a,c,l){pn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,a,c,l)}set(e,t,n,i,s,r,a,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=c,u[6]=n,u[7]=r,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],m=i[0],g=i[3],_=i[6],x=i[1],y=i[4],b=i[7],M=i[2],N=i[5],T=i[8];return s[0]=r*m+a*x+c*M,s[3]=r*g+a*y+c*N,s[6]=r*_+a*b+c*T,s[1]=l*m+u*x+h*M,s[4]=l*g+u*y+h*N,s[7]=l*_+u*b+h*T,s[2]=d*m+f*x+p*M,s[5]=d*g+f*y+p*N,s[8]=d*_+f*b+p*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*r*u-t*a*l-n*s*u+n*a*c+i*s*l-i*r*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*r-a*l,d=a*c-u*s,f=l*s-r*c,p=t*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*l-u*n)*m,e[2]=(a*n-i*r)*m,e[3]=d*m,e[4]=(u*t-i*c)*m,e[5]=(i*s-a*t)*m,e[6]=f*m,e[7]=(n*c-l*t)*m,e[8]=(r*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,a){const c=Math.cos(s),l=Math.sin(s);return this.set(n*c,n*l,-n*(c*r+l*a)+r+e,-i*l,i*c,-i*(-l*r+c*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Ru.makeScale(e,t)),this}rotate(e){return this.premultiply(Ru.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ru.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Ru=new pn;function XS(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function dl(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function YS(){const o=dl("canvas");return o.style.display="block",o}const em={};function ZS(o){o in em||(em[o]=!0,console.warn(o))}const tm=new pn().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),nm=new pn().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function KS(){const o={enabled:!0,workingColorSpace:zi,spaces:{},convert:function(i,s,r){return this.enabled===!1||s===r||!s||!r||(this.spaces[s].transfer===Yo&&(i.r=Gi(i.r),i.g=Gi(i.g),i.b=Gi(i.b)),this.spaces[s].primaries!==this.spaces[r].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===Yo&&(i.r=Jr(i.r),i.g=Jr(i.g),i.b=Jr(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===er?Qp:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,r){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return o.define({[zi]:{primaries:e,whitePoint:n,transfer:Qp,toXYZ:tm,fromXYZ:nm,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Re},outputColorSpaceConfig:{drawingBufferColorSpace:Re}},[Re]:{primaries:e,whitePoint:n,transfer:Yo,toXYZ:tm,fromXYZ:nm,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Re}}}),o}const Ct=KS();function Gi(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function Jr(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}let _r;class QS{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{_r===void 0&&(_r=dl("canvas")),_r.width=e.width,_r.height=e.height;const n=_r.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=_r}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=dl("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=Gi(s[r]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Gi(t[n]/255)*255):t[n]=Gi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let JS=0;class Nv{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:JS++}),this.uuid=fi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let r=0,a=i.length;r<a;r++)i[r].isDataTexture?s.push(Pu(i[r].image)):s.push(Pu(i[r]))}else s=Pu(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Pu(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?QS.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let eT=0;class qt extends Ts{constructor(e=qt.DEFAULT_IMAGE,t=qt.DEFAULT_MAPPING,n=ms,i=ms,s=Jt,r=ki,a=Js,c=_s,l=qt.DEFAULT_ANISOTROPY,u=er){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:eT++}),this.uuid=fi(),this.name="",this.source=new Nv(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==zd)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ys:e.x=e.x-Math.floor(e.x);break;case ms:e.x=e.x<0?0:1;break;case so:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ys:e.y=e.y-Math.floor(e.y);break;case ms:e.y=e.y<0?0:1;break;case so:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}qt.DEFAULT_IMAGE=null;qt.DEFAULT_MAPPING=zd;qt.DEFAULT_ANISOTROPY=1;class Ke{constructor(e=0,t=0,n=0,i=1){Ke.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,l=c[0],u=c[4],h=c[8],d=c[1],f=c[5],p=c[9],m=c[2],g=c[6],_=c[10];if(Math.abs(u-d)<.01&&Math.abs(h-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+m)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(l+1)/2,b=(f+1)/2,M=(_+1)/2,N=(u+d)/4,T=(h+m)/4,w=(p+g)/4;return y>b&&y>M?y<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(y),i=N/n,s=T/n):b>M?b<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(b),n=N/i,s=w/i):M<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(M),n=T/s,i=w/s),this.set(n,i,s,t),this}let x=Math.sqrt((g-p)*(g-p)+(h-m)*(h-m)+(d-u)*(d-u));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(h-m)/x,this.z=(d-u)/x,this.w=Math.acos((l+f+_-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Ge(this.x,e.x,t.x),this.y=Ge(this.y,e.y,t.y),this.z=Ge(this.z,e.z,t.z),this.w=Ge(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Ge(this.x,e,t),this.y=Ge(this.y,e,t),this.z=Ge(this.z,e,t),this.w=Ge(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Ge(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ms extends Ts{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ke(0,0,e,t),this.scissorTest=!1,this.viewport=new Ke(0,0,e,t);const i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Jt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new qt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const r=n.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Nv(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class tT extends Ms{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class nT extends qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Wt,this.minFilter=Wt,this.wrapR=ms,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class tr{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,r,a){let c=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3];const d=s[r+0],f=s[r+1],p=s[r+2],m=s[r+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(h!==m||c!==d||l!==f||u!==p){let g=1-a;const _=c*d+l*f+u*p+h*m,x=_>=0?1:-1,y=1-_*_;if(y>Number.EPSILON){const M=Math.sqrt(y),N=Math.atan2(M,_*x);g=Math.sin(g*N)/M,a=Math.sin(a*N)/M}const b=a*x;if(c=c*g+d*b,l=l*g+f*b,u=u*g+p*b,h=h*g+m*b,g===1-a){const M=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=M,l*=M,u*=M,h*=M}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,r){const a=n[i],c=n[i+1],l=n[i+2],u=n[i+3],h=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=a*p+u*h+c*f-l*d,e[t+1]=c*p+u*d+l*h-a*f,e[t+2]=l*p+u*f+a*d-c*h,e[t+3]=u*p-a*h-c*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,r=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(i/2),h=a(s/2),d=c(n/2),f=c(i/2),p=c(s/2);switch(r){case"XYZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h+d*f*p;break;case"YZX":this._x=d*u*h+l*f*p,this._y=l*f*h+d*u*p,this._z=l*u*p-d*f*h,this._w=l*u*h-d*f*p;break;case"XZY":this._x=d*u*h-l*f*p,this._y=l*f*h-d*u*p,this._z=l*u*p+d*f*h,this._w=l*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-c)*f,this._y=(s-l)*f,this._z=(r-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-c)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(s+l)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(s-l)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(c+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(r-i)/f,this._x=(s+l)/f,this._y=(c+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ge(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,r=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+r*a+i*l-s*c,this._y=i*u+r*c+s*a-n*l,this._z=s*u+r*l+n*c-i*a,this._w=r*u-n*a-i*c-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,r=this._w;let a=r*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const l=Math.sqrt(c),u=Math.atan2(l,a),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=r*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class C{constructor(e=0,t=0,n=0){C.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(im.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(im.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,a=e.z,c=e.w,l=2*(r*i-a*n),u=2*(a*t-s*i),h=2*(s*n-r*t);return this.x=t+c*l+r*h-a*u,this.y=n+c*u+a*l-s*h,this.z=i+c*h+s*u-r*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Ge(this.x,e.x,t.x),this.y=Ge(this.y,e.y,t.y),this.z=Ge(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Ge(this.x,e,t),this.y=Ge(this.y,e,t),this.z=Ge(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Ge(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,r=t.x,a=t.y,c=t.z;return this.x=i*c-s*a,this.y=s*r-n*c,this.z=n*a-i*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Du.copy(this).projectOnVector(e),this.sub(Du)}reflect(e){return this.sub(Du.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ge(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Du=new C,im=new tr;class rr{constructor(e=new C(1/0,1/0,1/0),t=new C(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Kn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Kn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Kn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)e.isMesh===!0?e.getVertexPosition(r,Kn):Kn.fromBufferAttribute(s,r),Kn.applyMatrix4(e.matrixWorld),this.expandByPoint(Kn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),nc.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),nc.copy(n.boundingBox)),nc.applyMatrix4(e.matrixWorld),this.union(nc)}const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Kn),Kn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Co),ic.subVectors(this.max,Co),yr.subVectors(e.a,Co),xr.subVectors(e.b,Co),br.subVectors(e.c,Co),ns.subVectors(xr,yr),is.subVectors(br,xr),Es.subVectors(yr,br);let t=[0,-ns.z,ns.y,0,-is.z,is.y,0,-Es.z,Es.y,ns.z,0,-ns.x,is.z,0,-is.x,Es.z,0,-Es.x,-ns.y,ns.x,0,-is.y,is.x,0,-Es.y,Es.x,0];return!Uu(t,yr,xr,br,ic)||(t=[1,0,0,0,1,0,0,0,1],!Uu(t,yr,xr,br,ic))?!1:(sc.crossVectors(ns,is),t=[sc.x,sc.y,sc.z],Uu(t,yr,xr,br,ic))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Kn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Kn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ci[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ci[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ci[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ci[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ci[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ci[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ci[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ci[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ci),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ci=[new C,new C,new C,new C,new C,new C,new C,new C],Kn=new C,nc=new rr,yr=new C,xr=new C,br=new C,ns=new C,is=new C,Es=new C,Co=new C,ic=new C,sc=new C,Rs=new C;function Uu(o,e,t,n,i){for(let s=0,r=o.length-3;s<=r;s+=3){Rs.fromArray(o,s);const a=i.x*Math.abs(Rs.x)+i.y*Math.abs(Rs.y)+i.z*Math.abs(Rs.z),c=e.dot(Rs),l=t.dot(Rs),u=n.dot(Rs);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const iT=new rr,Eo=new C,Lu=new C;class wa{constructor(e=new C,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):iT.setFromPoints(e).getCenter(n);let i=0;for(let s=0,r=e.length;s<r;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Eo.subVectors(e,this.center);const t=Eo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Eo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Lu.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Eo.copy(e.center).add(Lu)),this.expandByPoint(Eo.copy(e.center).sub(Lu))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ei=new C,Fu=new C,rc=new C,ss=new C,Iu=new C,oc=new C,Bu=new C;class Zd{constructor(e=new C,t=new C(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ei)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ei.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ei.copy(this.origin).addScaledVector(this.direction,t),Ei.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Fu.copy(e).add(t).multiplyScalar(.5),rc.copy(t).sub(e).normalize(),ss.copy(this.origin).sub(Fu);const s=e.distanceTo(t)*.5,r=-this.direction.dot(rc),a=ss.dot(this.direction),c=-ss.dot(rc),l=ss.lengthSq(),u=Math.abs(1-r*r);let h,d,f,p;if(u>0)if(h=r*c-a,d=r*a-c,p=s*u,h>=0)if(d>=-p)if(d<=p){const m=1/u;h*=m,d*=m,f=h*(h+r*d+2*a)+d*(r*h+d+2*c)+l}else d=s,h=Math.max(0,-(r*d+a)),f=-h*h+d*(d+2*c)+l;else d=-s,h=Math.max(0,-(r*d+a)),f=-h*h+d*(d+2*c)+l;else d<=-p?(h=Math.max(0,-(-r*s+a)),d=h>0?-s:Math.min(Math.max(-s,-c),s),f=-h*h+d*(d+2*c)+l):d<=p?(h=0,d=Math.min(Math.max(-s,-c),s),f=d*(d+2*c)+l):(h=Math.max(0,-(r*s+a)),d=h>0?s:Math.min(Math.max(-s,-c),s),f=-h*h+d*(d+2*c)+l);else d=r>0?-s:s,h=Math.max(0,-(r*d+a)),f=-h*h+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(Fu).addScaledVector(rc,d),f}intersectSphere(e,t){Ei.subVectors(e.center,this.origin);const n=Ei.dot(this.direction),i=Ei.dot(Ei)-n*n,s=e.radius*e.radius;if(i>s)return null;const r=Math.sqrt(s-i),a=n-r,c=n+r;return c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(s=(e.min.y-d.y)*u,r=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,r=(e.min.y-d.y)*u),n>r||s>i||((s>n||isNaN(n))&&(n=s),(r<i||isNaN(i))&&(i=r),h>=0?(a=(e.min.z-d.z)*h,c=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,c=(e.min.z-d.z)*h),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ei)!==null}intersectTriangle(e,t,n,i,s){Iu.subVectors(t,e),oc.subVectors(n,e),Bu.crossVectors(Iu,oc);let r=this.direction.dot(Bu),a;if(r>0){if(i)return null;a=1}else if(r<0)a=-1,r=-r;else return null;ss.subVectors(this.origin,e);const c=a*this.direction.dot(oc.crossVectors(ss,oc));if(c<0)return null;const l=a*this.direction.dot(Iu.cross(ss));if(l<0||c+l>r)return null;const u=-a*ss.dot(Bu);return u<0?null:this.at(u/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Xe{constructor(e,t,n,i,s,r,a,c,l,u,h,d,f,p,m,g){Xe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,a,c,l,u,h,d,f,p,m,g)}set(e,t,n,i,s,r,a,c,l,u,h,d,f,p,m,g){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=s,_[5]=r,_[9]=a,_[13]=c,_[2]=l,_[6]=u,_[10]=h,_[14]=d,_[3]=f,_[7]=p,_[11]=m,_[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Xe().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Sr.setFromMatrixColumn(e,0).length(),s=1/Sr.setFromMatrixColumn(e,1).length(),r=1/Sr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=r*u,f=r*h,p=a*u,m=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=f+p*l,t[5]=d-m*l,t[9]=-a*c,t[2]=m-d*l,t[6]=p+f*l,t[10]=r*c}else if(e.order==="YXZ"){const d=c*u,f=c*h,p=l*u,m=l*h;t[0]=d+m*a,t[4]=p*a-f,t[8]=r*l,t[1]=r*h,t[5]=r*u,t[9]=-a,t[2]=f*a-p,t[6]=m+d*a,t[10]=r*c}else if(e.order==="ZXY"){const d=c*u,f=c*h,p=l*u,m=l*h;t[0]=d-m*a,t[4]=-r*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=r*u,t[9]=m-d*a,t[2]=-r*l,t[6]=a,t[10]=r*c}else if(e.order==="ZYX"){const d=r*u,f=r*h,p=a*u,m=a*h;t[0]=c*u,t[4]=p*l-f,t[8]=d*l+m,t[1]=c*h,t[5]=m*l+d,t[9]=f*l-p,t[2]=-l,t[6]=a*c,t[10]=r*c}else if(e.order==="YZX"){const d=r*c,f=r*l,p=a*c,m=a*l;t[0]=c*u,t[4]=m-d*h,t[8]=p*h+f,t[1]=h,t[5]=r*u,t[9]=-a*u,t[2]=-l*u,t[6]=f*h+p,t[10]=d-m*h}else if(e.order==="XZY"){const d=r*c,f=r*l,p=a*c,m=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=d*h+m,t[5]=r*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=m*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(sT,e,rT)}lookAt(e,t,n){const i=this.elements;return Nn.subVectors(e,t),Nn.lengthSq()===0&&(Nn.z=1),Nn.normalize(),rs.crossVectors(n,Nn),rs.lengthSq()===0&&(Math.abs(n.z)===1?Nn.x+=1e-4:Nn.z+=1e-4,Nn.normalize(),rs.crossVectors(n,Nn)),rs.normalize(),ac.crossVectors(Nn,rs),i[0]=rs.x,i[4]=ac.x,i[8]=Nn.x,i[1]=rs.y,i[5]=ac.y,i[9]=Nn.y,i[2]=rs.z,i[6]=ac.z,i[10]=Nn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,r=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],m=n[6],g=n[10],_=n[14],x=n[3],y=n[7],b=n[11],M=n[15],N=i[0],T=i[4],w=i[8],L=i[12],I=i[1],W=i[5],D=i[9],k=i[13],O=i[2],te=i[6],ie=i[10],ge=i[14],Se=i[3],Y=i[7],j=i[11],R=i[15];return s[0]=r*N+a*I+c*O+l*Se,s[4]=r*T+a*W+c*te+l*Y,s[8]=r*w+a*D+c*ie+l*j,s[12]=r*L+a*k+c*ge+l*R,s[1]=u*N+h*I+d*O+f*Se,s[5]=u*T+h*W+d*te+f*Y,s[9]=u*w+h*D+d*ie+f*j,s[13]=u*L+h*k+d*ge+f*R,s[2]=p*N+m*I+g*O+_*Se,s[6]=p*T+m*W+g*te+_*Y,s[10]=p*w+m*D+g*ie+_*j,s[14]=p*L+m*k+g*ge+_*R,s[3]=x*N+y*I+b*O+M*Se,s[7]=x*T+y*W+b*te+M*Y,s[11]=x*w+y*D+b*ie+M*j,s[15]=x*L+y*k+b*ge+M*R,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],m=e[7],g=e[11],_=e[15];return p*(+s*c*h-i*l*h-s*a*d+n*l*d+i*a*f-n*c*f)+m*(+t*c*f-t*l*d+s*r*d-i*r*f+i*l*u-s*c*u)+g*(+t*l*h-t*a*f-s*r*h+n*r*f+s*a*u-n*l*u)+_*(-i*a*u-t*c*h+t*a*d+i*r*h-n*r*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],_=e[15],x=h*g*l-m*d*l+m*c*f-a*g*f-h*c*_+a*d*_,y=p*d*l-u*g*l-p*c*f+r*g*f+u*c*_-r*d*_,b=u*m*l-p*h*l+p*a*f-r*m*f-u*a*_+r*h*_,M=p*h*c-u*m*c-p*a*d+r*m*d+u*a*g-r*h*g,N=t*x+n*y+i*b+s*M;if(N===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/N;return e[0]=x*T,e[1]=(m*d*s-h*g*s-m*i*f+n*g*f+h*i*_-n*d*_)*T,e[2]=(a*g*s-m*c*s+m*i*l-n*g*l-a*i*_+n*c*_)*T,e[3]=(h*c*s-a*d*s-h*i*l+n*d*l+a*i*f-n*c*f)*T,e[4]=y*T,e[5]=(u*g*s-p*d*s+p*i*f-t*g*f-u*i*_+t*d*_)*T,e[6]=(p*c*s-r*g*s-p*i*l+t*g*l+r*i*_-t*c*_)*T,e[7]=(r*d*s-u*c*s+u*i*l-t*d*l-r*i*f+t*c*f)*T,e[8]=b*T,e[9]=(p*h*s-u*m*s-p*n*f+t*m*f+u*n*_-t*h*_)*T,e[10]=(r*m*s-p*a*s+p*n*l-t*m*l-r*n*_+t*a*_)*T,e[11]=(u*a*s-r*h*s-u*n*l+t*h*l+r*n*f-t*a*f)*T,e[12]=M*T,e[13]=(u*m*i-p*h*i+p*n*d-t*m*d-u*n*g+t*h*g)*T,e[14]=(p*a*i-r*m*i-p*n*c+t*m*c+r*n*g-t*a*g)*T,e[15]=(r*h*i-u*a*i+u*n*c-t*h*c-r*n*d+t*a*d)*T,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,a=e.y,c=e.z,l=s*r,u=s*a;return this.set(l*r+n,l*a-i*c,l*c+i*a,0,l*a+i*c,u*a+n,u*c-i*r,0,l*c-i*a,u*c+i*r,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,r=t._y,a=t._z,c=t._w,l=s+s,u=r+r,h=a+a,d=s*l,f=s*u,p=s*h,m=r*u,g=r*h,_=a*h,x=c*l,y=c*u,b=c*h,M=n.x,N=n.y,T=n.z;return i[0]=(1-(m+_))*M,i[1]=(f+b)*M,i[2]=(p-y)*M,i[3]=0,i[4]=(f-b)*N,i[5]=(1-(d+_))*N,i[6]=(g+x)*N,i[7]=0,i[8]=(p+y)*T,i[9]=(g-x)*T,i[10]=(1-(d+m))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Sr.set(i[0],i[1],i[2]).length();const r=Sr.set(i[4],i[5],i[6]).length(),a=Sr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Qn.copy(this);const l=1/s,u=1/r,h=1/a;return Qn.elements[0]*=l,Qn.elements[1]*=l,Qn.elements[2]*=l,Qn.elements[4]*=u,Qn.elements[5]*=u,Qn.elements[6]*=u,Qn.elements[8]*=h,Qn.elements[9]*=h,Qn.elements[10]*=h,t.setFromRotationMatrix(Qn),n.x=s,n.y=r,n.z=a,this}makePerspective(e,t,n,i,s,r,a=ei){const c=this.elements,l=2*s/(t-e),u=2*s/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i);let f,p;if(a===ei)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(a===qi)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=h,c[12]=0,c[1]=0,c[5]=u,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=f,c[14]=p,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,s,r,a=ei){const c=this.elements,l=1/(t-e),u=1/(n-i),h=1/(r-s),d=(t+e)*l,f=(n+i)*u;let p,m;if(a===ei)p=(r+s)*h,m=-2*h;else if(a===qi)p=s*h,m=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*u,c[9]=0,c[13]=-f,c[2]=0,c[6]=0,c[10]=m,c[14]=-p,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Sr=new C,Qn=new Xe,sT=new C(0,0,0),rT=new C(1,1,1),rs=new C,ac=new C,Nn=new C,sm=new Xe,rm=new tr;class ii{constructor(e=0,t=0,n=0,i=ii.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],r=i[4],a=i[8],c=i[1],l=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(Ge(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ge(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ge(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-Ge(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(Ge(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ge(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return sm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(sm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return rm.setFromEuler(this),this.setFromQuaternion(rm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ii.DEFAULT_ORDER="XYZ";class oT{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let aT=0;const om=new C,Tr=new tr,Ri=new Xe,cc=new C,Ro=new C,cT=new C,lT=new tr,am=new C(1,0,0),cm=new C(0,1,0),lm=new C(0,0,1),um={type:"added"},uT={type:"removed"},Mr={type:"childadded",child:null},Ou={type:"childremoved",child:null};class Rt extends Ts{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:aT++}),this.uuid=fi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Rt.DEFAULT_UP.clone();const e=new C,t=new ii,n=new tr,i=new C(1,1,1);function s(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Xe},normalMatrix:{value:new pn}}),this.matrix=new Xe,this.matrixWorld=new Xe,this.matrixAutoUpdate=Rt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new oT,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Tr.setFromAxisAngle(e,t),this.quaternion.multiply(Tr),this}rotateOnWorldAxis(e,t){return Tr.setFromAxisAngle(e,t),this.quaternion.premultiply(Tr),this}rotateX(e){return this.rotateOnAxis(am,e)}rotateY(e){return this.rotateOnAxis(cm,e)}rotateZ(e){return this.rotateOnAxis(lm,e)}translateOnAxis(e,t){return om.copy(e).applyQuaternion(this.quaternion),this.position.add(om.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(am,e)}translateY(e){return this.translateOnAxis(cm,e)}translateZ(e){return this.translateOnAxis(lm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ri.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?cc.copy(e):cc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ro.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ri.lookAt(Ro,cc,this.up):Ri.lookAt(cc,Ro,this.up),this.quaternion.setFromRotationMatrix(Ri),i&&(Ri.extractRotation(i.matrixWorld),Tr.setFromRotationMatrix(Ri),this.quaternion.premultiply(Tr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(um),Mr.child=e,this.dispatchEvent(Mr),Mr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(uT),Ou.child=e,this.dispatchEvent(Ou),Ou.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ri.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ri.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ri),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(um),Mr.child=e,this.dispatchEvent(Mr),Mr.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ro,e,cT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ro,lT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];s(e.shapes,h)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(s(e.materials,this.material[c]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(s(e.animations,c))}}if(t){const a=r(e.geometries),c=r(e.materials),l=r(e.textures),u=r(e.images),h=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function r(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Rt.DEFAULT_UP=new C(0,1,0);Rt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Jn=new C,Pi=new C,Vu=new C,Di=new C,wr=new C,Ar=new C,hm=new C,ku=new C,zu=new C,Gu=new C,Hu=new Ke,Wu=new Ke,qu=new Ke;class Gn{constructor(e=new C,t=new C,n=new C){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Jn.subVectors(e,t),i.cross(Jn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Jn.subVectors(i,t),Pi.subVectors(n,t),Vu.subVectors(e,t);const r=Jn.dot(Jn),a=Jn.dot(Pi),c=Jn.dot(Vu),l=Pi.dot(Pi),u=Pi.dot(Vu),h=r*l-a*a;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(l*c-a*u)*d,p=(r*u-a*c)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Di)===null?!1:Di.x>=0&&Di.y>=0&&Di.x+Di.y<=1}static getInterpolation(e,t,n,i,s,r,a,c){return this.getBarycoord(e,t,n,i,Di)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(s,Di.x),c.addScaledVector(r,Di.y),c.addScaledVector(a,Di.z),c)}static getInterpolatedAttribute(e,t,n,i,s,r){return Hu.setScalar(0),Wu.setScalar(0),qu.setScalar(0),Hu.fromBufferAttribute(e,t),Wu.fromBufferAttribute(e,n),qu.fromBufferAttribute(e,i),r.setScalar(0),r.addScaledVector(Hu,s.x),r.addScaledVector(Wu,s.y),r.addScaledVector(qu,s.z),r}static isFrontFacing(e,t,n,i){return Jn.subVectors(n,t),Pi.subVectors(e,t),Jn.cross(Pi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Jn.subVectors(this.c,this.b),Pi.subVectors(this.a,this.b),Jn.cross(Pi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Gn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Gn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return Gn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Gn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Gn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let r,a;wr.subVectors(i,n),Ar.subVectors(s,n),ku.subVectors(e,n);const c=wr.dot(ku),l=Ar.dot(ku);if(c<=0&&l<=0)return t.copy(n);zu.subVectors(e,i);const u=wr.dot(zu),h=Ar.dot(zu);if(u>=0&&h<=u)return t.copy(i);const d=c*h-u*l;if(d<=0&&c>=0&&u<=0)return r=c/(c-u),t.copy(n).addScaledVector(wr,r);Gu.subVectors(e,s);const f=wr.dot(Gu),p=Ar.dot(Gu);if(p>=0&&f<=p)return t.copy(s);const m=f*l-c*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(Ar,a);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return hm.subVectors(s,i),a=(h-u)/(h-u+(f-p)),t.copy(i).addScaledVector(hm,a);const _=1/(g+m+d);return r=m*_,a=d*_,t.copy(n).addScaledVector(wr,r).addScaledVector(Ar,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Cv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},os={h:0,s:0,l:0},lc={h:0,s:0,l:0};function ju(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}class We{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Re){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ct.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ct.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ct.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ct.workingColorSpace){if(e=Xd(e,1),t=Ge(t,0,1),n=Ge(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,r=2*n-s;this.r=ju(r,s,e+1/3),this.g=ju(r,s,e),this.b=ju(r,s,e-1/3)}return Ct.toWorkingColorSpace(this,i),this}setStyle(e,t=Re){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Re){const n=Cv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Gi(e.r),this.g=Gi(e.g),this.b=Gi(e.b),this}copyLinearToSRGB(e){return this.r=Jr(e.r),this.g=Jr(e.g),this.b=Jr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Re){return Ct.fromWorkingColorSpace(sn.copy(this),e),Math.round(Ge(sn.r*255,0,255))*65536+Math.round(Ge(sn.g*255,0,255))*256+Math.round(Ge(sn.b*255,0,255))}getHexString(e=Re){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ct.workingColorSpace){Ct.fromWorkingColorSpace(sn.copy(this),t);const n=sn.r,i=sn.g,s=sn.b,r=Math.max(n,i,s),a=Math.min(n,i,s);let c,l;const u=(a+r)/2;if(a===r)c=0,l=0;else{const h=r-a;switch(l=u<=.5?h/(r+a):h/(2-r-a),r){case n:c=(i-s)/h+(i<s?6:0);break;case i:c=(s-n)/h+2;break;case s:c=(n-i)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=Ct.workingColorSpace){return Ct.fromWorkingColorSpace(sn.copy(this),t),e.r=sn.r,e.g=sn.g,e.b=sn.b,e}getStyle(e=Re){Ct.fromWorkingColorSpace(sn.copy(this),e);const t=sn.r,n=sn.g,i=sn.b;return e!==Re?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(os),this.setHSL(os.h+e,os.s+t,os.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(os),e.getHSL(lc);const n=Zo(os.h,lc.h,t),i=Zo(os.s,lc.s,t),s=Zo(os.l,lc.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const sn=new We;We.NAMES=Cv;let hT=0;class an extends Ts{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:hT++}),this.uuid=fi(),this.name="",this.type="Material",this.blending=vs,this.side=no,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=cl,this.blendDst=ll,this.blendEquation=hs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new We(0,0,0),this.blendAlpha=0,this.depthFunc=ul,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ad,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Os,this.stencilZFail=Os,this.stencilZPass=Os,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==vs&&(n.blending=this.blending),this.side!==no&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==cl&&(n.blendSrc=this.blendSrc),this.blendDst!==ll&&(n.blendDst=this.blendDst),this.blendEquation!==hs&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ul&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ad&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Os&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Os&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Os&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const r=[];for(const a in s){const c=s[a];delete c.metadata,r.push(c)}return r}if(t){const s=i(e.textures),r=i(e.images);s.length>0&&(n.textures=s),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Aa extends an{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.combine=Pl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Bi=dT();function dT(){const o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,u=0;for(;!(l&8388608);)l<<=1,u-=8388608;l&=-8388609,u+=947912704,s[c]=l|u}for(let c=1024;c<2048;++c)s[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)r[c]=c<<23;r[31]=1199570944,r[32]=2147483648;for(let c=33;c<63;++c)r[c]=2147483648+(c-32<<23);r[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:r,offsetTable:a}}function Cn(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=Ge(o,-65504,65504),Bi.floatView[0]=o;const e=Bi.uint32View[0],t=e>>23&511;return Bi.baseTable[t]+((e&8388607)>>Bi.shiftTable[t])}function uc(o){const e=o>>10;return Bi.uint32View[0]=Bi.mantissaTable[Bi.offsetTable[e]+(o&1023)]+Bi.exponentTable[e],Bi.floatView[0]}const Ut=new C,hc=new le;class Ln{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=hl,this.updateRanges=[],this.gpuType=Un,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)hc.fromBufferAttribute(this,t),hc.applyMatrix3(e),this.setXY(t,hc.x,hc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyMatrix3(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyMatrix4(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyNormalMatrix(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.transformDirection(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=fn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ze(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=fn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=fn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=fn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=fn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),s=ze(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==hl&&(e.usage=this.usage),e}}class Ev extends Ln{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Rv extends Ln{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Pv extends Ln{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=uc(this.array[e*this.itemSize]);return this.normalized&&(t=fn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize]=Cn(t),this}getY(e){let t=uc(this.array[e*this.itemSize+1]);return this.normalized&&(t=fn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+1]=Cn(t),this}getZ(e){let t=uc(this.array[e*this.itemSize+2]);return this.normalized&&(t=fn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+2]=Cn(t),this}getW(e){let t=uc(this.array[e*this.itemSize+3]);return this.normalized&&(t=fn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+3]=Cn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.array[e+0]=Cn(t),this.array[e+1]=Cn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.array[e+0]=Cn(t),this.array[e+1]=Cn(n),this.array[e+2]=Cn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),s=ze(s,this.array)),this.array[e+0]=Cn(t),this.array[e+1]=Cn(n),this.array[e+2]=Cn(i),this.array[e+3]=Cn(s),this}}class Qt extends Ln{constructor(e,t,n){super(new Float32Array(e),t,n)}}let fT=0;const Bn=new Xe,$u=new Rt,Nr=new C,En=new rr,Po=new rr,Gt=new C;class $n extends Ts{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:fT++}),this.uuid=fi(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(XS(e)?Rv:Ev)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Bn.makeRotationFromQuaternion(e),this.applyMatrix4(Bn),this}rotateX(e){return Bn.makeRotationX(e),this.applyMatrix4(Bn),this}rotateY(e){return Bn.makeRotationY(e),this.applyMatrix4(Bn),this}rotateZ(e){return Bn.makeRotationZ(e),this.applyMatrix4(Bn),this}translate(e,t,n){return Bn.makeTranslation(e,t,n),this.applyMatrix4(Bn),this}scale(e,t,n){return Bn.makeScale(e,t,n),this.applyMatrix4(Bn),this}lookAt(e){return $u.lookAt(e),$u.updateMatrix(),this.applyMatrix4($u.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Nr).negate(),this.translate(Nr.x,Nr.y,Nr.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let i=0,s=e.length;i<s;i++){const r=e[i];n.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Qt(n,3))}else{const n=Math.min(e.length,t.count);for(let i=0;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new rr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];En.setFromBufferAttribute(s),this.morphTargetsRelative?(Gt.addVectors(this.boundingBox.min,En.min),this.boundingBox.expandByPoint(Gt),Gt.addVectors(this.boundingBox.max,En.max),this.boundingBox.expandByPoint(Gt)):(this.boundingBox.expandByPoint(En.min),this.boundingBox.expandByPoint(En.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wa);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new C,1/0);return}if(e){const n=this.boundingSphere.center;if(En.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];Po.setFromBufferAttribute(a),this.morphTargetsRelative?(Gt.addVectors(En.min,Po.min),En.expandByPoint(Gt),Gt.addVectors(En.max,Po.max),En.expandByPoint(Gt)):(En.expandByPoint(Po.min),En.expandByPoint(Po.max))}En.getCenter(n);let i=0;for(let s=0,r=e.count;s<r;s++)Gt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Gt));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)Gt.fromBufferAttribute(a,l),c&&(Nr.fromBufferAttribute(e,l),Gt.add(Nr)),i=Math.max(i,n.distanceToSquared(Gt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ln(new Float32Array(4*n.count),4));const r=this.getAttribute("tangent"),a=[],c=[];for(let w=0;w<n.count;w++)a[w]=new C,c[w]=new C;const l=new C,u=new C,h=new C,d=new le,f=new le,p=new le,m=new C,g=new C;function _(w,L,I){l.fromBufferAttribute(n,w),u.fromBufferAttribute(n,L),h.fromBufferAttribute(n,I),d.fromBufferAttribute(s,w),f.fromBufferAttribute(s,L),p.fromBufferAttribute(s,I),u.sub(l),h.sub(l),f.sub(d),p.sub(d);const W=1/(f.x*p.y-p.x*f.y);isFinite(W)&&(m.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(W),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(W),a[w].add(m),a[L].add(m),a[I].add(m),c[w].add(g),c[L].add(g),c[I].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let w=0,L=x.length;w<L;++w){const I=x[w],W=I.start,D=I.count;for(let k=W,O=W+D;k<O;k+=3)_(e.getX(k+0),e.getX(k+1),e.getX(k+2))}const y=new C,b=new C,M=new C,N=new C;function T(w){M.fromBufferAttribute(i,w),N.copy(M);const L=a[w];y.copy(L),y.sub(M.multiplyScalar(M.dot(L))).normalize(),b.crossVectors(N,L);const W=b.dot(c[w])<0?-1:1;r.setXYZW(w,y.x,y.y,y.z,W)}for(let w=0,L=x.length;w<L;++w){const I=x[w],W=I.start,D=I.count;for(let k=W,O=W+D;k<O;k+=3)T(e.getX(k+0)),T(e.getX(k+1)),T(e.getX(k+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ln(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new C,s=new C,r=new C,a=new C,c=new C,l=new C,u=new C,h=new C;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),u.subVectors(r,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,m),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(m,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),u.subVectors(r,s),h.subVectors(i,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Gt.fromBufferAttribute(e,t),Gt.normalize(),e.setXYZ(t,Gt.x,Gt.y,Gt.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,d=new l.constructor(c.length*u);let f=0,p=0;for(let m=0,g=c.length;m<g;m++){a.isInterleavedBufferAttribute?f=c[m]*a.data.stride+a.offset:f=c[m]*u;for(let _=0;_<u;_++)d[p++]=l[f++]}return new Ln(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new $n,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=e(c,n);t.setAttribute(a,l)}const s=this.morphAttributes;for(const a in s){const c=[],l=s[a];for(let u=0,h=l.length;u<h;u++){const d=l[u],f=e(d,n);c.push(f)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,c=r.length;a<c;a++){const l=r[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,d=l.length;h<d;h++){const f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(i[c]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const s=e.morphAttributes;for(const l in s){const u=[],h=s[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let l=0,u=r.length;l<u;l++){const h=r[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const dm=new Xe,Ps=new Zd,dc=new wa,fm=new C,fc=new C,pc=new C,mc=new C,Xu=new C,gc=new C,pm=new C,vc=new C;class In extends Rt{constructor(e=new $n,t=new Aa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const a=this.morphTargetInfluences;if(s&&a){gc.set(0,0,0);for(let c=0,l=s.length;c<l;c++){const u=a[c],h=s[c];u!==0&&(Xu.fromBufferAttribute(h,e),r?gc.addScaledVector(Xu,u):gc.addScaledVector(Xu.sub(t),u))}t.add(gc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),dc.copy(n.boundingSphere),dc.applyMatrix4(s),Ps.copy(e.ray).recast(e.near),!(dc.containsPoint(Ps.origin)===!1&&(Ps.intersectSphere(dc,fm)===null||Ps.origin.distanceToSquared(fm)>(e.far-e.near)**2))&&(dm.copy(s).invert(),Ps.copy(e.ray).applyMatrix4(dm),!(n.boundingBox!==null&&Ps.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Ps)))}_computeIntersections(e,t,n){let i;const s=this.geometry,r=this.material,a=s.index,c=s.attributes.position,l=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],_=r[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let b=x,M=y;b<M;b+=3){const N=a.getX(b),T=a.getX(b+1),w=a.getX(b+2);i=_c(this,_,e,n,l,u,h,N,T,w),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),m=Math.min(a.count,f.start+f.count);for(let g=p,_=m;g<_;g+=3){const x=a.getX(g),y=a.getX(g+1),b=a.getX(g+2);i=_c(this,r,e,n,l,u,h,x,y,b),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}else if(c!==void 0)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],_=r[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(c.count,Math.min(g.start+g.count,f.start+f.count));for(let b=x,M=y;b<M;b+=3){const N=b,T=b+1,w=b+2;i=_c(this,_,e,n,l,u,h,N,T,w),i&&(i.faceIndex=Math.floor(b/3),i.face.materialIndex=g.materialIndex,t.push(i))}}else{const p=Math.max(0,f.start),m=Math.min(c.count,f.start+f.count);for(let g=p,_=m;g<_;g+=3){const x=g,y=g+1,b=g+2;i=_c(this,r,e,n,l,u,h,x,y,b),i&&(i.faceIndex=Math.floor(g/3),t.push(i))}}}}function pT(o,e,t,n,i,s,r,a){let c;if(e.side===qn?c=n.intersectTriangle(r,s,i,!0,a):c=n.intersectTriangle(i,s,r,e.side===no,a),c===null)return null;vc.copy(a),vc.applyMatrix4(o.matrixWorld);const l=t.ray.origin.distanceTo(vc);return l<t.near||l>t.far?null:{distance:l,point:vc.clone(),object:o}}function _c(o,e,t,n,i,s,r,a,c,l){o.getVertexPosition(a,fc),o.getVertexPosition(c,pc),o.getVertexPosition(l,mc);const u=pT(o,e,t,n,fc,pc,mc,pm);if(u){const h=new C;Gn.getBarycoord(pm,fc,pc,mc,h),i&&(u.uv=Gn.getInterpolatedAttribute(i,a,c,l,h,new le)),s&&(u.uv1=Gn.getInterpolatedAttribute(s,a,c,l,h,new le)),r&&(u.normal=Gn.getInterpolatedAttribute(r,a,c,l,h,new C),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:c,c:l,normal:new C,materialIndex:0};Gn.getNormal(fc,pc,mc,d.normal),u.face=d,u.barycoord=h}return u}class ho extends $n{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};const a=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);const c=[],l=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,t,e,r,s,0),p("z","y","x",1,-1,n,t,-e,r,s,1),p("x","z","y",1,1,e,n,t,i,r,2),p("x","z","y",1,-1,e,n,-t,i,r,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new Qt(l,3)),this.setAttribute("normal",new Qt(u,3)),this.setAttribute("uv",new Qt(h,2));function p(m,g,_,x,y,b,M,N,T,w,L){const I=b/T,W=M/w,D=b/2,k=M/2,O=N/2,te=T+1,ie=w+1;let ge=0,Se=0;const Y=new C;for(let j=0;j<ie;j++){const R=j*W-k;for(let V=0;V<te;V++){const G=V*I-D;Y[m]=G*x,Y[g]=R*y,Y[_]=O,l.push(Y.x,Y.y,Y.z),Y[m]=0,Y[g]=0,Y[_]=N>0?1:-1,u.push(Y.x,Y.y,Y.z),h.push(V/T),h.push(1-j/w),ge+=1}}for(let j=0;j<w;j++)for(let R=0;R<T;R++){const V=d+R+te*j,G=d+R+te*(j+1),Q=d+(R+1)+te*(j+1),z=d+(R+1)+te*j;c.push(V,G,z),c.push(G,Q,z),Se+=6}a.addGroup(f,Se,L),f+=Se,d+=ge}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ho(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Dl(o){const e={};for(const t in o){e[t]={};for(const n in o[t]){const i=o[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function mT(o){const e={};for(let t=0;t<o.length;t++){const n=Dl(o[t]);for(const i in n)e[i]=n[i]}return e}function gT(o){const e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}const vT={clone:Dl,merge:mT};var _T=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,yT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class xT extends an{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=_T,this.fragmentShader=yT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Dl(e.uniforms),this.uniformsGroups=gT(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Dv extends Rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Xe,this.projectionMatrix=new Xe,this.projectionMatrixInverse=new Xe,this.coordinateSystem=ei}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const as=new C,mm=new le,gm=new le;class li extends Dv{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=la*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Qr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return la*2*Math.atan(Math.tan(Qr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){as.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(as.x,as.y).multiplyScalar(-e/as.z),as.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(as.x,as.y).multiplyScalar(-e/as.z)}getViewSize(e,t){return this.getViewBounds(e,mm,gm),t.subVectors(gm,mm)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Qr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const r=this.view;if(this.view!==null&&this.view.enabled){const c=r.fullWidth,l=r.fullHeight;s+=r.offsetX*i/c,t-=r.offsetY*n/l,i*=r.width/c,n*=r.height/l}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Cr=-90,Er=1;class Uv extends Rt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new li(Cr,Er,e,t);i.layers=this.layers,this.add(i);const s=new li(Cr,Er,e,t);s.layers=this.layers,this.add(s);const r=new li(Cr,Er,e,t);r.layers=this.layers,this.add(r);const a=new li(Cr,Er,e,t);a.layers=this.layers,this.add(a);const c=new li(Cr,Er,e,t);c.layers=this.layers,this.add(c);const l=new li(Cr,Er,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,r,a,c]=t;for(const l of t)this.remove(l);if(e===ei)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===qi)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,c,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,r),e.setRenderTarget(n,2,i),e.render(t,a),e.setRenderTarget(n,3,i),e.render(t,c),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5,i),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Kd extends qt{constructor(e,t,n,i,s,r,a,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:Qs,super(e,t,n,i,s,r,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class bT extends tT{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Kd(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Jt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ho(5,5,5),s=new xT({name:"CubemapFromEquirect",uniforms:Dl(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:qn,blending:Ks});s.uniforms.tEquirect.value=t;const r=new In(i,s),a=t.minFilter;return t.minFilter===ki&&(t.minFilter=Jt),new Uv(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(s)}}class Qd extends Rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ii,this.environmentIntensity=1,this.environmentRotation=new ii,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class Lv{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=hl,this.updateRanges=[],this.version=0,this.uuid=fi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=fi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const hn=new C;class Jd{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyMatrix4(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyNormalMatrix(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.transformDirection(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=fn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ze(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=fn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=fn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=fn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=fn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),s=ze(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Ln(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Jd(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ST extends an{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class TT extends qt{constructor(e=null,t=1,n=1,i,s,r,a,c,l=Wt,u=Wt,h,d){super(null,r,a,c,l,u,i,s,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ul extends Ln{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Yu=new C,MT=new C,wT=new pn;class Fi{constructor(e=new C(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Yu.subVectors(n,t).cross(MT.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Yu),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||wT.getNormalMatrix(e),i=this.coplanarPoint(Yu).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ds=new wa,yc=new C;class Fv{constructor(e=new Fi,t=new Fi,n=new Fi,i=new Fi,s=new Fi,r=new Fi){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ei){const n=this.planes,i=e.elements,s=i[0],r=i[1],a=i[2],c=i[3],l=i[4],u=i[5],h=i[6],d=i[7],f=i[8],p=i[9],m=i[10],g=i[11],_=i[12],x=i[13],y=i[14],b=i[15];if(n[0].setComponents(c-s,d-l,g-f,b-_).normalize(),n[1].setComponents(c+s,d+l,g+f,b+_).normalize(),n[2].setComponents(c+r,d+u,g+p,b+x).normalize(),n[3].setComponents(c-r,d-u,g-p,b-x).normalize(),n[4].setComponents(c-a,d-h,g-m,b-y).normalize(),t===ei)n[5].setComponents(c+a,d+h,g+m,b+y).normalize();else if(t===qi)n[5].setComponents(a,h,m,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ds.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ds.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ds)}intersectsSprite(e){return Ds.center.set(0,0,0),Ds.radius=.7071067811865476,Ds.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ds)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(yc.x=i.normal.x>0?e.max.x:e.min.x,yc.y=i.normal.y>0?e.max.y:e.min.y,yc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(yc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class Ll extends an{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new We(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const fl=new C,pl=new C,vm=new Xe,Do=new Zd,xc=new wa,Zu=new C,_m=new C;class AT extends Rt{constructor(e=new $n,t=new Ll){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)fl.fromBufferAttribute(t,i-1),pl.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=fl.distanceTo(pl);e.setAttribute("lineDistance",new Qt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,r=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xc.copy(n.boundingSphere),xc.applyMatrix4(i),xc.radius+=s,e.ray.intersectsSphere(xc)===!1)return;vm.copy(i).invert(),Do.copy(e.ray).applyMatrix4(vm);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=this.isLineSegments?2:1,u=n.index,d=n.attributes.position;if(u!==null){const f=Math.max(0,r.start),p=Math.min(u.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=l){const _=u.getX(m),x=u.getX(m+1),y=bc(this,e,Do,c,_,x);y&&t.push(y)}if(this.isLineLoop){const m=u.getX(p-1),g=u.getX(f),_=bc(this,e,Do,c,m,g);_&&t.push(_)}}else{const f=Math.max(0,r.start),p=Math.min(d.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=l){const _=bc(this,e,Do,c,m,m+1);_&&t.push(_)}if(this.isLineLoop){const m=bc(this,e,Do,c,p-1,f);m&&t.push(m)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function bc(o,e,t,n,i,s){const r=o.geometry.attributes.position;if(fl.fromBufferAttribute(r,i),pl.fromBufferAttribute(r,s),t.distanceSqToSegment(fl,pl,Zu,_m)>n)return;Zu.applyMatrix4(o.matrixWorld);const c=e.ray.origin.distanceTo(Zu);if(!(c<e.near||c>e.far))return{distance:c,point:_m.clone().applyMatrix4(o.matrixWorld),index:i,face:null,faceIndex:null,barycoord:null,object:o}}const ym=new C,xm=new C;class NT extends AT{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)ym.fromBufferAttribute(t,i),xm.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ym.distanceTo(xm);e.setAttribute("lineDistance",new Qt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class CT extends an{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class Iv extends Rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}class ET extends qt{constructor(e,t,n,i,s,r,a,c,l){super(e,t,n,i,s,r,a,c,l),this.isVideoTexture=!0,this.minFilter=r!==void 0?r:Jt,this.magFilter=s!==void 0?s:Jt,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Bv extends qt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Wt,this.minFilter=Wt,this.generateMipmaps=!1,this.needsUpdate=!0}}class or extends qt{constructor(e,t,n,i,s,r,a,c,l,u=qs){if(u!==qs&&u!==ro)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===qs&&(n=Zt),n===void 0&&u===ro&&(n=Ma),super(null,i,s,r,a,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Wt,this.minFilter=c!==void 0?c:Wt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Mi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let r=1;r<=e;r++)n=this.getPoint(r/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let r;t?r=t:r=e*n[s-1];let a=0,c=s-1,l;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),l=n[i]-r,l<0)a=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===r)return i/(s-1);const u=n[i],d=n[i+1]-u,f=(r-u)/d;return(i+f)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),a=this.getPoint(s),c=t||(r.isVector2?new le:new C);return c.copy(a).sub(r).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new C,i=[],s=[],r=[],a=new C,c=new Xe;for(let f=0;f<=e;f++){const p=f/e;i[f]=this.getTangentAt(p,new C)}s[0]=new C,r[0]=new C;let l=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),d<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),r[0].crossVectors(i[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),r[f]=r[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Ge(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(c.makeRotationAxis(a,p))}r[f].crossVectors(i[f],s[f])}if(t===!0){let f=Math.acos(Ge(s[0].dot(s[e]),-1,1));f/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(c.makeRotationAxis(i[p],f*p)),r[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:r}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ef extends Mi{constructor(e=0,t=0,n=1,i=1,s=0,r=Math.PI*2,a=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=c}getPoint(e,t=new le){const n=t,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(r?s=0:s=i),this.aClockwise===!0&&!r&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=c-this.aX,f=l-this.aY;c=d*u-f*h+this.aX,l=d*h+f*u+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class RT extends ef{constructor(e,t,n,i,s,r){super(e,t,n,n,i,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function tf(){let o=0,e=0,t=0,n=0;function i(s,r,a,c){o=s,e=a,t=-3*s+3*r-2*a-c,n=2*s-2*r+a+c}return{initCatmullRom:function(s,r,a,c,l){i(r,a,l*(a-s),l*(c-r))},initNonuniformCatmullRom:function(s,r,a,c,l,u,h){let d=(r-s)/l-(a-s)/(l+u)+(a-r)/u,f=(a-r)/u-(c-r)/(u+h)+(c-a)/h;d*=u,f*=u,i(r,a,d,f)},calc:function(s){const r=s*s,a=r*s;return o+e*s+t*r+n*a}}}const Sc=new C,Ku=new tf,Qu=new tf,Ju=new tf;class PT extends Mi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new C){const n=t,i=this.points,s=i.length,r=(s-(this.closed?0:1))*e;let a=Math.floor(r),c=r-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:c===0&&a===s-1&&(a=s-2,c=1);let l,u;this.closed||a>0?l=i[(a-1)%s]:(Sc.subVectors(i[0],i[1]).add(i[0]),l=Sc);const h=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(Sc.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=Sc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(h),f),m=Math.pow(h.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(u),f);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),Ku.initNonuniformCatmullRom(l.x,h.x,d.x,u.x,p,m,g),Qu.initNonuniformCatmullRom(l.y,h.y,d.y,u.y,p,m,g),Ju.initNonuniformCatmullRom(l.z,h.z,d.z,u.z,p,m,g)}else this.curveType==="catmullrom"&&(Ku.initCatmullRom(l.x,h.x,d.x,u.x,this.tension),Qu.initCatmullRom(l.y,h.y,d.y,u.y,this.tension),Ju.initCatmullRom(l.z,h.z,d.z,u.z,this.tension));return n.set(Ku.calc(c),Qu.calc(c),Ju.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new C().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function bm(o,e,t,n,i){const s=(n-e)*.5,r=(i-t)*.5,a=o*o,c=o*a;return(2*t-2*n+s+r)*c+(-3*t+3*n-2*s-r)*a+s*o+t}function DT(o,e){const t=1-o;return t*t*e}function UT(o,e){return 2*(1-o)*o*e}function LT(o,e){return o*o*e}function Ko(o,e,t,n){return DT(o,e)+UT(o,t)+LT(o,n)}function FT(o,e){const t=1-o;return t*t*t*e}function IT(o,e){const t=1-o;return 3*t*t*o*e}function BT(o,e){return 3*(1-o)*o*o*e}function OT(o,e){return o*o*o*e}function Qo(o,e,t,n,i){return FT(o,e)+IT(o,t)+BT(o,n)+OT(o,i)}class Ov extends Mi{constructor(e=new le,t=new le,n=new le,i=new le){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new le){const n=t,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(Qo(e,i.x,s.x,r.x,a.x),Qo(e,i.y,s.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class VT extends Mi{constructor(e=new C,t=new C,n=new C,i=new C){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new C){const n=t,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set(Qo(e,i.x,s.x,r.x,a.x),Qo(e,i.y,s.y,r.y,a.y),Qo(e,i.z,s.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Vv extends Mi{constructor(e=new le,t=new le){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new le){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new le){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class kT extends Mi{constructor(e=new C,t=new C){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new C){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new C){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class kv extends Mi{constructor(e=new le,t=new le,n=new le){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new le){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(Ko(e,i.x,s.x,r.x),Ko(e,i.y,s.y,r.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zT extends Mi{constructor(e=new C,t=new C,n=new C){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new C){const n=t,i=this.v0,s=this.v1,r=this.v2;return n.set(Ko(e,i.x,s.x,r.x),Ko(e,i.y,s.y,r.y),Ko(e,i.z,s.z,r.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zv extends Mi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new le){const n=t,i=this.points,s=(i.length-1)*e,r=Math.floor(s),a=s-r,c=i[r===0?r:r-1],l=i[r],u=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return n.set(bm(a,c.x,l.x,u.x,h.x),bm(a,c.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new le().fromArray(i))}return this}}var cd=Object.freeze({__proto__:null,ArcCurve:RT,CatmullRomCurve3:PT,CubicBezierCurve:Ov,CubicBezierCurve3:VT,EllipseCurve:ef,LineCurve:Vv,LineCurve3:kT,QuadraticBezierCurve:kv,QuadraticBezierCurve3:zT,SplineCurve:zv});class GT extends Mi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new cd[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const r=i[s]-n,a=this.curves[s],c=a.getLength(),l=c===0?0:1-r/c;return a.getPointAt(l,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],a=r.isEllipseCurve?e*2:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,c=r.getPoints(a);for(let l=0;l<c.length;l++){const u=c[l];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new cd[i.type]().fromJSON(i))}return this}}class ld extends GT{constructor(e){super(),this.type="Path",this.currentPoint=new le,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Vv(this.currentPoint.clone(),new le(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new kv(this.currentPoint.clone(),new le(e,t),new le(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,r){const a=new Ov(this.currentPoint.clone(),new le(e,t),new le(n,i),new le(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new zv(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,r){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,s,r),this}absarc(e,t,n,i,s,r){return this.absellipse(e,t,n,n,i,s,r),this}ellipse(e,t,n,i,s,r,a,c){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,s,r,a,c),this}absellipse(e,t,n,i,s,r,a,c){const l=new ef(e,t,n,i,s,r,a,c);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}const Tc=new C,Mc=new C,eh=new C,wc=new Gn;class HT extends $n{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Qr*t),r=e.getIndex(),a=e.getAttribute("position"),c=r?r.count:a.count,l=[0,0,0],u=["a","b","c"],h=new Array(3),d={},f=[];for(let p=0;p<c;p+=3){r?(l[0]=r.getX(p),l[1]=r.getX(p+1),l[2]=r.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:m,b:g,c:_}=wc;if(m.fromBufferAttribute(a,l[0]),g.fromBufferAttribute(a,l[1]),_.fromBufferAttribute(a,l[2]),wc.getNormal(eh),h[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let x=0;x<3;x++){const y=(x+1)%3,b=h[x],M=h[y],N=wc[u[x]],T=wc[u[y]],w=`${b}_${M}`,L=`${M}_${b}`;L in d&&d[L]?(eh.dot(d[L].normal)<=s&&(f.push(N.x,N.y,N.z),f.push(T.x,T.y,T.z)),d[L]=null):w in d||(d[w]={index0:l[x],index1:l[y],normal:eh.clone()})}}for(const p in d)if(d[p]){const{index0:m,index1:g}=d[p];Tc.fromBufferAttribute(a,m),Mc.fromBufferAttribute(a,g),f.push(Tc.x,Tc.y,Tc.z),f.push(Mc.x,Mc.y,Mc.z)}this.setAttribute("position",new Qt(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Kc extends ld{constructor(e){super(e),this.uuid=fi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ld().fromJSON(i))}return this}}const WT={triangulate:function(o,e,t=2){const n=e&&e.length,i=n?e[0]*t:o.length;let s=Gv(o,0,i,t,!0);const r=[];if(!s||s.next===s.prev)return r;let a,c,l,u,h,d,f;if(n&&(s=YT(o,e,s,t)),o.length>80*t){a=l=o[0],c=u=o[1];for(let p=t;p<i;p+=t)h=o[p],d=o[p+1],h<a&&(a=h),d<c&&(c=d),h>l&&(l=h),d>u&&(u=d);f=Math.max(l-a,u-c),f=f!==0?32767/f:0}return ua(s,r,t,a,c,f,0),r}};function Gv(o,e,t,n,i){let s,r;if(i===o1(o,e,t,n)>0)for(s=e;s<t;s+=n)r=Sm(s,o[s],o[s+1],r);else for(s=t-n;s>=e;s-=n)r=Sm(s,o[s],o[s+1],r);return r&&Fl(r,r.next)&&(da(r),r=r.next),r}function nr(o,e){if(!o)return o;e||(e=o);let t=o,n;do if(n=!1,!t.steiner&&(Fl(t,t.next)||bt(t.prev,t,t.next)===0)){if(da(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function ua(o,e,t,n,i,s,r){if(!o)return;!r&&s&&e1(o,n,i,s);let a=o,c,l;for(;o.prev!==o.next;){if(c=o.prev,l=o.next,s?jT(o,n,i,s):qT(o)){e.push(c.i/t|0),e.push(o.i/t|0),e.push(l.i/t|0),da(o),o=l.next,a=l.next;continue}if(o=l,o===a){r?r===1?(o=$T(nr(o),e,t),ua(o,e,t,n,i,s,2)):r===2&&XT(o,e,t,n,i,s):ua(nr(o),e,t,n,i,s,1);break}}}function qT(o){const e=o.prev,t=o,n=o.next;if(bt(e,t,n)>=0)return!1;const i=e.x,s=t.x,r=n.x,a=e.y,c=t.y,l=n.y,u=i<s?i<r?i:r:s<r?s:r,h=a<c?a<l?a:l:c<l?c:l,d=i>s?i>r?i:r:s>r?s:r,f=a>c?a>l?a:l:c>l?c:l;let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&Wr(i,a,s,c,r,l,p.x,p.y)&&bt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function jT(o,e,t,n){const i=o.prev,s=o,r=o.next;if(bt(i,s,r)>=0)return!1;const a=i.x,c=s.x,l=r.x,u=i.y,h=s.y,d=r.y,f=a<c?a<l?a:l:c<l?c:l,p=u<h?u<d?u:d:h<d?h:d,m=a>c?a>l?a:l:c>l?c:l,g=u>h?u>d?u:d:h>d?h:d,_=ud(f,p,e,t,n),x=ud(m,g,e,t,n);let y=o.prevZ,b=o.nextZ;for(;y&&y.z>=_&&b&&b.z<=x;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&y!==i&&y!==r&&Wr(a,u,c,h,l,d,y.x,y.y)&&bt(y.prev,y,y.next)>=0||(y=y.prevZ,b.x>=f&&b.x<=m&&b.y>=p&&b.y<=g&&b!==i&&b!==r&&Wr(a,u,c,h,l,d,b.x,b.y)&&bt(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;y&&y.z>=_;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&y!==i&&y!==r&&Wr(a,u,c,h,l,d,y.x,y.y)&&bt(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;b&&b.z<=x;){if(b.x>=f&&b.x<=m&&b.y>=p&&b.y<=g&&b!==i&&b!==r&&Wr(a,u,c,h,l,d,b.x,b.y)&&bt(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function $T(o,e,t){let n=o;do{const i=n.prev,s=n.next.next;!Fl(i,s)&&Hv(i,n,n.next,s)&&ha(i,s)&&ha(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),da(n),da(n.next),n=o=s),n=n.next}while(n!==o);return nr(n)}function XT(o,e,t,n,i,s){let r=o;do{let a=r.next.next;for(;a!==r.prev;){if(r.i!==a.i&&i1(r,a)){let c=Wv(r,a);r=nr(r,r.next),c=nr(c,c.next),ua(r,e,t,n,i,s,0),ua(c,e,t,n,i,s,0);return}a=a.next}r=r.next}while(r!==o)}function YT(o,e,t,n){const i=[];let s,r,a,c,l;for(s=0,r=e.length;s<r;s++)a=e[s]*n,c=s<r-1?e[s+1]*n:o.length,l=Gv(o,a,c,n,!1),l===l.next&&(l.steiner=!0),i.push(n1(l));for(i.sort(ZT),s=0;s<i.length;s++)t=KT(i[s],t);return t}function ZT(o,e){return o.x-e.x}function KT(o,e){const t=QT(o,e);if(!t)return e;const n=Wv(t,o);return nr(n,n.next),nr(t,t.next)}function QT(o,e){let t=e,n=-1/0,i;const s=o.x,r=o.y;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const d=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===s))return i}t=t.next}while(t!==e);if(!i)return null;const a=i,c=i.x,l=i.y;let u=1/0,h;t=i;do s>=t.x&&t.x>=c&&s!==t.x&&Wr(r<l?s:n,r,c,l,r<l?n:s,r,t.x,t.y)&&(h=Math.abs(r-t.y)/(s-t.x),ha(t,o)&&(h<u||h===u&&(t.x>i.x||t.x===i.x&&JT(i,t)))&&(i=t,u=h)),t=t.next;while(t!==a);return i}function JT(o,e){return bt(o.prev,o,e.prev)<0&&bt(e.next,o,o.next)<0}function e1(o,e,t,n){let i=o;do i.z===0&&(i.z=ud(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==o);i.prevZ.nextZ=null,i.prevZ=null,t1(i)}function t1(o){let e,t,n,i,s,r,a,c,l=1;do{for(t=o,o=null,s=null,r=0;t;){for(r++,n=t,a=0,e=0;e<l&&(a++,n=n.nextZ,!!n);e++);for(c=l;a>0||c>0&&n;)a!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:o=i,i.prevZ=s,s=i;t=n}s.nextZ=null,l*=2}while(r>1);return o}function ud(o,e,t,n,i){return o=(o-t)*i|0,e=(e-n)*i|0,o=(o|o<<8)&16711935,o=(o|o<<4)&252645135,o=(o|o<<2)&858993459,o=(o|o<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,o|e<<1}function n1(o){let e=o,t=o;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==o);return t}function Wr(o,e,t,n,i,s,r,a){return(i-r)*(e-a)>=(o-r)*(s-a)&&(o-r)*(n-a)>=(t-r)*(e-a)&&(t-r)*(s-a)>=(i-r)*(n-a)}function i1(o,e){return o.next.i!==e.i&&o.prev.i!==e.i&&!s1(o,e)&&(ha(o,e)&&ha(e,o)&&r1(o,e)&&(bt(o.prev,o,e.prev)||bt(o,e.prev,e))||Fl(o,e)&&bt(o.prev,o,o.next)>0&&bt(e.prev,e,e.next)>0)}function bt(o,e,t){return(e.y-o.y)*(t.x-e.x)-(e.x-o.x)*(t.y-e.y)}function Fl(o,e){return o.x===e.x&&o.y===e.y}function Hv(o,e,t,n){const i=Nc(bt(o,e,t)),s=Nc(bt(o,e,n)),r=Nc(bt(t,n,o)),a=Nc(bt(t,n,e));return!!(i!==s&&r!==a||i===0&&Ac(o,t,e)||s===0&&Ac(o,n,e)||r===0&&Ac(t,o,n)||a===0&&Ac(t,e,n))}function Ac(o,e,t){return e.x<=Math.max(o.x,t.x)&&e.x>=Math.min(o.x,t.x)&&e.y<=Math.max(o.y,t.y)&&e.y>=Math.min(o.y,t.y)}function Nc(o){return o>0?1:o<0?-1:0}function s1(o,e){let t=o;do{if(t.i!==o.i&&t.next.i!==o.i&&t.i!==e.i&&t.next.i!==e.i&&Hv(t,t.next,o,e))return!0;t=t.next}while(t!==o);return!1}function ha(o,e){return bt(o.prev,o,o.next)<0?bt(o,e,o.next)>=0&&bt(o,o.prev,e)>=0:bt(o,e,o.prev)<0||bt(o,o.next,e)<0}function r1(o,e){let t=o,n=!1;const i=(o.x+e.x)/2,s=(o.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==o);return n}function Wv(o,e){const t=new hd(o.i,o.x,o.y),n=new hd(e.i,e.x,e.y),i=o.next,s=e.prev;return o.next=e,e.prev=o,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Sm(o,e,t,n){const i=new hd(o,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function da(o){o.next.prev=o.prev,o.prev.next=o.next,o.prevZ&&(o.prevZ.nextZ=o.nextZ),o.nextZ&&(o.nextZ.prevZ=o.prevZ)}function hd(o,e,t){this.i=o,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function o1(o,e,t,n){let i=0;for(let s=e,r=t-n;s<t;s+=n)i+=(o[r]-o[s])*(o[s+1]+o[r+1]),r=s;return i}class eo{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return eo.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Tm(e),Mm(n,e);let r=e.length;t.forEach(Tm);for(let c=0;c<t.length;c++)i.push(r),r+=t[c].length,Mm(n,t[c]);const a=WT.triangulate(n,i);for(let c=0;c<a.length;c+=3)s.push(a.slice(c,c+3));return s}}function Tm(o){const e=o.length;e>2&&o[e-1].equals(o[0])&&o.pop()}function Mm(o,e){for(let t=0;t<e.length;t++)o.push(e[t].x),o.push(e[t].y)}class nf extends $n{constructor(e=new Kc([new le(.5,.5),new le(-.5,.5),new le(-.5,-.5),new le(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,c=e.length;a<c;a++){const l=e[a];r(l)}this.setAttribute("position",new Qt(i,3)),this.setAttribute("uv",new Qt(s,2)),this.computeVertexNormals();function r(a){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:a1;let y,b=!1,M,N,T,w;_&&(y=_.getSpacedPoints(u),b=!0,d=!1,M=_.computeFrenetFrames(u,!1),N=new C,T=new C,w=new C),d||(g=0,f=0,p=0,m=0);const L=a.extractPoints(l);let I=L.shape;const W=L.holes;if(!eo.isClockWise(I)){I=I.reverse();for(let B=0,oe=W.length;B<oe;B++){const ee=W[B];eo.isClockWise(ee)&&(W[B]=ee.reverse())}}const k=eo.triangulateShape(I,W),O=I;for(let B=0,oe=W.length;B<oe;B++){const ee=W[B];I=I.concat(ee)}function te(B,oe,ee){return oe||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(oe,ee)}const ie=I.length,ge=k.length;function Se(B,oe,ee){let ce,se,ve;const ne=B.x-oe.x,de=B.y-oe.y,me=ee.x-B.x,$=ee.y-B.y,Me=ne*ne+de*de,fe=ne*$-de*me;if(Math.abs(fe)>Number.EPSILON){const _e=Math.sqrt(Me),xe=Math.sqrt(me*me+$*$),st=oe.x-de/_e,Te=oe.y+ne/_e,De=ee.x-$/xe,Ue=ee.y+me/xe,je=((De-st)*$-(Ue-Te)*me)/(ne*$-de*me);ce=st+ne*je-B.x,se=Te+de*je-B.y;const Ze=ce*ce+se*se;if(Ze<=2)return new le(ce,se);ve=Math.sqrt(Ze/2)}else{let _e=!1;ne>Number.EPSILON?me>Number.EPSILON&&(_e=!0):ne<-Number.EPSILON?me<-Number.EPSILON&&(_e=!0):Math.sign(de)===Math.sign($)&&(_e=!0),_e?(ce=-de,se=ne,ve=Math.sqrt(Me)):(ce=ne,se=de,ve=Math.sqrt(Me/2))}return new le(ce/ve,se/ve)}const Y=[];for(let B=0,oe=O.length,ee=oe-1,ce=B+1;B<oe;B++,ee++,ce++)ee===oe&&(ee=0),ce===oe&&(ce=0),Y[B]=Se(O[B],O[ee],O[ce]);const j=[];let R,V=Y.concat();for(let B=0,oe=W.length;B<oe;B++){const ee=W[B];R=[];for(let ce=0,se=ee.length,ve=se-1,ne=ce+1;ce<se;ce++,ve++,ne++)ve===se&&(ve=0),ne===se&&(ne=0),R[ce]=Se(ee[ce],ee[ve],ee[ne]);j.push(R),V=V.concat(R)}for(let B=0;B<g;B++){const oe=B/g,ee=f*Math.cos(oe*Math.PI/2),ce=p*Math.sin(oe*Math.PI/2)+m;for(let se=0,ve=O.length;se<ve;se++){const ne=te(O[se],Y[se],ce);Z(ne.x,ne.y,-ee)}for(let se=0,ve=W.length;se<ve;se++){const ne=W[se];R=j[se];for(let de=0,me=ne.length;de<me;de++){const $=te(ne[de],R[de],ce);Z($.x,$.y,-ee)}}}const G=p+m;for(let B=0;B<ie;B++){const oe=d?te(I[B],V[B],G):I[B];b?(T.copy(M.normals[0]).multiplyScalar(oe.x),N.copy(M.binormals[0]).multiplyScalar(oe.y),w.copy(y[0]).add(T).add(N),Z(w.x,w.y,w.z)):Z(oe.x,oe.y,0)}for(let B=1;B<=u;B++)for(let oe=0;oe<ie;oe++){const ee=d?te(I[oe],V[oe],G):I[oe];b?(T.copy(M.normals[B]).multiplyScalar(ee.x),N.copy(M.binormals[B]).multiplyScalar(ee.y),w.copy(y[B]).add(T).add(N),Z(w.x,w.y,w.z)):Z(ee.x,ee.y,h/u*B)}for(let B=g-1;B>=0;B--){const oe=B/g,ee=f*Math.cos(oe*Math.PI/2),ce=p*Math.sin(oe*Math.PI/2)+m;for(let se=0,ve=O.length;se<ve;se++){const ne=te(O[se],Y[se],ce);Z(ne.x,ne.y,h+ee)}for(let se=0,ve=W.length;se<ve;se++){const ne=W[se];R=j[se];for(let de=0,me=ne.length;de<me;de++){const $=te(ne[de],R[de],ce);b?Z($.x,$.y+y[u-1].y,y[u-1].x+ee):Z($.x,$.y,h+ee)}}}Q(),z();function Q(){const B=i.length/3;if(d){let oe=0,ee=ie*oe;for(let ce=0;ce<ge;ce++){const se=k[ce];re(se[2]+ee,se[1]+ee,se[0]+ee)}oe=u+g*2,ee=ie*oe;for(let ce=0;ce<ge;ce++){const se=k[ce];re(se[0]+ee,se[1]+ee,se[2]+ee)}}else{for(let oe=0;oe<ge;oe++){const ee=k[oe];re(ee[2],ee[1],ee[0])}for(let oe=0;oe<ge;oe++){const ee=k[oe];re(ee[0]+ie*u,ee[1]+ie*u,ee[2]+ie*u)}}n.addGroup(B,i.length/3-B,0)}function z(){const B=i.length/3;let oe=0;ae(O,oe),oe+=O.length;for(let ee=0,ce=W.length;ee<ce;ee++){const se=W[ee];ae(se,oe),oe+=se.length}n.addGroup(B,i.length/3-B,1)}function ae(B,oe){let ee=B.length;for(;--ee>=0;){const ce=ee;let se=ee-1;se<0&&(se=B.length-1);for(let ve=0,ne=u+g*2;ve<ne;ve++){const de=ie*ve,me=ie*(ve+1),$=oe+ce+de,Me=oe+se+de,fe=oe+se+me,_e=oe+ce+me;ye($,Me,fe,_e)}}}function Z(B,oe,ee){c.push(B),c.push(oe),c.push(ee)}function re(B,oe,ee){be(B),be(oe),be(ee);const ce=i.length/3,se=x.generateTopUV(n,i,ce-3,ce-2,ce-1);ue(se[0]),ue(se[1]),ue(se[2])}function ye(B,oe,ee,ce){be(B),be(oe),be(ce),be(oe),be(ee),be(ce);const se=i.length/3,ve=x.generateSideWallUV(n,i,se-6,se-3,se-2,se-1);ue(ve[0]),ue(ve[1]),ue(ve[3]),ue(ve[1]),ue(ve[2]),ue(ve[3])}function be(B){i.push(c[B*3+0]),i.push(c[B*3+1]),i.push(c[B*3+2])}function ue(B){s.push(B.x),s.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return c1(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,r=e.shapes.length;s<r;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new cd[i.type]().fromJSON(i)),new nf(n,e.options)}}const a1={generateTopUV:function(o,e,t,n,i){const s=e[t*3],r=e[t*3+1],a=e[n*3],c=e[n*3+1],l=e[i*3],u=e[i*3+1];return[new le(s,r),new le(a,c),new le(l,u)]},generateSideWallUV:function(o,e,t,n,i,s){const r=e[t*3],a=e[t*3+1],c=e[t*3+2],l=e[n*3],u=e[n*3+1],h=e[n*3+2],d=e[i*3],f=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],_=e[s*3+2];return Math.abs(a-u)<Math.abs(r-l)?[new le(r,1-c),new le(l,1-h),new le(d,1-p),new le(m,1-_)]:[new le(a,1-c),new le(u,1-h),new le(f,1-p),new le(g,1-_)]}};function c1(o,e,t){if(t.shapes=[],Array.isArray(o))for(let n=0,i=o.length;n<i;n++){const s=o[n];t.shapes.push(s.uuid)}else t.shapes.push(o.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class fo extends $n{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,r=t/2,a=Math.floor(n),c=Math.floor(i),l=a+1,u=c+1,h=e/a,d=t/c,f=[],p=[],m=[],g=[];for(let _=0;_<u;_++){const x=_*d-r;for(let y=0;y<l;y++){const b=y*h-s;p.push(b,-x,0),m.push(0,0,1),g.push(y/a),g.push(1-_/c)}}for(let _=0;_<c;_++)for(let x=0;x<a;x++){const y=x+l*_,b=x+l*(_+1),M=x+1+l*(_+1),N=x+1+l*_;f.push(y,b,N),f.push(b,M,N)}this.setIndex(f),this.setAttribute("position",new Qt(p,3)),this.setAttribute("normal",new Qt(m,3)),this.setAttribute("uv",new Qt(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fo(e.width,e.height,e.widthSegments,e.heightSegments)}}class sf extends $n{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(r+a,Math.PI);let l=0;const u=[],h=new C,d=new C,f=[],p=[],m=[],g=[];for(let _=0;_<=n;_++){const x=[],y=_/n;let b=0;_===0&&r===0?b=.5/t:_===n&&c===Math.PI&&(b=-.5/t);for(let M=0;M<=t;M++){const N=M/t;h.x=-e*Math.cos(i+N*s)*Math.sin(r+y*a),h.y=e*Math.cos(r+y*a),h.z=e*Math.sin(i+N*s)*Math.sin(r+y*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),m.push(d.x,d.y,d.z),g.push(N+b,1-y),x.push(l++)}u.push(x)}for(let _=0;_<n;_++)for(let x=0;x<t;x++){const y=u[_][x+1],b=u[_][x],M=u[_+1][x],N=u[_+1][x+1];(_!==0||r>0)&&f.push(y,b,N),(_!==n-1||c<Math.PI)&&f.push(b,M,N)}this.setIndex(f),this.setAttribute("position",new Qt(p,3)),this.setAttribute("normal",new Qt(m,3)),this.setAttribute("uv",new Qt(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sf(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class l1 extends an{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new We(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class rf extends an{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new We(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class u1 extends rf{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new le(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ge(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new We(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new We(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new We(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class h1 extends an{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new We(16777215),this.specular=new We(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.combine=Pl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class d1 extends an{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new We(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class f1 extends an{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class p1 extends an{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ii,this.combine=Pl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class m1 extends an{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=mS,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class g1 extends an{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class v1 extends an{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new We(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _1 extends Ll{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const ml={enabled:!1,files:{},add:function(o,e){this.enabled!==!1&&(this.files[o]=e)},get:function(o){if(this.enabled!==!1)return this.files[o]},remove:function(o){delete this.files[o]},clear:function(){this.files={}}};class y1{constructor(e,t,n){const i=this;let s=!1,r=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,r,a),s=!0},this.itemEnd=function(u){r++,i.onProgress!==void 0&&i.onProgress(u,r,a),r===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){const f=l[h],p=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null}}}const x1=new y1;class Na{constructor(e){this.manager=e!==void 0?e:x1,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Na.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ui={};class b1 extends Error{constructor(e,t){super(e),this.response=t}}class dd extends Na{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ml.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Ui[e]!==void 0){Ui[e].push({onLoad:t,onProgress:n,onError:i});return}Ui[e]=[],Ui[e].push({onLoad:t,onProgress:n,onError:i});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(r).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const u=Ui[e],h=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let m=0;const g=new ReadableStream({start(_){x();function x(){h.read().then(({done:y,value:b})=>{if(y)_.close();else{m+=b.byteLength;const M=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:f});for(let N=0,T=u.length;N<T;N++){const w=u[N];w.onProgress&&w.onProgress(M)}_.enqueue(b),x()}},y=>{_.error(y)})}}});return new Response(g)}else throw new b1(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return l.json();default:if(a===void 0)return l.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{ml.add(e,l);const u=Ui[e];delete Ui[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(l)}}).catch(l=>{const u=Ui[e];if(u===void 0)throw this.manager.itemError(e),l;delete Ui[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class S1 extends Na{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=ml.get(e);if(r!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const a=dl("img");function c(){u(),ml.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class T1 extends Na{constructor(e){super(e)}load(e,t,n,i){const s=new qt,r=new S1(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class ar extends Rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new We(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class M1 extends ar{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new We(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const th=new Xe,wm=new C,Am=new C;class of{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new le(512,512),this.map=null,this.mapPass=null,this.matrix=new Xe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fv,this._frameExtents=new le(1,1),this._viewportCount=1,this._viewports=[new Ke(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;wm.setFromMatrixPosition(e.matrixWorld),t.position.copy(wm),Am.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Am),t.updateMatrixWorld(),th.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(th),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(th)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class w1 extends of{constructor(){super(new li(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=la*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class qv extends ar{constructor(e,t,n=0,i=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new w1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Nm=new Xe,Uo=new C,nh=new C;class A1 extends of{constructor(){super(new li(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new le(4,2),this._viewportCount=6,this._viewports=[new Ke(2,1,1,1),new Ke(0,1,1,1),new Ke(3,1,1,1),new Ke(1,1,1,1),new Ke(3,0,1,1),new Ke(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Uo.setFromMatrixPosition(e.matrixWorld),n.position.copy(Uo),nh.copy(n.position),nh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(nh),n.updateMatrixWorld(),i.makeTranslation(-Uo.x,-Uo.y,-Uo.z),Nm.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Nm)}}class N1 extends ar{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new A1}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class af extends Dv{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,r=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,r=s+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class C1 extends of{constructor(){super(new af(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class jv extends ar{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.shadow=new C1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class $v extends ar{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class E1 extends ar{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class R1{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new C)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*i),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],1.092548*(n*i)),t.addScaledVector(r[5],1.092548*(i*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(n*s)),t.addScaledVector(r[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*i),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*n),t.addScaledVector(r[4],2*.429043*n*i),t.addScaledVector(r[5],2*.429043*i*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*n*s),t.addScaledVector(r[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class P1 extends ar{constructor(e=new R1,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class D1 extends $n{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class U1{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Cm(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Cm();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Cm(){return performance.now()}class L1 extends Lv{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Em{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Ge(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ge(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class F1{constructor(){this.type="ShapePath",this.color=new We,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ld,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,r){return this.currentPath.bezierCurveTo(e,t,n,i,s,r),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const x=[];for(let y=0,b=_.length;y<b;y++){const M=_[y],N=new Kc;N.curves=M.curves,x.push(N)}return x}function n(_,x){const y=x.length;let b=!1;for(let M=y-1,N=0;N<y;M=N++){let T=x[M],w=x[N],L=w.x-T.x,I=w.y-T.y;if(Math.abs(I)>Number.EPSILON){if(I<0&&(T=x[N],L=-L,w=x[M],I=-I),_.y<T.y||_.y>w.y)continue;if(_.y===T.y){if(_.x===T.x)return!0}else{const W=I*(_.x-T.x)-L*(_.y-T.y);if(W===0)return!0;if(W<0)continue;b=!b}}else{if(_.y!==T.y)continue;if(w.x<=_.x&&_.x<=T.x||T.x<=_.x&&_.x<=w.x)return!0}}return b}const i=eo.isClockWise,s=this.subPaths;if(s.length===0)return[];let r,a,c;const l=[];if(s.length===1)return a=s[0],c=new Kc,c.curves=a.curves,l.push(c),l;let u=!i(s[0].getPoints());u=e?!u:u;const h=[],d=[];let f=[],p=0,m;d[p]=void 0,f[p]=[];for(let _=0,x=s.length;_<x;_++)a=s[_],m=a.getPoints(),r=i(m),r=e?!r:r,r?(!u&&d[p]&&p++,d[p]={s:new Kc,p:m},d[p].s.curves=a.curves,u&&p++,f[p]=[]):f[p].push({h:a,p:m[0]});if(!d[0])return t(s);if(d.length>1){let _=!1,x=0;for(let y=0,b=d.length;y<b;y++)h[y]=[];for(let y=0,b=d.length;y<b;y++){const M=f[y];for(let N=0;N<M.length;N++){const T=M[N];let w=!0;for(let L=0;L<d.length;L++)n(T.p,d[L].p)&&(y!==L&&x++,w?(w=!1,h[L].push(T)):_=!0);w&&h[y].push(T)}}x>0&&_===!1&&(f=h)}let g;for(let _=0,x=d.length;_<x;_++){c=d[_].s,l.push(c),g=f[_];for(let y=0,b=g.length;y<b;y++)c.holes.push(g[y].h)}return l}}class I1 extends Ts{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Rl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Rl);/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */var B1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,O1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,V1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,k1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,z1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,G1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,H1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,W1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,q1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,j1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,$1=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,X1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Y1=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Z1=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,K1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Q1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,J1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,eM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,tM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,nM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,iM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,sM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,rM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,oM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,aM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,cM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,lM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,uM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,hM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,dM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,fM="gl_FragColor = linearToOutputTexel( gl_FragColor );",pM=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,mM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,gM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,vM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,_M=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,xM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,bM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,SM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,TM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,MM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,wM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,AM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,NM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,CM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,EM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,RM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,PM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,DM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,UM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,LM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,FM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,IM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,BM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,OM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,VM=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,kM=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,zM=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,GM=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,HM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,WM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,qM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,jM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,$M=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,XM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,YM=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,ZM=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,KM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,QM=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,JM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,ew=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,tw=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,nw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,rw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,ow=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,aw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,cw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,lw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,uw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,hw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,dw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,fw=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,pw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,mw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,gw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,vw=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,_w=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,yw=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,xw=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,bw=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Sw=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Tw=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Mw=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ww=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Aw=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Nw=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Cw=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Ew=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Rw=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Pw=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Dw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Uw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Lw=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Fw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Iw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Bw=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Ow=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Vw=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,zw=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Gw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Hw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,Ww=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,qw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,jw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,$w=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Xw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Yw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Zw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Kw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eA=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,tA=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nA=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,iA=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,sA=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rA=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oA=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,aA=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cA=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lA=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uA=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,hA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dA=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fA=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,pA=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,mA=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gA={alphahash_fragment:B1,alphahash_pars_fragment:O1,alphamap_fragment:V1,alphamap_pars_fragment:k1,alphatest_fragment:z1,alphatest_pars_fragment:G1,aomap_fragment:H1,aomap_pars_fragment:W1,batching_pars_vertex:q1,batching_vertex:j1,begin_vertex:$1,beginnormal_vertex:X1,bsdfs:Y1,iridescence_fragment:Z1,bumpmap_pars_fragment:K1,clipping_planes_fragment:Q1,clipping_planes_pars_fragment:J1,clipping_planes_pars_vertex:eM,clipping_planes_vertex:tM,color_fragment:nM,color_pars_fragment:iM,color_pars_vertex:sM,color_vertex:rM,common:oM,cube_uv_reflection_fragment:aM,defaultnormal_vertex:cM,displacementmap_pars_vertex:lM,displacementmap_vertex:uM,emissivemap_fragment:hM,emissivemap_pars_fragment:dM,colorspace_fragment:fM,colorspace_pars_fragment:pM,envmap_fragment:mM,envmap_common_pars_fragment:gM,envmap_pars_fragment:vM,envmap_pars_vertex:_M,envmap_physical_pars_fragment:EM,envmap_vertex:yM,fog_vertex:xM,fog_pars_vertex:bM,fog_fragment:SM,fog_pars_fragment:TM,gradientmap_pars_fragment:MM,lightmap_pars_fragment:wM,lights_lambert_fragment:AM,lights_lambert_pars_fragment:NM,lights_pars_begin:CM,lights_toon_fragment:RM,lights_toon_pars_fragment:PM,lights_phong_fragment:DM,lights_phong_pars_fragment:UM,lights_physical_fragment:LM,lights_physical_pars_fragment:FM,lights_fragment_begin:IM,lights_fragment_maps:BM,lights_fragment_end:OM,logdepthbuf_fragment:VM,logdepthbuf_pars_fragment:kM,logdepthbuf_pars_vertex:zM,logdepthbuf_vertex:GM,map_fragment:HM,map_pars_fragment:WM,map_particle_fragment:qM,map_particle_pars_fragment:jM,metalnessmap_fragment:$M,metalnessmap_pars_fragment:XM,morphinstance_vertex:YM,morphcolor_vertex:ZM,morphnormal_vertex:KM,morphtarget_pars_vertex:QM,morphtarget_vertex:JM,normal_fragment_begin:ew,normal_fragment_maps:tw,normal_pars_fragment:nw,normal_pars_vertex:iw,normal_vertex:sw,normalmap_pars_fragment:rw,clearcoat_normal_fragment_begin:ow,clearcoat_normal_fragment_maps:aw,clearcoat_pars_fragment:cw,iridescence_pars_fragment:lw,opaque_fragment:uw,packing:hw,premultiplied_alpha_fragment:dw,project_vertex:fw,dithering_fragment:pw,dithering_pars_fragment:mw,roughnessmap_fragment:gw,roughnessmap_pars_fragment:vw,shadowmap_pars_fragment:_w,shadowmap_pars_vertex:yw,shadowmap_vertex:xw,shadowmask_pars_fragment:bw,skinbase_vertex:Sw,skinning_pars_vertex:Tw,skinning_vertex:Mw,skinnormal_vertex:ww,specularmap_fragment:Aw,specularmap_pars_fragment:Nw,tonemapping_fragment:Cw,tonemapping_pars_fragment:Ew,transmission_fragment:Rw,transmission_pars_fragment:Pw,uv_pars_fragment:Dw,uv_pars_vertex:Uw,uv_vertex:Lw,worldpos_vertex:Fw,background_vert:Iw,background_frag:Bw,backgroundCube_vert:Ow,backgroundCube_frag:Vw,cube_vert:kw,cube_frag:zw,depth_vert:Gw,depth_frag:Hw,distanceRGBA_vert:Ww,distanceRGBA_frag:qw,equirect_vert:jw,equirect_frag:$w,linedashed_vert:Xw,linedashed_frag:Yw,meshbasic_vert:Zw,meshbasic_frag:Kw,meshlambert_vert:Qw,meshlambert_frag:Jw,meshmatcap_vert:eA,meshmatcap_frag:tA,meshnormal_vert:nA,meshnormal_frag:iA,meshphong_vert:sA,meshphong_frag:rA,meshphysical_vert:oA,meshphysical_frag:aA,meshtoon_vert:cA,meshtoon_frag:lA,points_vert:uA,points_frag:hA,shadow_vert:dA,shadow_frag:fA,sprite_vert:pA,sprite_frag:mA},Rm={type:"change"},cf={type:"start"},Xv={type:"end"},Cc=new Zd,Pm=new Fi,vA=Math.cos(70*Yd.DEG2RAD),kt=new C,_n=2*Math.PI,ut={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},ih=1e-6;class _A extends I1{constructor(e,t=null){super(e,t),this.state=ut.NONE,this.enabled=!0,this.target=new C,this.cursor=new C,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Yr.ROTATE,MIDDLE:Yr.DOLLY,RIGHT:Yr.PAN},this.touches={ONE:zr.ROTATE,TWO:zr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new C,this._lastQuaternion=new tr,this._lastTargetPosition=new C,this._quat=new tr().setFromUnitVectors(e.up,new C(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Em,this._sphericalDelta=new Em,this._scale=1,this._panOffset=new C,this._rotateStart=new le,this._rotateEnd=new le,this._rotateDelta=new le,this._panStart=new le,this._panEnd=new le,this._panDelta=new le,this._dollyStart=new le,this._dollyEnd=new le,this._dollyDelta=new le,this._dollyDirection=new C,this._mouse=new le,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=xA.bind(this),this._onPointerDown=yA.bind(this),this._onPointerUp=bA.bind(this),this._onContextMenu=CA.bind(this),this._onMouseWheel=MA.bind(this),this._onKeyDown=wA.bind(this),this._onTouchStart=AA.bind(this),this._onTouchMove=NA.bind(this),this._onMouseDown=SA.bind(this),this._onMouseMove=TA.bind(this),this._interceptControlDown=EA.bind(this),this._interceptControlUp=RA.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(Rm),this.update(),this.state=ut.NONE}update(e=null){const t=this.object.position;kt.copy(t).sub(this.target),kt.applyQuaternion(this._quat),this._spherical.setFromVector3(kt),this.autoRotate&&this.state===ut.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=_n:n>Math.PI&&(n-=_n),i<-Math.PI?i+=_n:i>Math.PI&&(i-=_n),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const r=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=r!=this._spherical.radius}if(kt.setFromSpherical(this._spherical),kt.applyQuaternion(this._quatInverse),t.copy(this.target).add(kt),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let r=null;if(this.object.isPerspectiveCamera){const a=kt.length();r=this._clampDistance(a*this._scale);const c=a-r;this.object.position.addScaledVector(this._dollyDirection,c),this.object.updateMatrixWorld(),s=!!c}else if(this.object.isOrthographicCamera){const a=new C(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const c=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=c!==this.object.zoom;const l=new C(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(a),this.object.updateMatrixWorld(),r=kt.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;r!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(r).add(this.object.position):(Cc.origin.copy(this.object.position),Cc.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Cc.direction))<vA?this.object.lookAt(this.target):(Pm.setFromNormalAndCoplanarPoint(this.object.up,this.target),Cc.intersectPlane(Pm,this.target))))}else if(this.object.isOrthographicCamera){const r=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),r!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>ih||8*(1-this._lastQuaternion.dot(this.object.quaternion))>ih||this._lastTargetPosition.distanceToSquared(this.target)>ih?(this.dispatchEvent(Rm),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?_n/60*this.autoRotateSpeed*e:_n/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){kt.setFromMatrixColumn(t,0),kt.multiplyScalar(-e),this._panOffset.add(kt)}_panUp(e,t){this.screenSpacePanning===!0?kt.setFromMatrixColumn(t,1):(kt.setFromMatrixColumn(t,0),kt.crossVectors(this.object.up,kt)),kt.multiplyScalar(e),this._panOffset.add(kt)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;kt.copy(i).sub(this.target);let s=kt.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/n.clientHeight,this.object.matrix),this._panUp(2*t*s/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=e-n.left,s=t-n.top,r=n.width,a=n.height;this._mouse.x=i/r*2-1,this._mouse.y=-(s/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(_n*this._rotateDelta.x/t.clientHeight),this._rotateUp(_n*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(_n*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-_n*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(_n*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-_n*this.rotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,s=Math.sqrt(n*n+i*i);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateEnd.set(i,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(_n*this._rotateDelta.x/t.clientHeight),this._rotateUp(_n*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,s=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const r=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(r,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new le,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function yA(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(o)&&(this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o)))}function xA(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function bA(o){switch(this._removePointer(o),this._pointers.length){case 0:this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(Xv),this.state=ut.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function SA(o){let e;switch(o.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Yr.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(o),this.state=ut.DOLLY;break;case Yr.ROTATE:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=ut.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=ut.ROTATE}break;case Yr.PAN:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=ut.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=ut.PAN}break;default:this.state=ut.NONE}this.state!==ut.NONE&&this.dispatchEvent(cf)}function TA(o){switch(this.state){case ut.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(o);break;case ut.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(o);break;case ut.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(o);break}}function MA(o){this.enabled===!1||this.enableZoom===!1||this.state!==ut.NONE||(o.preventDefault(),this.dispatchEvent(cf),this._handleMouseWheel(this._customWheelEvent(o)),this.dispatchEvent(Xv))}function wA(o){this.enabled!==!1&&this._handleKeyDown(o)}function AA(o){switch(this._trackPointer(o),this._pointers.length){case 1:switch(this.touches.ONE){case zr.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(o),this.state=ut.TOUCH_ROTATE;break;case zr.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(o),this.state=ut.TOUCH_PAN;break;default:this.state=ut.NONE}break;case 2:switch(this.touches.TWO){case zr.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(o),this.state=ut.TOUCH_DOLLY_PAN;break;case zr.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(o),this.state=ut.TOUCH_DOLLY_ROTATE;break;default:this.state=ut.NONE}break;default:this.state=ut.NONE}this.state!==ut.NONE&&this.dispatchEvent(cf)}function NA(o){switch(this._trackPointer(o),this.state){case ut.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(o),this.update();break;case ut.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(o),this.update();break;case ut.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(o),this.update();break;case ut.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(o),this.update();break;default:this.state=ut.NONE}}function CA(o){this.enabled!==!1&&o.preventDefault()}function EA(o){o.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function RA(o){o.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}class PA extends nf{constructor(e,t={}){const n=t.font;if(n===void 0)super();else{const i=n.generateShapes(e,t.size);t.depth===void 0&&t.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),t.depth=t.depth!==void 0?t.depth:t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(i,t)}this.type="TextGeometry"}}class fd extends Na{constructor(e){super(e)}load(e,t,n,i){const s=this,r=new dd(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(a){const c=s.parse(JSON.parse(a));t&&t(c)},n,i)}parse(e){return new DA(e)}}class DA{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],i=UA(e,t,this.data);for(let s=0,r=i.length;s<r;s++)n.push(...i[s].toShapes());return n}}function UA(o,e,t){const n=Array.from(o),i=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*i,r=[];let a=0,c=0;for(let l=0;l<n.length;l++){const u=n[l];if(u===`
`)a=0,c-=s;else{const h=LA(u,i,a,c,t);a+=h.offsetX,r.push(h.path)}}return r}function LA(o,e,t,n,i){const s=i.glyphs[o]||i.glyphs["?"];if(!s){console.error('THREE.Font: character "'+o+'" does not exists in font family '+i.familyName+".");return}const r=new F1;let a,c,l,u,h,d,f,p;if(s.o){const m=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,_=m.length;g<_;)switch(m[g++]){case"m":a=m[g++]*e+t,c=m[g++]*e+n,r.moveTo(a,c);break;case"l":a=m[g++]*e+t,c=m[g++]*e+n,r.lineTo(a,c);break;case"q":l=m[g++]*e+t,u=m[g++]*e+n,h=m[g++]*e+t,d=m[g++]*e+n,r.quadraticCurveTo(h,d,l,u);break;case"b":l=m[g++]*e+t,u=m[g++]*e+n,h=m[g++]*e+t,d=m[g++]*e+n,f=m[g++]*e+t,p=m[g++]*e+n,r.bezierCurveTo(h,d,f,p,l,u);break}}return{offsetX:s.ha*e,path:r}}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const FA=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class IA{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=FA,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:n,material:i,object:s}=e;if(t={material:this.getMaterialData(i),geometry:{attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:s.matrixWorld.clone()},s.center&&(t.center=s.center.clone()),s.morphTargetInfluences&&(t.morphTargetInfluences=s.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:r,height:a}=e.context;t.bufferWidth=r,t.bufferHeight=a}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const n in e){const i=e[n];t[n]={version:i.version}}return t}containsNode(e){const t=e.material;for(const n in t)if(t[n]&&t[n].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const n of this.refreshUniforms){const i=e[n];i!=null&&(typeof i=="object"&&i.clone!==void 0?i.isTexture===!0?t[n]={id:i.id,version:i.version}:t[n]=i.clone():t[n]=i)}return t}equals(e){const{object:t,material:n,geometry:i}=e,s=this.getRenderObjectData(e);if(s.worldMatrix.equals(t.matrixWorld)!==!0)return s.worldMatrix.copy(t.matrixWorld),!1;const r=s.material;for(const m in r){const g=r[m],_=n[m];if(g.equals!==void 0){if(g.equals(_)===!1)return g.copy(_),!1}else if(_.isTexture===!0){if(g.id!==_.id||g.version!==_.version)return g.id=_.id,g.version=_.version,!1}else if(g!==_)return r[m]=_,!1}if(r.transmission>0){const{width:m,height:g}=e.context;if(s.bufferWidth!==m||s.bufferHeight!==g)return s.bufferWidth=m,s.bufferHeight=g,!1}const a=s.geometry,c=i.attributes,l=a.attributes,u=Object.keys(l),h=Object.keys(c);if(u.length!==h.length)return s.geometry.attributes=this.getAttributesData(c),!1;for(const m of u){const g=l[m],_=c[m];if(_===void 0)return delete l[m],!1;if(g.version!==_.version)return g.version=_.version,!1}const d=i.index,f=a.indexVersion,p=d?d.version:null;if(f!==p)return a.indexVersion=p,!1;if(a.drawRange.start!==i.drawRange.start||a.drawRange.count!==i.drawRange.count)return a.drawRange.start=i.drawRange.start,a.drawRange.count=i.drawRange.count,!1;if(s.morphTargetInfluences){let m=!1;for(let g=0;g<s.morphTargetInfluences.length;g++)s.morphTargetInfluences[g]!==t.morphTargetInfluences[g]&&(m=!0);if(m)return!0}return s.center&&s.center.equals(t.center)===!1?(s.center.copy(t.center),!0):(e.bundle!==null&&(s.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;const i=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return i||s?!1:this.equals(e)!==!0}}function fa(o,e=0){let t=3735928559^e,n=1103547991^e;if(o instanceof Array)for(let i=0,s;i<o.length;i++)s=o[i],t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);else for(let i=0,s;i<o.length;i++)s=o.charCodeAt(i),t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}const Yv=o=>fa(o),lf=o=>fa(o),Zv=(...o)=>fa(o);function Kv(o,e=!1){const t=[];o.isNode===!0&&(t.push(o.id),o=o.getSelf());for(const{property:n,childNode:i}of gl(o))t.push(t,fa(n.slice(0,-4)),i.getCacheKey(e));return fa(t)}function*gl(o,e=!1){for(const t in o){if(t.startsWith("_")===!0)continue;const n=o[t];if(Array.isArray(n)===!0)for(let i=0;i<n.length;i++){const s=n[i];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:i,childNode:s})}else if(n&&n.isNode===!0)yield{property:t,childNode:n};else if(typeof n=="object")for(const i in n){const s=n[i];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:i,childNode:s})}}}const BA=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]);function Qv(o){return BA.get(o)}function Jv(o){if(/float|int|uint/.test(o))return 1;if(/vec2/.test(o))return 2;if(/vec3/.test(o))return 3;if(/vec4/.test(o))return 4;if(/mat3/.test(o))return 9;if(/mat4/.test(o))return 16;console.error("THREE.TSL: Unsupported type:",o)}function gs(o){if(o==null)return null;const e=typeof o;return o.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":o.isVector2===!0?"vec2":o.isVector3===!0?"vec3":o.isVector4===!0?"vec4":o.isMatrix3===!0?"mat3":o.isMatrix4===!0?"mat4":o.isColor===!0?"color":o instanceof ArrayBuffer?"ArrayBuffer":null}function e_(o,...e){const t=o?o.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),o==="color"?new We(...e):t==="vec2"?new le(...e):t==="vec3"?new C(...e):t==="vec4"?new Ke(...e):t==="mat3"?new pn(...e):t==="mat4"?new Xe(...e):o==="bool"?e[0]||!1:o==="float"||o==="int"||o==="uint"?e[0]||0:o==="string"?e[0]||"":o==="ArrayBuffer"?n_(e[0]):null}function t_(o){let e="";const t=new Uint8Array(o);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function n_(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0)).buffer}const pd={VERTEX:"vertex",FRAGMENT:"fragment"},Fe={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},OA={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},rn={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},i_=["fragment","vertex"],md=["setup","analyze","generate"],gd=[...i_,"compute"],cr=["x","y","z","w"];let VA=0;class Ee extends Ts{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=Fe.NONE,this.updateBeforeType=Fe.NONE,this.updateAfterType=Fe.NONE,this.uuid=Yd.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:VA++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,Fe.FRAME)}onRenderUpdate(e){return this.onUpdate(e,Fe.RENDER)}onObjectUpdate(e){return this.onUpdate(e,Fe.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of gl(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=Kv(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let n=0;for(const i of this.getChildren())t["node"+n++]=i;return null}analyze(e){if(e.increaseUsage(this)===1){const n=e.getNodeProperties(this);for(const i of Object.values(n))i&&i.isNode===!0&&i.build(e)}}generate(e,t){const{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const n=this.getShared(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addChain(this);let i=null;const s=e.getBuildStage();if(s==="setup"){this.updateReference(e);const r=e.getNodeProperties(this);if(r.initialized!==!0){const a=e.stack.nodes.length;r.initialized=!0,r.outputNode=this.setup(e),r.outputNode!==null&&e.stack.nodes.length;for(const c of Object.values(r))c&&c.isNode===!0&&c.build(e)}}else if(s==="analyze")this.analyze(e);else if(s==="generate")if(this.generate.length===1){const a=this.getNodeType(e),c=e.getDataFromNode(this);i=c.snippet,i===void 0?(i=this.generate(e)||"",c.snippet=i):c.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),i=e.format(i,a,t)}else i=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),i}getSerializeChildren(){return gl(this)}serialize(e){const t=this.getSerializeChildren(),n={};for(const{property:i,index:s,childNode:r}of t)s!==void 0?(n[i]===void 0&&(n[i]=Number.isInteger(s)?[]:{}),n[i][s]=r.toJSON(e.meta).uuid):n[i]=r.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){const i=[];for(const s of e.inputNodes[n])i.push(t[s]);this[n]=i}else if(typeof e.inputNodes[n]=="object"){const i={};for(const s in e.inputNodes[n]){const r=e.inputNodes[n][s];i[s]=t[r]}this[n]=i}else{const i=e.inputNodes[n];this[n]=t[i]}}}toJSON(e){const{uuid:t,type:n}=this,i=e===void 0||typeof e=="string";i&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:n,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},i!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function r(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}if(i){const a=r(e.textures),c=r(e.images),l=r(e.nodes);a.length>0&&(s.textures=a),c.length>0&&(s.images=c),l.length>0&&(s.nodes=l)}return s}}class lr extends Ee{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),n=this.indexNode.build(e,"uint");return`${t}[ ${n} ]`}}class s_ extends Ee{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let n=null;for(const i of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(i))&&(n=i);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const n=this.node,i=this.getNodeType(e),s=n.build(e,i);return e.format(s,i,t)}}class Nt extends Ee{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const i=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,i,t);if(i!=="void"&&t!=="void"&&this.hasDependencies(e)){const r=super.build(e,i),a=e.getVarFromNode(this,null,i),c=e.getPropertyName(a);return e.addLineFlowCode(`${c} = ${r}`,this),s.snippet=r,s.propertyName=c,e.format(s.propertyName,i,t)}}return super.build(e,t)}}class kA extends Nt{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){const n=this.getNodeType(e),i=this.nodes,s=e.getComponentType(n),r=[];for(const c of i){let l=c.build(e);const u=e.getComponentType(c.getNodeType(e));u!==s&&(l=e.format(l,u,s)),r.push(l)}const a=`${e.getType(n)}( ${r.join(", ")} )`;return e.format(a,n,t)}}const zA=cr.join("");class vd extends Ee{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(cr.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const n=this.node,i=e.getTypeLength(n.getNodeType(e));let s=null;if(i>1){let r=null;this.getVectorLength()>=i&&(r=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const c=n.build(e,r);this.components.length===i&&this.components===zA.slice(0,this.components.length)?s=e.format(c,r,t):s=e.format(`${c}.${this.components}`,this.getNodeType(e),t)}else s=n.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class GA extends Nt{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:n,targetNode:i}=this,s=this.getNodeType(e),r=e.getTypeFromLength(n.length,i.getNodeType(e)),a=i.build(e,r),c=t.build(e,s),l=e.getTypeLength(s),u=[];for(let h=0;h<l;h++){const d=cr[h];d===n[0]?(u.push(a),h+=n.length-1):u.push(c+"."+d)}return`${e.getType(s)}( ${u.join(", ")} )`}}class HA extends Nt{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:n}=this,i=this.getNodeType(e),s=n.build(e),r=e.getVarFromNode(this),a=e.getPropertyName(r);e.addLineFlowCode(a+" = "+s,this);const c=e.getTypeLength(i),l=[];let u=0;for(let h=0;h<c;h++){const d=cr[h];d===t[u]?(l.push("1.0 - "+(a+"."+d)),u++):l.push(a+"."+d)}return`${e.getType(i)}( ${l.join(", ")} )`}}class uf extends Ee{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?gs(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=gs(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=t_(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?e_(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class ri extends uf{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const n=this.getNodeType(e);return e.format(this.generateConst(e),n,t)}}let oo=null;const qr=new Map;function X(o,e){if(qr.has(o)){console.warn(`Redefinition of method chaining ${o}`);return}if(typeof e!="function")throw new Error(`Node element ${o} is not a function`);qr.set(o,e)}const r_=o=>o.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Dm=o=>r_(o).split("").sort().join(""),o_={setup(o,e){const t=e.shift();return o(Ca(t),...e)},get(o,e,t){if(typeof e=="string"&&o[e]===void 0){if(o.isStackNode!==!0&&e==="assign")return(...n)=>(oo.assign(t,...n),t);if(qr.has(e)){const n=qr.get(e);return o.isStackNode?(...i)=>t.add(n(...i)):(...i)=>n(t,...i)}else{if(e==="self")return o;if(e.endsWith("Assign")&&qr.has(e.slice(0,e.length-6))){const n=qr.get(e.slice(0,e.length-6));return o.isStackNode?(...i)=>t.assign(i[0],n(...i)):(...i)=>t.assign(n(t,...i))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=r_(e),K(new vd(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Dm(e.slice(3).toLowerCase()),n=>K(new GA(o,e,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Dm(e.slice(4).toLowerCase()),()=>K(new HA(K(o),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),K(new vd(o,e));if(/^\d+$/.test(e)===!0)return K(new lr(t,new ri(Number(e),"uint")))}}}return Reflect.get(o,e,t)},set(o,e,t,n){return typeof e=="string"&&o[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(n[e].assign(t),!0):Reflect.set(o,e,t,n)}},sh=new WeakMap,Um=new WeakMap,WA=function(o,e=null){const t=gs(o);if(t==="node"){let n=sh.get(o);return n===void 0&&(n=new Proxy(o,o_),sh.set(o,n),sh.set(n,n)),n}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return K(_d(o,e));if(t==="shader")return F(o)}return o},qA=function(o,e=null){for(const t in o)o[t]=K(o[t],e);return o},jA=function(o,e=null){const t=o.length;for(let n=0;n<t;n++)o[n]=K(o[n],e);return o},$A=function(o,e=null,t=null,n=null){const i=s=>K(n!==null?Object.assign(s,n):s);return e===null?(...s)=>i(new o(...js(s))):t!==null?(t=K(t),(...s)=>i(new o(e,...js(s),t))):(...s)=>i(new o(e,...js(s)))},XA=function(o,...e){return K(new o(...js(e)))};class YA extends Ee{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:n}=this,i=e.getNodeProperties(t);if(i.onceOutput)return i.onceOutput;let s=null;if(t.layout){let r=Um.get(e.constructor);r===void 0&&(r=new WeakMap,Um.set(e.constructor,r));let a=r.get(t);a===void 0&&(a=K(e.buildFunctionNode(t)),r.set(t,a)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(a),s=K(a.call(n))}else{const r=t.jsFunc,a=n!==null?r(n,e):r(e);s=K(a)}return t.once&&(i.onceOutput=s),s}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class ZA extends Ee{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Ca(e),K(new YA(this,e))}setup(){return this.call()}}const KA=[!1,!0],QA=[0,1,2,3],JA=[-1,-2],a_=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],hf=new Map;for(const o of KA)hf.set(o,new ri(o));const df=new Map;for(const o of QA)df.set(o,new ri(o,"uint"));const ff=new Map([...df].map(o=>new ri(o.value,"int")));for(const o of JA)ff.set(o,new ri(o,"int"));const Il=new Map([...ff].map(o=>new ri(o.value)));for(const o of a_)Il.set(o,new ri(o));for(const o of a_)Il.set(-o,new ri(-o));const Bl={bool:hf,uint:df,ints:ff,float:Il},Lm=new Map([...hf,...Il]),_d=(o,e)=>Lm.has(o)?Lm.get(o):o.isNode===!0?o:new ri(o,e),eN=o=>{try{return o.getNodeType()}catch{return}},Ot=function(o,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(o)&&t.every(i=>typeof i!="object"))&&(t=[e_(o,...t)]),t.length===1&&e!==null&&e.has(t[0]))return K(e.get(t[0]));if(t.length===1){const i=_d(t[0],o);return eN(i)===o?K(i):K(new s_(i,o))}const n=t.map(i=>_d(i));return K(new kA(n,o))}},pa=o=>typeof o=="object"&&o!==null?o.value:o,c_=o=>o!=null?o.nodeType||o.convertTo||(typeof o=="string"?o:null):null;function Jo(o,e){return new Proxy(new ZA(o,e),o_)}const K=(o,e=null)=>WA(o,e),Ca=(o,e=null)=>new qA(o,e),js=(o,e=null)=>new jA(o,e),q=(...o)=>new $A(...o),he=(...o)=>new XA(...o),F=(o,e)=>{const t=new Jo(o,e),n=(...i)=>{let s;return Ca(i),i[0]&&i[0].isNode?s=[...i]:s=i[0],t.call(s)};return n.shaderNode=t,n.setLayout=i=>(t.setLayout(i),n),n.once=()=>(t.once=!0,n),n},tN=(...o)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),F(...o));X("toGlobal",o=>(o.global=!0,o));const ma=o=>{oo=o},pf=()=>oo,Ve=(...o)=>oo.If(...o);function l_(o){return oo&&oo.add(o),o}X("append",l_);const u_=new Ot("color"),S=new Ot("float",Bl.float),A=new Ot("int",Bl.ints),pe=new Ot("uint",Bl.uint),ji=new Ot("bool",Bl.bool),J=new Ot("vec2"),zt=new Ot("ivec2"),h_=new Ot("uvec2"),d_=new Ot("bvec2"),P=new Ot("vec3"),f_=new Ot("ivec3"),po=new Ot("uvec3"),mf=new Ot("bvec3"),Ae=new Ot("vec4"),p_=new Ot("ivec4"),m_=new Ot("uvec4"),g_=new Ot("bvec4"),Ol=new Ot("mat2"),cn=new Ot("mat3"),$s=new Ot("mat4"),nN=(o="")=>K(new ri(o,"string")),iN=o=>K(new ri(o,"ArrayBuffer"));X("toColor",u_);X("toFloat",S);X("toInt",A);X("toUint",pe);X("toBool",ji);X("toVec2",J);X("toIVec2",zt);X("toUVec2",h_);X("toBVec2",d_);X("toVec3",P);X("toIVec3",f_);X("toUVec3",po);X("toBVec3",mf);X("toVec4",Ae);X("toIVec4",p_);X("toUVec4",m_);X("toBVec4",g_);X("toMat2",Ol);X("toMat3",cn);X("toMat4",$s);const v_=q(lr),__=(o,e)=>K(new s_(K(o),e)),sN=(o,e)=>K(new vd(K(o),e));X("element",v_);X("convert",__);class y_ extends Ee{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=n,this.isUniformGroup=!0}set needsUpdate(e){e===!0&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const x_=o=>new y_(o),gf=(o,e=0)=>new y_(o,!0,e),b_=gf("frame"),Pe=gf("render"),vf=x_("object");class Ea extends uf{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=vf}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const n=this.getSelf();return e=e.bind(n),super.onUpdate(i=>{const s=e(i,n);s!==void 0&&(this.value=s)},t)}generate(e,t){const n=this.getNodeType(e),i=this.getUniformHash(e);let s=e.getNodeFromHash(i);s===void 0&&(e.setHashNode(this,i),s=this);const r=s.getInputType(e),a=e.getUniformFromNode(s,r,e.shaderStage,this.name||e.context.label),c=e.getPropertyName(a);return e.context.label!==void 0&&delete e.context.label,e.format(c,n,t)}}const Ne=(o,e)=>{const t=c_(e||o),n=o&&o.isNode===!0?o.node&&o.node.value||o.value:o;return K(new Ea(n,t))};class it extends Ee{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const S_=(o,e)=>K(new it(o,e)),ga=(o,e)=>K(new it(o,e,!0)),et=he(it,"vec4","DiffuseColor"),yd=he(it,"vec3","EmissiveColor"),hi=he(it,"float","Roughness"),va=he(it,"float","Metalness"),vl=he(it,"float","Clearcoat"),_a=he(it,"float","ClearcoatRoughness"),Gs=he(it,"vec3","Sheen"),Vl=he(it,"float","SheenRoughness"),kl=he(it,"float","Iridescence"),_f=he(it,"float","IridescenceIOR"),yf=he(it,"float","IridescenceThickness"),_l=he(it,"float","AlphaT"),us=he(it,"float","Anisotropy"),ea=he(it,"vec3","AnisotropyT"),Xs=he(it,"vec3","AnisotropyB"),yn=he(it,"color","SpecularColor"),ya=he(it,"float","SpecularF90"),yl=he(it,"float","Shininess"),T_=he(it,"vec4","Output"),Qc=he(it,"float","dashSize"),xd=he(it,"float","gapSize"),rN=he(it,"float","pointWidth"),ta=he(it,"float","IOR"),xl=he(it,"float","Transmission"),xf=he(it,"float","Thickness"),bf=he(it,"float","AttenuationDistance"),Sf=he(it,"color","AttenuationColor"),Tf=he(it,"float","Dispersion");class oN extends Nt{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const n=e.getTypeLength(t.node.getNodeType(e));return cr.join("").slice(0,n)!==t.components}return!1}generate(e,t){const{targetNode:n,sourceNode:i}=this,s=this.needsSplitAssign(e),r=n.getNodeType(e),a=n.context({assign:!0}).build(e),c=i.build(e,r),l=i.getNodeType(e),u=e.getDataFromNode(this);let h;if(u.initialized===!0)t!=="void"&&(h=a);else if(s){const d=e.getVarFromNode(this,null,r),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${c}`,this);const p=n.node.context({assign:!0}).build(e);for(let m=0;m<n.components.length;m++){const g=n.components[m];e.addLineFlowCode(`${p}.${g} = ${f}[ ${m} ]`,this)}t!=="void"&&(h=a)}else h=`${a} = ${c}`,(t==="void"||l==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=a));return u.initialized=!0,e.format(h,r,t)}}const M_=q(oN);X("assign",M_);class aN extends Nt{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],n=this.functionNode,i=n.getInputs(e),s=this.parameters,r=(c,l)=>{const u=l.type,h=u==="pointer";let d;return h?d="&"+c.build(e):d=c.build(e,u),d};if(Array.isArray(s))for(let c=0;c<s.length;c++)t.push(r(s[c],i[c]));else for(const c of i){const l=s[c.name];if(l!==void 0)t.push(r(l,c));else throw new Error(`FunctionCallNode: Input '${c.name}' not found in FunctionNode.`)}return`${n.build(e,"property")}( ${t.join(", ")} )`}}const w_=(o,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?js(e):Ca(e[0]),K(new aN(K(o),e)));X("call",w_);class yt extends Nt{static get type(){return"OperatorNode"}constructor(e,t,n,...i){if(super(),i.length>0){let s=new yt(e,t,n);for(let r=0;r<i.length-1;r++)s=new yt(e,s,i[r]);t=s,n=i[i.length-1]}this.op=e,this.aNode=t,this.bNode=n}getNodeType(e,t){const n=this.op,i=this.aNode,s=this.bNode,r=i.getNodeType(e),a=typeof s<"u"?s.getNodeType(e):null;if(r==="void"||a==="void")return"void";if(n==="%")return r;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(r);if(n==="!"||n==="=="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){const c=t?e.getTypeLength(t):Math.max(e.getTypeLength(r),e.getTypeLength(a));return c>1?`bvec${c}`:"bool"}else return r==="float"&&e.isMatrix(a)?a:e.isMatrix(r)&&e.isVector(a)?e.getVectorFromMatrix(r):e.isVector(r)&&e.isMatrix(a)?e.getVectorFromMatrix(a):e.getTypeLength(a)>e.getTypeLength(r)?a:r}generate(e,t){const n=this.op,i=this.aNode,s=this.bNode,r=this.getNodeType(e,t);let a=null,c=null;r!=="void"?(a=i.getNodeType(e),c=typeof s<"u"?s.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="?e.isVector(a)?c=a:a!==c&&(a=c="float"):n===">>"||n==="<<"?(a=r,c=e.changeComponentType(c,"uint")):e.isMatrix(a)&&e.isVector(c)?c=e.getVectorFromMatrix(a):e.isVector(a)&&e.isMatrix(c)?a=e.getVectorFromMatrix(c):a=c=r):a=c=r;const l=i.build(e,a),u=typeof s<"u"?s.build(e,c):null,h=e.getTypeLength(t),d=e.getFunctionOperator(n);if(t!=="void")return n==="<"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} < ${u} )`,r,t):n==="<="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} <= ${u} )`,r,t):n===">"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} > ${u} )`,r,t):n===">="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} >= ${u} )`,r,t):n==="!"||n==="~"?e.format(`(${n}${l})`,a,t):d?e.format(`${d}( ${l}, ${u} )`,r,t):e.format(`( ${l} ${n} ${u} )`,r,t);if(a!=="void")return d?e.format(`${d}( ${l}, ${u} )`,r,t):e.format(`${l} ${n} ${u}`,r,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Pt=q(yt,"+"),Ye=q(yt,"-"),Ie=q(yt,"*"),si=q(yt,"/"),Mf=q(yt,"%"),A_=q(yt,"=="),N_=q(yt,"!="),C_=q(yt,"<"),wf=q(yt,">"),E_=q(yt,"<="),R_=q(yt,">="),P_=q(yt,"&&"),D_=q(yt,"||"),U_=q(yt,"!"),L_=q(yt,"^^"),F_=q(yt,"&"),I_=q(yt,"~"),B_=q(yt,"|"),O_=q(yt,"^"),V_=q(yt,"<<"),k_=q(yt,">>");X("add",Pt);X("sub",Ye);X("mul",Ie);X("div",si);X("modInt",Mf);X("equal",A_);X("notEqual",N_);X("lessThan",C_);X("greaterThan",wf);X("lessThanEqual",E_);X("greaterThanEqual",R_);X("and",P_);X("or",D_);X("not",U_);X("xor",L_);X("bitAnd",F_);X("bitNot",I_);X("bitOr",B_);X("bitXor",O_);X("shiftLeft",V_);X("shiftRight",k_);const z_=(...o)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),Mf(...o));X("remainder",z_);class U extends Nt{static get type(){return"MathNode"}constructor(e,t,n=null,i=null){super(),this.method=e,this.aNode=t,this.bNode=n,this.cNode=i}getInputType(e){const t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,i=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(n)?0:e.getTypeLength(n),a=e.isMatrix(i)?0:e.getTypeLength(i);return s>r&&s>a?t:r>a?n:a>s?i:t}getNodeType(e){const t=this.method;return t===U.LENGTH||t===U.DISTANCE||t===U.DOT?"float":t===U.CROSS?"vec3":t===U.ALL?"bool":t===U.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===U.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const n=this.method,i=this.getNodeType(e),s=this.getInputType(e),r=this.aNode,a=this.bNode,c=this.cNode,l=e.renderer.isWebGLRenderer===!0;if(n===U.TRANSFORM_DIRECTION){let u=r,h=a;e.isMatrix(u.getNodeType(e))?h=Ae(P(h),0):u=Ae(P(u),0);const d=Ie(u,h).xyz;return $i(d).build(e,t)}else{if(n===U.NEGATE)return e.format("( - "+r.build(e,s)+" )",i,t);if(n===U.ONE_MINUS)return Ye(1,r).build(e,t);if(n===U.RECIPROCAL)return si(1,r).build(e,t);if(n===U.DIFFERENCE)return ht(Ye(r,a)).build(e,t);{const u=[];return n===U.CROSS||n===U.MOD?u.push(r.build(e,i),a.build(e,i)):l&&n===U.STEP?u.push(r.build(e,e.getTypeLength(r.getNodeType(e))===1?"float":s),a.build(e,s)):l&&(n===U.MIN||n===U.MAX)||n===U.MOD?u.push(r.build(e,s),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":s)):n===U.REFRACT?u.push(r.build(e,s),a.build(e,s),c.build(e,"float")):n===U.MIX?u.push(r.build(e,s),a.build(e,s),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":s)):(u.push(r.build(e,s)),a!==null&&u.push(a.build(e,s)),c!==null&&u.push(c.build(e,s))),e.format(`${e.getMethod(n,i)}( ${u.join(", ")} )`,i,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}U.ALL="all";U.ANY="any";U.EQUALS="equals";U.RADIANS="radians";U.DEGREES="degrees";U.EXP="exp";U.EXP2="exp2";U.LOG="log";U.LOG2="log2";U.SQRT="sqrt";U.INVERSE_SQRT="inversesqrt";U.FLOOR="floor";U.CEIL="ceil";U.NORMALIZE="normalize";U.FRACT="fract";U.SIN="sin";U.COS="cos";U.TAN="tan";U.ASIN="asin";U.ACOS="acos";U.ATAN="atan";U.ABS="abs";U.SIGN="sign";U.LENGTH="length";U.NEGATE="negate";U.ONE_MINUS="oneMinus";U.DFDX="dFdx";U.DFDY="dFdy";U.ROUND="round";U.RECIPROCAL="reciprocal";U.TRUNC="trunc";U.FWIDTH="fwidth";U.BITCAST="bitcast";U.TRANSPOSE="transpose";U.ATAN2="atan2";U.MIN="min";U.MAX="max";U.MOD="mod";U.STEP="step";U.REFLECT="reflect";U.DISTANCE="distance";U.DIFFERENCE="difference";U.DOT="dot";U.CROSS="cross";U.POW="pow";U.TRANSFORM_DIRECTION="transformDirection";U.MIX="mix";U.CLAMP="clamp";U.REFRACT="refract";U.SMOOTHSTEP="smoothstep";U.FACEFORWARD="faceforward";const G_=S(1e-6),cN=S(1e6),bl=S(Math.PI),lN=S(Math.PI*2),Af=q(U,U.ALL),H_=q(U,U.ANY),W_=q(U,U.EQUALS),q_=q(U,U.RADIANS),j_=q(U,U.DEGREES),Nf=q(U,U.EXP),ao=q(U,U.EXP2),zl=q(U,U.LOG),pi=q(U,U.LOG2),wi=q(U,U.SQRT),$_=q(U,U.INVERSE_SQRT),mi=q(U,U.FLOOR),Gl=q(U,U.CEIL),$i=q(U,U.NORMALIZE),Yi=q(U,U.FRACT),Dn=q(U,U.SIN),Ii=q(U,U.COS),X_=q(U,U.TAN),Y_=q(U,U.ASIN),Z_=q(U,U.ACOS),K_=q(U,U.ATAN),ht=q(U,U.ABS),xa=q(U,U.SIGN),Hi=q(U,U.LENGTH),Q_=q(U,U.NEGATE),J_=q(U,U.ONE_MINUS),Cf=q(U,U.DFDX),Ef=q(U,U.DFDY),ey=q(U,U.ROUND),ty=q(U,U.RECIPROCAL),Rf=q(U,U.TRUNC),ny=q(U,U.FWIDTH),uN=q(U,U.BITCAST),iy=q(U,U.TRANSPOSE),sy=q(U,U.ATAN2),Sn=q(U,U.MIN),wt=q(U,U.MAX),Pf=q(U,U.MOD),Hl=q(U,U.STEP),ry=q(U,U.REFLECT),oy=q(U,U.DISTANCE),ay=q(U,U.DIFFERENCE),ws=q(U,U.DOT),Wl=q(U,U.CROSS),ti=q(U,U.POW),Df=q(U,U.POW,2),cy=q(U,U.POW,3),ly=q(U,U.POW,4),uy=q(U,U.TRANSFORM_DIRECTION),hy=o=>Ie(xa(o),ti(ht(o),1/3)),dy=o=>ws(o,o),tt=q(U,U.MIX),vi=(o,e=0,t=1)=>K(new U(U.CLAMP,K(o),K(e),K(t))),fy=o=>vi(o),Uf=q(U,U.REFRACT),Xi=q(U,U.SMOOTHSTEP),py=q(U,U.FACEFORWARD),my=F(([o])=>{const n=43758.5453,i=ws(o.xy,J(12.9898,78.233)),s=Pf(i,bl);return Yi(Dn(s).mul(n))}),gy=(o,e,t)=>tt(e,t,o),vy=(o,e,t)=>Xi(e,t,o);X("all",Af);X("any",H_);X("equals",W_);X("radians",q_);X("degrees",j_);X("exp",Nf);X("exp2",ao);X("log",zl);X("log2",pi);X("sqrt",wi);X("inverseSqrt",$_);X("floor",mi);X("ceil",Gl);X("normalize",$i);X("fract",Yi);X("sin",Dn);X("cos",Ii);X("tan",X_);X("asin",Y_);X("acos",Z_);X("atan",K_);X("abs",ht);X("sign",xa);X("length",Hi);X("lengthSq",dy);X("negate",Q_);X("oneMinus",J_);X("dFdx",Cf);X("dFdy",Ef);X("round",ey);X("reciprocal",ty);X("trunc",Rf);X("fwidth",ny);X("atan2",sy);X("min",Sn);X("max",wt);X("mod",Pf);X("step",Hl);X("reflect",ry);X("distance",oy);X("dot",ws);X("cross",Wl);X("pow",ti);X("pow2",Df);X("pow3",cy);X("pow4",ly);X("transformDirection",uy);X("mix",gy);X("clamp",vi);X("refract",Uf);X("smoothstep",vy);X("faceForward",py);X("difference",ay);X("saturate",fy);X("cbrt",hy);X("transpose",iy);X("rand",my);class hN extends Ee{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){const t=this.ifNode.getNodeType(e);if(this.elseNode!==null){const n=this.elseNode.getNodeType(e);if(e.getTypeLength(n)>e.getTypeLength(t))return n}return t}setup(e){const t=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=s,i!==null&&(e.getDataFromNode(i).parentNodeBlock=s);const r=e.getNodeProperties(this);r.condNode=t,r.ifNode=n.context({nodeBlock:n}),r.elseNode=i?i.context({nodeBlock:i}):null}generate(e,t){const n=this.getNodeType(e),i=e.getDataFromNode(this);if(i.nodeProperty!==void 0)return i.nodeProperty;const{condNode:s,ifNode:r,elseNode:a}=e.getNodeProperties(this),c=t!=="void",l=c?S_(n).build(e):"";i.nodeProperty=l;const u=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${u} ) {

`).addFlowTab();let h=r.build(e,n);if(h&&(c?h=l+" = "+h+";":h="return "+h+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+h+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let d=a.build(e,n);d&&(c?d=l+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(l,n,t)}}const Kt=q(hN);X("select",Kt);const _y=(...o)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Kt(...o));X("cond",_y);class yy extends Ee{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e);return e.setContext(t),n}generate(e,t){const n=e.getContext();e.setContext({...e.context,...this.value});const i=this.node.build(e,t);return e.setContext(n),i}}const ql=q(yy),xy=(o,e)=>ql(o,{label:e});X("context",ql);X("label",xy);class by extends Ee{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:n}=this,i=e.getVarFromNode(this,n,e.getVectorType(this.getNodeType(e))),s=e.getPropertyName(i),r=t.build(e,i.type);return e.addLineFlowCode(`${s} = ${r}`,this),s}}const Sy=q(by);X("toVar",(...o)=>Sy(...o).append());const Ty=o=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),Sy(o));X("temp",Ty);class dN extends Ee{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let n=t.varying;if(n===void 0){const i=this.name,s=this.getNodeType(e);t.varying=n=e.getVaryingFromNode(this,i,s),t.node=this.node}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),n=this.setupVarying(e);if(t.propertyName===void 0){const i=this.getNodeType(e),s=e.getPropertyName(n,pd.VERTEX);e.flowNodeFromShaderStage(pd.VERTEX,this.node,i,s),t.propertyName=s}return e.getPropertyName(n)}}const Mn=q(dN);X("varying",Mn);const My=F(([o])=>{const e=o.mul(.9478672986).add(.0521327014).pow(2.4),t=o.mul(.0773993808),n=o.lessThanEqual(.04045);return tt(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),wy=F(([o])=>{const e=o.pow(.41666).mul(1.055).sub(.055),t=o.mul(12.92),n=o.lessThanEqual(.0031308);return tt(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ra="WorkingColorSpace",Lf="OutputColorSpace";class Pa extends Nt{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===Ra?Ct.workingColorSpace:t===Lf?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),i=this.resolveColorSpace(e,this.target);let s=t;return Ct.enabled===!1||n===i||!n||!i||(Ct.getTransfer(n)===Yo&&(s=Ae(My(s.rgb),s.a)),Ct.getPrimaries(n)!==Ct.getPrimaries(i)&&(s=Ae(cn(Ct._getMatrix(new pn,n,i)).mul(s.rgb),s.a)),Ct.getTransfer(i)===Yo&&(s=Ae(wy(s.rgb),s.a))),s}}const Ay=o=>K(new Pa(K(o),Ra,Lf)),Ny=o=>K(new Pa(K(o),Lf,Ra)),Cy=(o,e)=>K(new Pa(K(o),Ra,e)),Ff=(o,e)=>K(new Pa(K(o),e,Ra)),fN=(o,e,t)=>K(new Pa(K(o),e,t));X("toOutputColorSpace",Ay);X("toWorkingColorSpace",Ny);X("workingToColorSpace",Cy);X("colorSpaceToWorking",Ff);let pN=class extends lr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}};class Ey extends Ee{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=Fe.OBJECT}setGroup(e){return this.group=e,this}element(e){return K(new pN(this,K(e)))}setNodeType(e){const t=Ne(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const mN=(o,e,t)=>K(new Ey(o,e,t));class gN extends Ey{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(Pe)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const Ry=(o,e,t)=>K(new gN(o,e,t));class vN extends Nt{static get type(){return"ToneMappingNode"}constructor(e,t=Dy,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}getCacheKey(){return Zv(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,n=this.toneMapping;if(n===Zr)return t;let i=null;const s=e.renderer.library.getToneMappingFunction(n);return s!==null?i=Ae(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=t),i}}const Py=(o,e,t)=>K(new vN(o,K(e),K(t))),Dy=Ry("toneMappingExposure","float");X("toneMapping",(o,e,t)=>Py(e,t,o));class _N extends uf{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=i,this.usage=hl,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),n=this.value,i=e.getTypeLength(t),s=this.bufferStride||i,r=this.bufferOffset,a=n.isInterleavedBuffer===!0?n:new Lv(n,s),c=new Jd(a,i,r);a.setUsage(this.usage),this.attribute=c,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),i=e.getPropertyName(n);let s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=i,s=i):s=Mn(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Da=(o,e,t,n)=>K(new _N(o,e,t,n)),Uy=(o,e,t,n)=>Da(o,e,t,n).setUsage(Hr),Sl=(o,e,t,n)=>Da(o,e,t,n).setInstanced(!0),bd=(o,e,t,n)=>Uy(o,e,t,n).setInstanced(!0);X("toAttribute",o=>Da(o.value));class yN extends Ee{static get type(){return"ComputeNode"}constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.updateBeforeType=Fe.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let n=t[0];for(let i=1;i<t.length;i++)n*=t[i];this.dispatchCount=Math.ceil(e/n)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}}}const Ly=(o,e,t)=>K(new yN(K(o),e,t));X("compute",Ly);class xN extends Ee{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const s=this.node.build(e,...t);return e.setCache(n),s}}const na=(o,...e)=>K(new xN(K(o),...e));X("cache",na);class bN extends Ee{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Fy=q(bN);X("bypass",Fy);class Iy extends Ee{static get type(){return"RemapNode"}constructor(e,t,n,i=S(0),s=S(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=i,this.outHighNode=s,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:n,outLowNode:i,outHighNode:s,doClamp:r}=this;let a=e.sub(t).div(n.sub(t));return r===!0&&(a=a.clamp()),a.mul(s.sub(i)).add(i)}}const By=q(Iy,null,null,{doClamp:!1}),Oy=q(Iy);X("remap",By);X("remapClamp",Oy);class Vy extends Ee{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const n=this.getNodeType(e),i=this.snippet;if(n==="void")e.addLineFlowCode(i,this);else return e.format(`( ${i} )`,n,t)}}const bs=q(Vy),ky=o=>(o?Kt(o,bs("discard")):bs("discard")).append(),SN=()=>bs("return").append();X("discard",ky);class TN extends Nt{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const n=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||Zr,i=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||er;return n!==Zr&&(t=t.toneMapping(n)),i!==er&&i!==Ct.workingColorSpace&&(t=t.workingToColorSpace(i)),t}}const zy=(o,e=null,t=null)=>K(new TN(K(o),e,t));X("renderOutput",zy);function MN(o){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",o)}class Gy extends Ee{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){const i=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(i)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const s=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(s),a=e.getAttribute(t,r);return e.shaderStage==="vertex"?e.format(a.name,r,n):Mn(this).build(e,n)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const _i=(o,e)=>K(new Gy(o,e)),xt=o=>_i("uv"+(o>0?o:""),"vec2");class wN extends Ee{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const n=this.textureNode.build(e,"property"),i=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(e),t)}}const Ys=q(wN);class AN extends Ea{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=Fe.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){const{width:i,height:s}=n;this.value=Math.log2(Math.max(i,s))}}}const Hy=q(AN);class yi extends Ea{static get type(){return"TextureNode"}constructor(e,t=null,n=null,i=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Fe.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Zt?"uvec4":this.value.type===dn?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return xt(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=Ne(this.value.matrix)),this._matrixUniform.mul(P(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Fe.FRAME:Fe.NONE,this}setupUV(e,t){const n=this.value;return e.isFlipY()&&(n.image instanceof ImageBitmap&&n.flipY===!0||n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(A(Ys(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let i=this.levelNode;i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=i,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,n,i,s,r,a,c){const l=this.value;let u;return i?u=e.generateTextureLevel(l,t,n,i,r):s?u=e.generateTextureBias(l,t,n,s,r):c?u=e.generateTextureGrad(l,t,n,c,r):a?u=e.generateTextureCompare(l,t,n,a,r):this.sampler===!1?u=e.generateTextureLoad(l,t,n,r):u=e.generateTexture(l,t,n,r),u}generate(e,t){const n=e.getNodeProperties(this),i=this.value;if(!i||i.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(e,"property");if(t==="sampler")return s+"_sampler";if(e.isReference(t))return s;{const r=e.getDataFromNode(this);let a=r.propertyName;if(a===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:p,gradNode:m}=n,g=this.generateUV(e,u),_=h?h.build(e,"float"):null,x=d?d.build(e,"float"):null,y=p?p.build(e,"int"):null,b=f?f.build(e,"float"):null,M=m?[m[0].build(e,"vec2"),m[1].build(e,"vec2")]:null,N=e.getVarFromNode(this);a=e.getPropertyName(N);const T=this.generateSnippet(e,s,g,_,x,y,b,M);e.addLineFlowCode(`${a} = ${T}`,this),r.snippet=T,r.propertyName=a}let c=a;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(i)&&(c=Ff(bs(c,l),i.colorSpace).setup(e).build(e,l)),e.format(c,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=K(e),t.referenceNode=this.getSelf(),K(t)}blur(e){const t=this.clone();return t.biasNode=K(e).mul(Hy(t)),t.referenceNode=this.getSelf(),K(t)}level(e){const t=this.clone();return t.levelNode=K(e),t.referenceNode=this.getSelf(),K(t)}size(e){return Ys(this,e)}bias(e){const t=this.clone();return t.biasNode=K(e),t.referenceNode=this.getSelf(),K(t)}compare(e){const t=this.clone();return t.compareNode=K(e),t.referenceNode=this.getSelf(),K(t)}grad(e,t){const n=this.clone();return n.gradNode=[K(e),K(t)],n.referenceNode=this.getSelf(),K(n)}depth(e){const t=this.clone();return t.depthNode=K(e),t.referenceNode=this.getSelf(),K(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const qe=q(yi),Tt=(...o)=>qe(...o).setSampler(!1),NN=o=>(o.isNode===!0?o:qe(o)).convert("sampler"),ds=Ne("float").label("cameraNear").setGroup(Pe).onRenderUpdate(({camera:o})=>o.near),fs=Ne("float").label("cameraFar").setGroup(Pe).onRenderUpdate(({camera:o})=>o.far),Ss=Ne("mat4").label("cameraProjectionMatrix").setGroup(Pe).onRenderUpdate(({camera:o})=>o.projectionMatrix),CN=Ne("mat4").label("cameraProjectionMatrixInverse").setGroup(Pe).onRenderUpdate(({camera:o})=>o.projectionMatrixInverse),wn=Ne("mat4").label("cameraViewMatrix").setGroup(Pe).onRenderUpdate(({camera:o})=>o.matrixWorldInverse),EN=Ne("mat4").label("cameraWorldMatrix").setGroup(Pe).onRenderUpdate(({camera:o})=>o.matrixWorld),RN=Ne("mat3").label("cameraNormalMatrix").setGroup(Pe).onRenderUpdate(({camera:o})=>o.normalMatrix),Wy=Ne(new C).label("cameraPosition").setGroup(Pe).onRenderUpdate(({camera:o},e)=>e.value.setFromMatrixPosition(o.matrixWorld));class Je extends Ee{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Fe.OBJECT,this._uniformNode=new Ea(null)}getNodeType(){const e=this.scope;if(e===Je.WORLD_MATRIX)return"mat4";if(e===Je.POSITION||e===Je.VIEW_POSITION||e===Je.DIRECTION||e===Je.SCALE)return"vec3"}update(e){const t=this.object3d,n=this._uniformNode,i=this.scope;if(i===Je.WORLD_MATRIX)n.value=t.matrixWorld;else if(i===Je.POSITION)n.value=n.value||new C,n.value.setFromMatrixPosition(t.matrixWorld);else if(i===Je.SCALE)n.value=n.value||new C,n.value.setFromMatrixScale(t.matrixWorld);else if(i===Je.DIRECTION)n.value=n.value||new C,t.getWorldDirection(n.value);else if(i===Je.VIEW_POSITION){const s=e.camera;n.value=n.value||new C,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(s.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Je.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===Je.POSITION||t===Je.VIEW_POSITION||t===Je.DIRECTION||t===Je.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Je.WORLD_MATRIX="worldMatrix";Je.POSITION="position";Je.SCALE="scale";Je.VIEW_POSITION="viewPosition";Je.DIRECTION="direction";const PN=q(Je,Je.DIRECTION),DN=q(Je,Je.WORLD_MATRIX),qy=q(Je,Je.POSITION),UN=q(Je,Je.SCALE),LN=q(Je,Je.VIEW_POSITION);class xi extends Je{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const FN=he(xi,xi.DIRECTION),Hn=he(xi,xi.WORLD_MATRIX),IN=he(xi,xi.POSITION),BN=he(xi,xi.SCALE),ON=he(xi,xi.VIEW_POSITION),jy=Ne(new pn).onObjectUpdate(({object:o},e)=>e.value.getNormalMatrix(o.matrixWorld)),VN=Ne(new Xe).onObjectUpdate(({object:o},e)=>e.value.copy(o.matrixWorld).invert()),ur=wn.mul(Hn).toVar("modelViewMatrix"),kN=F(o=>(o.context.isHighPrecisionModelViewMatrix=!0,Ne("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highPrecisionModelViewMatrix"),zN=F(o=>{const e=o.context.isHighPrecisionModelViewMatrix;return Ne("mat3").onObjectUpdate(({object:t,camera:n})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highPrecisionModelNormalMatrix"),If=_i("position","vec3"),St=If.varying("positionLocal"),Tl=If.varying("positionPrevious"),Wi=Hn.mul(St).xyz.varying("v_positionWorld"),Bf=St.transformDirection(Hn).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),Bt=ur.mul(St).xyz.varying("v_positionView"),ft=Bt.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class GN extends Ee{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:n}=e;return t.coordinateSystem===ei&&n.side===qn?"false":e.getFrontFacing()}}const $y=he(GN),Ua=S($y).mul(2).sub(1),jl=_i("normal","vec3"),Tn=F(o=>o.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),P(0,1,0)):jl,"vec3").once()().toVar("normalLocal"),Xy=Bt.dFdx().cross(Bt.dFdy()).normalize().toVar("normalFlat"),jn=F(o=>{let e;return o.material.flatShading===!0?e=Xy:e=Mn(Of(Tn),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),$l=Mn(jn.transformDirection(wn),"v_normalWorld").normalize().toVar("normalWorld"),Mt=F(o=>o.context.setupNormal(),"vec3").once()().mul(Ua).toVar("transformedNormalView"),Xl=Mt.transformDirection(wn).toVar("transformedNormalWorld"),jr=F(o=>o.context.setupClearcoatNormal(),"vec3").once()().mul(Ua).toVar("transformedClearcoatNormalView"),Yy=F(([o,e=Hn])=>{const t=cn(e),n=o.div(P(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(n).xyz}),Of=F(([o],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(o);const n=jy.mul(o);return wn.transformDirection(n)}),Zy=Ne(0).onReference(({material:o})=>o).onRenderUpdate(({material:o})=>o.refractionRatio),Ky=ft.negate().reflect(Mt),Qy=ft.negate().refract(Mt,Zy),Jy=Ky.transformDirection(wn).toVar("reflectVector"),e0=Qy.transformDirection(wn).toVar("reflectVector");class HN extends yi{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,i=null){super(e,t,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Qs?Jy:e.mapping===io?e0:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),P(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const n=this.value;return e.renderer.coordinateSystem===qi||!n.isRenderTargetTexture?P(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const co=q(HN);class Vf extends Ea{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const La=(o,e,t)=>K(new Vf(o,e,t));class WN extends lr{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),n=this.getNodeType();return e.format(t,"vec4",n)}}class t0 extends Vf{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=Fe.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,n=this.getElementLength(),i=this.getElementType();if(n===1)for(let s=0;s<e.length;s++){const r=s*4;t[r]=e[s]}else if(i==="color")for(let s=0;s<e.length;s++){const r=s*4,a=e[s];t[r]=a.r,t[r+1]=a.g,t[r+2]=a.b||0}else for(let s=0;s<e.length;s++){const r=s*4,a=e[s];t[r]=a.x,t[r+1]=a.y,t[r+2]=a.z||0,t[r+3]=a.w||0}}setup(e){const t=this.array.length;this._elementType=this.elementType===null?gs(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let n=Float32Array;return this._elementType.charAt(0)==="i"?n=Int32Array:this._elementType.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*4),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return K(new WN(this,K(e)))}}const Oi=(o,e)=>K(new t0(o,e)),qN=(o,e)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),K(new t0(o,e)));class jN extends lr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}}class Yl extends Ee{static get type(){return"ReferenceNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=Fe.OBJECT}element(e){return K(new jN(this,K(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=La(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Oi(null,e):e==="texture"?t=qe(null):e==="cubeTexture"?t=co(null):t=Ne(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const rt=(o,e,t)=>K(new Yl(o,e,t)),Sd=(o,e,t,n)=>K(new Yl(o,e,n,t));class $N extends Yl{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const Vi=(o,e,t)=>K(new $N(o,e,t)),Zl=F(o=>(o.geometry.hasAttribute("tangent")===!1&&o.geometry.computeTangents(),_i("tangent","vec4")))(),Fa=Zl.xyz.toVar("tangentLocal"),Ia=ur.mul(Ae(Fa,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),n0=Ia.transformDirection(wn).varying("v_tangentWorld").normalize().toVar("tangentWorld"),kf=Ia.toVar("transformedTangentView"),XN=kf.transformDirection(wn).normalize().toVar("transformedTangentWorld"),Ba=o=>o.mul(Zl.w).xyz,YN=Mn(Ba(jl.cross(Zl)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),ZN=Mn(Ba(Tn.cross(Fa)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),i0=Mn(Ba(jn.cross(Ia)),"v_bitangentView").normalize().toVar("bitangentView"),KN=Mn(Ba($l.cross(n0)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),s0=Ba(Mt.cross(kf)).normalize().toVar("transformedBitangentView"),QN=s0.transformDirection(wn).normalize().toVar("transformedBitangentWorld"),Hs=cn(Ia,i0,jn),r0=ft.mul(Hs),JN=(o,e)=>o.sub(r0.mul(e)),o0=(()=>{let o=Xs.cross(ft);return o=o.cross(Xs).normalize(),o=tt(o,Mt,us.mul(hi.oneMinus()).oneMinus().pow2().pow2()).normalize(),o})(),e2=F(o=>{const{eye_pos:e,surf_norm:t,mapN:n,uv:i}=o,s=e.dFdx(),r=e.dFdy(),a=i.dFdx(),c=i.dFdy(),l=t,u=r.cross(l),h=l.cross(s),d=u.mul(a.x).add(h.mul(c.x)),f=u.mul(a.y).add(h.mul(c.y)),p=d.dot(d).max(f.dot(f)),m=Ua.mul(p.inverseSqrt());return Pt(d.mul(n.x,m),f.mul(n.y,m),l.mul(n.z)).normalize()});class t2 extends Nt{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=xs}setup(e){const{normalMapType:t,scaleNode:n}=this;let i=this.node.mul(2).sub(1);n!==null&&(i=P(i.xy.mul(n),i.z));let s=null;return t===vS?s=Of(i):t===xs&&(e.hasGeometryAttribute("tangent")===!0?s=Hs.mul(i).normalize():s=e2({eye_pos:Bt,surf_norm:jn,mapN:i,uv:xt()})),s}}const Td=q(t2),n2=F(({textureNode:o,bumpScale:e})=>{const t=i=>o.cache().context({getUV:s=>i(s.uvNode||xt()),forceUVContext:!0}),n=S(t(i=>i));return J(S(t(i=>i.add(i.dFdx()))).sub(n),S(t(i=>i.add(i.dFdy()))).sub(n)).mul(e)}),i2=F(o=>{const{surf_pos:e,surf_norm:t,dHdxy:n}=o,i=e.dFdx().normalize(),s=e.dFdy().normalize(),r=t,a=s.cross(r),c=r.cross(i),l=i.dot(a).mul(Ua),u=l.sign().mul(n.x.mul(a).add(n.y.mul(c)));return l.abs().mul(t).sub(u).normalize()});class s2 extends Nt{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=n2({textureNode:this.textureNode,bumpScale:e});return i2({surf_pos:Bt,surf_norm:jn,dHdxy:t})}}const a0=q(s2),Fm=new Map;class H extends Ee{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=Fm.get(e);return n===void 0&&(n=Vi(e,t),Fm.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,n=this.scope;let i=null;if(n===H.COLOR){const s=t.color!==void 0?this.getColor(n):P();t.map&&t.map.isTexture===!0?i=s.mul(this.getTexture("map")):i=s}else if(n===H.OPACITY){const s=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?i=s.mul(this.getTexture("alpha")):i=s}else if(n===H.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?i=this.getTexture("specular").r:i=S(1);else if(n===H.SPECULAR_INTENSITY){const s=this.getFloat(n);t.specularMap?i=s.mul(this.getTexture(n).a):i=s}else if(n===H.SPECULAR_COLOR){const s=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?i=s.mul(this.getTexture(n).rgb):i=s}else if(n===H.ROUGHNESS){const s=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).g):i=s}else if(n===H.METALNESS){const s=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?i=s.mul(this.getTexture(n).b):i=s}else if(n===H.EMISSIVE){const s=this.getFloat("emissiveIntensity"),r=this.getColor(n).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?i=r.mul(this.getTexture(n)):i=r}else if(n===H.NORMAL)t.normalMap?(i=Td(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=t.normalMapType):t.bumpMap?i=a0(this.getTexture("bump").r,this.getFloat("bumpScale")):i=jn;else if(n===H.CLEARCOAT){const s=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===H.CLEARCOAT_ROUGHNESS){const s=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===H.CLEARCOAT_NORMAL)t.clearcoatNormalMap?i=Td(this.getTexture(n),this.getCache(n+"Scale","vec2")):i=jn;else if(n===H.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?i=s.mul(this.getTexture("sheenColor").rgb):i=s}else if(n===H.SHEEN_ROUGHNESS){const s=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).a):i=s,i=i.clamp(.07,1)}else if(n===H.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const s=this.getTexture(n);i=Ol(Or.x,Or.y,Or.y.negate(),Or.x).mul(s.rg.mul(2).sub(J(1)).normalize().mul(s.b))}else i=Or;else if(n===H.IRIDESCENCE_THICKNESS){const s=rt("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=rt("0","float",t.iridescenceThicknessRange);i=s.sub(r).mul(this.getTexture(n).g).add(r)}else i=s}else if(n===H.TRANSMISSION){const s=this.getFloat(n);t.transmissionMap?i=s.mul(this.getTexture(n).r):i=s}else if(n===H.THICKNESS){const s=this.getFloat(n);t.thicknessMap?i=s.mul(this.getTexture(n).g):i=s}else if(n===H.IOR)i=this.getFloat(n);else if(n===H.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===H.AO_MAP)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const s=this.getNodeType(e);i=this.getCache(n,s)}return i}}H.ALPHA_TEST="alphaTest";H.COLOR="color";H.OPACITY="opacity";H.SHININESS="shininess";H.SPECULAR="specular";H.SPECULAR_STRENGTH="specularStrength";H.SPECULAR_INTENSITY="specularIntensity";H.SPECULAR_COLOR="specularColor";H.REFLECTIVITY="reflectivity";H.ROUGHNESS="roughness";H.METALNESS="metalness";H.NORMAL="normal";H.CLEARCOAT="clearcoat";H.CLEARCOAT_ROUGHNESS="clearcoatRoughness";H.CLEARCOAT_NORMAL="clearcoatNormal";H.EMISSIVE="emissive";H.ROTATION="rotation";H.SHEEN="sheen";H.SHEEN_ROUGHNESS="sheenRoughness";H.ANISOTROPY="anisotropy";H.IRIDESCENCE="iridescence";H.IRIDESCENCE_IOR="iridescenceIOR";H.IRIDESCENCE_THICKNESS="iridescenceThickness";H.IOR="ior";H.TRANSMISSION="transmission";H.THICKNESS="thickness";H.ATTENUATION_DISTANCE="attenuationDistance";H.ATTENUATION_COLOR="attenuationColor";H.LINE_SCALE="scale";H.LINE_DASH_SIZE="dashSize";H.LINE_GAP_SIZE="gapSize";H.LINE_WIDTH="linewidth";H.LINE_DASH_OFFSET="dashOffset";H.POINT_WIDTH="pointWidth";H.DISPERSION="dispersion";H.LIGHT_MAP="light";H.AO_MAP="ao";const c0=he(H,H.ALPHA_TEST),l0=he(H,H.COLOR),u0=he(H,H.SHININESS),h0=he(H,H.EMISSIVE),zf=he(H,H.OPACITY),d0=he(H,H.SPECULAR),Md=he(H,H.SPECULAR_INTENSITY),f0=he(H,H.SPECULAR_COLOR),ia=he(H,H.SPECULAR_STRENGTH),Jc=he(H,H.REFLECTIVITY),p0=he(H,H.ROUGHNESS),m0=he(H,H.METALNESS),g0=he(H,H.NORMAL).context({getUV:null}),v0=he(H,H.CLEARCOAT),_0=he(H,H.CLEARCOAT_ROUGHNESS),y0=he(H,H.CLEARCOAT_NORMAL).context({getUV:null}),x0=he(H,H.ROTATION),b0=he(H,H.SHEEN),S0=he(H,H.SHEEN_ROUGHNESS),T0=he(H,H.ANISOTROPY),M0=he(H,H.IRIDESCENCE),w0=he(H,H.IRIDESCENCE_IOR),A0=he(H,H.IRIDESCENCE_THICKNESS),N0=he(H,H.TRANSMISSION),C0=he(H,H.THICKNESS),E0=he(H,H.IOR),R0=he(H,H.ATTENUATION_DISTANCE),P0=he(H,H.ATTENUATION_COLOR),D0=he(H,H.LINE_SCALE),U0=he(H,H.LINE_DASH_SIZE),L0=he(H,H.LINE_GAP_SIZE),r2=he(H,H.LINE_WIDTH),F0=he(H,H.LINE_DASH_OFFSET),o2=he(H,H.POINT_WIDTH),I0=he(H,H.DISPERSION),Gf=he(H,H.LIGHT_MAP),B0=he(H,H.AO_MAP),Or=Ne(new le).onReference(function(o){return o.material}).onRenderUpdate(function({material:o}){this.value.set(o.anisotropy*Math.cos(o.anisotropyRotation),o.anisotropy*Math.sin(o.anisotropyRotation))});class a2 extends Nt{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if(e.shaderStage==="fragment")return Mn(e.context.mvp);const t=this.positionNode||St,n=e.renderer.nodes.modelViewMatrix||ur;return Ss.mul(n).mul(t)}}const Hf=q(a2);class pt extends Ee{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),n=this.scope;let i;if(n===pt.VERTEX)i=e.getVertexIndex();else if(n===pt.INSTANCE)i=e.getInstanceIndex();else if(n===pt.DRAW)i=e.getDrawIndex();else if(n===pt.INVOCATION_LOCAL)i=e.getInvocationLocalIndex();else if(n===pt.INVOCATION_SUBGROUP)i=e.getInvocationSubgroupIndex();else if(n===pt.SUBGROUP)i=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=i:s=Mn(this).build(e,t),s}}pt.VERTEX="vertex";pt.INSTANCE="instance";pt.SUBGROUP="subgroup";pt.INVOCATION_LOCAL="invocationLocal";pt.INVOCATION_SUBGROUP="invocationSubgroup";pt.DRAW="draw";const O0=he(pt,pt.VERTEX),Oa=he(pt,pt.INSTANCE),c2=he(pt,pt.SUBGROUP),l2=he(pt,pt.INVOCATION_SUBGROUP),u2=he(pt,pt.INVOCATION_LOCAL),V0=he(pt,pt.DRAW);class k0 extends Ee{static get type(){return"InstanceNode"}constructor(e,t,n){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=n,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Fe.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:n,instanceColor:i}=this;let{instanceMatrixNode:s,instanceColorNode:r}=this;if(s===null){if(t<=1e3)s=La(n.array,"mat4",Math.max(t,1)).element(Oa);else{const c=new L1(n.array,16,1);this.buffer=c;const l=n.usage===Hr?bd:Sl,u=[l(c,"vec4",16,0),l(c,"vec4",16,4),l(c,"vec4",16,8),l(c,"vec4",16,12)];s=$s(...u)}this.instanceMatrixNode=s}if(i&&r===null){const c=new Ul(i.array,3),l=i.usage===Hr?bd:Sl;this.bufferColor=c,r=P(l(c,"vec3",3,0)),this.instanceColorNode=r}const a=s.mul(St).xyz;if(St.assign(a),e.hasGeometryAttribute("normal")){const c=Yy(Tn,s);Tn.assign(c)}this.instanceColorNode!==null&&ga("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==Hr&&this.buffer!=null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==Hr&&this.bufferColor!=null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const h2=q(k0);class d2 extends k0{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:n,instanceColor:i}=e;super(t,n,i),this.instanceMesh=e}}const z0=q(d2);class f2 extends Ee{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Oa:this.batchingIdNode=V0);const n=F(([p])=>{const m=Ys(Tt(this.batchMesh._indirectTexture),0),g=A(p).modInt(A(m)),_=A(p).div(A(m));return Tt(this.batchMesh._indirectTexture,zt(g,_)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(A(this.batchingIdNode)),i=this.batchMesh._matricesTexture,s=Ys(Tt(i),0),r=S(n).mul(4).toInt().toVar(),a=r.modInt(s),c=r.div(A(s)),l=$s(Tt(i,zt(a,c)),Tt(i,zt(a.add(1),c)),Tt(i,zt(a.add(2),c)),Tt(i,zt(a.add(3),c))),u=this.batchMesh._colorsTexture;if(u!==null){const m=F(([g])=>{const _=Ys(Tt(u),0).x,x=g,y=x.modInt(_),b=x.div(_);return Tt(u,zt(y,b)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);ga("vec3","vBatchColor").assign(m)}const h=cn(l);St.assign(l.mul(St));const d=Tn.div(P(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;Tn.assign(f),e.hasGeometryAttribute("tangent")&&Fa.mulAssign(h)}}const G0=q(f2),Im=new WeakMap;class H0 extends Ee{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=Fe.OBJECT,this.skinIndexNode=_i("skinIndex","uvec4"),this.skinWeightNode=_i("skinWeight","vec4");let n,i,s;t?(n=rt("bindMatrix","mat4"),i=rt("bindMatrixInverse","mat4"),s=Sd("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(n=Ne(e.bindMatrix,"mat4"),i=Ne(e.bindMatrixInverse,"mat4"),s=La(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=n,this.bindMatrixInverseNode=i,this.boneMatricesNode=s,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=St){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=e.element(n.x),c=e.element(n.y),l=e.element(n.z),u=e.element(n.w),h=s.mul(t),d=Pt(a.mul(i.x).mul(h),c.mul(i.y).mul(h),l.mul(i.z).mul(h),u.mul(i.w).mul(h));return r.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Tn){const{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=e.element(n.x),c=e.element(n.y),l=e.element(n.z),u=e.element(n.w);let h=Pt(i.x.mul(a),i.y.mul(c),i.z.mul(l),i.w.mul(u));return h=r.mul(h).mul(s),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Sd("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Tl)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Tl.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(St.assign(t),e.hasGeometryAttribute("normal")){const n=this.getSkinnedNormal();Tn.assign(n),e.hasGeometryAttribute("tangent")&&Fa.assign(n)}}generate(e,t){if(t!=="void")return St.build(e,t)}update(e){const n=(this.useReference?e.object:this.skinnedMesh).skeleton;Im.get(n)!==e.frameId&&(Im.set(n,e.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}}const p2=o=>K(new H0(o)),W0=o=>K(new H0(o,!0));class m2 extends Ee{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const n={};for(let s=0,r=this.params.length-1;s<r;s++){const a=this.params[s],c=a.isNode!==!0&&a.name||this.getVarName(s),l=a.isNode!==!0&&a.type||"int";n[c]=bs(c,l)}const i=e.addStack();return t.returnsNode=this.params[this.params.length-1](n,i,e),t.stackNode=i,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),n=this.params,i=t.stackNode;for(let a=0,c=n.length-1;a<c;a++){const l=n[a];let u=null,h=null,d=null,f=null,p=null,m=null;l.isNode?(f="int",d=this.getVarName(a),u="0",h=l.build(e,f),p="<"):(f=l.type||"int",d=l.name||this.getVarName(a),u=l.start,h=l.end,p=l.condition,m=l.update,typeof u=="number"?u=e.generateConst(f,u):u&&u.isNode&&(u=u.build(e,f)),typeof h=="number"?h=e.generateConst(f,h):h&&h.isNode&&(h=h.build(e,f)),u!==void 0&&h===void 0?(u=u+" - 1",h="0",p=">="):h!==void 0&&u===void 0&&(u="0",p="<"),p===void 0&&(Number(u)>Number(h)?p=">=":p="<"));const g={start:u,end:h,condition:p},_=g.start,x=g.end;let y="",b="",M="";m||(f==="int"||f==="uint"?p.includes("<")?m="++":m="--":p.includes("<")?m="+= 1.":m="-= 1."),y+=e.getVar(f,d)+" = "+_,b+=d+" "+p+" "+x,M+=d+" "+m;const N=`for ( ${y}; ${b}; ${M} )`;e.addFlowCode((a===0?`
`:"")+e.tab+N+` {

`).addFlowTab()}const s=i.build(e,"void"),r=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let a=0,c=this.params.length-1;a<c;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),r}}const nt=(...o)=>K(new m2(js(o,"int"))).append(),g2=()=>bs("continue").append(),q0=()=>bs("break").append(),v2=(...o)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),nt(...o)),rh=new WeakMap,Rn=new Ke,Bm=F(({bufferMap:o,influence:e,stride:t,width:n,depth:i,offset:s})=>{const r=A(O0).mul(t).add(s),a=r.div(n),c=r.sub(a.mul(n));return Tt(o,zt(c,a)).depth(i).mul(e)});function _2(o){const e=o.morphAttributes.position!==void 0,t=o.morphAttributes.normal!==void 0,n=o.morphAttributes.color!==void 0,i=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,s=i!==void 0?i.length:0;let r=rh.get(o);if(r===void 0||r.count!==s){let x=function(){g.dispose(),rh.delete(o),o.removeEventListener("dispose",x)};var a=x;r!==void 0&&r.texture.dispose();const c=o.morphAttributes.position||[],l=o.morphAttributes.normal||[],u=o.morphAttributes.color||[];let h=0;e===!0&&(h=1),t===!0&&(h=2),n===!0&&(h=3);let d=o.attributes.position.count*h,f=1;const p=4096;d>p&&(f=Math.ceil(d/p),d=p);const m=new Float32Array(d*f*4*s),g=new nT(m,d,f,s);g.type=Un,g.needsUpdate=!0;const _=h*4;for(let y=0;y<s;y++){const b=c[y],M=l[y],N=u[y],T=d*f*4*y;for(let w=0;w<b.count;w++){const L=w*_;e===!0&&(Rn.fromBufferAttribute(b,w),m[T+L+0]=Rn.x,m[T+L+1]=Rn.y,m[T+L+2]=Rn.z,m[T+L+3]=0),t===!0&&(Rn.fromBufferAttribute(M,w),m[T+L+4]=Rn.x,m[T+L+5]=Rn.y,m[T+L+6]=Rn.z,m[T+L+7]=0),n===!0&&(Rn.fromBufferAttribute(N,w),m[T+L+8]=Rn.x,m[T+L+9]=Rn.y,m[T+L+10]=Rn.z,m[T+L+11]=N.itemSize===4?Rn.w:1)}}r={count:s,texture:g,stride:h,size:new le(d,f)},rh.set(o,r),o.addEventListener("dispose",x)}return r}class y2 extends Ee{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Ne(1),this.updateType=Fe.OBJECT}setup(e){const{geometry:t}=e,n=t.morphAttributes.position!==void 0,i=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,r=s!==void 0?s.length:0,{texture:a,stride:c,size:l}=_2(t);n===!0&&St.mulAssign(this.morphBaseInfluence),i===!0&&Tn.mulAssign(this.morphBaseInfluence);const u=A(l.width);nt(r,({i:h})=>{const d=S(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(Tt(this.mesh.morphTexture,zt(A(h).add(1),A(Oa))).r):d.assign(rt("morphTargetInfluences","float").element(h).toVar()),n===!0&&St.addAssign(Bm({bufferMap:a,influence:d,stride:c,width:u,depth:h,offset:A(0)})),i===!0&&Tn.addAssign(Bm({bufferMap:a,influence:d,stride:c,width:u,depth:h,offset:A(1)}))})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,n)=>t+n,0)}}const j0=q(y2);class mo extends Ee{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class x2 extends mo{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class b2 extends yy{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,i=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,n=P().toVar("directDiffuse"),i=P().toVar("directSpecular"),s=P().toVar("indirectDiffuse"),r=P().toVar("indirectSpecular"),a={directDiffuse:n,directSpecular:i,indirectDiffuse:s,indirectSpecular:r};return{radiance:P().toVar("radiance"),irradiance:P().toVar("irradiance"),iblIrradiance:P().toVar("iblIrradiance"),ambientOcclusion:S(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const $0=q(b2);class S2 extends mo{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Lo,Fo;class It extends Ee{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===It.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Fe.NONE;return(this.scope===It.SIZE||this.scope===It.VIEWPORT)&&(e=Fe.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===It.VIEWPORT?t!==null?Fo.copy(t.viewport):(e.getViewport(Fo),Fo.multiplyScalar(e.getPixelRatio())):t!==null?(Lo.width=t.width,Lo.height=t.height):e.getDrawingBufferSize(Lo)}setup(){const e=this.scope;let t=null;return e===It.SIZE?t=Ne(Lo||(Lo=new le)):e===It.VIEWPORT?t=Ne(Fo||(Fo=new Ke)):t=J(Va.div(ba)),t}generate(e){if(this.scope===It.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const n=e.getNodeProperties(ba).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}}It.COORDINATE="coordinate";It.VIEWPORT="viewport";It.SIZE="size";It.UV="uv";const bi=he(It,It.UV),ba=he(It,It.SIZE),Va=he(It,It.COORDINATE),Wf=he(It,It.VIEWPORT),X0=Wf.zw,Y0=Va.sub(Wf.xy),T2=Y0.div(X0),M2=F(()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),ba),"vec2").once()(),w2=F(()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),bi),"vec2").once()(),A2=F(()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),bi.flipY()),"vec2").once()(),Io=new le;class Kl extends yi{static get type(){return"ViewportTextureNode"}constructor(e=bi,t=null,n=null){n===null&&(n=new Bv,n.minFilter=ki),super(n,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=Fe.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Io);const n=this.value;(n.image.width!==Io.width||n.image.height!==Io.height)&&(n.image.width=Io.width,n.image.height=Io.height,n.needsUpdate=!0);const i=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=i}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const N2=q(Kl),qf=q(Kl,null,null,{generateMipmaps:!0});let oh=null;class C2 extends Kl{static get type(){return"ViewportDepthTextureNode"}constructor(e=bi,t=null){oh===null&&(oh=new or),super(e,t,oh)}}const jf=q(C2);class xn extends Ee{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===xn.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,n=this.valueNode;let i=null;if(t===xn.DEPTH_BASE)n!==null&&(i=K0().assign(n));else if(t===xn.DEPTH)e.isPerspectiveCamera?i=Z0(Bt.z,ds,fs):i=to(Bt.z,ds,fs);else if(t===xn.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){const s=$f(n,ds,fs);i=to(s,ds,fs)}else i=n;else i=to(Bt.z,ds,fs);return i}}xn.DEPTH_BASE="depthBase";xn.DEPTH="depth";xn.LINEAR_DEPTH="linearDepth";const to=(o,e,t)=>o.add(e).div(e.sub(t)),E2=(o,e,t)=>e.sub(t).mul(o).sub(e),Z0=(o,e,t)=>e.add(o).mul(t).div(t.sub(e).mul(o)),$f=(o,e,t)=>e.mul(t).div(t.sub(e).mul(o).sub(t)),Xf=(o,e,t)=>{e=e.max(1e-6).toVar();const n=pi(o.negate().div(e)),i=pi(t.div(e));return n.div(i)},R2=(o,e,t)=>{const n=o.mul(zl(t.div(e)));return S(Math.E).pow(n).mul(e).negate()},K0=q(xn,xn.DEPTH_BASE),Yf=he(xn,xn.DEPTH),Ml=q(xn,xn.LINEAR_DEPTH),P2=Ml(jf());Yf.assign=o=>K0(o);class D2 extends Ee{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const U2=q(D2);class Wn extends Ee{static get type(){return"ClippingNode"}constructor(e=Wn.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:n,unionPlanes:i}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Wn.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,i):this.scope===Wn.HARDWARE?this.setupHardwareClipping(i,e):this.setupDefault(n,i)}setupAlphaToCoverage(e,t){return F(()=>{const n=S().toVar("distanceToPlane"),i=S().toVar("distanceToGradient"),s=S(1).toVar("clipOpacity"),r=t.length;if(!this.hardwareClipping&&r>0){const c=Oi(t);nt(r,({i:l})=>{const u=c.element(l);n.assign(Bt.dot(u.xyz).negate().add(u.w)),i.assign(n.fwidth().div(2)),s.mulAssign(Xi(i.negate(),i,n))})}const a=e.length;if(a>0){const c=Oi(e),l=S(1).toVar("intersectionClipOpacity");nt(a,({i:u})=>{const h=c.element(u);n.assign(Bt.dot(h.xyz).negate().add(h.w)),i.assign(n.fwidth().div(2)),l.mulAssign(Xi(i.negate(),i,n).oneMinus())}),s.mulAssign(l.oneMinus())}et.a.mulAssign(s),et.a.equal(0).discard()})()}setupDefault(e,t){return F(()=>{const n=t.length;if(!this.hardwareClipping&&n>0){const s=Oi(t);nt(n,({i:r})=>{const a=s.element(r);Bt.dot(a.xyz).greaterThan(a.w).discard()})}const i=e.length;if(i>0){const s=Oi(e),r=ji(!0).toVar("clipped");nt(i,({i:a})=>{const c=s.element(a);r.assign(Bt.dot(c.xyz).greaterThan(c.w).and(r))}),r.discard()}})()}setupHardwareClipping(e,t){const n=e.length;return t.enableHardwareClipping(n),F(()=>{const i=Oi(e),s=U2(t.getClipDistance());nt(n,({i:r})=>{const a=i.element(r),c=Bt.dot(a.xyz).sub(a.w).negate();s.element(r).assign(c)})})()}}Wn.ALPHA_TO_COVERAGE="alphaToCoverage";Wn.DEFAULT="default";Wn.HARDWARE="hardware";const L2=()=>K(new Wn),F2=()=>K(new Wn(Wn.ALPHA_TO_COVERAGE)),I2=()=>K(new Wn(Wn.HARDWARE)),B2=.05,Om=F(([o])=>Yi(Ie(1e4,Dn(Ie(17,o.x).add(Ie(.1,o.y)))).mul(Pt(.1,ht(Dn(Ie(13,o.y).add(o.x))))))),Vm=F(([o])=>Om(J(Om(o.xy),o.z))),O2=F(([o])=>{const e=wt(Hi(Cf(o.xyz)),Hi(Ef(o.xyz))),t=S(1).div(S(B2).mul(e)).toVar("pixScale"),n=J(ao(mi(pi(t))),ao(Gl(pi(t)))),i=J(Vm(mi(n.x.mul(o.xyz))),Vm(mi(n.y.mul(o.xyz)))),s=Yi(pi(t)),r=Pt(Ie(s.oneMinus(),i.x),Ie(s,i.y)),a=Sn(s,s.oneMinus()),c=P(r.mul(r).div(Ie(2,a).mul(Ye(1,a))),r.sub(Ie(.5,a)).div(Ye(1,a)),Ye(1,Ye(1,r).mul(Ye(1,r)).div(Ie(2,a).mul(Ye(1,a))))),l=r.lessThan(a.oneMinus()).select(r.lessThan(a).select(c.x,c.y),c.z);return vi(l,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class At extends an{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+Kv(this)}build(e){this.setup(e)}setupObserver(e){return new IA(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e);const t=e.renderer,n=t.getRenderTarget();e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let i;const s=this.setupClipping(e);if(this.depthWrite===!0&&(n!==null?n.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const r=this.setupLighting(e);s!==null&&e.stack.add(s);const a=Ae(r,et.a).max(0);if(i=this.setupOutput(e,a),T_.assign(i),this.outputNode!==null&&(i=this.outputNode),n!==null){const c=t.getMRT(),l=this.mrtNode;c!==null?(i=c,l!==null&&(i=c.merge(l))):l!==null&&(i=l)}}else{let r=this.fragmentNode;r.isOutputStructNode!==!0&&(r=Ae(r)),i=this.setupOutput(e,r)}e.stack.outputNode=i,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:n}=e.clippingContext;let i=null;if(t.length>0||n.length>0){const s=e.renderer.samples;this.alphaToCoverage&&s>1?i=F2():e.stack.add(L2())}return i}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(I2()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:n}=e;let i=this.depthNode;if(i===null){const s=t.getMRT();s&&s.has("depth")?i=s.get("depth"):t.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?i=Xf(Bt.z,ds,fs):i=to(Bt.z,ds,fs))}i!==null&&Yf.assign(i).append()}setupPosition(e){const{object:t}=e,n=t.geometry;if(e.addStack(),(n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&j0(t).append(),t.isSkinnedMesh===!0&&W0(t).append(),this.displacementMap){const s=Vi("displacementMap","texture"),r=Vi("displacementScale","float"),a=Vi("displacementBias","float");St.addAssign(Tn.normalize().mul(s.x.mul(r).add(a)))}t.isBatchedMesh&&G0(t).append(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&z0(t).append(),this.positionNode!==null&&St.assign(this.positionNode),this.setupHardwareClipping(e);const i=Hf();return e.context.vertex=e.removeStack(),e.context.mvp=i,i}setupDiffuseColor({object:e,geometry:t}){let n=this.colorNode?Ae(this.colorNode):l0;this.vertexColors===!0&&t.hasAttribute("color")&&(n=Ae(n.xyz.mul(_i("color","vec3")),n.a)),e.instanceColor&&(n=ga("vec3","vInstanceColor").mul(n)),e.isBatchedMesh&&e._colorsTexture&&(n=ga("vec3","vBatchColor").mul(n)),et.assign(n);const i=this.opacityNode?S(this.opacityNode):zf;if(et.a.assign(et.a.mul(i)),this.alphaTestNode!==null||this.alphaTest>0){const s=this.alphaTestNode!==null?S(this.alphaTestNode):c0;et.a.lessThanEqual(s).discard()}this.alphaHash===!0&&et.a.lessThan(O2(St)).discard(),this.transparent===!1&&this.blending===vs&&this.alphaToCoverage===!1&&et.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?P(0):et.rgb}setupNormal(){return this.normalNode?P(this.normalNode):g0}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Vi("envMap","cubeTexture"):Vi("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new S2(Gf)),t}setupLights(e){const t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);const i=this.setupLightMap(e);if(i&&i.isLightingNode&&t.push(i),this.aoNode!==null||e.material.aoMap){const r=this.aoNode!==null?this.aoNode:B0;t.push(new x2(r))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=e.renderer.lighting.createNode([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:n,backdropAlphaNode:i,emissiveNode:s}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let c=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const l=this.setupLightingModel(e);c=$0(a,l,n,i)}else n!==null&&(c=P(i!==null?tt(c,n,i):n));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(yd.assign(P(s||h0)),c=c.add(yd)),c}setupOutput(e,t){if(this.fog===!0){const n=e.fogNode;n&&(t=Ae(n.mix(t.rgb,n.colorNode),t.a))}return t}setDefaultValues(e){for(const n in e){const i=e[n];this[n]===void 0&&(this[n]=i,i&&i.clone&&(this[n]=i.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const n in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&t[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const n=an.prototype.toJSON.call(this,e),i=gl(this);n.inputNodes={};for(const{property:r,childNode:a}of i)n.inputNodes[r]=a.toJSON(e).uuid;function s(r){const a=[];for(const c in r){const l=r[c];delete l.metadata,a.push(l)}return a}if(t){const r=s(e.textures),a=s(e.images),c=s(e.nodes);r.length>0&&(n.textures=r),a.length>0&&(n.images=a),c.length>0&&(n.nodes=c)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowPositionNode=e.shadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const V2=new Ll;class k2 extends At{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(V2),this.setValues(e)}}const z2=new _1;class G2 extends At{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(z2),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?S(this.offsetNodeNode):F0,t=this.dashScaleNode?S(this.dashScaleNode):D0,n=this.dashSizeNode?S(this.dashSizeNode):U0,i=this.dashSizeNode?S(this.dashGapNode):L0;Qc.assign(n),xd.assign(i);const s=Mn(_i("lineDistance").mul(t));(e?s.add(e):s).mod(Qc.add(xd)).greaterThan(Qc).discard()}}let ah=null;class H2 extends Kl{static get type(){return"ViewportSharedTextureNode"}constructor(e=bi,t=null){ah===null&&(ah=new Bv),super(e,t,ah)}updateReference(){return this}}const W2=q(H2),Q0=o=>K(o).mul(.5).add(.5),q2=o=>K(o).mul(2).sub(1),j2=new f1;class $2 extends At{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(j2),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?S(this.opacityNode):zf;et.assign(Ae(Q0(Mt),e))}}class X2 extends Nt{static get type(){return"EquirectUVNode"}constructor(e=Bf){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(Math.PI*2)).add(.5),n=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return J(t,n)}}const Zf=q(X2);class J0 extends bT{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const n=t.minFilter,i=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s=new ho(5,5,5),r=Zf(Bf),a=new At;a.colorNode=qe(t,r,0),a.side=qn,a.blending=Ks;const c=new In(s,a),l=new Qd;l.add(c),t.minFilter===ki&&(t.minFilter=Jt);const u=new Uv(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,l),e.setMRT(h),t.minFilter=n,t.currentGenerateMipmaps=i,c.geometry.dispose(),c.material.dispose(),this}}const sa=new WeakMap;class Y2 extends Nt{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=co();const t=new Kd;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=Fe.RENDER}updateBefore(e){const{renderer:t,material:n}=e,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const s=i.isTextureNode?i.value:n[i.property];if(s&&s.isTexture){const r=s.mapping;if(r===Sa||r===Ta){if(sa.has(s)){const a=sa.get(s);km(a,s.mapping),this._cubeTexture=a}else{const a=s.image;if(Z2(a)){const c=new J0(a.height);c.fromEquirectangularTexture(t,s),km(c.texture,s.mapping),this._cubeTexture=c.texture,sa.set(s,c.texture),s.addEventListener("dispose",ex)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function Z2(o){return o==null?!1:o.height>0}function ex(o){const e=o.target;e.removeEventListener("dispose",ex);const t=sa.get(e);t!==void 0&&(sa.delete(e),t.dispose())}function km(o,e){e===Sa?o.mapping=Qs:e===Ta&&(o.mapping=io)}const tx=q(Y2);class Kf extends mo{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=tx(this.envNode)}}class K2 extends mo{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=S(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class Ql{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class nx extends Ql{constructor(){super()}indirect(e,t,n){const i=e.ambientOcclusion,s=e.reflectedLight,r=n.context.irradianceLightMap;s.indirectDiffuse.assign(Ae(0)),r?s.indirectDiffuse.addAssign(r):s.indirectDiffuse.addAssign(Ae(1,1,1,0)),s.indirectDiffuse.mulAssign(i),s.indirectDiffuse.mulAssign(et.rgb)}finish(e,t,n){const i=n.material,s=e.outgoingLight,r=n.context.environment;if(r)switch(i.combine){case Pl:s.rgb.assign(tt(s.rgb,s.rgb.mul(r.rgb),ia.mul(Jc)));break;case Jb:s.rgb.assign(tt(s.rgb,r.rgb,ia.mul(Jc)));break;case eS:s.rgb.addAssign(r.rgb.mul(ia.mul(Jc)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",i.combine);break}}}const Q2=new Aa;class J2 extends At{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Q2),this.setValues(e)}setupNormal(){return jn}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Kf(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new K2(Gf)),t}setupOutgoingLight(){return et.rgb}setupLightingModel(){return new nx}}const lo=F(({f0:o,f90:e,dotVH:t})=>{const n=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return o.mul(n.oneMinus()).add(e.mul(n))}),ir=F(o=>o.diffuseColor.mul(1/Math.PI)),eC=()=>S(.25),tC=F(({dotNH:o})=>yl.mul(S(.5)).add(1).mul(S(1/Math.PI)).mul(o.pow(yl))),nC=F(({lightDirection:o})=>{const e=o.add(ft).normalize(),t=Mt.dot(e).clamp(),n=ft.dot(e).clamp(),i=lo({f0:yn,f90:1,dotVH:n}),s=eC(),r=tC({dotNH:t});return i.mul(s).mul(r)});class ix extends nx{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const s=Mt.dot(e).clamp().mul(t);n.directDiffuse.addAssign(s.mul(ir({diffuseColor:et.rgb}))),this.specular===!0&&n.directSpecular.addAssign(s.mul(nC({lightDirection:e})).mul(ia))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(ir({diffuseColor:et}))),n.indirectDiffuse.mulAssign(e)}}const iC=new p1;class sC extends At{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(iC),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Kf(t):null}setupLightingModel(){return new ix(!1)}}const rC=new h1;class oC extends At{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(rC),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Kf(t):null}setupLightingModel(){return new ix}setupVariants(){const e=(this.shininessNode?S(this.shininessNode):u0).max(1e-4);yl.assign(e);const t=this.specularNode||d0;yn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const sx=F(o=>{if(o.geometry.hasAttribute("normal")===!1)return S(0);const e=jn.dFdx().abs().max(jn.dFdy().abs());return e.x.max(e.y).max(e.z)}),Qf=F(o=>{const{roughness:e}=o,t=sx();let n=e.max(.0525);return n=n.add(t),n=n.min(1),n}),rx=F(({alpha:o,dotNL:e,dotNV:t})=>{const n=o.pow2(),i=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt()),s=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return si(.5,i.add(s).max(G_))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),aC=F(({alphaT:o,alphaB:e,dotTV:t,dotBV:n,dotTL:i,dotBL:s,dotNV:r,dotNL:a})=>{const c=a.mul(P(o.mul(t),e.mul(n),r).length()),l=r.mul(P(o.mul(i),e.mul(s),a).length());return si(.5,c.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),ox=F(({alpha:o,dotNH:e})=>{const t=o.pow2(),n=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),cC=S(1/Math.PI),lC=F(({alphaT:o,alphaB:e,dotNH:t,dotTH:n,dotBH:i})=>{const s=o.mul(e),r=P(e.mul(n),o.mul(i),s.mul(t)),a=r.dot(r),c=s.div(a);return cC.mul(s.mul(c.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),wd=F(o=>{const{lightDirection:e,f0:t,f90:n,roughness:i,f:s,USE_IRIDESCENCE:r,USE_ANISOTROPY:a}=o,c=o.normalView||Mt,l=i.pow2(),u=e.add(ft).normalize(),h=c.dot(e).clamp(),d=c.dot(ft).clamp(),f=c.dot(u).clamp(),p=ft.dot(u).clamp();let m=lo({f0:t,f90:n,dotVH:p}),g,_;if(pa(r)&&(m=kl.mix(m,s)),pa(a)){const x=ea.dot(e),y=ea.dot(ft),b=ea.dot(u),M=Xs.dot(e),N=Xs.dot(ft),T=Xs.dot(u);g=aC({alphaT:_l,alphaB:l,dotTV:y,dotBV:N,dotTL:x,dotBL:M,dotNV:d,dotNL:h}),_=lC({alphaT:_l,alphaB:l,dotNH:f,dotTH:b,dotBH:T})}else g=rx({alpha:l,dotNL:h,dotNV:d}),_=ox({alpha:l,dotNH:f});return m.mul(g).mul(_)}),Jf=F(({roughness:o,dotNV:e})=>{const t=Ae(-1,-.0275,-.572,.022),n=Ae(1,.0425,1.04,-.04),i=o.mul(t).add(n),s=i.x.mul(i.x).min(e.mul(-9.28).exp2()).mul(i.x).add(i.y);return J(-1.04,1.04).mul(s).add(i.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),ax=F(o=>{const{dotNV:e,specularColor:t,specularF90:n,roughness:i}=o,s=Jf({dotNV:e,roughness:i});return t.mul(s.x).add(n.mul(s.y))}),cx=F(({f:o,f90:e,dotVH:t})=>{const n=t.oneMinus().saturate(),i=n.mul(n),s=n.mul(i,i).clamp(0,.9999);return o.sub(P(e).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),uC=F(({roughness:o,dotNH:e})=>{const t=o.pow2(),n=S(1).div(t),s=e.pow2().oneMinus().max(.0078125);return S(2).add(n).mul(s.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),hC=F(({dotNV:o,dotNL:e})=>S(1).div(S(4).mul(e.add(o).sub(e.mul(o))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),dC=F(({lightDirection:o})=>{const e=o.add(ft).normalize(),t=Mt.dot(o).clamp(),n=Mt.dot(ft).clamp(),i=Mt.dot(e).clamp(),s=uC({roughness:Vl,dotNH:i}),r=hC({dotNV:n,dotNL:t});return Gs.mul(s).mul(r)}),fC=F(({N:o,V:e,roughness:t})=>{const s=.0078125,r=o.dot(e).saturate(),a=J(t,r.oneMinus().sqrt());return a.assign(a.mul(.984375).add(s)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),pC=F(({f:o})=>{const e=o.length();return wt(e.mul(e).add(o.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Ec=F(({v1:o,v2:e})=>{const t=o.dot(e),n=t.abs().toVar(),i=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),s=n.add(4.1616724).mul(n).add(3.417594).toVar(),r=i.div(s),a=t.greaterThan(0).select(r,wt(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(r));return o.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),zm=F(({N:o,V:e,P:t,mInv:n,p0:i,p1:s,p2:r,p3:a})=>{const c=s.sub(i).toVar(),l=a.sub(i).toVar(),u=c.cross(l),h=P().toVar();return Ve(u.dot(t.sub(i)).greaterThanEqual(0),()=>{const d=e.sub(o.mul(e.dot(o))).normalize(),f=o.cross(d).negate(),p=n.mul(cn(d,f,o).transpose()).toVar(),m=p.mul(i.sub(t)).normalize().toVar(),g=p.mul(s.sub(t)).normalize().toVar(),_=p.mul(r.sub(t)).normalize().toVar(),x=p.mul(a.sub(t)).normalize().toVar(),y=P(0).toVar();y.addAssign(Ec({v1:m,v2:g})),y.addAssign(Ec({v1:g,v2:_})),y.addAssign(Ec({v1:_,v2:x})),y.addAssign(Ec({v1:x,v2:m})),h.assign(P(pC({f:y})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Jl=1/6,lx=o=>Ie(Jl,Ie(o,Ie(o,o.negate().add(3)).sub(3)).add(1)),Ad=o=>Ie(Jl,Ie(o,Ie(o,Ie(3,o).sub(6))).add(4)),ux=o=>Ie(Jl,Ie(o,Ie(o,Ie(-3,o).add(3)).add(3)).add(1)),Nd=o=>Ie(Jl,ti(o,3)),Gm=o=>lx(o).add(Ad(o)),Hm=o=>ux(o).add(Nd(o)),Wm=o=>Pt(-1,Ad(o).div(lx(o).add(Ad(o)))),qm=o=>Pt(1,Nd(o).div(ux(o).add(Nd(o)))),jm=(o,e,t)=>{const n=o.uvNode,i=Ie(n,e.zw).add(.5),s=mi(i),r=Yi(i),a=Gm(r.x),c=Hm(r.x),l=Wm(r.x),u=qm(r.x),h=Wm(r.y),d=qm(r.y),f=J(s.x.add(l),s.y.add(h)).sub(.5).mul(e.xy),p=J(s.x.add(u),s.y.add(h)).sub(.5).mul(e.xy),m=J(s.x.add(l),s.y.add(d)).sub(.5).mul(e.xy),g=J(s.x.add(u),s.y.add(d)).sub(.5).mul(e.xy),_=Gm(r.y).mul(Pt(a.mul(o.uv(f).level(t)),c.mul(o.uv(p).level(t)))),x=Hm(r.y).mul(Pt(a.mul(o.uv(m).level(t)),c.mul(o.uv(g).level(t))));return _.add(x)},hx=F(([o,e=S(3)])=>{const t=J(o.size(A(e))),n=J(o.size(A(e.add(1)))),i=si(1,t),s=si(1,n),r=jm(o,Ae(i,t),mi(e)),a=jm(o,Ae(s,n),Gl(e));return Yi(e).mix(r,a)}),$m=F(([o,e,t,n,i])=>{const s=P(Uf(e.negate(),$i(o),si(1,n))),r=P(Hi(i[0].xyz),Hi(i[1].xyz),Hi(i[2].xyz));return $i(s).mul(t.mul(r))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),mC=F(([o,e])=>o.mul(vi(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),gC=qf(),vC=qf(),Xm=F(([o,e,t],{material:n})=>{const s=(n.side==qn?gC:vC).uv(o),r=pi(ba.x).mul(mC(e,t));return hx(s,r)}),Ym=F(([o,e,t])=>(Ve(t.notEqual(0),()=>{const n=zl(e).negate().div(t);return Nf(n.negate().mul(o))}),P(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),_C=F(([o,e,t,n,i,s,r,a,c,l,u,h,d,f,p])=>{let m,g;if(p){m=Ae().toVar(),g=P().toVar();const M=u.sub(1).mul(p.mul(.025)),N=P(u.sub(M),u,u.add(M));nt({start:0,end:3},({i:T})=>{const w=N.element(T),L=$m(o,e,h,w,a),I=r.add(L),W=l.mul(c.mul(Ae(I,1))),D=J(W.xy.div(W.w)).toVar();D.addAssign(1),D.divAssign(2),D.assign(J(D.x,D.y.oneMinus()));const k=Xm(D,t,w);m.element(T).assign(k.element(T)),m.a.addAssign(k.a),g.element(T).assign(n.element(T).mul(Ym(Hi(L),d,f).element(T)))}),m.a.divAssign(3)}else{const M=$m(o,e,h,u,a),N=r.add(M),T=l.mul(c.mul(Ae(N,1))),w=J(T.xy.div(T.w)).toVar();w.addAssign(1),w.divAssign(2),w.assign(J(w.x,w.y.oneMinus())),m=Xm(w,t,u),g=n.mul(Ym(Hi(M),d,f))}const _=g.rgb.mul(m.rgb),x=o.dot(e).clamp(),y=P(ax({dotNV:x,specularColor:i,specularF90:s,roughness:t})),b=g.r.add(g.g,g.b).div(3);return Ae(y.oneMinus().mul(_),m.a.oneMinus().mul(b).oneMinus())}),yC=cn(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),xC=o=>{const e=o.sqrt();return P(1).add(e).div(P(1).sub(e))},Zm=(o,e)=>o.sub(e).div(o.add(e)).pow2(),bC=(o,e)=>{const t=o.mul(2*Math.PI*1e-9),n=P(54856e-17,44201e-17,52481e-17),i=P(1681e3,1795300,2208400),s=P(43278e5,93046e5,66121e5),r=S(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=n.mul(s.mul(2*Math.PI).sqrt()).mul(i.mul(t).add(e).cos()).mul(t.pow2().negate().mul(s).exp());return a=P(a.x.add(r),a.y,a.z).div(10685e-11),yC.mul(a)},SC=F(({outsideIOR:o,eta2:e,cosTheta1:t,thinFilmThickness:n,baseF0:i})=>{const s=tt(o,e,Xi(0,.03,n)),a=o.div(s).pow2().mul(t.pow2().oneMinus()).oneMinus();Ve(a.lessThan(0),()=>P(1));const c=a.sqrt(),l=Zm(s,o),u=lo({f0:l,f90:1,dotVH:t}),h=u.oneMinus(),d=s.lessThan(o).select(Math.PI,0),f=S(Math.PI).sub(d),p=xC(i.clamp(0,.9999)),m=Zm(p,s.toVec3()),g=lo({f0:m,f90:1,dotVH:c}),_=P(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),x=s.mul(n,c,2),y=P(f).add(_),b=u.mul(g).clamp(1e-5,.9999),M=b.sqrt(),N=h.pow2().mul(g).div(P(1).sub(b)),w=u.add(N).toVar(),L=N.sub(h).toVar();return nt({start:1,end:2,condition:"<=",name:"m"},({m:I})=>{L.mulAssign(M);const W=bC(S(I).mul(x),S(I).mul(y)).mul(2);w.addAssign(L.mul(W))}),w.max(P(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),TC=F(({normal:o,viewDir:e,roughness:t})=>{const n=o.dot(e).saturate(),i=t.pow2(),s=Kt(t.lessThan(.25),S(-339.2).mul(i).add(S(161.4).mul(t)).sub(25.9),S(-8.48).mul(i).add(S(14.3).mul(t)).sub(9.95)),r=Kt(t.lessThan(.25),S(44).mul(i).sub(S(23.7).mul(t)).add(3.26),S(1.97).mul(i).sub(S(3.27).mul(t)).add(.72));return Kt(t.lessThan(.25),0,S(.1).mul(t).sub(.025)).add(s.mul(n).add(r).exp()).mul(1/Math.PI).saturate()}),ch=P(.04),lh=S(1);class dx extends Ql{constructor(e=!1,t=!1,n=!1,i=!1,s=!1,r=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=i,this.transmission=s,this.dispersion=r,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=P().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=P().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=P().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=P().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=P().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=Mt.dot(ft).clamp();this.iridescenceFresnel=SC({outsideIOR:S(1),eta2:_f,cosTheta1:t,thinFilmThickness:yf,baseF0:yn}),this.iridescenceF0=cx({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=Wi,n=Wy.sub(Wi).normalize(),i=Xl;e.backdrop=_C(i,n,hi,et,yn,ya,t,Hn,wn,Ss,ta,xf,Sf,bf,this.dispersion?Tf:null),e.backdropAlpha=xl,et.a.mulAssign(tt(1,e.backdrop.a,xl))}}computeMultiscattering(e,t,n){const i=Mt.dot(ft).clamp(),s=Jf({roughness:hi,dotNV:i}),a=(this.iridescenceF0?kl.mix(yn,this.iridescenceF0):yn).mul(s.x).add(n.mul(s.y)),l=s.x.add(s.y).oneMinus(),u=yn.add(yn.oneMinus().mul(.047619)),h=a.mul(u).div(l.mul(u).oneMinus());e.addAssign(a),t.addAssign(h.mul(l))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){const s=Mt.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(s.mul(dC({lightDirection:e}))),this.clearcoat===!0){const a=jr.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(wd({lightDirection:e,f0:ch,f90:lh,roughness:_a,normalView:jr})))}n.directDiffuse.addAssign(s.mul(ir({diffuseColor:et.rgb}))),n.directSpecular.addAssign(s.mul(wd({lightDirection:e,f0:yn,f90:1,roughness:hi,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:i,reflectedLight:s,ltc_1:r,ltc_2:a}){const c=t.add(n).sub(i),l=t.sub(n).sub(i),u=t.sub(n).add(i),h=t.add(n).add(i),d=Mt,f=ft,p=Bt.toVar(),m=fC({N:d,V:f,roughness:hi}),g=r.uv(m).toVar(),_=a.uv(m).toVar(),x=cn(P(g.x,0,g.y),P(0,1,0),P(g.z,0,g.w)).toVar(),y=yn.mul(_.x).add(yn.oneMinus().mul(_.y)).toVar();s.directSpecular.addAssign(e.mul(y).mul(zm({N:d,V:f,P:p,mInv:x,p0:c,p1:l,p2:u,p3:h}))),s.directDiffuse.addAssign(e.mul(et).mul(zm({N:d,V:f,P:p,mInv:cn(1,0,0,0,1,0,0,0,1),p0:c,p1:l,p2:u,p3:h})))}indirect(e,t,n){this.indirectDiffuse(e,t,n),this.indirectSpecular(e,t,n),this.ambientOcclusion(e,t,n)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(ir({diffuseColor:et})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:n}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(Gs,TC({normal:Mt,viewDir:ft,roughness:Vl}))),this.clearcoat===!0){const l=jr.dot(ft).clamp(),u=ax({dotNV:l,specularColor:ch,specularF90:lh,roughness:_a});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(u))}const i=P().toVar("singleScattering"),s=P().toVar("multiScattering"),r=t.mul(1/Math.PI);this.computeMultiscattering(i,s,ya);const a=i.add(s),c=et.mul(a.r.max(a.g).max(a.b).oneMinus());n.indirectSpecular.addAssign(e.mul(i)),n.indirectSpecular.addAssign(s.mul(r)),n.indirectDiffuse.addAssign(c.mul(r))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const i=Mt.dot(ft).clamp().add(e),s=hi.mul(-16).oneMinus().negate().exp2(),r=e.sub(i.pow(s).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(r)}finish(e){const{outgoingLight:t}=e;if(this.clearcoat===!0){const n=jr.dot(ft).clamp(),i=lo({dotVH:n,f0:ch,f90:lh}),s=t.mul(vl.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(vl));t.assign(s)}if(this.sheen===!0){const n=Gs.r.max(Gs.g).max(Gs.b).mul(.157).oneMinus(),i=t.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(i)}}}const Km=S(1),Cd=S(-2),Rc=S(.8),uh=S(-1),Pc=S(.4),hh=S(2),Dc=S(.305),dh=S(3),Qm=S(.21),MC=S(4),Jm=S(4),wC=S(16),AC=F(([o])=>{const e=P(ht(o)).toVar(),t=S(-1).toVar();return Ve(e.x.greaterThan(e.z),()=>{Ve(e.x.greaterThan(e.y),()=>{t.assign(Kt(o.x.greaterThan(0),0,3))}).Else(()=>{t.assign(Kt(o.y.greaterThan(0),1,4))})}).Else(()=>{Ve(e.z.greaterThan(e.y),()=>{t.assign(Kt(o.z.greaterThan(0),2,5))}).Else(()=>{t.assign(Kt(o.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),NC=F(([o,e])=>{const t=J().toVar();return Ve(e.equal(0),()=>{t.assign(J(o.z,o.y).div(ht(o.x)))}).ElseIf(e.equal(1),()=>{t.assign(J(o.x.negate(),o.z.negate()).div(ht(o.y)))}).ElseIf(e.equal(2),()=>{t.assign(J(o.x.negate(),o.y).div(ht(o.z)))}).ElseIf(e.equal(3),()=>{t.assign(J(o.z.negate(),o.y).div(ht(o.x)))}).ElseIf(e.equal(4),()=>{t.assign(J(o.x.negate(),o.z).div(ht(o.y)))}).Else(()=>{t.assign(J(o.x,o.y).div(ht(o.z)))}),Ie(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),CC=F(([o])=>{const e=S(0).toVar();return Ve(o.greaterThanEqual(Rc),()=>{e.assign(Km.sub(o).mul(uh.sub(Cd)).div(Km.sub(Rc)).add(Cd))}).ElseIf(o.greaterThanEqual(Pc),()=>{e.assign(Rc.sub(o).mul(hh.sub(uh)).div(Rc.sub(Pc)).add(uh))}).ElseIf(o.greaterThanEqual(Dc),()=>{e.assign(Pc.sub(o).mul(dh.sub(hh)).div(Pc.sub(Dc)).add(hh))}).ElseIf(o.greaterThanEqual(Qm),()=>{e.assign(Dc.sub(o).mul(MC.sub(dh)).div(Dc.sub(Qm)).add(dh))}).Else(()=>{e.assign(S(-2).mul(pi(Ie(1.16,o))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),fx=F(([o,e])=>{const t=o.toVar();t.assign(Ie(2,t).sub(1));const n=P(t,1).toVar();return Ve(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),px=F(([o,e,t,n,i,s])=>{const r=S(t),a=P(e),c=vi(CC(r),Cd,s),l=Yi(c),u=mi(c),h=P(Ed(o,a,u,n,i,s)).toVar();return Ve(l.notEqual(0),()=>{const d=P(Ed(o,a,u.add(1),n,i,s)).toVar();h.assign(tt(h,d,l))}),h}),Ed=F(([o,e,t,n,i,s])=>{const r=S(t).toVar(),a=P(e),c=S(AC(a)).toVar(),l=S(wt(Jm.sub(r),0)).toVar();r.assign(wt(r,Jm));const u=S(ao(r)).toVar(),h=J(NC(a,c).mul(u.sub(2)).add(1)).toVar();return Ve(c.greaterThan(2),()=>{h.y.addAssign(u),c.subAssign(3)}),h.x.addAssign(c.mul(u)),h.x.addAssign(l.mul(Ie(3,wC))),h.y.addAssign(Ie(4,ao(s).sub(u))),h.x.mulAssign(n),h.y.mulAssign(i),o.uv(h).grad(J(),J())}),fh=F(({envMap:o,mipInt:e,outputDirection:t,theta:n,axis:i,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:r,CUBEUV_MAX_MIP:a})=>{const c=Ii(n),l=t.mul(c).add(i.cross(t).mul(Dn(n))).add(i.mul(i.dot(t).mul(c.oneMinus())));return Ed(o,l,e,s,r,a)}),mx=F(({n:o,latitudinal:e,poleAxis:t,outputDirection:n,weights:i,samples:s,dTheta:r,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=P(Kt(e,t,Wl(t,n))).toVar();Ve(Af(d.equals(P(0))),()=>{d.assign(P(n.z,0,n.x.negate()))}),d.assign($i(d));const f=P().toVar();return f.addAssign(i.element(A(0)).mul(fh({theta:0,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),nt({start:A(1),end:o},({i:p})=>{Ve(p.greaterThanEqual(s),()=>{q0()});const m=S(r.mul(S(p))).toVar();f.addAssign(i.element(p).mul(fh({theta:m.mul(-1),axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(i.element(p).mul(fh({theta:m,axis:d,outputDirection:n,mipInt:a,envMap:c,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),Ae(f,1)});let wl=null;const eg=new WeakMap;function EC(o){const e=Math.log2(o)-2,t=1/o;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function RC(o){let e=eg.get(o);if((e!==void 0?e.pmremVersion:-1)!==o.pmremVersion){const n=o.image;if(o.isCubeTexture)if(DC(n))e=wl.fromCubemap(o,e);else return null;else if(UC(n))e=wl.fromEquirectangular(o,e);else return null;e.pmremVersion=o.pmremVersion,eg.set(o,e)}return e.texture}class PC extends Nt{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;const i=new qt;i.isRenderTargetTexture=!0,this._texture=qe(i),this._width=Ne(0),this._height=Ne(0),this._maxMip=Ne(0),this.updateBeforeType=Fe.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=EC(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,n=this._value;t!==n.pmremVersion&&(n.isPMREMTexture===!0?e=n:e=RC(n),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){wl===null&&(wl=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));const n=this.value;e.renderer.coordinateSystem===ei&&n.isPMREMTexture!==!0&&n.isRenderTargetTexture===!0&&(t=P(t.x.negate(),t.yz));let i=this.levelNode;return i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),px(this._texture,t,i,this._width,this._height,this._maxMip)}}function DC(o){if(o==null)return!1;let e=0;const t=6;for(let n=0;n<t;n++)o[n]!==void 0&&e++;return e===t}function UC(o){return o==null?!1:o.height>0}const ep=q(PC),tg=new WeakMap;class LC extends mo{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const f=n.isTextureNode?n.value:t[n.property];let p=tg.get(f);p===void 0&&(p=ep(f),tg.set(f,p)),n=p}const s=t.envMap?rt("envMapIntensity","float",e.material):rt("environmentIntensity","float",e.scene),a=t.useAnisotropy===!0||t.anisotropy>0?o0:Mt,c=n.context(ng(hi,a)).mul(s),l=n.context(FC(Xl)).mul(Math.PI).mul(s),u=na(c),h=na(l);e.context.radiance.addAssign(u),e.context.iblIrradiance.addAssign(h);const d=e.context.lightingModel.clearcoatRadiance;if(d){const f=n.context(ng(_a,jr)).mul(s),p=na(f);d.addAssign(p)}}}const ng=(o,e)=>{let t=null;return{getUV:()=>(t===null&&(t=ft.negate().reflect(e),t=o.mul(o).mix(t,e).normalize(),t=t.transformDirection(wn)),t),getTextureLevel:()=>o}},FC=o=>({getUV:()=>o,getTextureLevel:()=>S(1)}),IC=new rf;class eu extends At{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(IC),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new LC(t):null}setupLightingModel(){return new dx}setupSpecular(){const e=tt(P(.04),et.rgb,va);yn.assign(e),ya.assign(1)}setupVariants(){const e=this.metalnessNode?S(this.metalnessNode):m0;va.assign(e);let t=this.roughnessNode?S(this.roughnessNode):p0;t=Qf({roughness:t}),hi.assign(t),this.setupSpecular(),et.assign(Ae(et.rgb.mul(e.oneMinus()),et.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const BC=new u1;class OC extends eu{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(BC),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?S(this.iorNode):E0;ta.assign(e),yn.assign(tt(Sn(Df(ta.sub(1).div(ta.add(1))).mul(f0),P(1)).mul(Md),et.rgb,va)),ya.assign(tt(Md,1,va))}setupLightingModel(){return new dx(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?S(this.clearcoatNode):v0,n=this.clearcoatRoughnessNode?S(this.clearcoatRoughnessNode):_0;vl.assign(t),_a.assign(Qf({roughness:n}))}if(this.useSheen){const t=this.sheenNode?P(this.sheenNode):b0,n=this.sheenRoughnessNode?S(this.sheenRoughnessNode):S0;Gs.assign(t),Vl.assign(n)}if(this.useIridescence){const t=this.iridescenceNode?S(this.iridescenceNode):M0,n=this.iridescenceIORNode?S(this.iridescenceIORNode):w0,i=this.iridescenceThicknessNode?S(this.iridescenceThicknessNode):A0;kl.assign(t),_f.assign(n),yf.assign(i)}if(this.useAnisotropy){const t=(this.anisotropyNode?J(this.anisotropyNode):T0).toVar();us.assign(t.length()),Ve(us.equal(0),()=>{t.assign(J(1,0))}).Else(()=>{t.divAssign(J(us)),us.assign(us.saturate())}),_l.assign(us.pow2().mix(hi.pow2(),1)),ea.assign(Hs[0].mul(t.x).add(Hs[1].mul(t.y))),Xs.assign(Hs[1].mul(t.x).sub(Hs[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?S(this.transmissionNode):N0,n=this.thicknessNode?S(this.thicknessNode):C0,i=this.attenuationDistanceNode?S(this.attenuationDistanceNode):R0,s=this.attenuationColorNode?P(this.attenuationColorNode):P0;if(xl.assign(t),xf.assign(n),bf.assign(i),Sf.assign(s),this.useDispersion){const r=this.dispersionNode?S(this.dispersionNode):I0;Tf.assign(r)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?P(this.clearcoatNormalNode):y0}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const VC=F(({normal:o,lightDirection:e,builder:t})=>{const n=o.dot(e),i=J(n.mul(.5).add(.5),0);if(t.material.gradientMap){const s=Vi("gradientMap","texture").context({getUV:()=>i});return P(s.r)}else{const s=i.fwidth().mul(.5);return tt(P(.7),P(1),Xi(S(.7).sub(s.x),S(.7).add(s.x),i.x))}});class kC extends Ql{direct({lightDirection:e,lightColor:t,reflectedLight:n},i,s){const r=VC({normal:jl,lightDirection:e,builder:s}).mul(t);n.directDiffuse.addAssign(r.mul(ir({diffuseColor:et.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(ir({diffuseColor:et}))),n.indirectDiffuse.mulAssign(e)}}const zC=new d1;class GC extends At{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(zC),this.setValues(e)}setupLightingModel(){return new kC}}class HC extends Nt{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=P(ft.z,0,ft.x.negate()).normalize(),t=ft.cross(e);return J(e.dot(Mt),t.dot(Mt)).mul(.495).add(.5)}}const gx=he(HC),WC=new v1;class qC extends At{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(WC),this.setValues(e)}setupVariants(e){const t=gx;let n;e.material.matcap?n=Vi("matcap","texture").context({getUV:()=>t}):n=P(tt(.2,.8,t.y)),et.rgb.mulAssign(n.rgb)}}const jC=new CT;class $C extends At{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(jC),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class XC extends Nt{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:n}=this;if(this.getNodeType(e)==="vec2"){const s=t.cos(),r=t.sin();return Ol(s,r,r.negate(),s).mul(n)}else{const s=t,r=$s(Ae(1,0,0,0),Ae(0,Ii(s.x),Dn(s.x).negate(),0),Ae(0,Dn(s.x),Ii(s.x),0),Ae(0,0,0,1)),a=$s(Ae(Ii(s.y),0,Dn(s.y),0),Ae(0,1,0,0),Ae(Dn(s.y).negate(),0,Ii(s.y),0),Ae(0,0,0,1)),c=$s(Ae(Ii(s.z),Dn(s.z).negate(),0,0),Ae(Dn(s.z),Ii(s.z),0,0),Ae(0,0,1,0),Ae(0,0,0,1));return r.mul(a).mul(c).mul(Ae(n,1)).xyz}}}const tp=q(XC),YC=new ST;class ZC extends At{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(YC),this.setValues(e)}setupPosition({object:e,camera:t,context:n}){const i=this.sizeAttenuation,{positionNode:s,rotationNode:r,scaleNode:a}=this,c=St;let l=ur.mul(P(s||0)),u=J(Hn[0].xyz.length(),Hn[1].xyz.length());if(a!==null&&(u=u.mul(a)),!i)if(t.isPerspectiveCamera)u=u.mul(l.z.negate());else{const m=S(2).div(Ss.element(1).element(1));u=u.mul(m.mul(2))}let h=c.xy;if(e.center&&e.center.isVector2===!0){const m=mN("center","vec2");h=h.sub(m.sub(.5))}h=h.mul(u);const d=S(r||x0),f=tp(h,d);l=Ae(l.xy.add(f),l.zw);const p=Ss.mul(l);return n.vertex=c,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class KC extends Ql{constructor(){super(),this.shadowNode=S(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){et.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(et.rgb)}}const QC=new l1;class JC extends At{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(QC),this.setValues(e)}setupLightingModel(){return new KC}}const eE=F(({texture:o,uv:e})=>{const n=P().toVar();return Ve(e.x.lessThan(1e-4),()=>{n.assign(P(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(P(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(P(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(P(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(P(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(P(0,0,-1))}).Else(()=>{const s=o.uv(e.add(P(-.01,0,0))).r.sub(o.uv(e.add(P(.01,0,0))).r),r=o.uv(e.add(P(0,-.01,0))).r.sub(o.uv(e.add(P(0,.01,0))).r),a=o.uv(e.add(P(0,0,-.01))).r.sub(o.uv(e.add(P(0,0,.01))).r);n.assign(P(s,r,a))}),n.normalize()});class tE extends yi{static get type(){return"Texture3DNode"}constructor(e,t=null,n=null){super(e,t,n),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return P(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){return t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return eE({texture:this,uv:e})}}const nE=q(tE);class iE{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){const e=(t,n)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,n)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}setAnimationLoop(e){this._animationLoop=e}setContext(e){this._context=e}dispose(){this.stop()}}class Si{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length;n++)if(t=t.get(e[n]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let i=0;i<e.length;i++){const s=e[i];n.has(s)===!1&&n.set(s,new WeakMap),n=n.get(s)}return n.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let n=0;n<e.length;n++)if(t=t.get(e[n]),t===void 0)return!1;return t.delete(e[e.length-1])}}let sE=0;function rE(o){const e=Object.keys(o);let t=Object.getPrototypeOf(o);for(;t;){const n=Object.getOwnPropertyDescriptors(t);for(const i in n)if(n[i]!==void 0){const s=n[i];s&&typeof s.get=="function"&&e.push(i)}t=Object.getPrototypeOf(t)}return e}class oE{constructor(e,t,n,i,s,r,a,c,l,u){this._nodes=e,this._geometries=t,this.id=sE++,this.renderer=n,this.object=i,this.material=s,this.scene=r,this.camera=a,this.lightsNode=c,this.context=l,this.geometry=i.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=u!==null?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],i=new Set;for(const s of e){const r=s.node&&s.node.attribute?s.node.attribute:t.getAttribute(s.name);if(r===void 0)continue;n.push(r);const a=r.isInterleavedBufferAttribute?r.data:r;i.add(a)}return this.attributes=n,this.vertexBuffers=Array.from(i.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:n,group:i,drawRange:s}=this,r=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),c=a!==null,l=n.isInstancedBufferGeometry?n.instanceCount:e.count>1?e.count:1;if(l===0)return null;if(r.instanceCount=l,e.isBatchedMesh===!0)return r;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=s.start*u,d=(s.start+s.count)*u;i!==null&&(h=Math.max(h,i.start*u),d=Math.min(d,(i.start+i.count)*u));const f=n.attributes.position;let p=1/0;c?p=a.count:f!=null&&(p=f.count),h=Math.max(h,0),d=Math.min(d,p);const m=d-h;return m<0||m===1/0?null:(r.vertexCount=m,r.firstVertex=h,r)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const n of Object.keys(e.attributes).sort()){const i=e.attributes[n];t+=n+",",i.data&&(t+=i.data.stride+","),i.offset&&(t+=i.offset+","),i.itemSize&&(t+=i.itemSize+","),i.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let n=t.customProgramCacheKey();for(const i of rE(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(i))continue;const s=t[i];let r;if(s!==null){const a=typeof s;a==="number"?r=s!==0?"1":"0":a==="object"?(r="{",s.isTexture&&(r+=s.mapping),r+="}"):r=String(s)}else r=String(s);n+=r+","}return n+=this.clippingContextCacheKey+",",e.geometry&&(n+=this.getGeometryCacheKey()),e.skeleton&&(n+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(n+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(n+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(n+=e._colorsTexture.uuid+",")),e.count>1&&(n+=e.uuid+","),n+=e.receiveShadow+",",Yv(n)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Rr=[];class aE{constructor(e,t,n,i,s,r){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=i,this.bindings=s,this.info=r,this.chainMaps={}}get(e,t,n,i,s,r,a,c){const l=this.getChainMap(c);Rr[0]=e,Rr[1]=t,Rr[2]=r,Rr[3]=s;let u=l.get(Rr);return u===void 0?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,i,s,r,a,c),l.set(Rr,u)):(u.updateClipping(a),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,n,i,s,r,a,c)):u.version=t.version)),u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Si)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,i,s,r,a,c,l,u,h){const d=this.getChainMap(h),f=new oE(e,t,n,i,s,r,a,c,l,u);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),d.delete(f.getChainArray())},f}}class As{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const di={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},ps=16,cE=211,lE=212;class uE extends As{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){const n=this.get(e);if(n.version===void 0)t===di.VERTEX?this.backend.createAttribute(e):t===di.INDEX?this.backend.createIndexAttribute(e):t===di.STORAGE?this.backend.createStorageAttribute(e):t===di.INDIRECT&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{const i=this._getBufferAttribute(e);(n.version<i.version||i.usage===Hr)&&(this.backend.updateAttribute(e),n.version=i.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function hE(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function vx(o){return o.index!==null?o.index.version:o.attributes.position.version}function ig(o){const e=[],t=o.index,n=o.attributes.position;if(t!==null){const s=t.array;for(let r=0,a=s.length;r<a;r+=3){const c=s[r+0],l=s[r+1],u=s[r+2];e.push(c,l,l,u,u,c)}}else{const s=n.array;for(let r=0,a=s.length/3-1;r<a;r+=3){const c=r+0,l=r+1,u=r+2;e.push(c,l,l,u,u,c)}}const i=new(hE(e)?Rv:Ev)(e,1);return i.version=vx(o),i}class dE extends As{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,n=this.get(t);n.initialized=!0,this.info.memory.geometries++;const i=()=>{this.info.memory.geometries--;const s=t.index,r=e.getAttributes();s!==null&&this.attributes.delete(s);for(const c of r)this.attributes.delete(c);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",i)};t.addEventListener("dispose",i)}updateAttributes(e){const t=e.getAttributes();for(const s of t)s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute?this.updateAttribute(s,di.STORAGE):this.updateAttribute(s,di.VERTEX);const n=this.getIndex(e);n!==null&&this.updateAttribute(n,di.INDEX);const i=e.geometry.indirect;i!==null&&this.updateAttribute(i,di.INDIRECT)}updateAttribute(e,t){const n=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:n}=e;let i=t.index;if(n.wireframe===!0){const s=this.wireframes;let r=s.get(t);r===void 0?(r=ig(t),s.set(t,r)):r.version!==vx(t)&&(this.attributes.delete(r),r=ig(t),s.set(t,r)),i=r}return i}}class fE{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){this[e].timestampCalls===0&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class _x{constructor(e){this.cacheKey=e,this.usedTimes=0}}class pE extends _x{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}}class mE extends _x{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let gE=0;class ph{constructor(e,t,n=null,i=null){this.id=gE++,this.code=e,this.stage=t,this.transforms=n,this.attributes=i,this.usedTimes=0}}class vE extends As{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:n}=this,i=this.get(e);if(this._needsComputeUpdate(e)){const s=i.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);const r=this.nodes.getForCompute(e);let a=this.programs.compute.get(r.computeShader);a===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),a=new ph(r.computeShader,"compute",r.transforms,r.nodeAttributes),this.programs.compute.set(r.computeShader,a),n.createProgram(a));const c=this._getComputeCacheKey(e,a);let l=this.caches.get(c);l===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),l=this._getComputePipeline(e,a,c,t)),l.usedTimes++,a.usedTimes++,i.version=e.version,i.pipeline=l}return i.pipeline}getForRender(e,t=null){const{backend:n}=this,i=this.get(e);if(this._needsRenderUpdate(e)){const s=i.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);const r=e.getNodeBuilderState();let a=this.programs.vertex.get(r.vertexShader);a===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),a=new ph(r.vertexShader,"vertex"),this.programs.vertex.set(r.vertexShader,a),n.createProgram(a));let c=this.programs.fragment.get(r.fragmentShader);c===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),c=new ph(r.fragmentShader,"fragment"),this.programs.fragment.set(r.fragmentShader,c),n.createProgram(c));const l=this._getRenderCacheKey(e,a,c);let u=this.caches.get(l);u===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),u=this._getRenderPipeline(e,a,c,l,t)):e.pipeline=u,u.usedTimes++,a.usedTimes++,c.usedTimes++,i.pipeline=u}return i.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,i){n=n||this._getComputeCacheKey(e,t);let s=this.caches.get(n);return s===void 0&&(s=new mE(n,t),this.caches.set(n,s),this.backend.createComputePipeline(s,i)),s}_getRenderPipeline(e,t,n,i,s){i=i||this._getRenderCacheKey(e,t,n);let r=this.caches.get(i);return r===void 0&&(r=new pE(i,t,n),this.caches.set(i,r),e.pipeline=r,this.backend.createRenderPipeline(e,s)),r}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class _E extends As{constructor(e,t,n,i,s,r){super(),this.backend=e,this.textures=n,this.pipelines=s,this.attributes=i,this.nodes=t,this.info=r,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const n of t){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const n of t){const i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const n=t.attribute,i=n.isIndirectStorageBufferAttribute?di.INDIRECT:di.STORAGE;this.attributes.update(n,i)}}_update(e,t){const{backend:n}=this;let i=!1,s=!0,r=0,a=0;for(const c of e.bindings)if(!(c.isNodeUniformsGroup&&!this.nodes.updateGroup(c))){if(c.isUniformBuffer)c.update()&&n.updateBinding(c);else if(c.isSampler)c.update();else if(c.isSampledTexture){const l=this.textures.get(c.texture);c.needsBindingsUpdate(l.generation)&&(i=!0);const u=c.update(),h=c.texture;u&&this.textures.updateTexture(h);const d=n.get(h);if(d.externalTexture!==void 0||l.isDefaultTexture?s=!1:(r=r*10+h.id,a+=h.version),n.isWebGPUBackend===!0&&d.texture===void 0&&d.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",c,u,h,c.textureNode.value,i),this.textures.updateTexture(h),i=!0),h.isStorageTexture===!0){const f=this.get(h);c.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(h)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(h),f.needsMipmap=!1)}}}i===!0&&this.backend.updateBindings(e,t,s?r:0,a)}}function yE(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function sg(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function rg(o){return(o.transmission>0||o.transmissionNode)&&o.side===Ws&&o.forceSinglePass===!1}class xE{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,i,s,r,a){let c=this.renderItems[this.renderItemsIndex];return c===void 0?(c={id:e.id,object:e,geometry:t,material:n,groupOrder:i,renderOrder:e.renderOrder,z:s,group:r,clippingContext:a},this.renderItems[this.renderItemsIndex]=c):(c.id=e.id,c.object=e,c.geometry=t,c.material=n,c.groupOrder=i,c.renderOrder=e.renderOrder,c.z=s,c.group=r,c.clippingContext=a),this.renderItemsIndex++,c}push(e,t,n,i,s,r,a){const c=this.getNextRenderItem(e,t,n,i,s,r,a);e.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0?(rg(n)&&this.transparentDoublePass.push(c),this.transparent.push(c)):this.opaque.push(c)}unshift(e,t,n,i,s,r,a){const c=this.getNextRenderItem(e,t,n,i,s,r,a);n.transparent===!0||n.transmission>0?(rg(n)&&this.transparentDoublePass.unshift(c),this.transparent.unshift(c)):this.opaque.unshift(c)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||yE),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||sg),this.transparent.length>1&&this.transparent.sort(t||sg)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const n=this.renderItems[e];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null,n.clippingContext=null}}}class bE{constructor(e){this.lighting=e,this.lists=new Si}get(e,t){const n=this.lists,i=[e,t];let s=n.get(i);return s===void 0&&(s=new xE(this.lighting,e,t),n.set(i,s)),s}dispose(){this.lists=new Si}}let SE=0;class TE{constructor(){this.id=SE++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Ke,this.scissor=!1,this.scissorValue=new Ke,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return yx(this)}}function yx(o){const{textures:e,activeCubeFace:t}=o,n=[t];for(const i of e)n.push(i.id);return lf(n)}class ME{constructor(){this.chainMaps={}}get(e,t,n=null){const i=[e,t];let s;if(n===null)s="default";else{const c=n.texture.format;s=`${n.textures.length}:${c}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}const r=this.getChainMap(s);let a=r.get(i);return a===void 0&&(a=new TE,r.set(i,a)),n!==null&&(a.sampleCount=n.samples===0?1:n.samples),a}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Si)}dispose(){this.chainMaps={}}}const wE=new C;class AE extends As{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){const n=this.get(e),i=e.samples===0?1:e.samples,s=n.depthTextureMips||(n.depthTextureMips={}),r=e.textures,a=this.getSize(r[0]),c=a.width>>t,l=a.height>>t;let u=e.depthTexture||s[t];const h=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;u===void 0&&h&&(u=new or,u.format=e.stencilBuffer?ro:qs,u.type=e.stencilBuffer?Ma:Zt,u.image.width=c,u.image.height=l,s[t]=u),(n.width!==a.width||a.height!==n.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=c,u.image.height=l)),n.width=a.width,n.height=a.height,n.textures=r,n.depthTexture=u||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==i&&(d=!0,u&&(u.needsUpdate=!0),n.sampleCount=i);const f={sampleCount:i};for(let p=0;p<r.length;p++){const m=r[p];d&&(m.needsUpdate=!0),this.updateTexture(m,f)}if(u&&this.updateTexture(u,f),n.initialized!==!0){n.initialized=!0;const p=()=>{e.removeEventListener("dispose",p);for(let m=0;m<r.length;m++)this._destroyTexture(r[m]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",p)}}updateTexture(e,t={}){const n=this.get(e);if(n.initialized===!0&&n.version===e.version)return;const i=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(i&&n.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const l=this.renderer.getRenderTarget();l?e.type=l.texture.type:e.type=_s}const{width:r,height:a,depth:c}=this.getSize(e);if(t.width=r,t.height=a,t.depth=c,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,r,a):1,i||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),n.generation=e.version;else if(n.initialized!==!0&&s.createSampler(e),e.version>0){const u=e.image;if(u===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(u.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const h=[];for(const d of e.images)h.push(d);t.images=h}else t.image=u;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(s.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version;if(n.initialized!==!0){n.initialized=!0,n.generation=e.version,this.info.memory.textures++;const l=()=>{e.removeEventListener("dispose",l),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",l)}n.version=e.version}getSize(e,t=wE){let n=e.images?e.images[0]:e.image;return n?(n.image!==void 0&&(n=n.image),t.width=n.width||1,t.height=n.height||1,t.depth=e.isCubeTexture?6:n.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let i;return e.isCompressedTexture?e.mipmaps?i=e.mipmaps.length:i=1:i=Math.floor(Math.log2(Math.max(t,n)))+1,i}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===Sa||t===Ta||t===Qs||t===io}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class np extends We{constructor(e,t,n,i=1){super(e,t,n),this.a=i}set(e,t,n,i=1){return this.a=i,super.set(e,t,n)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class xx extends it{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const NE=(o,e)=>K(new xx(o,e));class CE extends Ee{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const n=new Jo(t);return this._currentCond=Kt(e,n),this.add(this._currentCond)}ElseIf(e,t){const n=new Jo(t),i=Kt(e,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(e){return this._currentCond.elseNode=new Jo(e),this}build(e,...t){const n=pf();ma(this);for(const i of this.nodes)i.build(e,"void");return ma(n),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const el=q(CE);class EE extends Ee{static get type(){return"StructTypeNode"}constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class bx extends Ee{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}setup(e){super.setup(e);const t=this.members,n=[];for(let i=0;i<t.length;i++)n.push(t[i].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new EE(n)).name}generate(e,t){const n=e.getOutputStructName(),i=this.members,s=n!==""?n+".":"";for(let r=0;r<i.length;r++){const a=i[r].build(e,t);e.addLineFlowCode(`${s}m${r} = ${a}`,this)}return n}}const RE=q(bx);function Sx(o,e){for(let t=0;t<o.length;t++)if(o[t].name===e)return t;return-1}class PE extends bx{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return Tx(t)}setup(e){const t=this.outputNodes,n=e.renderer.getRenderTarget(),i=[],s=n.textures;for(const r in t){const a=Sx(s,r);i[a]=Ae(t[r])}return this.members=i,super.setup(e)}}const Tx=q(PE),DE=F(([o])=>{const e=o.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),Rd=(o,e)=>ti(Ie(4,o.mul(Ye(1,o))),e),UE=(o,e)=>o.lessThan(.5)?Rd(o.mul(2),e).div(2):Ye(1,Rd(Ie(Ye(1,o),2),e).div(2)),LE=(o,e,t)=>ti(si(ti(o,e),Pt(ti(o,e),ti(Ye(1,o),t))),1/e),FE=(o,e)=>Dn(bl.mul(e.mul(o).sub(1))).div(bl.mul(e.mul(o).sub(1))),ui=F(([o])=>o.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),Mx=F(([o])=>P(ui(o.z.add(ui(o.y.mul(1)))),ui(o.z.add(ui(o.x.mul(1)))),ui(o.y.add(ui(o.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),IE=F(([o,e,t])=>{const n=P(o).toVar(),i=S(1.4).toVar(),s=S(0).toVar(),r=P(n).toVar();return nt({start:S(0),end:S(3),type:"float",condition:"<="},()=>{const a=P(Mx(r.mul(2))).toVar();n.addAssign(a.add(t.mul(S(.1).mul(e)))),r.mulAssign(1.8),i.mulAssign(1.5),n.mulAssign(1.2);const c=S(ui(n.z.add(ui(n.x.add(ui(n.y)))))).toVar();s.addAssign(c.div(i)),r.addAssign(.14)}),s}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]});class BE extends Ee{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let n=this._candidateFnCall;if(n===null){let i=null,s=-1;for(const r of this.functionNodes){const c=r.shaderNode.layout;if(c===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const l=c.inputs;if(t.length===l.length){let u=0;for(let h=0;h<t.length;h++){const d=t[h],f=l[h];d.getNodeType(e)===f.type?u++:u=0}u>s&&(i=r,s=u)}}this._candidateFnCall=n=i(...t)}return n}}const OE=q(BE),en=o=>(...e)=>OE(o,...e),hr=Ne(0).setGroup(Pe).onRenderUpdate(o=>o.time),wx=Ne(0).setGroup(Pe).onRenderUpdate(o=>o.deltaTime),VE=Ne(0,"uint").setGroup(Pe).onRenderUpdate(o=>o.frameId),kE=(o=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),hr.mul(o)),zE=(o=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),hr.mul(o)),GE=(o=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),wx.mul(o)),HE=(o=hr)=>o.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),WE=(o=hr)=>o.fract().round(),qE=(o=hr)=>o.add(.5).fract().mul(2).sub(1).abs(),jE=(o=hr)=>o.fract(),$E=F(([o,e,t=J(.5)])=>tp(o.sub(t),e).add(t)),XE=F(([o,e,t=J(.5)])=>{const n=o.sub(t),i=n.dot(n),r=i.mul(i).mul(e);return o.add(n.mul(r))}),YE=F(({position:o=null,horizontal:e=!0,vertical:t=!1})=>{let n;o!==null?(n=Hn.toVar(),n[3][0]=o.x,n[3][1]=o.y,n[3][2]=o.z):n=Hn;const i=wn.mul(n);return pa(e)&&(i[0][0]=Hn[0].length(),i[0][1]=0,i[0][2]=0),pa(t)&&(i[1][0]=0,i[1][1]=Hn[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,Ss.mul(i).mul(St)}),ZE=F(([o=null])=>{const e=Ml();return Ml(jf(o)).sub(e).lessThan(0).select(bi,o)});class KE extends Ee{static get type(){return"SpriteSheetUVNode"}constructor(e,t=xt(),n=S(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=n}setup(){const{frameNode:e,uvNode:t,countNode:n}=this,{width:i,height:s}=n,r=e.mod(i.mul(s)).floor(),a=r.mod(i),c=s.sub(r.add(1).div(i).ceil()),l=n.reciprocal(),u=J(a,c);return t.add(u).mul(l)}}const QE=q(KE);class JE extends Ee{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,n=null,i=S(1),s=St,r=Tn){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=n,this.scaleNode=i,this.positionNode=s,this.normalNode=r}setup(){const{textureXNode:e,textureYNode:t,textureZNode:n,scaleNode:i,positionNode:s,normalNode:r}=this;let a=r.abs().normalize();a=a.div(a.dot(P(1)));const c=s.yz.mul(i),l=s.zx.mul(i),u=s.xy.mul(i),h=e.value,d=t!==null?t.value:h,f=n!==null?n.value:h,p=qe(h,c).mul(a.x),m=qe(d,l).mul(a.y),g=qe(f,u).mul(a.z);return Pt(p,m,g)}}const Ax=q(JE),eR=(...o)=>Ax(...o),Pr=new Fi,Us=new C,Dr=new C,mh=new C,Bo=new Xe,Uc=new C(0,0,-1),ai=new Ke,Oo=new C,Lc=new C,Vo=new Ke,Fc=new le,Al=new Ms,tR=bi.flipX();Al.depthTexture=new or(1,1);let gh=!1;class ip extends yi{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||Al.texture,tR),this._reflectorBaseNode=e.reflector||new nR(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=K(new ip({defaultTexture:Al.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}}class nR extends Ee{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:n=new Rt,resolution:i=1,generateMipmaps:s=!1,bounces:r=!0,depth:a=!1}=t;this.textureNode=e,this.target=n,this.resolution=i,this.generateMipmaps=s,this.bounces=r,this.depth=a,this.updateBeforeType=r?Fe.RENDER:Fe.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const n=this.resolution;t.getDrawingBufferSize(Fc),e.setSize(Math.round(Fc.width*n),Math.round(Fc.height*n))}setup(e){return this._updateResolution(Al,e.renderer),super.setup(e)}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new Ms(0,0,{type:ni}),this.generateMipmaps===!0&&(t.texture.minFilter=aS,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new or),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&gh)return;gh=!0;const{scene:t,camera:n,renderer:i,material:s}=e,{target:r}=this,a=this.getVirtualCamera(n),c=this.getRenderTarget(a);if(i.getDrawingBufferSize(Fc),this._updateResolution(c,i),Dr.setFromMatrixPosition(r.matrixWorld),mh.setFromMatrixPosition(n.matrixWorld),Bo.extractRotation(r.matrixWorld),Us.set(0,0,1),Us.applyMatrix4(Bo),Oo.subVectors(Dr,mh),Oo.dot(Us)>0)return;Oo.reflect(Us).negate(),Oo.add(Dr),Bo.extractRotation(n.matrixWorld),Uc.set(0,0,-1),Uc.applyMatrix4(Bo),Uc.add(mh),Lc.subVectors(Dr,Uc),Lc.reflect(Us).negate(),Lc.add(Dr),a.coordinateSystem=n.coordinateSystem,a.position.copy(Oo),a.up.set(0,1,0),a.up.applyMatrix4(Bo),a.up.reflect(Us),a.lookAt(Lc),a.near=n.near,a.far=n.far,a.updateMatrixWorld(),a.projectionMatrix.copy(n.projectionMatrix),Pr.setFromNormalAndCoplanarPoint(Us,Dr),Pr.applyMatrix4(a.matrixWorldInverse),ai.set(Pr.normal.x,Pr.normal.y,Pr.normal.z,Pr.constant);const l=a.projectionMatrix;Vo.x=(Math.sign(ai.x)+l.elements[8])/l.elements[0],Vo.y=(Math.sign(ai.y)+l.elements[9])/l.elements[5],Vo.z=-1,Vo.w=(1+l.elements[10])/l.elements[14],ai.multiplyScalar(1/ai.dot(Vo));const u=0;l.elements[2]=ai.x,l.elements[6]=ai.y,l.elements[10]=i.coordinateSystem===qi?ai.z-u:ai.z+1-u,l.elements[14]=ai.w,this.textureNode.value=c.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=c.depthTexture),s.visible=!1;const h=i.getRenderTarget(),d=i.getMRT();i.setMRT(null),i.setRenderTarget(c),i.render(t,a),i.setMRT(d),i.setRenderTarget(h),s.visible=!0,gh=!1}}const iR=o=>K(new ip(o)),vh=new af(-1,1,1,-1,0,1);class sR extends $n{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Qt([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Qt(t,2))}}const rR=new sR;class sp extends In{constructor(e=null){super(rR,e),this.camera=vh,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,vh)}render(e){e.render(this,vh)}}const oR=new le;class aR extends yi{static get type(){return"RTTNode"}constructor(e,t=null,n=null,i={type:ni}){const s=new Ms(t,n,i);super(s.texture,xt()),this.node=e,this.width=t,this.height=n,this.renderTarget=s,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new sp(new At),this.updateBeforeType=Fe.RENDER}get autoSize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const n=e*this.pixelRatio,i=t*this.pixelRatio;this.renderTarget.setSize(n,i),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoSize===!0){this.pixelRatio=e.getPixelRatio();const n=e.getSize(oR);this.setSize(n.width,n.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new yi(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Nx=(o,...e)=>K(new aR(K(o),...e)),cR=(o,...e)=>o.isTextureNode?o:o.isPassNode?o.getTextureNode():Nx(o,...e),Vr=F(([o,e,t],n)=>{let i;n.renderer.coordinateSystem===qi?(o=J(o.x,o.y.oneMinus()).mul(2).sub(1),i=Ae(P(o,e),1)):i=Ae(P(o.x,o.y.oneMinus(),e).mul(2).sub(1),1);const s=Ae(t.mul(i));return s.xyz.div(s.w)}),lR=F(([o,e])=>{const t=e.mul(Ae(o,1)),n=t.xy.div(t.w).mul(.5).add(.5).toVar();return J(n.x,n.y.oneMinus())}),uR=F(([o,e,t])=>{const n=Ys(Tt(e)),i=zt(o.mul(n)).toVar(),s=Tt(e,i).toVar(),r=Tt(e,i.sub(zt(2,0))).toVar(),a=Tt(e,i.sub(zt(1,0))).toVar(),c=Tt(e,i.add(zt(1,0))).toVar(),l=Tt(e,i.add(zt(2,0))).toVar(),u=Tt(e,i.add(zt(0,2))).toVar(),h=Tt(e,i.add(zt(0,1))).toVar(),d=Tt(e,i.sub(zt(0,1))).toVar(),f=Tt(e,i.sub(zt(0,2))).toVar(),p=ht(Ye(S(2).mul(a).sub(r),s)).toVar(),m=ht(Ye(S(2).mul(c).sub(l),s)).toVar(),g=ht(Ye(S(2).mul(h).sub(u),s)).toVar(),_=ht(Ye(S(2).mul(d).sub(f),s)).toVar(),x=Vr(o,s,t).toVar(),y=p.lessThan(m).select(x.sub(Vr(o.sub(J(S(1).div(n.x),0)),a,t)),x.negate().add(Vr(o.add(J(S(1).div(n.x),0)),c,t))),b=g.lessThan(_).select(x.sub(Vr(o.add(J(0,S(1).div(n.y))),h,t)),x.negate().add(Vr(o.sub(J(0,S(1).div(n.y))),d,t)));return $i(Wl(y,b))});class hR extends Ul{constructor(e,t,n=Float32Array){ArrayBuffer.isView(e)===!1&&(e=new n(e*t)),super(e,t),this.isStorageInstancedBufferAttribute=!0}}class dR extends Ln{constructor(e,t,n=Float32Array){ArrayBuffer.isView(e)===!1&&(e=new n(e*t)),super(e,t),this.isStorageBufferAttribute=!0}}class fR extends lr{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let n;const i=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&i!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?n=e.generatePBO(this):n=this.node.build(e):n=super.generate(e),i!==!0){const s=this.getNodeType(e);n=e.format(n,s,t)}return n}}const pR=q(fR);class mR extends Vf{static get type(){return"StorageBufferNode"}constructor(e,t=null,n=0){t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t=Qv(e.itemSize),n=e.count),super(e,t,n),this.isStorageBufferNode=!0,this.access=rn.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this.bufferCount=n,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return pR(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(rn.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=Da(this.value),this._varying=Mn(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:n}=this.getAttributeData(),i=n.build(e);return e.registerTransform(i,t),i}}const tu=(o,e,t)=>K(new mR(o,e,t)),gR=(o,e,t)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),tu(o,e,t).setPBO(!0)),vR=(o,e="float")=>{const t=Jv(e),n=new dR(o,t);return tu(n,e,o)},_R=(o,e="float")=>{const t=Jv(e),n=new hR(o,t);return tu(n,e,o)};class yR extends Gy{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),n=e.hasGeometryAttribute(t);let i;return n===!0?i=super.generate(e):i=e.generateConst(this.nodeType,new Ke(1,1,1,1)),i}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const xR=(...o)=>K(new yR(...o));class bR extends Ee{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const SR=he(bR),ko=new ii,_h=new Xe;class bn extends Ee{static get type(){return"SceneNode"}constructor(e=bn.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,n=this.scene!==null?this.scene:e.scene;let i;return t===bn.BACKGROUND_BLURRINESS?i=rt("backgroundBlurriness","float",n):t===bn.BACKGROUND_INTENSITY?i=rt("backgroundIntensity","float",n):t===bn.BACKGROUND_ROTATION?i=Ne("mat4").label("backgroundRotation").setGroup(Pe).onRenderUpdate(()=>{const s=n.background;return s!==null&&s.isTexture&&s.mapping!==zd?(ko.copy(n.backgroundRotation),ko.x*=-1,ko.y*=-1,ko.z*=-1,_h.makeRotationFromEuler(ko)):_h.identity(),_h}):console.error("THREE.SceneNode: Unknown scope:",t),i}}bn.BACKGROUND_BLURRINESS="backgroundBlurriness";bn.BACKGROUND_INTENSITY="backgroundIntensity";bn.BACKGROUND_ROTATION="backgroundRotation";const Cx=he(bn,bn.BACKGROUND_BLURRINESS),Pd=he(bn,bn.BACKGROUND_INTENSITY),Ex=he(bn,bn.BACKGROUND_ROTATION);class TR extends yi{static get type(){return"StorageTextureNode"}constructor(e,t,n=null){super(e,t),this.storeNode=n,this.isStorageTextureNode=!0,this.access=rn.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);t.storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let n;return this.storeNode!==null?n=this.generateStore(e):n=super.generate(e,t),n}toReadWrite(){return this.setAccess(rn.READ_WRITE)}toReadOnly(){return this.setAccess(rn.READ_ONLY)}toWriteOnly(){return this.setAccess(rn.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:n,storeNode:i}=t,s=super.generate(e,"property"),r=n.build(e,"uvec2"),a=i.build(e,"vec4"),c=e.generateTextureStore(e,s,r,a);e.addLineFlowCode(c,this)}}const Rx=q(TR),MR=(o,e,t)=>{const n=Rx(o,e,t);return t!==null&&n.append(),n};class wR extends Yl{static get type(){return"UserDataNode"}constructor(e,t,n=null){super(e,t,n),this.userData=n}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}}const AR=(o,e,t)=>K(new wR(o,e,t)),og=new WeakMap;class NR extends Nt{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=Fe.OBJECT,this.updateAfterType=Fe.OBJECT,this.previousModelWorldMatrix=Ne(new Xe),this.previousProjectionMatrix=Ne(new Xe).setGroup(Pe),this.previousCameraViewMatrix=Ne(new Xe)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:n}){const i=ag(n);this.previousModelWorldMatrix.value.copy(i);const s=Px(t);s.frameId!==e&&(s.frameId=e,s.previousProjectionMatrix===void 0?(s.previousProjectionMatrix=new Xe,s.previousCameraViewMatrix=new Xe,s.currentProjectionMatrix=new Xe,s.currentCameraViewMatrix=new Xe,s.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),s.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(s.previousProjectionMatrix.copy(s.currentProjectionMatrix),s.previousCameraViewMatrix.copy(s.currentCameraViewMatrix)),s.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),s.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(s.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(s.previousCameraViewMatrix))}updateAfter({object:e}){ag(e).copy(e.matrixWorld)}setup(){const e=this.projectionMatrix===null?Ss:Ne(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),n=e.mul(ur).mul(St),i=this.previousProjectionMatrix.mul(t).mul(Tl),s=n.xy.div(n.w),r=i.xy.div(i.w);return Ye(s,r)}}function Px(o){let e=og.get(o);return e===void 0&&(e={},og.set(o,e)),e}function ag(o,e=0){const t=Px(o);let n=t[e];return n===void 0&&(t[e]=n=new Xe),n}const CR=he(NR),Dx=F(([o,e])=>Sn(1,o.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Ux=F(([o,e])=>Sn(o.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Lx=F(([o,e])=>o.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Fx=F(([o,e])=>tt(o.mul(2).mul(e),o.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),Hl(.5,o))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),ER=F(([o,e])=>{const t=e.a.add(o.a.mul(e.a.oneMinus()));return Ae(e.rgb.mul(e.a).add(o.rgb.mul(o.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),RR=(...o)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),Dx(o)),PR=(...o)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),Ux(o)),DR=(...o)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),Lx(o)),UR=(...o)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),Fx(o)),LR=F(([o])=>nu(o.rgb)),FR=F(([o,e=S(1)])=>e.mix(nu(o.rgb),o.rgb)),IR=F(([o,e=S(1)])=>{const t=Pt(o.r,o.g,o.b).div(3),n=o.r.max(o.g.max(o.b)),i=n.sub(t).mul(e).mul(-3);return tt(o.rgb,n,i)}),BR=F(([o,e=S(1)])=>{const t=P(.57735,.57735,.57735),n=e.cos();return P(o.rgb.mul(n).add(t.cross(o.rgb).mul(e.sin()).add(t.mul(ws(t,o.rgb).mul(n.oneMinus())))))}),nu=(o,e=P(Ct.getLuminanceCoefficients(new C)))=>ws(o,e),OR=(o,e)=>tt(P(0),o,nu(o).sub(e).max(0)),VR=F(([o,e=P(1),t=P(0),n=P(1),i=S(1),s=P(Ct.getLuminanceCoefficients(new C,zi))])=>{const r=o.rgb.dot(P(s)),a=wt(o.rgb.mul(e).add(t),0).toVar(),c=a.pow(n).toVar();return Ve(a.r.greaterThan(0),()=>{a.r.assign(c.r)}),Ve(a.g.greaterThan(0),()=>{a.g.assign(c.g)}),Ve(a.b.greaterThan(0),()=>{a.b.assign(c.b)}),a.assign(r.add(a.sub(r).mul(i))),Ae(a.rgb,o.a)});class kR extends Nt{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const zR=q(kR),GR=new le;class Ix extends yi{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class cg extends Ix{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class Ti extends Nt{static get type(){return"PassNode"}constructor(e,t,n,i={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const s=new or;s.isRenderTargetTexture=!0,s.name="depth";const r=new Ms(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ni,...i});r.texture.name="output",r.depthTexture=s,this.renderTarget=r,this.updateBeforeType=Fe.FRAME,this._textures={output:r.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Ne(0),this._cameraFar=Ne(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const n=this._textures[e],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=K(new cg(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=K(new cg(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[e]=t=$f(this.getTextureNode(e),n,i)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const n=this._cameraNear,i=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=to(s,n,i)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===Ti.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:n,camera:i}=this;this._pixelRatio=t.getPixelRatio();const s=t.getSize(GR);this.setSize(s.width,s.height);const r=t.getRenderTarget(),a=t.getMRT();this._cameraNear.value=i.near,this._cameraFar.value=i.far;for(const c in this._previousTextures)this.toggleTexture(c);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,i),t.setRenderTarget(r),t.setMRT(a)}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget.setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Ti.COLOR="color";Ti.DEPTH="depth";const HR=(o,e,t)=>K(new Ti(Ti.COLOR,o,e,t)),WR=(o,e)=>K(new Ix(o,e)),qR=(o,e)=>K(new Ti(Ti.DEPTH,o,e));class jR extends Ti{static get type(){return"ToonOutlinePassNode"}constructor(e,t,n,i,s){super(Ti.COLOR,e,t),this.colorNode=n,this.thicknessNode=i,this.alphaNode=s,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,n=t.getRenderObjectFunction();t.setRenderObjectFunction((i,s,r,a,c,l,u,h)=>{if((c.isMeshToonMaterial||c.isMeshToonNodeMaterial)&&c.wireframe===!1){const d=this._getOutlineMaterial(c);t.renderObject(i,s,r,a,d,l,u,h)}t.renderObject(i,s,r,a,c,l,u,h)}),super.updateBefore(e),t.setRenderObjectFunction(n)}_createMaterial(){const e=new At;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=qn;const t=Tn.negate(),n=Ss.mul(ur),i=S(1),s=n.mul(Ae(St,1)),r=n.mul(Ae(St.add(t),1)),a=$i(s.sub(r));return e.vertexNode=s.add(a.mul(this.thicknessNode).mul(s.w).mul(i)),e.colorNode=Ae(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const $R=(o,e,t=new We(0,0,0),n=.003,i=1)=>K(new jR(o,e,K(t),K(n),K(i))),Bx=F(([o,e])=>o.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Ox=F(([o,e])=>(o=o.mul(e),o.div(o.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Vx=F(([o,e])=>{o=o.mul(e),o=o.sub(.004).max(0);const t=o.mul(o.mul(6.2).add(.5)),n=o.mul(o.mul(6.2).add(1.7)).add(.06);return t.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),XR=F(([o])=>{const e=o.mul(o.add(.0245786)).sub(90537e-9),t=o.mul(o.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),kx=F(([o,e])=>{const t=cn(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=cn(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return o=o.mul(e).div(.6),o=t.mul(o),o=XR(o),o=n.mul(o),o.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),YR=cn(P(1.6605,-.1246,-.0182),P(-.5876,1.1329,-.1006),P(-.0728,-.0083,1.1187)),ZR=cn(P(.6274,.0691,.0164),P(.3293,.9195,.088),P(.0433,.0113,.8956)),KR=F(([o])=>{const e=P(o).toVar(),t=P(e.mul(e)).toVar(),n=P(t.mul(t)).toVar();return S(15.5).mul(n.mul(t)).sub(Ie(40.14,n.mul(e))).add(Ie(31.96,n).sub(Ie(6.868,t.mul(e))).add(Ie(.4298,t).add(Ie(.1191,e).sub(.00232))))}),zx=F(([o,e])=>{const t=P(o).toVar(),n=cn(P(.856627153315983,.137318972929847,.11189821299995),P(.0951212405381588,.761241990602591,.0767994186031903),P(.0482516061458583,.101439036467562,.811302368396859)),i=cn(P(1.1271005818144368,-.1413297634984383,-.14132976349843826),P(-.11060664309660323,1.157823702216272,-.11060664309660294),P(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=S(-12.47393),r=S(4.026069);return t.mulAssign(e),t.assign(ZR.mul(t)),t.assign(n.mul(t)),t.assign(wt(t,1e-10)),t.assign(pi(t)),t.assign(t.sub(s).div(r.sub(s))),t.assign(vi(t,0,1)),t.assign(KR(t)),t.assign(i.mul(t)),t.assign(ti(wt(P(0),t),P(2.2))),t.assign(YR.mul(t)),t.assign(vi(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Gx=F(([o,e])=>{const t=S(.76),n=S(.15);o=o.mul(e);const i=Sn(o.r,Sn(o.g,o.b)),s=Kt(i.lessThan(.08),i.sub(Ie(6.25,i.mul(i))),.04);o.subAssign(s);const r=wt(o.r,wt(o.g,o.b));Ve(r.lessThan(t),()=>o);const a=Ye(1,t),c=Ye(1,a.mul(a).div(r.add(a.sub(t))));o.mulAssign(c.div(r));const l=Ye(1,si(1,n.mul(r.sub(c)).add(1)));return tt(o,P(c),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Ft extends Ee{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=n,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const i of t)i.build(e);const n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const iu=q(Ft),QR=(o,e)=>iu(o,e,"js"),JR=(o,e)=>iu(o,e,"wgsl"),eP=(o,e)=>iu(o,e,"glsl");class Hx extends Ft{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let n=t.nodeFunction;return n===void 0&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);const n=this.getNodeFunction(e),i=n.name,s=n.type,r=e.getCodeFromNode(this,s);i!==""&&(r.name=i);const a=e.getPropertyName(r),c=this.getNodeFunction(e).getCode(a);return r.code=c+`
`,t==="property"?a:e.format(`${a}()`,s,t)}}const Wx=(o,e=[],t="")=>{for(let s=0;s<e.length;s++){const r=e[s];typeof r=="function"&&(e[s]=r.functionNode)}const n=K(new Hx(o,e,t)),i=(...s)=>n.call(...s);return i.functionNode=n,i},tP=(o,e)=>Wx(o,e,"glsl"),nP=(o,e)=>Wx(o,e,"wgsl");class iP extends Ee{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new Ts,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:S()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=t_(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=n_(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const tl=q(iP);class qx extends Map{get(e,t=null,...n){if(this.has(e))return super.get(e);if(t!==null){const i=t(...n);return this.set(e,i),i}}}class sP{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const nl=new qx;class rP extends Ee{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new qx,this._output=tl(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const n=this._outputs;return n[e]===void 0?n[e]=tl(t):n[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const n=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),n[e]=t,n[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),n[e]=t,n[e].events.addEventListener("refresh",this.onRefresh)):n[e]===void 0?(n[e]=tl(t),n[e].events.addEventListener("refresh",this.onRefresh)):n[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const i=this.getObject()[e];if(typeof i=="function")return i(...t)}async callAsync(e,...t){const i=this.getObject()[e];if(typeof i=="function")return i.constructor.name==="AsyncFunction"?await i(...t):i(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;const e=()=>this.refresh(),t=(l,u)=>this.setOutput(l,u),n=new sP(this),i=nl.get("THREE"),s=nl.get("TSL"),r=this.getMethod(this.codeNode),a=[n,this._local,nl,e,t,i,s];this._object=r(...a);const c=this._object.layout;if(c&&(c.cache===!1&&this._local.clear(),this._output.outputType=c.outputType||null,Array.isArray(c.elements)))for(const l of c.elements){const u=l.id||l.name;l.inputType&&(this.getParameter(u)===void 0&&this.setParameter(u,null),this.getParameter(u).inputType=l.inputType),l.outputType&&(this.getOutput(u)===void 0&&this.setOutput(u,null),this.getOutput(u).outputType=l.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let n=this.parameters[t];n.isScriptableNode&&(n=n.getDefaultOutput()),n.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:S()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;const e=["parameters","local","global","refresh","setOutput","THREE","TSL"],n=["layout","init","main","dispose"].join(", "),i="var "+n+`; var output = {};
`,s=`
return { ...output, `+n+" };",r=i+this.codeNode.code+s;return this._method=new Function(...e,r),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[Yv(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const n in this.parameters)t.push(this.parameters[n].getCacheKey(e));return lf(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const oP=q(rP);class rp extends Ee{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const n=e.context.getViewZ;return n!==void 0&&(t=n(this)),(t||Bt.z).negate()}setup(){return this.factorNode}}const aP=q(rp);class cP extends rp{static get type(){return"FogRangeNode"}constructor(e,t,n){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=n}setup(e){const t=this.getViewZNode(e);return Xi(this.nearNode,this.farNode,t)}}const jx=q(cP);class lP extends rp{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),n=this.densityNode;return n.mul(n,t,t).negate().exp().oneMinus()}}const $x=q(lP);let Ls=null,Fs=null;class uP extends Ee{static get type(){return"RangeNode"}constructor(e=S(),t=S()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(gs(this.minNode.value)),n=e.getTypeLength(gs(this.maxNode.value));return t>n?t:n}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let n=null;if(t.count>1){const i=this.minNode.value,s=this.maxNode.value,r=e.getTypeLength(gs(i)),a=e.getTypeLength(gs(s));Ls=Ls||new Ke,Fs=Fs||new Ke,Ls.setScalar(0),Fs.setScalar(0),r===1?Ls.setScalar(i):i.isColor?Ls.set(i.r,i.g,i.b):Ls.set(i.x,i.y,i.z||0,i.w||0),a===1?Fs.setScalar(s):s.isColor?Fs.set(s.r,s.g,s.b):Fs.set(s.x,s.y,s.z||0,s.w||0);const c=4,l=c*t.count,u=new Float32Array(l);for(let d=0;d<l;d++){const f=d%c,p=Ls.getComponent(f),m=Fs.getComponent(f);u[d]=Yd.lerp(p,m,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)n=La(u,"vec4",t.count).element(Oa).convert(h);else{const d=new Ul(u,4);e.geometry.setAttribute("__range"+this.id,d),n=Sl(d).convert(h)}}else n=S(0);return n}}const hP=q(uP);class dP extends Ee{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){const n=this.getBuiltinName(e),i=this.getNodeType(e);return e.shaderStage==="compute"?e.format(n,i,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${n} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(i))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const su=(o,e)=>K(new dP(o,e)),fP=su("numWorkgroups","uvec3"),pP=su("workgroupId","uvec3"),mP=su("localId","uvec3"),gP=su("subgroupSize","uint");class vP extends Ee{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}const op=q(vP),_P=()=>op("workgroup").append(),yP=()=>op("storage").append(),xP=()=>op("texture").append();class bP extends lr{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let n;const i=e.context.assign;if(n=super.generate(e),i!==!0){const s=this.getNodeType(e);n=e.format(n,s,t)}return n}}class SP extends Ee{constructor(e,t,n=0){super(t),this.bufferType=t,this.bufferCount=n,this.isWorkgroupInfoNode=!0,this.scope=e}label(e){return this.name=e,this}getHash(){return this.uuid}setScope(e){return this.scope=e,this}getInputType(){return`${this.scope}Array`}element(e){return K(new bP(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const TP=(o,e)=>K(new SP("Workgroup",o,e));class jt extends Nt{static get type(){return"AtomicFunctionNode"}constructor(e,t,n,i=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.storeNode=i}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,n=this.getNodeType(e),i=this.getInputType(e),s=this.pointerNode,r=this.valueNode,a=[];a.push(`&${s.build(e,i)}`),a.push(r.build(e,i));const c=`${e.getMethod(t,n)}( ${a.join(", ")} )`;if(this.storeNode!==null){const l=this.storeNode.build(e,i);e.addLineFlowCode(`${l} = ${c}`,this)}else e.addLineFlowCode(c,this)}}jt.ATOMIC_LOAD="atomicLoad";jt.ATOMIC_STORE="atomicStore";jt.ATOMIC_ADD="atomicAdd";jt.ATOMIC_SUB="atomicSub";jt.ATOMIC_MAX="atomicMax";jt.ATOMIC_MIN="atomicMin";jt.ATOMIC_AND="atomicAnd";jt.ATOMIC_OR="atomicOr";jt.ATOMIC_XOR="atomicXor";const MP=q(jt),Zi=(o,e,t,n)=>{const i=MP(o,e,t,n);return i.append(),i},wP=(o,e,t=null)=>Zi(jt.ATOMIC_STORE,o,e,t),AP=(o,e,t=null)=>Zi(jt.ATOMIC_ADD,o,e,t),NP=(o,e,t=null)=>Zi(jt.ATOMIC_SUB,o,e,t),CP=(o,e,t=null)=>Zi(jt.ATOMIC_MAX,o,e,t),EP=(o,e,t=null)=>Zi(jt.ATOMIC_MIN,o,e,t),RP=(o,e,t=null)=>Zi(jt.ATOMIC_AND,o,e,t),PP=(o,e,t=null)=>Zi(jt.ATOMIC_OR,o,e,t),DP=(o,e,t=null)=>Zi(jt.ATOMIC_XOR,o,e,t);let Ic;function ka(o){Ic=Ic||new WeakMap;let e=Ic.get(o);return e===void 0&&Ic.set(o,e={}),e}function ap(o){const e=ka(o);return e.shadowMatrix||(e.shadowMatrix=Ne("mat4").setGroup(Pe).onRenderUpdate(()=>(o.shadow.updateMatrices(o),o.shadow.matrix)))}function Xx(o){const e=ka(o);if(e.projectionUV===void 0){const t=ap(o).mul(Wi);e.projectionUV=t.xyz.div(t.w)}return e.projectionUV}function cp(o){const e=ka(o);return e.position||(e.position=Ne(new C).setGroup(Pe).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(o.matrixWorld)))}function Yx(o){const e=ka(o);return e.targetPosition||(e.targetPosition=Ne(new C).setGroup(Pe).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(o.target.matrixWorld)))}function ru(o){const e=ka(o);return e.viewPosition||(e.viewPosition=Ne(new C).setGroup(Pe).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new C,n.value.setFromMatrixPosition(o.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}const lp=o=>wn.transformDirection(cp(o).sub(Yx(o))),UP=o=>o.sort((e,t)=>e.id-t.id),LP=(o,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===o)return t;return null},yh=new WeakMap;class up extends Ee{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=P().toVar("totalDiffuse"),this.totalSpecularNode=P().toVar("totalSpecular"),this.outgoingLightNode=P().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const n of this._lightNodes)t.push(n.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const n of t.nodes)n.build(e)}setupLightsNode(e){const t=[],n=this._lightNodes,i=UP(this._lights),s=e.renderer.library;for(const r of i)if(r.isNode)t.push(K(r));else{let a=null;if(n!==null&&(a=LP(r.id,n)),a===null){const c=s.getLightNodeClass(r.constructor);if(c===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${r.constructor.name}`);continue}let l=null;yh.has(r)?l=yh.get(r):(l=K(new c(r)),yh.set(r,l)),t.push(l)}}this._lightNodes=t}setupLights(e,t){for(const n of t)n.build(e)}setup(e){this._lightNodes===null&&this.setupLightsNode(e);const t=e.context,n=t.lightingModel;let i=this.outgoingLightNode;if(n){const{_lightNodes:s,totalDiffuseNode:r,totalSpecularNode:a}=this;t.outgoingLight=i;const c=e.addStack(),l=e.getDataFromNode(this);l.nodes=c.nodes,n.start(t,c,e),this.setupLights(e,s),n.indirect(t,c,e);const{backdrop:u,backdropAlpha:h}=t,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:m}=t.reflectedLight;let g=d.add(p);u!==null&&(h!==null?g=P(h.mix(g,u)):g=P(u),t.material.transparent=!0),r.assign(g),a.assign(f.add(m)),i.assign(r.add(a)),n.finish(t,c,e),i=i.bypass(e.removeStack())}return i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const FP=(o=[])=>K(new up).setLights(o),lg=new WeakMap,ug=P().toVar("shadowWorldPosition"),IP=F(([o,e,t])=>{let n=Wi.sub(o).length();return n=n.sub(e).div(t.sub(e)),n=n.saturate(),n}),BP=o=>{const e=o.shadow.camera,t=rt("near","float",e).setGroup(Pe),n=rt("far","float",e).setGroup(Pe),i=qy(o);return IP(i,t,n)},OP=o=>{let e=lg.get(o);if(e===void 0){const t=o.isPointLight?BP(o):null;e=new At,e.colorNode=Ae(0,0,0,1),e.depthNode=t,e.isShadowNodeMaterial=!0,e.blending=Ks,e.name="ShadowMaterial",lg.set(o,e)}return e},Zx=F(({depthTexture:o,shadowCoord:e})=>qe(o,e.xy).compare(e.z)),Kx=F(({depthTexture:o,shadowCoord:e,shadow:t})=>{const n=(m,g)=>qe(o,m).compare(g),i=rt("mapSize","vec2",t).setGroup(Pe),s=rt("radius","float",t).setGroup(Pe),r=J(1).div(i),a=r.x.negate().mul(s),c=r.y.negate().mul(s),l=r.x.mul(s),u=r.y.mul(s),h=a.div(2),d=c.div(2),f=l.div(2),p=u.div(2);return Pt(n(e.xy.add(J(a,c)),e.z),n(e.xy.add(J(0,c)),e.z),n(e.xy.add(J(l,c)),e.z),n(e.xy.add(J(h,d)),e.z),n(e.xy.add(J(0,d)),e.z),n(e.xy.add(J(f,d)),e.z),n(e.xy.add(J(a,0)),e.z),n(e.xy.add(J(h,0)),e.z),n(e.xy,e.z),n(e.xy.add(J(f,0)),e.z),n(e.xy.add(J(l,0)),e.z),n(e.xy.add(J(h,p)),e.z),n(e.xy.add(J(0,p)),e.z),n(e.xy.add(J(f,p)),e.z),n(e.xy.add(J(a,u)),e.z),n(e.xy.add(J(0,u)),e.z),n(e.xy.add(J(l,u)),e.z)).mul(1/17)}),Qx=F(({depthTexture:o,shadowCoord:e,shadow:t})=>{const n=(u,h)=>qe(o,u).compare(h),i=rt("mapSize","vec2",t).setGroup(Pe),s=J(1).div(i),r=s.x,a=s.y,c=e.xy,l=Yi(c.mul(i).add(.5));return c.subAssign(l.mul(s)),Pt(n(c,e.z),n(c.add(J(r,0)),e.z),n(c.add(J(0,a)),e.z),n(c.add(s),e.z),tt(n(c.add(J(r.negate(),0)),e.z),n(c.add(J(r.mul(2),0)),e.z),l.x),tt(n(c.add(J(r.negate(),a)),e.z),n(c.add(J(r.mul(2),a)),e.z),l.x),tt(n(c.add(J(0,a.negate())),e.z),n(c.add(J(0,a.mul(2))),e.z),l.y),tt(n(c.add(J(r,a.negate())),e.z),n(c.add(J(r,a.mul(2))),e.z),l.y),tt(tt(n(c.add(J(r.negate(),a.negate())),e.z),n(c.add(J(r.mul(2),a.negate())),e.z),l.x),tt(n(c.add(J(r.negate(),a.mul(2))),e.z),n(c.add(J(r.mul(2),a.mul(2))),e.z),l.x),l.y)).mul(1/9)}),Jx=F(({depthTexture:o,shadowCoord:e})=>{const t=S(1).toVar(),n=qe(o).uv(e.xy).rg,i=Hl(e.z,n.x);return Ve(i.notEqual(S(1)),()=>{const s=e.z.sub(n.x),r=wt(0,n.y.mul(n.y));let a=r.div(r.add(s.mul(s)));a=vi(Ye(a,.3).div(.95-.3)),t.assign(vi(wt(i,a)))}),t}),VP=F(({samples:o,radius:e,size:t,shadowPass:n})=>{const i=S(0).toVar(),s=S(0).toVar(),r=o.lessThanEqual(S(1)).select(S(0),S(2).div(o.sub(1))),a=o.lessThanEqual(S(1)).select(S(0),S(-1));nt({start:A(0),end:A(o),type:"int",condition:"<"},({i:l})=>{const u=a.add(S(l).mul(r)),h=n.uv(Pt(Va.xy,J(0,u).mul(e)).div(t)).x;i.addAssign(h),s.addAssign(h.mul(h))}),i.divAssign(o),s.divAssign(o);const c=wi(s.sub(i.mul(i)));return J(i,c)}),kP=F(({samples:o,radius:e,size:t,shadowPass:n})=>{const i=S(0).toVar(),s=S(0).toVar(),r=o.lessThanEqual(S(1)).select(S(0),S(2).div(o.sub(1))),a=o.lessThanEqual(S(1)).select(S(0),S(-1));nt({start:A(0),end:A(o),type:"int",condition:"<"},({i:l})=>{const u=a.add(S(l).mul(r)),h=n.uv(Pt(Va.xy,J(u,0).mul(e)).div(t));i.addAssign(h.x),s.addAssign(Pt(h.y.mul(h.y),h.x.mul(h.x)))}),i.divAssign(o),s.divAssign(o);const c=wi(s.sub(i.mul(i)));return J(i,c)}),zP=[Zx,Kx,Qx,Jx],Bc=new sp;class eb extends Ee{static get type(){return"ShadowNode"}constructor(e,t=null){super(),this.light=e,this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=Fe.RENDER,this._node=null,this.isShadowNode=!0}setupShadowFilter(e,{filterFn:t,depthTexture:n,shadowCoord:i,shadow:s}){const r=i.x.greaterThanEqual(0).and(i.x.lessThanEqual(1)).and(i.y.greaterThanEqual(0)).and(i.y.lessThanEqual(1)).and(i.z.lessThanEqual(1)),a=t({depthTexture:n,shadowCoord:i,shadow:s});return r.select(a,S(1))}setupShadowCoord(e,t){const{shadow:n}=this,{renderer:i}=e,s=rt("bias","float",n).setGroup(Pe);let r=t,a;if(n.camera.isOrthographicCamera||i.logarithmicDepthBuffer!==!0)r=r.xyz.div(r.w),a=r.z,i.coordinateSystem===qi&&(a=a.mul(2).sub(1));else{const c=r.w;r=r.xy.div(c);const l=rt("near","float",n.camera).setGroup(Pe),u=rt("far","float",n.camera).setGroup(Pe);a=Xf(c.negate(),l,u)}return r=P(r.x,r.y.oneMinus(),a.add(s)),r}getShadowFilterFn(e){return zP[e]}setupShadow(e){const{renderer:t}=e,{light:n,shadow:i}=this,s=t.shadowMap.type,r=new or(i.mapSize.width,i.mapSize.height);r.compareFunction=$d;const a=e.createRenderTarget(i.mapSize.width,i.mapSize.height);if(a.depthTexture=r,i.camera.updateProjectionMatrix(),s===tc){r.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:ca,type:ni}),this.vsmShadowMapHorizontal=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:ca,type:ni});const _=qe(r),x=qe(this.vsmShadowMapVertical.texture),y=rt("blurSamples","float",i).setGroup(Pe),b=rt("radius","float",i).setGroup(Pe),M=rt("mapSize","vec2",i).setGroup(Pe);let N=this.vsmMaterialVertical||(this.vsmMaterialVertical=new At);N.fragmentNode=VP({samples:y,radius:b,size:M,shadowPass:_}).context(e.getSharedContext()),N.name="VSMVertical",N=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new At),N.fragmentNode=kP({samples:y,radius:b,size:M,shadowPass:x}).context(e.getSharedContext()),N.name="VSMHorizontal"}const c=rt("intensity","float",i).setGroup(Pe),l=rt("normalBias","float",i).setGroup(Pe),u=ap(n).mul(ug.add(Xl.mul(l))),h=this.setupShadowCoord(e,u),d=i.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(d===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=s===tc?this.vsmShadowMapHorizontal.texture:r,p=this.setupShadowFilter(e,{filterFn:d,shadowTexture:a.texture,depthTexture:f,shadowCoord:h,shadow:i}),m=qe(a.texture,h),g=tt(1,p.rgb.mix(m,1),c.mul(m.a)).toVar();return this.shadowMap=a,this.shadow.map=a,g}setup(e){if(e.renderer.shadowMap.enabled!==!1)return F(({material:t})=>{ug.assign(t.shadowPositionNode||Wi);let n=this._node;return n===null&&(this._node=n=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(n=e.material.receivedShadowNode(n)),n})()}renderShadow(e){const{shadow:t,shadowMap:n}=this,{renderer:i,scene:s}=e;n.setSize(t.mapSize.width,t.mapSize.height),i.render(s,t.camera)}updateShadow(e){const{shadowMap:t,light:n,shadow:i}=this,{renderer:s,scene:r,camera:a}=e,c=s.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const u=r.overrideMaterial;r.overrideMaterial=OP(n),i.camera.layers.mask=a.layers.mask;const h=s.getRenderTarget(),d=s.getRenderObjectFunction(),f=s.getMRT();s.setMRT(null),s.setRenderObjectFunction((p,...m)=>{(p.castShadow===!0||p.receiveShadow&&c===tc)&&s.renderObject(p,...m)}),s.setRenderTarget(t),this.renderShadow(e),s.setRenderObjectFunction(d),n.isPointLight!==!0&&c===tc&&this.vsmPass(s),s.setRenderTarget(h),s.setMRT(f),r.overrideMaterial=u}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),Bc.material=this.vsmMaterialVertical,Bc.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),Bc.material=this.vsmMaterialHorizontal,Bc.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=Fe.NONE}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const tb=(o,e)=>K(new eb(o,e));class dr extends mo{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new We,this.colorNode=e&&e.colorNode||Ne(this.color).setGroup(Pe),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=Fe.FRAME}getCacheKey(){return Zv(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadowNode(){return tb(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){const i=this.light.shadow.shadowNode;let s;i!==void 0?s=K(i):s=this.setupShadowNode(e),this.shadowNode=s,this.shadowColorNode=n=this.colorNode.mul(s),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const hp=F(o=>{const{lightDistance:e,cutoffDistance:t,decayExponent:n}=o,i=e.pow(n).max(.01).reciprocal();return t.greaterThan(0).select(i.mul(e.div(t).pow4().oneMinus().clamp().pow2()),i)}),GP=new We,ci=F(([o,e])=>{const t=o.toVar(),n=ht(t),i=si(1,wt(n.x,wt(n.y,n.z)));n.mulAssign(i),t.mulAssign(i.mul(e.mul(2).oneMinus()));const s=J(t.xy).toVar(),a=e.mul(1.5).oneMinus();return Ve(n.z.greaterThanEqual(a),()=>{Ve(t.z.greaterThan(0),()=>{s.x.assign(Ye(4,t.x))})}).ElseIf(n.x.greaterThanEqual(a),()=>{const c=xa(t.x);s.x.assign(t.z.mul(c).add(c.mul(2)))}).ElseIf(n.y.greaterThanEqual(a),()=>{const c=xa(t.y);s.x.assign(t.x.add(c.mul(2)).add(2)),s.y.assign(t.z.mul(c).sub(2))}),J(.125,.25).mul(s).add(J(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),HP=F(({depthTexture:o,bd3D:e,dp:t,texelSize:n})=>qe(o,ci(e,n.y)).compare(t)),WP=F(({depthTexture:o,bd3D:e,dp:t,texelSize:n,shadow:i})=>{const s=rt("radius","float",i).setGroup(Pe),r=J(-1,1).mul(s).mul(n.y);return qe(o,ci(e.add(r.xyy),n.y)).compare(t).add(qe(o,ci(e.add(r.yyy),n.y)).compare(t)).add(qe(o,ci(e.add(r.xyx),n.y)).compare(t)).add(qe(o,ci(e.add(r.yyx),n.y)).compare(t)).add(qe(o,ci(e,n.y)).compare(t)).add(qe(o,ci(e.add(r.xxy),n.y)).compare(t)).add(qe(o,ci(e.add(r.yxy),n.y)).compare(t)).add(qe(o,ci(e.add(r.xxx),n.y)).compare(t)).add(qe(o,ci(e.add(r.yxx),n.y)).compare(t)).mul(1/9)}),qP=F(({filterFn:o,depthTexture:e,shadowCoord:t,shadow:n})=>{const i=t.xyz.toVar(),s=i.length(),r=Ne("float").setGroup(Pe).onRenderUpdate(()=>n.camera.near),a=Ne("float").setGroup(Pe).onRenderUpdate(()=>n.camera.far),c=rt("bias","float",n).setGroup(Pe),l=Ne(n.mapSize).setGroup(Pe),u=S(1).toVar();return Ve(s.sub(a).lessThanEqual(0).and(s.sub(r).greaterThanEqual(0)),()=>{const h=s.sub(r).div(a.sub(r)).toVar();h.addAssign(c);const d=i.normalize(),f=J(1).div(l.mul(J(4,2)));u.assign(o({depthTexture:e,bd3D:d,dp:h,texelSize:f,shadow:n}))}),u}),hg=new Ke,Ur=new le,zo=new le;class jP extends eb{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===Yb?HP:WP}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:s,shadow:r}){return qP({filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:s,shadow:r})}renderShadow(e){const{shadow:t,shadowMap:n,light:i}=this,{renderer:s,scene:r}=e,a=t.getFrameExtents();zo.copy(t.mapSize),zo.multiply(a),n.setSize(zo.width,zo.height),Ur.copy(t.mapSize);const c=s.autoClear,l=s.getClearColor(GP),u=s.getClearAlpha();s.autoClear=!1,s.setClearColor(t.clearColor,t.clearAlpha),s.clear();const h=t.getViewportCount();for(let d=0;d<h;d++){const f=t.getViewport(d),p=Ur.x*f.x,m=zo.y-Ur.y-Ur.y*f.y;hg.set(p,m,Ur.x*f.z,Ur.y*f.w),n.viewport.copy(hg),t.updateMatrices(i,d),s.render(r,t.camera)}s.autoClear=c,s.setClearColor(l,u)}}const $P=(o,e)=>K(new jP(o,e)),nb=F(({color:o,lightViewPosition:e,cutoffDistance:t,decayExponent:n},i)=>{const s=i.context.lightingModel,r=e.sub(Bt),a=r.normalize(),c=r.length(),l=hp({lightDistance:c,cutoffDistance:t,decayExponent:n}),u=o.mul(l),h=i.context.reflectedLight;s.direct({lightDirection:a,lightColor:u,reflectedLight:h},i.stack,i)});class XP extends dr{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=Ne(0).setGroup(Pe),this.decayExponentNode=Ne(0).setGroup(Pe)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return $P(this.light)}setup(e){super.setup(e),nb({color:this.colorNode,lightViewPosition:ru(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const YP=F(([o=xt()])=>{const e=o.mul(2),t=e.x.floor(),n=e.y.floor();return t.add(n).mod(2).sign()}),ra=F(([o,e,t])=>{const n=S(t).toVar(),i=S(e).toVar(),s=ji(o).toVar();return Kt(s,i,n)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),Nl=F(([o,e])=>{const t=ji(e).toVar(),n=S(o).toVar();return Kt(t,n.negate(),n)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),Et=F(([o])=>{const e=S(o).toVar();return A(mi(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),mt=F(([o,e])=>{const t=S(o).toVar();return e.assign(Et(t)),t.sub(S(e))}),ZP=F(([o,e,t,n,i,s])=>{const r=S(s).toVar(),a=S(i).toVar(),c=S(n).toVar(),l=S(t).toVar(),u=S(e).toVar(),h=S(o).toVar(),d=S(Ye(1,a)).toVar();return Ye(1,r).mul(h.mul(d).add(u.mul(a))).add(r.mul(l.mul(d).add(c.mul(a))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),KP=F(([o,e,t,n,i,s])=>{const r=S(s).toVar(),a=S(i).toVar(),c=P(n).toVar(),l=P(t).toVar(),u=P(e).toVar(),h=P(o).toVar(),d=S(Ye(1,a)).toVar();return Ye(1,r).mul(h.mul(d).add(u.mul(a))).add(r.mul(l.mul(d).add(c.mul(a))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),ib=en([ZP,KP]),QP=F(([o,e,t,n,i,s,r,a,c,l,u])=>{const h=S(u).toVar(),d=S(l).toVar(),f=S(c).toVar(),p=S(a).toVar(),m=S(r).toVar(),g=S(s).toVar(),_=S(i).toVar(),x=S(n).toVar(),y=S(t).toVar(),b=S(e).toVar(),M=S(o).toVar(),N=S(Ye(1,f)).toVar(),T=S(Ye(1,d)).toVar();return S(Ye(1,h)).toVar().mul(T.mul(M.mul(N).add(b.mul(f))).add(d.mul(y.mul(N).add(x.mul(f))))).add(h.mul(T.mul(_.mul(N).add(g.mul(f))).add(d.mul(m.mul(N).add(p.mul(f))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),JP=F(([o,e,t,n,i,s,r,a,c,l,u])=>{const h=S(u).toVar(),d=S(l).toVar(),f=S(c).toVar(),p=P(a).toVar(),m=P(r).toVar(),g=P(s).toVar(),_=P(i).toVar(),x=P(n).toVar(),y=P(t).toVar(),b=P(e).toVar(),M=P(o).toVar(),N=S(Ye(1,f)).toVar(),T=S(Ye(1,d)).toVar();return S(Ye(1,h)).toVar().mul(T.mul(M.mul(N).add(b.mul(f))).add(d.mul(y.mul(N).add(x.mul(f))))).add(h.mul(T.mul(_.mul(N).add(g.mul(f))).add(d.mul(m.mul(N).add(p.mul(f))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),sb=en([QP,JP]),e3=F(([o,e,t])=>{const n=S(t).toVar(),i=S(e).toVar(),s=pe(o).toVar(),r=pe(s.bitAnd(pe(7))).toVar(),a=S(ra(r.lessThan(pe(4)),i,n)).toVar(),c=S(Ie(2,ra(r.lessThan(pe(4)),n,i))).toVar();return Nl(a,ji(r.bitAnd(pe(1)))).add(Nl(c,ji(r.bitAnd(pe(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),t3=F(([o,e,t,n])=>{const i=S(n).toVar(),s=S(t).toVar(),r=S(e).toVar(),a=pe(o).toVar(),c=pe(a.bitAnd(pe(15))).toVar(),l=S(ra(c.lessThan(pe(8)),r,s)).toVar(),u=S(ra(c.lessThan(pe(4)),s,ra(c.equal(pe(12)).or(c.equal(pe(14))),r,i))).toVar();return Nl(l,ji(c.bitAnd(pe(1)))).add(Nl(u,ji(c.bitAnd(pe(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Ht=en([e3,t3]),n3=F(([o,e,t])=>{const n=S(t).toVar(),i=S(e).toVar(),s=po(o).toVar();return P(Ht(s.x,i,n),Ht(s.y,i,n),Ht(s.z,i,n))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),i3=F(([o,e,t,n])=>{const i=S(n).toVar(),s=S(t).toVar(),r=S(e).toVar(),a=po(o).toVar();return P(Ht(a.x,r,s,i),Ht(a.y,r,s,i),Ht(a.z,r,s,i))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),On=en([n3,i3]),s3=F(([o])=>{const e=S(o).toVar();return Ie(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),r3=F(([o])=>{const e=S(o).toVar();return Ie(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),o3=F(([o])=>{const e=P(o).toVar();return Ie(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),rb=en([s3,o3]),a3=F(([o])=>{const e=P(o).toVar();return Ie(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),ob=en([r3,a3]),Pn=F(([o,e])=>{const t=A(e).toVar(),n=pe(o).toVar();return n.shiftLeft(t).bitOr(n.shiftRight(A(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),ab=F(([o,e,t])=>{o.subAssign(t),o.bitXorAssign(Pn(t,A(4))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(Pn(o,A(6))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(Pn(e,A(8))),e.addAssign(o),o.subAssign(t),o.bitXorAssign(Pn(t,A(16))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(Pn(o,A(19))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(Pn(e,A(4))),e.addAssign(o)}),za=F(([o,e,t])=>{const n=pe(t).toVar(),i=pe(e).toVar(),s=pe(o).toVar();return n.bitXorAssign(i),n.subAssign(Pn(i,A(14))),s.bitXorAssign(n),s.subAssign(Pn(n,A(11))),i.bitXorAssign(s),i.subAssign(Pn(s,A(25))),n.bitXorAssign(i),n.subAssign(Pn(i,A(16))),s.bitXorAssign(n),s.subAssign(Pn(n,A(4))),i.bitXorAssign(s),i.subAssign(Pn(s,A(14))),n.bitXorAssign(i),n.subAssign(Pn(i,A(24))),n}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),on=F(([o])=>{const e=pe(o).toVar();return S(e).div(S(pe(A(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),gi=F(([o])=>{const e=S(o).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),c3=F(([o])=>{const e=A(o).toVar(),t=pe(pe(1)).toVar(),n=pe(pe(A(3735928559)).add(t.shiftLeft(pe(2))).add(pe(13))).toVar();return za(n.add(pe(e)),n,n)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),l3=F(([o,e])=>{const t=A(e).toVar(),n=A(o).toVar(),i=pe(pe(2)).toVar(),s=pe().toVar(),r=pe().toVar(),a=pe().toVar();return s.assign(r.assign(a.assign(pe(A(3735928559)).add(i.shiftLeft(pe(2))).add(pe(13))))),s.addAssign(pe(n)),r.addAssign(pe(t)),za(s,r,a)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),u3=F(([o,e,t])=>{const n=A(t).toVar(),i=A(e).toVar(),s=A(o).toVar(),r=pe(pe(3)).toVar(),a=pe().toVar(),c=pe().toVar(),l=pe().toVar();return a.assign(c.assign(l.assign(pe(A(3735928559)).add(r.shiftLeft(pe(2))).add(pe(13))))),a.addAssign(pe(s)),c.addAssign(pe(i)),l.addAssign(pe(n)),za(a,c,l)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),h3=F(([o,e,t,n])=>{const i=A(n).toVar(),s=A(t).toVar(),r=A(e).toVar(),a=A(o).toVar(),c=pe(pe(4)).toVar(),l=pe().toVar(),u=pe().toVar(),h=pe().toVar();return l.assign(u.assign(h.assign(pe(A(3735928559)).add(c.shiftLeft(pe(2))).add(pe(13))))),l.addAssign(pe(a)),u.addAssign(pe(r)),h.addAssign(pe(s)),ab(l,u,h),l.addAssign(pe(i)),za(l,u,h)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),d3=F(([o,e,t,n,i])=>{const s=A(i).toVar(),r=A(n).toVar(),a=A(t).toVar(),c=A(e).toVar(),l=A(o).toVar(),u=pe(pe(5)).toVar(),h=pe().toVar(),d=pe().toVar(),f=pe().toVar();return h.assign(d.assign(f.assign(pe(A(3735928559)).add(u.shiftLeft(pe(2))).add(pe(13))))),h.addAssign(pe(l)),d.addAssign(pe(c)),f.addAssign(pe(a)),ab(h,d,f),h.addAssign(pe(r)),d.addAssign(pe(s)),za(h,d,f)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),ot=en([c3,l3,u3,h3,d3]),f3=F(([o,e])=>{const t=A(e).toVar(),n=A(o).toVar(),i=pe(ot(n,t)).toVar(),s=po().toVar();return s.x.assign(i.bitAnd(A(255))),s.y.assign(i.shiftRight(A(8)).bitAnd(A(255))),s.z.assign(i.shiftRight(A(16)).bitAnd(A(255))),s}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),p3=F(([o,e,t])=>{const n=A(t).toVar(),i=A(e).toVar(),s=A(o).toVar(),r=pe(ot(s,i,n)).toVar(),a=po().toVar();return a.x.assign(r.bitAnd(A(255))),a.y.assign(r.shiftRight(A(8)).bitAnd(A(255))),a.z.assign(r.shiftRight(A(16)).bitAnd(A(255))),a}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Vn=en([f3,p3]),m3=F(([o])=>{const e=J(o).toVar(),t=A().toVar(),n=A().toVar(),i=S(mt(e.x,t)).toVar(),s=S(mt(e.y,n)).toVar(),r=S(gi(i)).toVar(),a=S(gi(s)).toVar(),c=S(ib(Ht(ot(t,n),i,s),Ht(ot(t.add(A(1)),n),i.sub(1),s),Ht(ot(t,n.add(A(1))),i,s.sub(1)),Ht(ot(t.add(A(1)),n.add(A(1))),i.sub(1),s.sub(1)),r,a)).toVar();return rb(c)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),g3=F(([o])=>{const e=P(o).toVar(),t=A().toVar(),n=A().toVar(),i=A().toVar(),s=S(mt(e.x,t)).toVar(),r=S(mt(e.y,n)).toVar(),a=S(mt(e.z,i)).toVar(),c=S(gi(s)).toVar(),l=S(gi(r)).toVar(),u=S(gi(a)).toVar(),h=S(sb(Ht(ot(t,n,i),s,r,a),Ht(ot(t.add(A(1)),n,i),s.sub(1),r,a),Ht(ot(t,n.add(A(1)),i),s,r.sub(1),a),Ht(ot(t.add(A(1)),n.add(A(1)),i),s.sub(1),r.sub(1),a),Ht(ot(t,n,i.add(A(1))),s,r,a.sub(1)),Ht(ot(t.add(A(1)),n,i.add(A(1))),s.sub(1),r,a.sub(1)),Ht(ot(t,n.add(A(1)),i.add(A(1))),s,r.sub(1),a.sub(1)),Ht(ot(t.add(A(1)),n.add(A(1)),i.add(A(1))),s.sub(1),r.sub(1),a.sub(1)),c,l,u)).toVar();return ob(h)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),dp=en([m3,g3]),v3=F(([o])=>{const e=J(o).toVar(),t=A().toVar(),n=A().toVar(),i=S(mt(e.x,t)).toVar(),s=S(mt(e.y,n)).toVar(),r=S(gi(i)).toVar(),a=S(gi(s)).toVar(),c=P(ib(On(Vn(t,n),i,s),On(Vn(t.add(A(1)),n),i.sub(1),s),On(Vn(t,n.add(A(1))),i,s.sub(1)),On(Vn(t.add(A(1)),n.add(A(1))),i.sub(1),s.sub(1)),r,a)).toVar();return rb(c)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),_3=F(([o])=>{const e=P(o).toVar(),t=A().toVar(),n=A().toVar(),i=A().toVar(),s=S(mt(e.x,t)).toVar(),r=S(mt(e.y,n)).toVar(),a=S(mt(e.z,i)).toVar(),c=S(gi(s)).toVar(),l=S(gi(r)).toVar(),u=S(gi(a)).toVar(),h=P(sb(On(Vn(t,n,i),s,r,a),On(Vn(t.add(A(1)),n,i),s.sub(1),r,a),On(Vn(t,n.add(A(1)),i),s,r.sub(1),a),On(Vn(t.add(A(1)),n.add(A(1)),i),s.sub(1),r.sub(1),a),On(Vn(t,n,i.add(A(1))),s,r,a.sub(1)),On(Vn(t.add(A(1)),n,i.add(A(1))),s.sub(1),r,a.sub(1)),On(Vn(t,n.add(A(1)),i.add(A(1))),s,r.sub(1),a.sub(1)),On(Vn(t.add(A(1)),n.add(A(1)),i.add(A(1))),s.sub(1),r.sub(1),a.sub(1)),c,l,u)).toVar();return ob(h)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),fp=en([v3,_3]),y3=F(([o])=>{const e=S(o).toVar(),t=A(Et(e)).toVar();return on(ot(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),x3=F(([o])=>{const e=J(o).toVar(),t=A(Et(e.x)).toVar(),n=A(Et(e.y)).toVar();return on(ot(t,n))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),b3=F(([o])=>{const e=P(o).toVar(),t=A(Et(e.x)).toVar(),n=A(Et(e.y)).toVar(),i=A(Et(e.z)).toVar();return on(ot(t,n,i))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),S3=F(([o])=>{const e=Ae(o).toVar(),t=A(Et(e.x)).toVar(),n=A(Et(e.y)).toVar(),i=A(Et(e.z)).toVar(),s=A(Et(e.w)).toVar();return on(ot(t,n,i,s))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),T3=en([y3,x3,b3,S3]),M3=F(([o])=>{const e=S(o).toVar(),t=A(Et(e)).toVar();return P(on(ot(t,A(0))),on(ot(t,A(1))),on(ot(t,A(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),w3=F(([o])=>{const e=J(o).toVar(),t=A(Et(e.x)).toVar(),n=A(Et(e.y)).toVar();return P(on(ot(t,n,A(0))),on(ot(t,n,A(1))),on(ot(t,n,A(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),A3=F(([o])=>{const e=P(o).toVar(),t=A(Et(e.x)).toVar(),n=A(Et(e.y)).toVar(),i=A(Et(e.z)).toVar();return P(on(ot(t,n,i,A(0))),on(ot(t,n,i,A(1))),on(ot(t,n,i,A(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),N3=F(([o])=>{const e=Ae(o).toVar(),t=A(Et(e.x)).toVar(),n=A(Et(e.y)).toVar(),i=A(Et(e.z)).toVar(),s=A(Et(e.w)).toVar();return P(on(ot(t,n,i,s,A(0))),on(ot(t,n,i,s,A(1))),on(ot(t,n,i,s,A(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),cb=en([M3,w3,A3,N3]),Cl=F(([o,e,t,n])=>{const i=S(n).toVar(),s=S(t).toVar(),r=A(e).toVar(),a=P(o).toVar(),c=S(0).toVar(),l=S(1).toVar();return nt(r,()=>{c.addAssign(l.mul(dp(a))),l.mulAssign(i),a.mulAssign(s)}),c}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),lb=F(([o,e,t,n])=>{const i=S(n).toVar(),s=S(t).toVar(),r=A(e).toVar(),a=P(o).toVar(),c=P(0).toVar(),l=S(1).toVar();return nt(r,()=>{c.addAssign(l.mul(fp(a))),l.mulAssign(i),a.mulAssign(s)}),c}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),C3=F(([o,e,t,n])=>{const i=S(n).toVar(),s=S(t).toVar(),r=A(e).toVar(),a=P(o).toVar();return J(Cl(a,r,s,i),Cl(a.add(P(A(19),A(193),A(17))),r,s,i))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),E3=F(([o,e,t,n])=>{const i=S(n).toVar(),s=S(t).toVar(),r=A(e).toVar(),a=P(o).toVar(),c=P(lb(a,r,s,i)).toVar(),l=S(Cl(a.add(P(A(19),A(193),A(17))),r,s,i)).toVar();return Ae(c,l)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),R3=F(([o,e,t,n,i,s,r])=>{const a=A(r).toVar(),c=S(s).toVar(),l=A(i).toVar(),u=A(n).toVar(),h=A(t).toVar(),d=A(e).toVar(),f=J(o).toVar(),p=P(cb(J(d.add(u),h.add(l)))).toVar(),m=J(p.x,p.y).toVar();m.subAssign(.5),m.mulAssign(c),m.addAssign(.5);const g=J(J(S(d),S(h)).add(m)).toVar(),_=J(g.sub(f)).toVar();return Ve(a.equal(A(2)),()=>ht(_.x).add(ht(_.y))),Ve(a.equal(A(3)),()=>wt(ht(_.x),ht(_.y))),ws(_,_)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),P3=F(([o,e,t,n,i,s,r,a,c])=>{const l=A(c).toVar(),u=S(a).toVar(),h=A(r).toVar(),d=A(s).toVar(),f=A(i).toVar(),p=A(n).toVar(),m=A(t).toVar(),g=A(e).toVar(),_=P(o).toVar(),x=P(cb(P(g.add(f),m.add(d),p.add(h)))).toVar();x.subAssign(.5),x.mulAssign(u),x.addAssign(.5);const y=P(P(S(g),S(m),S(p)).add(x)).toVar(),b=P(y.sub(_)).toVar();return Ve(l.equal(A(2)),()=>ht(b.x).add(ht(b.y)).add(ht(b.z))),Ve(l.equal(A(3)),()=>wt(wt(ht(b.x),ht(b.y)),ht(b.z))),ws(b,b)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),go=en([R3,P3]),D3=F(([o,e,t])=>{const n=A(t).toVar(),i=S(e).toVar(),s=J(o).toVar(),r=A().toVar(),a=A().toVar(),c=J(mt(s.x,r),mt(s.y,a)).toVar(),l=S(1e6).toVar();return nt({start:-1,end:A(1),name:"x",condition:"<="},({x:u})=>{nt({start:-1,end:A(1),name:"y",condition:"<="},({y:h})=>{const d=S(go(c,u,h,r,a,i,n)).toVar();l.assign(Sn(l,d))})}),Ve(n.equal(A(0)),()=>{l.assign(wi(l))}),l}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),U3=F(([o,e,t])=>{const n=A(t).toVar(),i=S(e).toVar(),s=J(o).toVar(),r=A().toVar(),a=A().toVar(),c=J(mt(s.x,r),mt(s.y,a)).toVar(),l=J(1e6,1e6).toVar();return nt({start:-1,end:A(1),name:"x",condition:"<="},({x:u})=>{nt({start:-1,end:A(1),name:"y",condition:"<="},({y:h})=>{const d=S(go(c,u,h,r,a,i,n)).toVar();Ve(d.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.y.assign(d)})})}),Ve(n.equal(A(0)),()=>{l.assign(wi(l))}),l}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),L3=F(([o,e,t])=>{const n=A(t).toVar(),i=S(e).toVar(),s=J(o).toVar(),r=A().toVar(),a=A().toVar(),c=J(mt(s.x,r),mt(s.y,a)).toVar(),l=P(1e6,1e6,1e6).toVar();return nt({start:-1,end:A(1),name:"x",condition:"<="},({x:u})=>{nt({start:-1,end:A(1),name:"y",condition:"<="},({y:h})=>{const d=S(go(c,u,h,r,a,i,n)).toVar();Ve(d.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(d)}).ElseIf(d.lessThan(l.z),()=>{l.z.assign(d)})})}),Ve(n.equal(A(0)),()=>{l.assign(wi(l))}),l}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),F3=F(([o,e,t])=>{const n=A(t).toVar(),i=S(e).toVar(),s=P(o).toVar(),r=A().toVar(),a=A().toVar(),c=A().toVar(),l=P(mt(s.x,r),mt(s.y,a),mt(s.z,c)).toVar(),u=S(1e6).toVar();return nt({start:-1,end:A(1),name:"x",condition:"<="},({x:h})=>{nt({start:-1,end:A(1),name:"y",condition:"<="},({y:d})=>{nt({start:-1,end:A(1),name:"z",condition:"<="},({z:f})=>{const p=S(go(l,h,d,f,r,a,c,i,n)).toVar();u.assign(Sn(u,p))})})}),Ve(n.equal(A(0)),()=>{u.assign(wi(u))}),u}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),I3=en([D3,F3]),B3=F(([o,e,t])=>{const n=A(t).toVar(),i=S(e).toVar(),s=P(o).toVar(),r=A().toVar(),a=A().toVar(),c=A().toVar(),l=P(mt(s.x,r),mt(s.y,a),mt(s.z,c)).toVar(),u=J(1e6,1e6).toVar();return nt({start:-1,end:A(1),name:"x",condition:"<="},({x:h})=>{nt({start:-1,end:A(1),name:"y",condition:"<="},({y:d})=>{nt({start:-1,end:A(1),name:"z",condition:"<="},({z:f})=>{const p=S(go(l,h,d,f,r,a,c,i,n)).toVar();Ve(p.lessThan(u.x),()=>{u.y.assign(u.x),u.x.assign(p)}).ElseIf(p.lessThan(u.y),()=>{u.y.assign(p)})})})}),Ve(n.equal(A(0)),()=>{u.assign(wi(u))}),u}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),O3=en([U3,B3]),V3=F(([o,e,t])=>{const n=A(t).toVar(),i=S(e).toVar(),s=P(o).toVar(),r=A().toVar(),a=A().toVar(),c=A().toVar(),l=P(mt(s.x,r),mt(s.y,a),mt(s.z,c)).toVar(),u=P(1e6,1e6,1e6).toVar();return nt({start:-1,end:A(1),name:"x",condition:"<="},({x:h})=>{nt({start:-1,end:A(1),name:"y",condition:"<="},({y:d})=>{nt({start:-1,end:A(1),name:"z",condition:"<="},({z:f})=>{const p=S(go(l,h,d,f,r,a,c,i,n)).toVar();Ve(p.lessThan(u.x),()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(p)}).ElseIf(p.lessThan(u.y),()=>{u.z.assign(u.y),u.y.assign(p)}).ElseIf(p.lessThan(u.z),()=>{u.z.assign(p)})})})}),Ve(n.equal(A(0)),()=>{u.assign(wi(u))}),u}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),k3=en([L3,V3]),z3=F(([o])=>{const e=o.y,t=o.z,n=P().toVar();return Ve(e.lessThan(1e-4),()=>{n.assign(P(t,t,t))}).Else(()=>{let i=o.x;i=i.sub(mi(i)).mul(6).toVar();const s=A(Rf(i)),r=i.sub(S(s)),a=t.mul(e.oneMinus()),c=t.mul(e.mul(r).oneMinus()),l=t.mul(e.mul(r.oneMinus()).oneMinus());Ve(s.equal(A(0)),()=>{n.assign(P(t,l,a))}).ElseIf(s.equal(A(1)),()=>{n.assign(P(c,t,a))}).ElseIf(s.equal(A(2)),()=>{n.assign(P(a,t,l))}).ElseIf(s.equal(A(3)),()=>{n.assign(P(a,c,t))}).ElseIf(s.equal(A(4)),()=>{n.assign(P(l,a,t))}).Else(()=>{n.assign(P(t,a,c))})}),n}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),G3=F(([o])=>{const e=P(o).toVar(),t=S(e.x).toVar(),n=S(e.y).toVar(),i=S(e.z).toVar(),s=S(Sn(t,Sn(n,i))).toVar(),r=S(wt(t,wt(n,i))).toVar(),a=S(r.sub(s)).toVar(),c=S().toVar(),l=S().toVar(),u=S().toVar();return u.assign(r),Ve(r.greaterThan(0),()=>{l.assign(a.div(r))}).Else(()=>{l.assign(0)}),Ve(l.lessThanEqual(0),()=>{c.assign(0)}).Else(()=>{Ve(t.greaterThanEqual(r),()=>{c.assign(n.sub(i).div(a))}).ElseIf(n.greaterThanEqual(r),()=>{c.assign(Pt(2,i.sub(t).div(a)))}).Else(()=>{c.assign(Pt(4,t.sub(n).div(a)))}),c.mulAssign(1/6),Ve(c.lessThan(0),()=>{c.addAssign(1)})}),P(c,l,u)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),H3=F(([o])=>{const e=P(o).toVar(),t=mf(wf(e,P(.04045))).toVar(),n=P(e.div(12.92)).toVar(),i=P(ti(wt(e.add(P(.055)),P(0)).div(1.055),P(2.4))).toVar();return tt(n,i,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),ub=(o,e)=>{o=S(o),e=S(e);const t=J(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return Xi(o.sub(t),o.add(t),e)},hb=(o,e,t,n)=>tt(o,e,t[n].clamp()),W3=(o,e,t=xt())=>hb(o,e,t,"x"),q3=(o,e,t=xt())=>hb(o,e,t,"y"),db=(o,e,t,n,i)=>tt(o,e,ub(t,n[i])),j3=(o,e,t,n=xt())=>db(o,e,t,n,"x"),$3=(o,e,t,n=xt())=>db(o,e,t,n,"y"),X3=(o=1,e=0,t=xt())=>t.mul(o).add(e),Y3=(o,e=1)=>(o=S(o),o.abs().pow(e).mul(o.sign())),Z3=(o,e=1,t=.5)=>S(o).sub(t).mul(e).add(t),K3=(o=xt(),e=1,t=0)=>dp(o.convert("vec2|vec3")).mul(e).add(t),Q3=(o=xt(),e=1,t=0)=>fp(o.convert("vec2|vec3")).mul(e).add(t),J3=(o=xt(),e=1,t=0)=>(o=o.convert("vec2|vec3"),Ae(fp(o),dp(o.add(J(19,73)))).mul(e).add(t)),eD=(o=xt(),e=1)=>I3(o.convert("vec2|vec3"),e,A(1)),tD=(o=xt(),e=1)=>O3(o.convert("vec2|vec3"),e,A(1)),nD=(o=xt(),e=1)=>k3(o.convert("vec2|vec3"),e,A(1)),iD=(o=xt())=>T3(o.convert("vec2|vec3")),sD=(o=xt(),e=3,t=2,n=.5,i=1)=>Cl(o,A(e),t,n).mul(i),rD=(o=xt(),e=3,t=2,n=.5,i=1)=>C3(o,A(e),t,n).mul(i),oD=(o=xt(),e=3,t=2,n=.5,i=1)=>lb(o,A(e),t,n).mul(i),aD=(o=xt(),e=3,t=2,n=.5,i=1)=>E3(o,A(e),t,n).mul(i),cD=F(([o,e,t])=>{const n=$i(o).toVar("nDir"),i=Ye(S(.5).mul(e.sub(t)),Wi).div(n).toVar("rbmax"),s=Ye(S(-.5).mul(e.sub(t)),Wi).div(n).toVar("rbmin"),r=P().toVar("rbminmax");r.x=n.x.greaterThan(S(0)).select(i.x,s.x),r.y=n.y.greaterThan(S(0)).select(i.y,s.y),r.z=n.z.greaterThan(S(0)).select(i.z,s.z);const a=Sn(Sn(r.x,r.y),r.z).toVar("correction");return Wi.add(n.mul(a)).toVar("boxIntersection").sub(t)}),fb=F(([o,e])=>{const t=o.x,n=o.y,i=o.z;let s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(2*.511664).mul(n)),s=s.add(e.element(2).mul(2*.511664).mul(i)),s=s.add(e.element(3).mul(2*.511664).mul(t)),s=s.add(e.element(4).mul(2*.429043).mul(t).mul(n)),s=s.add(e.element(5).mul(2*.429043).mul(n).mul(i)),s=s.add(e.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(2*.429043).mul(t).mul(i)),s=s.add(e.element(8).mul(.429043).mul(Ie(t,t).sub(Ie(n,n)))),s});var v=Object.freeze({__proto__:null,BRDF_GGX:wd,BRDF_Lambert:ir,BasicShadowFilter:Zx,Break:q0,Continue:g2,DFGApprox:Jf,D_GGX:ox,Discard:ky,EPSILON:G_,F_Schlick:lo,Fn:F,INFINITY:cN,If:Ve,Loop:nt,NodeAccess:rn,NodeShaderStage:pd,NodeType:OA,NodeUpdateType:Fe,PCFShadowFilter:Kx,PCFSoftShadowFilter:Qx,PI:bl,PI2:lN,Return:SN,Schlick_to_F0:cx,ScriptableNodeResources:nl,ShaderNode:Jo,TBNViewMatrix:Hs,VSMShadowFilter:Jx,V_GGX_SmithCorrelated:rx,abs:ht,acesFilmicToneMapping:kx,acos:Z_,add:Pt,addMethodChaining:X,addNodeElement:MN,agxToneMapping:zx,all:Af,alphaT:_l,and:P_,anisotropy:us,anisotropyB:Xs,anisotropyT:ea,any:H_,append:l_,arrayBuffer:iN,asin:Y_,assign:M_,atan:K_,atan2:sy,atomicAdd:AP,atomicAnd:RP,atomicFunc:Zi,atomicMax:CP,atomicMin:EP,atomicOr:PP,atomicStore:wP,atomicSub:NP,atomicXor:DP,attenuationColor:Sf,attenuationDistance:bf,attribute:_i,attributeArray:vR,backgroundBlurriness:Cx,backgroundIntensity:Pd,backgroundRotation:Ex,batch:G0,billboarding:YE,bitAnd:F_,bitNot:I_,bitOr:B_,bitXor:O_,bitangentGeometry:YN,bitangentLocal:ZN,bitangentView:i0,bitangentWorld:KN,bitcast:uN,blendBurn:Dx,blendColor:ER,blendDodge:Ux,blendOverlay:Fx,blendScreen:Lx,blur:mx,bool:ji,buffer:La,bufferAttribute:Da,bumpMap:a0,burn:RR,bvec2:d_,bvec3:mf,bvec4:g_,bypass:Fy,cache:na,call:w_,cameraFar:fs,cameraNear:ds,cameraNormalMatrix:RN,cameraPosition:Wy,cameraProjectionMatrix:Ss,cameraProjectionMatrixInverse:CN,cameraViewMatrix:wn,cameraWorldMatrix:EN,cbrt:hy,cdl:VR,ceil:Gl,checker:YP,cineonToneMapping:Vx,clamp:vi,clearcoat:vl,clearcoatRoughness:_a,code:iu,color:u_,colorSpaceToWorking:Ff,colorToDirection:q2,compute:Ly,cond:_y,context:ql,convert:__,convertColorSpace:fN,convertToTexture:cR,cos:Ii,cross:Wl,cubeTexture:co,dFdx:Cf,dFdy:Ef,dashSize:Qc,defaultBuildStages:md,defaultShaderStages:i_,defined:pa,degrees:j_,deltaTime:wx,densityFog:$x,depth:Yf,depthPass:qR,difference:ay,diffuseColor:et,directPointLight:nb,directionToColor:Q0,dispersion:Tf,distance:oy,div:si,dodge:PR,dot:ws,drawIndex:V0,dynamicBufferAttribute:Uy,element:v_,emissive:yd,equal:A_,equals:W_,equirectUV:Zf,exp:Nf,exp2:ao,expression:bs,faceDirection:Ua,faceForward:py,float:S,floor:mi,fog:aP,fract:Yi,frameGroup:b_,frameId:VE,frontFacing:$y,fwidth:ny,gain:UE,gapSize:xd,getConstNodeType:c_,getCurrentStack:pf,getDirection:fx,getDistanceAttenuation:hp,getGeometryRoughness:sx,getNormalFromDepth:uR,getParallaxCorrectNormal:cD,getRoughness:Qf,getScreenPosition:lR,getShIrradianceAt:fb,getTextureIndex:Sx,getViewPosition:Vr,glsl:eP,glslFn:tP,grayscale:LR,greaterThan:wf,greaterThanEqual:R_,hash:DE,highPrecisionModelNormalViewMatrix:zN,highPrecisionModelViewMatrix:kN,hue:BR,instance:h2,instanceIndex:Oa,instancedArray:_R,instancedBufferAttribute:Sl,instancedDynamicBufferAttribute:bd,instancedMesh:z0,int:A,inverseSqrt:$_,invocationLocalIndex:u2,invocationSubgroupIndex:l2,ior:ta,iridescence:kl,iridescenceIOR:_f,iridescenceThickness:yf,ivec2:zt,ivec3:f_,ivec4:p_,js:QR,label:xy,length:Hi,lengthSq:dy,lessThan:C_,lessThanEqual:E_,lightPosition:cp,lightProjectionUV:Xx,lightShadowMatrix:ap,lightTargetDirection:lp,lightTargetPosition:Yx,lightViewPosition:ru,lightingContext:$0,lights:FP,linearDepth:Ml,linearToneMapping:Bx,localId:mP,log:zl,log2:pi,logarithmicDepthToViewZ:R2,loop:v2,luminance:nu,mat2:Ol,mat3:cn,mat4:$s,matcapUV:gx,materialAOMap:B0,materialAlphaTest:c0,materialAnisotropy:T0,materialAnisotropyVector:Or,materialAttenuationColor:P0,materialAttenuationDistance:R0,materialClearcoat:v0,materialClearcoatNormal:y0,materialClearcoatRoughness:_0,materialColor:l0,materialDispersion:I0,materialEmissive:h0,materialIOR:E0,materialIridescence:M0,materialIridescenceIOR:w0,materialIridescenceThickness:A0,materialLightMap:Gf,materialLineDashOffset:F0,materialLineDashSize:U0,materialLineGapSize:L0,materialLineScale:D0,materialLineWidth:r2,materialMetalness:m0,materialNormal:g0,materialOpacity:zf,materialPointWidth:o2,materialReference:Vi,materialReflectivity:Jc,materialRefractionRatio:Zy,materialRotation:x0,materialRoughness:p0,materialSheen:b0,materialSheenRoughness:S0,materialShininess:u0,materialSpecular:d0,materialSpecularColor:f0,materialSpecularIntensity:Md,materialSpecularStrength:ia,materialThickness:C0,materialTransmission:N0,max:wt,maxMipLevel:Hy,metalness:va,min:Sn,mix:tt,mixElement:gy,mod:Pf,modInt:Mf,modelDirection:FN,modelNormalMatrix:jy,modelPosition:IN,modelScale:BN,modelViewMatrix:ur,modelViewPosition:ON,modelViewProjection:Hf,modelWorldMatrix:Hn,modelWorldMatrixInverse:VN,morphReference:j0,mrt:Tx,mul:Ie,mx_aastep:ub,mx_cell_noise_float:iD,mx_contrast:Z3,mx_fractal_noise_float:sD,mx_fractal_noise_vec2:rD,mx_fractal_noise_vec3:oD,mx_fractal_noise_vec4:aD,mx_hsvtorgb:z3,mx_noise_float:K3,mx_noise_vec3:Q3,mx_noise_vec4:J3,mx_ramplr:W3,mx_ramptb:q3,mx_rgbtohsv:G3,mx_safepower:Y3,mx_splitlr:j3,mx_splittb:$3,mx_srgb_texture_to_lin_rec709:H3,mx_transform_uv:X3,mx_worley_noise_float:eD,mx_worley_noise_vec2:tD,mx_worley_noise_vec3:nD,negate:Q_,neutralToneMapping:Gx,nodeArray:js,nodeImmutable:he,nodeObject:K,nodeObjects:Ca,nodeProxy:q,normalFlat:Xy,normalGeometry:jl,normalLocal:Tn,normalMap:Td,normalView:jn,normalWorld:$l,normalize:$i,not:U_,notEqual:N_,numWorkgroups:fP,objectDirection:PN,objectGroup:vf,objectPosition:qy,objectScale:UN,objectViewPosition:LN,objectWorldMatrix:DN,oneMinus:J_,or:D_,orthographicDepthToViewZ:E2,oscSawtooth:jE,oscSine:HE,oscSquare:WE,oscTriangle:qE,output:T_,outputStruct:RE,overlay:UR,overloadingFn:en,parabola:Rd,parallaxDirection:r0,parallaxUV:JN,parameter:NE,pass:HR,passTexture:WR,pcurve:LE,perspectiveDepthToViewZ:$f,pmremTexture:ep,pointUV:SR,pointWidth:rN,positionGeometry:If,positionLocal:St,positionPrevious:Tl,positionView:Bt,positionViewDirection:ft,positionWorld:Wi,positionWorldDirection:Bf,posterize:zR,pow:ti,pow2:Df,pow3:cy,pow4:ly,property:S_,radians:q_,rand:my,range:hP,rangeFog:jx,reciprocal:ty,reference:rt,referenceBuffer:Sd,reflect:ry,reflectVector:Jy,reflectView:Ky,reflector:iR,refract:Uf,refractVector:e0,refractView:Qy,reinhardToneMapping:Ox,remainder:z_,remap:By,remapClamp:Oy,renderGroup:Pe,renderOutput:zy,rendererReference:Ry,rotate:tp,rotateUV:$E,roughness:hi,round:ey,rtt:Nx,sRGBTransferEOTF:My,sRGBTransferOETF:wy,sampler:NN,saturate:fy,saturation:FR,screen:DR,screenCoordinate:Va,screenSize:ba,screenUV:bi,scriptable:oP,scriptableValue:tl,select:Kt,setCurrentStack:ma,shaderStages:gd,shadow:tb,sharedUniformGroup:gf,sheen:Gs,sheenRoughness:Vl,shiftLeft:V_,shiftRight:k_,shininess:yl,sign:xa,sin:Dn,sinc:FE,skinning:p2,skinningReference:W0,smoothstep:Xi,smoothstepElement:vy,specularColor:yn,specularF90:ya,spherizeUV:XE,split:sN,spritesheetUV:QE,sqrt:wi,stack:el,step:Hl,storage:tu,storageBarrier:yP,storageObject:gR,storageTexture:Rx,string:nN,sub:Ye,subgroupIndex:c2,subgroupSize:gP,tan:X_,tangentGeometry:Zl,tangentLocal:Fa,tangentView:Ia,tangentWorld:n0,temp:Ty,texture:qe,texture3D:nE,textureBarrier:xP,textureBicubic:hx,textureCubeUV:px,textureLoad:Tt,textureSize:Ys,textureStore:MR,thickness:xf,threshold:OR,time:hr,timerDelta:GE,timerGlobal:zE,timerLocal:kE,toOutputColorSpace:Ay,toWorkingColorSpace:Ny,toneMapping:Py,toneMappingExposure:Dy,toonOutlinePass:$R,transformDirection:uy,transformNormal:Yy,transformNormalToView:Of,transformedBentNormalView:o0,transformedBitangentView:s0,transformedBitangentWorld:QN,transformedClearcoatNormalView:jr,transformedNormalView:Mt,transformedNormalWorld:Xl,transformedTangentView:kf,transformedTangentWorld:XN,transmission:xl,transpose:iy,tri:ui,tri3:Mx,triNoise3D:IE,triplanarTexture:eR,triplanarTextures:Ax,trunc:Rf,tslFn:tN,uint:pe,uniform:Ne,uniformArray:Oi,uniformGroup:x_,uniforms:qN,userData:AR,uv:xt,uvec2:h_,uvec3:po,uvec4:m_,varying:Mn,varyingProperty:ga,vec2:J,vec3:P,vec4:Ae,vectorComponents:cr,velocity:CR,vertexColor:xR,vertexIndex:O0,vibrance:IR,viewZToLogarithmicDepth:Xf,viewZToOrthographicDepth:to,viewZToPerspectiveDepth:Z0,viewport:Wf,viewportBottomLeft:A2,viewportCoordinate:Y0,viewportDepthTexture:jf,viewportLinearDepth:P2,viewportMipTexture:qf,viewportResolution:M2,viewportSafeUV:ZE,viewportSharedTexture:W2,viewportSize:X0,viewportTexture:N2,viewportTopLeft:w2,viewportUV:T2,wgsl:JR,wgslFn:nP,workgroupArray:TP,workgroupBarrier:_P,workgroupId:pP,workingToColorSpace:Cy,xor:L_});const Li=new np;class lD extends As{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){const i=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background;let r=!1;if(s===null)i._clearColor.getRGB(Li,zi),Li.a=i._clearColor.a;else if(s.isColor===!0)s.getRGB(Li,zi),Li.a=1,r=!0;else if(s.isNode===!0){const a=this.get(e),c=s;Li.copy(i._clearColor);let l=a.backgroundMesh;if(l===void 0){const h=ql(Ae(c).mul(Pd),{getUV:()=>Ex.mul($l),getTextureLevel:()=>Cx});let d=Hf();d=d.setZ(d.w);const f=new At;f.name="Background.material",f.side=qn,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=d,f.colorNode=h,a.backgroundMeshNode=h,a.backgroundMesh=l=new In(new sf(1,32,32),f),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(p,m,g){this.matrixWorld.copyPosition(g.matrixWorld)}}const u=c.getCacheKey();a.backgroundCacheKey!==u&&(a.backgroundMeshNode.node=Ae(c).mul(Pd),a.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,a.backgroundCacheKey=u),t.unshift(l,l.geometry,l.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);if(i.autoClear===!0||r===!0){const a=n.clearColorValue;a.r=Li.r,a.g=Li.g,a.b=Li.b,a.a=Li.a,(i.backend.isWebGLBackend===!0||i.alpha===!0)&&(a.r*=a.a,a.g*=a.a,a.b*=a.a),n.depthClearValue=i._clearDepth,n.stencilClearValue=i._clearStencil,n.clearColor=i.autoClearColor===!0,n.clearDepth=i.autoClearDepth===!0,n.clearStencil=i.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}}let uD=0;class Dd{constructor(e="",t=[],n=0,i=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=i,this.id=uD++}}class hD{constructor(e,t,n,i,s,r,a,c,l,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=u,this.nodeAttributes=i,this.bindings=s,this.updateNodes=r,this.updateBeforeNodes=a,this.updateAfterNodes=c,this.monitor=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const i=new Dd(t.name,[],t.index,t);e.push(i);for(const s of t.bindings)i.bindings.push(s.clone())}else e.push(t);return e}}class dg{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}}class dD{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class pb{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class fD extends pb{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class pD{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}}let mD=0;class xh{constructor(e=null){this.id=mD++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class fr{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class gD extends fr{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class vD extends fr{constructor(e,t=new le){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class _D extends fr{constructor(e,t=new C){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class yD extends fr{constructor(e,t=new Ke){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class xD extends fr{constructor(e,t=new We){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class bD extends fr{constructor(e,t=new pn){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class SD extends fr{constructor(e,t=new Xe){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class TD extends gD{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class MD extends vD{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class wD extends _D{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class AD extends yD{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class ND extends xD{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class CD extends bD{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class ED extends SD{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const $r=4,fg=[.125,.215,.35,.446,.526,.582],ks=20,bh=new af(-1,1,1,-1,0,1),RD=new li(90,1),pg=new We;let Sh=null,Th=0,Mh=0;const Vs=(1+Math.sqrt(5))/2,Lr=1/Vs,mg=[new C(-Vs,Lr,0),new C(Vs,Lr,0),new C(-Lr,0,Vs),new C(Lr,0,Vs),new C(0,Vs,-Lr),new C(0,Vs,Lr),new C(-1,1,-1),new C(1,1,-1),new C(-1,1,1),new C(1,1,1)],PD=[3,1,5,0,4,2],wh=fx(xt(),_i("faceIndex")).normalize(),pp=P(wh.x,wh.y.negate(),wh.z);class DD{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,n=.1,i=100,s=null){if(this._setSize(256),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const a=s||this._allocateTargets();return this.fromSceneAsync(e,t,n,i,a),a}Sh=this._renderer.getRenderTarget(),Th=this._renderer.getActiveCubeFace(),Mh=this._renderer.getActiveMipmapLevel();const r=s||this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}async fromSceneAsync(e,t=0,n=.1,i=100,s=null){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,n,i,s)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTargets();return this.fromEquirectangularAsync(e,n),n}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const n=t||this._allocateTargets();return this.fromCubemapAsync(e,t),n}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vg(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_g(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Qs||e.mapping===io?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Sh,Th,Mh),e.scissorTest=!1,Oc(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),Sh=this._renderer.getRenderTarget(),Th=this._renderer.getActiveCubeFace(),Mh=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Jt,minFilter:Jt,generateMipmaps:!1,type:ni,format:Js,colorSpace:zi},i=gg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=gg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=UD(s)),this._blurMaterial=LD(s,e,t)}return i}async _compileMaterial(e){const t=new In(this._lodPlanes[0],e);await this._renderer.compile(t,bh)}_sceneToCubeUV(e,t,n,i){const s=RD;s.near=t,s.far=n;const r=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],c=this._renderer,l=c.autoClear;c.getClearColor(pg),c.autoClear=!1;let u=this._backgroundBox;if(u===null){const f=new Aa({name:"PMREM.Background",side:qn,depthWrite:!1,depthTest:!1});u=new In(new ho,f)}let h=!1;const d=e.background;d?d.isColor&&(u.material.color.copy(d),e.background=null,h=!0):(u.material.color.copy(pg),h=!0),c.setRenderTarget(i),c.clear(),h&&c.render(u,s);for(let f=0;f<6;f++){const p=f%3;p===0?(s.up.set(0,r[f],0),s.lookAt(a[f],0,0)):p===1?(s.up.set(0,0,r[f]),s.lookAt(0,a[f],0)):(s.up.set(0,r[f],0),s.lookAt(0,0,a[f]));const m=this._cubeSize;Oc(i,p*m,f>2?m:0,m,m),c.render(e,s)}c.autoClear=l,e.background=d}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Qs||e.mapping===io;i?this._cubemapMaterial===null&&(this._cubemapMaterial=vg(e)):this._equirectMaterial===null&&(this._equirectMaterial=_g(e));const s=i?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;const r=this._lodMeshes[0];r.material=s;const a=this._cubeSize;Oc(t,0,0,3*a,2*a),n.setRenderTarget(t),n.render(r,bh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=mg[(i-s-1)%mg.length];this._blur(e,s-1,s,r,a)}t.autoClear=n}_blur(e,t,n,i,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,a){const c=this._renderer,l=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[i];h.material=l;const d=l.uniforms,f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*ks-1),m=s/p,g=isFinite(s)?1+Math.floor(u*m):ks;g>ks&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${ks}`);const _=[];let x=0;for(let T=0;T<ks;++T){const w=T/m,L=Math.exp(-w*w/2);_.push(L),T===0?x+=L:T<g&&(x+=2*L)}for(let T=0;T<_.length;T++)_[T]=_[T]/x;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=_,d.latitudinal.value=r==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-n;const b=this._sizeLods[i],M=3*b*(i>y-$r?i-y+$r:0),N=4*(this._cubeSize-b);Oc(t,M,N,3*b,2*b),c.setRenderTarget(t),c.render(h,bh)}}function UD(o){const e=[],t=[],n=[],i=[];let s=o;const r=o-$r+1+fg.length;for(let a=0;a<r;a++){const c=Math.pow(2,s);t.push(c);let l=1/c;a>o-$r?l=fg[a-o+$r-1]:a===0&&(l=0),n.push(l);const u=1/(c-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,m=6,g=3,_=2,x=1,y=new Float32Array(g*m*p),b=new Float32Array(_*m*p),M=new Float32Array(x*m*p);for(let T=0;T<p;T++){const w=T%3*2/3-1,L=T>2?0:-1,I=[w,L,0,w+2/3,L,0,w+2/3,L+1,0,w,L,0,w+2/3,L+1,0,w,L+1,0],W=PD[T];y.set(I,g*m*W),b.set(f,_*m*W);const D=[W,W,W,W,W,W];M.set(D,x*m*W)}const N=new $n;N.setAttribute("position",new Ln(y,g)),N.setAttribute("uv",new Ln(b,_)),N.setAttribute("faceIndex",new Ln(M,x)),e.push(N),i.push(new In(N,null)),s>$r&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n,lodMeshes:i}}function gg(o,e,t){const n=new Ms(o,e,t);return n.texture.mapping=Gh,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function Oc(o,e,t,n,i){o.viewport.set(e,t,n,i),o.scissor.set(e,t,n,i)}function mp(o){const e=new At;return e.depthTest=!1,e.depthWrite=!1,e.blending=Ks,e.name=`PMREM_${o}`,e}function LD(o,e,t){const n=Oi(new Array(ks).fill(0)),i=Ne(new C(0,1,0)),s=Ne(0),r=S(ks),a=Ne(0),c=Ne(1),l=qe(null),u=Ne(0),h=S(1/e),d=S(1/t),f=S(o),p={n:r,latitudinal:a,weights:n,poleAxis:i,outputDirection:pp,dTheta:s,samples:c,envMap:l,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},m=mp("blur");return m.uniforms=p,m.fragmentNode=mx({...p,latitudinal:a.equal(1)}),m}function vg(o){const e=mp("cubemap");return e.fragmentNode=co(o,pp),e}function _g(o){const e=mp("equirect");return e.fragmentNode=qe(o,Zf(pp),0),e}const yg=new WeakMap,FD=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Vc=o=>/e/g.test(o)?String(o).replace(/\+/g,""):(o=Number(o),o+(o%1?"":".0"));class mb{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=el(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new xh,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=yg.get(this.renderer);return e===void 0&&(e=new Si,yg.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new Ms(e,t,n)}createCubeRenderTarget(e,t){return new J0(e,t)}createPMREMGenerator(){return new DD(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const n=this.getBindGroupsCache(),i=[];let s=!0;for(const a of t)i.push(a),s=s&&a.groupNode.shared!==!0;let r;return s?(r=n.get(i),r===void 0&&(r=new Dd(e,i,this.bindingsIndexes[e].group,i),n.set(i,r))):r=new Dd(e,i,this.bindingsIndexes[e].group,i),r}getBindGroupArray(e,t){const n=this.bindings[t];let i=n[e];return i===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=i=[]),i}getBindings(){let e=this.bindGroups;if(e===null){const t={},n=this.bindings;for(const i of gd)for(const s in n[i]){const r=n[i][s];(t[s]||(t[s]=[])).push(...r)}e=[];for(const i in t){const s=t[i],r=this._getBindGroup(i,s);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,n)=>t.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==Fe.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==Fe.NONE&&this.updateBeforeNodes.push(e.getSelf()),n!==Fe.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===Jt||e.magFilter===Wh||e.magFilter===Kr||e.magFilter===ki||e.minFilter===Jt||e.minFilter===Wh||e.minFilter===Kr||e.minFilter===ki}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const n=this.getDataFromNode(e);return n.cache===void 0&&(n.cache=new xh(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new We:e==="vec2"?t=new le:e==="vec3"?t=new C:e==="vec4"&&(t=new Ke)),e==="float")return Vc(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Vc(t.r)}, ${Vc(t.g)}, ${Vc(t.b)} )`;const n=this.getTypeLength(e),i=this.getComponentType(e),s=r=>this.generateConst(i,r);if(n===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(n===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(n===4)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(n>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const n=this.attributes;for(const s of n)if(s.name===e)return s;const i=new dg(e,t);return n.push(i),i}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===dn)return"int";if(t===Zt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;const n=Qv(e);return(t==="float"?"":t[0])+n}getTypeFromArray(e){return FD.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const n=t.array,i=e.itemSize,s=e.normalized;let r;return!(e instanceof Pv)&&s!==!0&&(r=this.getTypeFromArray(n)),this.getTypeFromLength(i,r)}getTypeLength(e){const t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return n!==null?Number(n[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=el(this.stack),this.stacks.push(pf()||this.stack),ma(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,ma(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){n=n===null?e.isGlobal(this)?this.globalCache:this.cache:n;let i=n.getData(e);return i===void 0&&(i={},n.setData(e,i)),i[t]===void 0&&(i[t]={}),i[t]}getNodeProperties(e,t="any"){const n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const n=this.getDataFromNode(e);let i=n.bufferAttribute;if(i===void 0){const s=this.uniforms.index++;i=new dg("nodeAttribute"+s,t,e),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeFromNode(e,t=this.shaderStage){const n=this.getDataFromNode(e,t);if(n.structType===void 0){const i=this.structs.index++;e.name=`StructType${i}`,this.structs[t].push(e),n.structType=e}return e}getUniformFromNode(e,t,n=this.shaderStage,i=null){const s=this.getDataFromNode(e,n,this.globalCache);let r=s.uniform;if(r===void 0){const a=this.uniforms.index++;r=new dD(i||"nodeUniform"+a,t,e),this.uniforms[n].push(r),s.uniform=r}return r}getVarFromNode(e,t=null,n=e.getNodeType(this),i=this.shaderStage){const s=this.getDataFromNode(e,i);let r=s.variable;if(r===void 0){const a=this.vars[i]||(this.vars[i]=[]);t===null&&(t="nodeVar"+a.length),r=new pb(t,n),a.push(r),s.variable=r}return r}getVaryingFromNode(e,t=null,n=e.getNodeType(this)){const i=this.getDataFromNode(e,"any");let s=i.varying;if(s===void 0){const r=this.varyings,a=r.length;t===null&&(t="nodeVarying"+a),s=new fD(t,n),r.push(s),i.varying=s}return s}getCodeFromNode(e,t,n=this.shaderStage){const i=this.getDataFromNode(e);let s=i.code;if(s===void 0){const r=this.codes[n]||(this.codes[n]=[]),a=r.length;s=new pD("nodeCode"+a,t),r.push(s),i.code=s}return s}addFlowCodeHierarchy(e,t){const{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(e);let s=!0,r=t;for(;r;){if(i.get(r)===!0){s=!1;break}r=this.getDataFromNode(r).parentNodeBlock}if(s)for(const a of n)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,n){const i=this.getDataFromNode(e),s=i.flowCodes||(i.flowCodes=[]),r=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);s.push(t),r.set(n,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}buildFunctionNode(e){const t=new Hx,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){const t=e.layout,n={[Symbol.iterator](){let r=0;const a=Object.values(this);return{next:()=>({value:a[r],done:r++>=a.length})}}};for(const r of t.inputs)n[r.name]=new xx(r.type,r.name);e.layout=null;const i=e.call(n),s=this.flowStagesNode(i,t.type);return e.layout=t,s}flowStagesNode(e,t=null){const n=this.flow,i=this.vars,s=this.cache,r=this.buildStage,a=this.stack,c={code:""};this.flow=c,this.vars={},this.cache=new xh,this.stack=el();for(const l of md)this.setBuildStage(l),c.result=e.build(this,t);return c.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.cache=s,this.stack=a,this.setBuildStage(r),c}getFunctionOperator(){return null}flowChildNode(e,t=null){const n=this.flow,i={code:""};return this.flow=i,i.result=e.build(this,t),this.flow=n,i}flowNodeFromShaderStage(e,t,n=null,i=null){const s=this.shaderStage;this.setShaderStage(e);const r=this.flowChildNode(t,n);return i!==null&&(r.code+=`${this.tab+i} = ${r.result};
`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(s),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const n=this.vars[e];if(n!==void 0)for(const i of n)t+=`${this.getVar(i.type,i.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let n="";if(t!==void 0)for(const i of t)n+=i.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:n}=this;if(t!==null){let i=n.library.fromMaterial(t);i===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),i=new At),i.build(this)}else this.addFlow("compute",e);for(const i of md){this.setBuildStage(i),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const s of gd){this.setShaderStage(s);const r=this.flowNodes[s];for(const a of r)i==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new TD(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new MD(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new wD(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new AD(e);if(t==="color")return new ND(e);if(t==="mat3")return new CD(e);if(t==="mat4")return new ED(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,n){if(t=this.getVectorType(t),n=this.getVectorType(n),t===n||n===null||this.isReference(n))return e;const i=this.getTypeLength(t),s=this.getTypeLength(n);return i===16&&s===9?`${this.getType(n)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:i===9&&s===4?`${this.getType(n)}(${e}[0].xy, ${e}[1].xy)`:i>4||s>4||s===0?e:i===s?`${this.getType(n)}( ${e} )`:i>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(t)),n):s===4&&i>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:i===2?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(i===1&&s>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r${Rl} - Node System
`}}class xg{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return n===void 0&&(n={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,n)),n}updateBeforeNode(e){const t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===Fe.FRAME){const{frameMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.frameId&&e.updateBefore(this)!==!1&&i.set(n,this.frameId)}else if(t===Fe.RENDER){const{renderMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.renderId&&e.updateBefore(this)!==!1&&i.set(n,this.renderId)}else t===Fe.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===Fe.FRAME){const{frameMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.frameId&&e.updateAfter(this)!==!1&&i.set(n,this.frameId)}else if(t===Fe.RENDER){const{renderMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.renderId&&e.updateAfter(this)!==!1&&i.set(n,this.renderId)}else t===Fe.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),n=e.updateReference(this);if(t===Fe.FRAME){const{frameMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.frameId&&e.update(this)!==!1&&i.set(n,this.frameId)}else if(t===Fe.RENDER){const{renderMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.renderId&&e.update(this)!==!1&&i.set(n,this.renderId)}else t===Fe.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class gp{constructor(e,t,n=null,i="",s=!1){this.type=e,this.name=t,this.count=n,this.qualifier=i,this.isConst=s}}gp.isNodeFunctionInput=!0;class ID extends dr{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,n=this.colorNode,i=lp(this.light),s=e.context.reflectedLight;t.direct({lightDirection:i,lightColor:n,reflectedLight:s},e.stack,e)}}const Ah=new Xe,kc=new Xe;let Go=null;class BD extends dr{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=Ne(new C).setGroup(Pe),this.halfWidth=Ne(new C).setGroup(Pe),this.updateType=Fe.RENDER}update(e){super.update(e);const{light:t}=this,n=e.camera.matrixWorldInverse;kc.identity(),Ah.copy(t.matrixWorld),Ah.premultiply(n),kc.extractRotation(Ah),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(kc),this.halfHeight.value.applyMatrix4(kc)}setup(e){super.setup(e);let t,n;e.isAvailable("float32Filterable")?(t=qe(Go.LTC_FLOAT_1),n=qe(Go.LTC_FLOAT_2)):(t=qe(Go.LTC_HALF_1),n=qe(Go.LTC_HALF_2));const{colorNode:i,light:s}=this,r=e.context.lightingModel,a=ru(s),c=e.context.reflectedLight;r.directRectArea({lightColor:i,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:c,ltc_1:t,ltc_2:n},e.stack,e)}static setLTC(e){Go=e}}class gb extends dr{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=Ne(0).setGroup(Pe),this.penumbraCosNode=Ne(0).setGroup(Pe),this.cutoffDistanceNode=Ne(0).setGroup(Pe),this.decayExponentNode=Ne(0).setGroup(Pe)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:n}=this;return Xi(t,n,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:n,cutoffDistanceNode:i,decayExponentNode:s,light:r}=this,a=ru(r).sub(Bt),c=a.normalize(),l=c.dot(lp(r)),u=this.getSpotAttenuation(l),h=a.length(),d=hp({lightDistance:h,cutoffDistance:i,decayExponent:s});let f=n.mul(u).mul(d);if(r.map){const m=Xx(r),g=qe(r.map,m.xy).onRenderUpdate(()=>r.map);f=m.mul(2).sub(1).abs().lessThan(1).all().select(f.mul(g),f)}const p=e.context.reflectedLight;t.direct({lightDirection:c,lightColor:f,reflectedLight:p},e.stack,e)}}class OD extends gb{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let n=null;if(t&&t.isTexture===!0){const i=e.acos().mul(1/Math.PI);n=qe(t,J(i,0),0).r}else n=super.getSpotAttenuation(e);return n}}class VD extends dr{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class kD extends dr{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=cp(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Ne(new We).setGroup(Pe)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:n,lightDirectionNode:i}=this,r=jn.dot(i).mul(.5).add(.5),a=tt(n,t,r);e.context.irradiance.addAssign(a)}}class zD extends dr{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let n=0;n<9;n++)t.push(new C);this.lightProbe=Oi(t)}update(e){const{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){const t=fb($l,this.lightProbe);e.context.irradiance.addAssign(t)}}class vb{parseFunction(){console.warn("Abstract function.")}}class vp{constructor(e,t,n="",i=""){this.type=e,this.inputs=t,this.name=n,this.precision=i}getCode(){console.warn("Abstract function.")}}vp.isNodeFunction=!0;const GD=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,HD=/[a-z_0-9]+/ig,bg="#pragma main",WD=o=>{o=o.trim();const e=o.indexOf(bg),t=e!==-1?o.slice(e+bg.length):o,n=t.match(GD);if(n!==null&&n.length===5){const i=n[4],s=[];let r=null;for(;(r=HD.exec(i))!==null;)s.push(r);const a=[];let c=0;for(;c<s.length;){const p=s[c][0]==="const";p===!0&&c++;let m=s[c][0];m==="in"||m==="out"||m==="inout"?c++:m="";const g=s[c++][0];let _=Number.parseInt(s[c][0]);Number.isNaN(_)===!1?c++:_=null;const x=s[c++][0];a.push(new gp(g,x,_,m,p))}const l=t.substring(n[0].length),u=n[3]!==void 0?n[3]:"",h=n[2],d=n[1]!==void 0?n[1]:"",f=e!==-1?o.slice(0,e):"";return{type:h,inputs:a,name:u,precision:d,inputsCode:i,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class qD extends vp{constructor(e){const{type:t,inputs:n,name:i,precision:s,inputsCode:r,blockCode:a,headerCode:c}=WD(e);super(t,n,i,s),this.inputsCode=r,this.blockCode=a,this.headerCode=c}getCode(e=this.name){let t;const n=this.blockCode;if(n!==""){const{type:i,inputsCode:s,headerCode:r,precision:a}=this;let c=`${i} ${e} ( ${s.trim()} )`;a!==""&&(c=`${a} ${c}`),t=r+c+n}else t="";return t}}class jD extends vb{parseFunction(e){return new qD(e)}}const Sg=new WeakMap;class $D extends As{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new xg,this.nodeBuilderCache=new Map,this.callHashCache=new Si,this.groupsData=new Si}updateGroup(e){const t=e.groupNode,n=t.name;if(n===vf.name)return!0;if(n===Pe.name){const r=this.get(e),a=this.nodeFrame.renderId;return r.renderId!==a?(r.renderId=a,!0):!1}if(n===b_.name){const r=this.get(e),a=this.nodeFrame.frameId;return r.frameId!==a?(r.frameId=a,!0):!1}const i=[t,e];let s=this.groupsData.get(i);return s===void 0&&this.groupsData.set(i,s={}),s.version!==t.version?(s.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const{nodeBuilderCache:i}=this,s=this.getForRenderCacheKey(e);if(n=i.get(s),n===void 0){const r=this.backend.createNodeBuilder(e.object,this.renderer);r.scene=e.scene,r.material=e.material,r.camera=e.camera,r.context.material=e.material,r.lightsNode=e.lightsNode,r.environmentNode=this.getEnvironmentNode(e.scene),r.fogNode=this.getFogNode(e.scene),r.clippingContext=e.clippingContext,r.build(),n=this._createNodeBuilderState(r),i.set(s,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let n=t.nodeBuilderState;if(n===void 0){const i=this.backend.createNodeBuilder(e,this.renderer);i.build(),n=this._createNodeBuilderState(i),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new hD(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const n=[e,t],i=this.renderer.info.calls;let s=this.callHashCache.get(n);if(s===void 0||s.callId!==i){const r=this.getEnvironmentNode(e),a=this.getFogNode(e),c=[];t&&c.push(t.getCacheKey(!0)),r&&c.push(r.getCacheKey()),a&&c.push(a.getCacheKey()),c.push(this.renderer.shadowMap.enabled?1:0),s={callId:i,cacheKey:lf(c)},this.callHashCache.set(n,s)}return s.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),n=e.background;if(n){const i=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==n||i){let s=null;if(n.isCubeTexture===!0||n.mapping===Sa||n.mapping===Ta||n.mapping===Gh)if(e.backgroundBlurriness>0||n.mapping===Gh)s=ep(n);else{let r;n.isCubeTexture===!0?r=co(n):r=qe(n),s=tx(r)}else n.isTexture===!0?s=qe(n,bi.flipY()).setUpdateMatrix(!0):n.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",n);t.backgroundNode=s,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),n=e.fog;if(n){if(t.fog!==n){let i=null;if(n.isFogExp2){const s=rt("color","color",n).setGroup(Pe),r=rt("density","float",n).setGroup(Pe);i=$x(s,r)}else if(n.isFog){const s=rt("color","color",n).setGroup(Pe),r=rt("near","float",n).setGroup(Pe),a=rt("far","float",n).setGroup(Pe);i=jx(s,r,a)}else console.error("WebGPUNodes: Unsupported fog configuration.",n);t.fogNode=i,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),n=e.environment;if(n){if(t.environment!==n){let i=null;n.isCubeTexture===!0?i=co(n):n.isTexture===!0?i=qe(n):console.error("Nodes: Unsupported environment configuration.",n),t.environmentNode=i,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,i=null,s=null){const r=this.nodeFrame;return r.renderer=e,r.scene=t,r.object=n,r.camera=i,r.material=s,r}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return Sg.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,n=this.getOutputCacheKey(),i=qe(e,bi).renderOutput(t.toneMapping,t.currentColorSpace);return Sg.set(e,n),i}updateBefore(e){const t=e.getNodeBuilderState();for(const n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){const t=e.getNodeBuilderState();for(const n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){const t=this.getNodeFrame(),n=this.getForCompute(e);for(const i of n.updateNodes)t.updateNode(i)}updateForRender(e){const t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(const i of n.updateNodes)t.updateNode(i)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new xg,this.nodeBuilderCache=new Map}}const Nh=new Fi;class El{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",e===null?(this.intersectionPlanes=[],this.unionPlanes=[],this.viewNormalMatrix=new pn,this.clippingGroupContexts=new WeakMap,this.shadowPass=!1):(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix),this.parentVersion=null}projectPlanes(e,t,n){const i=e.length;for(let s=0;s<i;s++){Nh.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const r=t[n+s],a=Nh.normal;r.x=-a.x,r.y=-a.y,r.z=-a.z,r.w=Nh.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowNodeMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let n=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const i=t.clippingPlanes,s=i.length;let r,a;if(this.clipIntersection?(r=this.intersectionPlanes,a=e.intersectionPlanes.length):(r=this.unionPlanes,a=e.unionPlanes.length),r.length!==a+s){r.length=a+s;for(let c=0;c<s;c++)r[a+c]=new Ke;n=!0}this.projectPlanes(i,r,a),n&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new El(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class XD{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class YD{constructor(){this.lists=new Si}get(e,t){const n=this.lists,i=[e,t];let s=n.get(i);return s===void 0&&(s=new XD(e,t),n.set(i,s)),s}dispose(){this.lists=new Si}}class _b{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const n=this.getMaterialNodeClass(e.type);if(n!==null){t=new n;for(const i in e)t[i]=e[i]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}addClass(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}}const ZD=new up;class KD extends Si{constructor(){super()}createNode(e=[]){return new up().setLights(e)}getNode(e,t){if(e.isQuadMesh)return ZD;const n=[e,t];let i=this.get(n);return i===void 0&&(i=this.createNode(),this.set(n,i)),i}}const Tg=new Qd,zc=new le,Ch=new Ke,Eh=new Fv,Gc=new Xe,cs=new Ke;class QD{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:n=!1,alpha:i=!0,depth:s=!0,stencil:r=!1,antialias:a=!1,samples:c=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=c||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=n,this.outputColorSpace=Re,this.toneMapping=Zr,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=r,this.info=new fE,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new _b,this.lighting=new KD,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Ke(0,0,this._width,this._height),this._scissor=new Ke(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new sp(new At),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const u=this.alpha===!0?0:1;this._clearColor=new np(0,0,0,u),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Zb},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(h,d,f)=>{await this.compileAsync(h,d);const p=this._renderLists.get(h,d),m=this._renderContexts.get(h,d,this._renderTarget),g=h.overrideMaterial||f.material,_=this._objects.get(f,g,h,d,p.lightsNode,m,m.clippingContext),{fragmentShader:x,vertexShader:y}=_.getNodeBuilderState();return{fragmentShader:x,vertexShader:y}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(i){if(this._getFallback!==null)try{this.backend=n=this._getFallback(i),await n.init(this)}catch(s){t(s);return}else{t(i);return}}this._nodes=new $D(this,n),this._animation=new iE(this._nodes,this.info),this._attributes=new uE(n),this._background=new lD(this,this._nodes),this._geometries=new dE(this._attributes,this.info),this._textures=new AE(this,n,this.info),this._pipelines=new vE(n,this._nodes),this._bindings=new _E(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new aE(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new bE(this.lighting),this._bundles=new YD,this._renderContexts=new ME,this._animation.start(),this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const i=this._nodes.nodeFrame,s=i.renderId,r=this._currentRenderContext,a=this._currentRenderObjectFunction,c=this._compilationPromises,l=e.isScene===!0?e:Tg;n===null&&(n=e);const u=this._renderTarget,h=this._renderContexts.get(n,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,i.renderId++,i.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new El),h.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,u);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,h.clippingContext),n!==e&&n.traverseVisible(function(y){y.isLight&&y.layers.test(t.layers)&&p.pushLight(y)}),p.finish(),u!==null){this._textures.updateRenderTarget(u,d);const y=this._textures.get(u);h.textures=y.textures,h.depthTexture=y.depthTexture}else h.textures=null,h.depthTexture=null;this._nodes.updateScene(l),this._background.update(l,p,h);const m=p.opaque,g=p.transparent,_=p.transparentDoublePass,x=p.lightsNode;this.opaque===!0&&m.length>0&&this._renderObjects(m,t,l,x),this.transparent===!0&&g.length>0&&this._renderTransparents(g,_,t,l,x),i.renderId=s,this._currentRenderContext=r,this._currentRenderObjectFunction=a,this._compilationPromises=c,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init();const n=this._renderScene(e,t);await this.backend.resolveTimestampAsync(n,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,n){const{bundleGroup:i,camera:s,renderList:r}=e,a=this._currentRenderContext,c=this._bundles.get(i,s),l=this.backend.get(c);l.renderContexts===void 0&&(l.renderContexts=new Set);const u=i.version!==l.version,h=l.renderContexts.has(a)===!1||u;if(l.renderContexts.add(a),h){this.backend.beginBundle(a),(l.renderObjects===void 0||u)&&(l.renderObjects=[]),this._currentRenderBundle=c;const d=r.opaque;this.opaque===!0&&d.length>0&&this._renderObjects(d,s,t,n),this._currentRenderBundle=null,this.backend.finishBundle(a,c),l.version=i.version}else{const{renderObjects:d}=l;for(let f=0,p=d.length;f<p;f++){const m=d[f];this._nodes.needsRefresh(m)&&(this._nodes.updateBefore(m),this._nodes.updateForRender(m),this._bindings.updateForRender(m),this._nodes.updateAfter(m))}}this.backend.addBundle(a,c)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==Zr===!1&&t!==zi===!1)return null;const{width:s,height:r}=this.getDrawingBufferSize(zc),{depth:a,stencil:c}=this;let l=this._frameBufferTarget;return l===null&&(l=new Ms(s,r,{depthBuffer:a,stencilBuffer:c,type:ni,format:Js,colorSpace:zi,generateMipmaps:!1,minFilter:Jt,magFilter:Jt,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l),l.depthBuffer=a,l.stencilBuffer=c,l.setSize(s,r),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l}_renderScene(e,t,n=!0){if(this._isDeviceLost===!0)return;const i=n?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,r=s.renderId,a=this._currentRenderContext,c=this._currentRenderObjectFunction,l=e.isScene===!0?e:Tg,u=this._renderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel;let f;i!==null?(f=i,this.setRenderTarget(f)):f=u;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;const m=this.coordinateSystem;t.coordinateSystem!==m&&(t.coordinateSystem=m,t.updateProjectionMatrix()),e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld();let g=this._viewport,_=this._scissor,x=this._pixelRatio;f!==null&&(g=f.viewport,_=f.scissor,x=1),this.getDrawingBufferSize(zc),Ch.set(0,0,zc.width,zc.height);const y=g.minDepth===void 0?0:g.minDepth,b=g.maxDepth===void 0?1:g.maxDepth;p.viewportValue.copy(g).multiplyScalar(x).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=y,p.viewportValue.maxDepth=b,p.viewport=p.viewportValue.equals(Ch)===!1,p.scissorValue.copy(_).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(Ch)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new El),p.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,f),Gc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Eh.setFromProjectionMatrix(Gc,m);const M=this._renderLists.get(e,t);if(M.begin(),this._projectObject(e,t,0,M,p.clippingContext),M.finish(),this.sortObjects===!0&&M.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const W=this._textures.get(f);p.textures=W.textures,p.depthTexture=W.depthTexture,p.width=W.width,p.height=W.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=h,p.activeMipmapLevel=d,p.occlusionQueryCount=M.occlusionQueryCount,this._nodes.updateScene(l),this._background.update(l,M,p),this.backend.beginRender(p);const{bundles:N,lightsNode:T,transparentDoublePass:w,transparent:L,opaque:I}=M;if(N.length>0&&this._renderBundles(N,l,T),this.opaque===!0&&I.length>0&&this._renderObjects(I,t,l,T),this.transparent===!0&&L.length>0&&this._renderTransparents(L,w,t,l,T),this.backend.finishRender(p),s.renderId=r,this._currentRenderContext=a,this._currentRenderObjectFunction=c,i!==null){this.setRenderTarget(u,h,d);const W=this._quad;this._nodes.hasOutputChange(f.texture)&&(W.material.fragmentNode=this._nodes.getOutputNode(f.texture),W.material.needsUpdate=!0),this._renderScene(W,W.camera,!1)}return l.onAfterRender(this,e,t,f),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,n=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),n===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,i){const s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,n,i)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,i,s=0,r=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,n,i),a.minDepth=s,a.maxDepth=r}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,n);const i=this._renderTarget||this._getFrameBufferTarget();let s=null;if(i!==null&&(this._textures.updateRenderTarget(i),s=this._textures.get(i)),this.backend.clear(e,t,n,s),i!==null&&this._renderTarget===null){const r=this._quad;this._nodes.hasOutputChange(i.texture)&&(r.material.fragmentNode=this._nodes.getOutputNode(i.texture),r.material.needsUpdate=!0),this._renderScene(r,r.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){this._initialized===!1&&await this.init(),this.clear(e,t,n)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?Zr:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?zi:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this.isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,n=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const i=this.backend,s=this._pipelines,r=this._bindings,a=this._nodes,c=Array.isArray(e)?e:[e];if(c[0]===void 0||c[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");i.beginCompute(e);for(const l of c){if(s.has(l)===!1){const d=()=>{l.removeEventListener("dispose",d),s.delete(l),r.delete(l),a.delete(l)};l.addEventListener("dispose",d);const f=l.onInitFunction;f!==null&&f.call(l,{renderer:this})}a.updateForCompute(l),r.updateForCompute(l);const u=r.getForCompute(l),h=s.getForCompute(l,u);i.compute(e,l,u,h)}i.finishCompute(e),t.renderId=n}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e),await this.backend.resolveTimestampAsync(e,"compute")}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){if(this._initialized===!1)return console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),!1;this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=cs.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=cs.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=cs.set(0,0,e.image.width,e.image.height);let n=this._currentRenderContext,i;n!==null?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),i!==null&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(e,{renderTarget:i}),this.backend.copyFramebufferToTexture(e,n,t)}copyTextureToTexture(e,t,n=null,i=null,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,i,s)}readRenderTargetPixelsAsync(e,t,n,i,s,r=0,a=0){return this.backend.copyTextureToBuffer(e.textures[r],t,n,i,s,a)}_projectObject(e,t,n,i,s){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder,e.isClippingGroup&&e.enabled&&(s=s.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)i.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Eh.intersectsSprite(e)){this.sortObjects===!0&&cs.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Gc);const{geometry:c,material:l}=e;l.visible&&i.push(e,c,l,n,cs.z,null,s)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Eh.intersectsObject(e))){const{geometry:c,material:l}=e;if(this.sortObjects===!0&&(c.boundingSphere===null&&c.computeBoundingSphere(),cs.copy(c.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Gc)),Array.isArray(l)){const u=c.groups;for(let h=0,d=u.length;h<d;h++){const f=u[h],p=l[f.materialIndex];p&&p.visible&&i.push(e,c,p,n,cs.z,f,s)}}else l.visible&&i.push(e,c,l,n,cs.z,null,s)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const c=i;i=this._renderLists.get(e,t),i.begin(),c.pushBundle({bundleGroup:e,camera:t,renderList:i}),i.finish()}const a=e.children;for(let c=0,l=a.length;c<l;c++)this._projectObject(a[c],t,n,i,s)}_renderBundles(e,t,n){for(const i of e)this._renderBundle(i,t,n)}_renderTransparents(e,t,n,i,s){if(t.length>0){for(const{material:r}of t)r.side=qn;this._renderObjects(t,n,i,s,"backSide");for(const{material:r}of t)r.side=no;this._renderObjects(e,n,i,s);for(const{material:r}of t)r.side=Ws}else this._renderObjects(e,n,i,s)}_renderObjects(e,t,n,i,s=null){for(let r=0,a=e.length;r<a;r++){const c=e[r],{object:l,geometry:u,material:h,group:d,clippingContext:f}=c;if(t.isArrayCamera){const p=t.cameras;for(let m=0,g=p.length;m<g;m++){const _=p[m];if(l.layers.test(_.layers)){const x=_.viewport,y=x.minDepth===void 0?0:x.minDepth,b=x.maxDepth===void 0?1:x.maxDepth,M=this._currentRenderContext.viewportValue;M.copy(x).multiplyScalar(this._pixelRatio).floor(),M.minDepth=y,M.maxDepth=b,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(l,n,_,u,h,d,i,f,s)}}}else this._currentRenderObjectFunction(l,n,t,u,h,d,i,f,s)}}renderObject(e,t,n,i,s,r,a,c=null,l=null){let u,h,d;if(e.onBeforeRender(this,t,n,i,s,r),t.overrideMaterial!==null){const f=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(u=f.positionNode,f.positionNode=s.positionNode),f.alphaTest=s.alphaTest,f.alphaMap=s.alphaMap,f.isShadowNodeMaterial&&(f.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(d=f.depthNode,f.depthNode=s.depthNode),s.castShadowNode&&s.castShadowNode.isNode&&(h=f.colorNode,f.colorNode=s.castShadowNode)),s=f}s.transparent===!0&&s.side===Ws&&s.forceSinglePass===!1?(s.side=qn,this._handleObjectFunction(e,s,t,n,a,r,c,"backSide"),s.side=no,this._handleObjectFunction(e,s,t,n,a,r,c,l),s.side=Ws):this._handleObjectFunction(e,s,t,n,a,r,c,l),u!==void 0&&(t.overrideMaterial.positionNode=u),d!==void 0&&(t.overrideMaterial.depthNode=d),h!==void 0&&(t.overrideMaterial.colorNode=h),e.onAfterRender(this,t,n,i,s,r)}_renderObjectDirect(e,t,n,i,s,r,a,c){const l=this._objects.get(e,t,n,i,s,this._currentRenderContext,a,c);l.drawRange=e.geometry.drawRange,l.group=r;const u=this._nodes.needsRefresh(l);u&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.scene),this.backend.draw(l,this.info),u&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,n,i,s,r,a){const c=this._objects.get(e,t,n,i,s,this._currentRenderContext,r,a);this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c),this._pipelines.getForRender(c,this._compilationPromises),this._nodes.updateAfter(c)}get compile(){return this.compileAsync}}class _p{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function JD(o){return o+(ps-o%ps)%ps}class yb extends _p{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return JD(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class xb extends yb{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let eU=0;class bb extends xb{constructor(e,t){super("UniformBuffer_"+eU++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class tU extends xb{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,n=this.uniforms.length;t<n;t++){const i=this.uniforms[t],{boundary:s,itemSize:r}=i,a=e%ps,c=ps-a;a!==0&&c-s<0?e+=ps-a:a%s!==0&&(e+=a%s),i.offset=e/this.bytesPerElement,e+=r*this.bytesPerElement}return Math.ceil(e/ps)*ps}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s]!==i){const a=this._getBufferForType(r);a[s]=n[s]=i,t=!0}return t}updateVector2(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y){const a=this._getBufferForType(r);a[s+0]=n[s+0]=i.x,a[s+1]=n[s+1]=i.y,t=!0}return t}updateVector3(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y||n[s+2]!==i.z){const a=this._getBufferForType(r);a[s+0]=n[s+0]=i.x,a[s+1]=n[s+1]=i.y,a[s+2]=n[s+2]=i.z,t=!0}return t}updateVector4(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y||n[s+2]!==i.z||n[s+4]!==i.w){const a=this._getBufferForType(r);a[s+0]=n[s+0]=i.x,a[s+1]=n[s+1]=i.y,a[s+2]=n[s+2]=i.z,a[s+3]=n[s+3]=i.w,t=!0}return t}updateColor(e){let t=!1;const n=this.values,i=e.getValue(),s=e.offset;if(n[s+0]!==i.r||n[s+1]!==i.g||n[s+2]!==i.b){const r=this.buffer;r[s+0]=n[s+0]=i.r,r[s+1]=n[s+1]=i.g,r[s+2]=n[s+2]=i.b,t=!0}return t}updateMatrix3(e){let t=!1;const n=this.values,i=e.getValue().elements,s=e.offset;if(n[s+0]!==i[0]||n[s+1]!==i[1]||n[s+2]!==i[2]||n[s+4]!==i[3]||n[s+5]!==i[4]||n[s+6]!==i[5]||n[s+8]!==i[6]||n[s+9]!==i[7]||n[s+10]!==i[8]){const r=this.buffer;r[s+0]=n[s+0]=i[0],r[s+1]=n[s+1]=i[1],r[s+2]=n[s+2]=i[2],r[s+4]=n[s+4]=i[3],r[s+5]=n[s+5]=i[4],r[s+6]=n[s+6]=i[5],r[s+8]=n[s+8]=i[6],r[s+9]=n[s+9]=i[7],r[s+10]=n[s+10]=i[8],t=!0}return t}updateMatrix4(e){let t=!1;const n=this.values,i=e.getValue().elements,s=e.offset;return iU(n,i,s)===!1&&(this.buffer.set(i,s),nU(n,i,s),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function nU(o,e,t){for(let n=0,i=e.length;n<i;n++)o[t+n]=e[n]}function iU(o,e,t){for(let n=0,i=e.length;n<i;n++)if(o[t+n]!==e[n])return!1;return!0}let sU=0;class Sb extends tU{constructor(e,t){super(e),this.id=sU++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const n=t.nodeUniform.node;if(!n)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(n)}return e}}let rU=0;class oU extends _p{constructor(e,t){super(e),this.id=rU++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class ou extends oU{constructor(e,t,n,i=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=i}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class Tb extends ou{constructor(e,t,n,i){super(e,t,n,i),this.isSampledCubeTexture=!0}}class Mb extends ou{constructor(e,t,n,i){super(e,t,n,i),this.isSampledTexture3D=!0}}const aU={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},cU={low:"lowp",medium:"mediump",high:"highp"},Mg={swizzleAssign:!0,storageBuffer:!1},wg=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class lU extends mb{constructor(e,t){super(e,t,new jD),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]},this.useComparisonMethod=!0}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==er}getMethod(e){return aU[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const r of t.inputs)i.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${i.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const n=t.array,i=t.count*t.itemSize,{itemSize:s}=t,r=t.array.constructor.name.toLowerCase().includes("int");let a=r?Wd:Hd;s===2?a=r?qd:ca:s===3?a=r?fS:Gd:s===4&&(a=r?jd:Js);const c={Float32Array:Un,Uint8Array:_s,Uint16Array:Gr,Uint32Array:Zt,Int8Array:$o,Int16Array:Xo,Int32Array:dn,Uint8ClampedArray:_s},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/s))));let u=Math.ceil(i/s/l);l*u*s<i&&u++;const h=l*u*s,d=new n.constructor(h);d.set(n,0),t.array=d;const f=new TT(t.array,l,u,a,c[t.array.constructor.name]||Un);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new yi(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:n}=e,i=t.value;if(this.renderer.backend.has(i)){const u=this.renderer.backend.get(i);u.pbo=i.pbo}const s=this.getUniformFromNode(i.pboNode,"texture",this.shaderStage,this.context.label),r=this.getPropertyName(s);this.increaseUsage(n);const a=n.build(this,"uint"),c=this.getDataFromNode(e);let l=c.propertyName;if(l===void 0){const u=this.getVarFromNode(e);l=this.getPropertyName(u);const h=this.getDataFromNode(t);let d=h.propertySizeName;d===void 0&&(d=l+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${r}, 0 ).x )`,e),h.propertySizeName=d);const{itemSize:f}=i,p="."+cr.join("").slice(0,f),m=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,r,m,null,"0");let _="vec4";i.pbo.type===Zt?_="uvec4":i.pbo.type===dn&&(_="ivec4"),this.addLineFlowCode(`${l} = ${_}(${g})${p}`,e),c.propertyName=l}return l}generateTextureLoad(e,t,n,i,s="0"){return i?`texelFetch( ${t}, ivec3( ${n}, ${i} ), ${s} )`:`texelFetch( ${t}, ${n}, ${s} )`}generateTexture(e,t,n,i){return e.isDepthTexture?`texture( ${t}, ${n} ).x`:(i&&(n=`vec3( ${n}, ${i} )`),`texture( ${t}, ${n} )`)}generateTextureLevel(e,t,n,i){return`textureLod( ${t}, ${n}, ${i} )`}generateTextureBias(e,t,n,i){return`texture( ${t}, ${n}, ${i} )`}generateTextureGrad(e,t,n,i){return`textureGrad( ${t}, ${n}, ${i[0]}, ${i[1]} )`}generateTextureCompare(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`texture( ${t}, vec3( ${n}, ${i} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const i of n)t.push(`${this.getVar(i.type,i.name)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],n=[],i={};for(const r of t){let a=null,c=!1;if(r.type==="texture"){const u=r.node.value;let h="";u.isDataTexture===!0&&(u.type===Zt?h="u":u.type===dn&&(h="i")),u.compareFunction?a=`sampler2DShadow ${r.name};`:u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?a=`${h}sampler2DArray ${r.name};`:a=`${h}sampler2D ${r.name};`}else if(r.type==="cubeTexture")a=`samplerCube ${r.name};`;else if(r.type==="texture3D")a=`sampler3D ${r.name};`;else if(r.type==="buffer"){const u=r.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";a=`${u.name} {
	${h} ${r.name}[${f}];
};
`}else a=`${this.getVectorType(r.type)} ${this.getPropertyName(r,e)};`,c=!0;const l=r.node.precision;if(l!==null&&(a=cU[l]+" "+a),c){a="	"+a;const u=r.groupNode.name;(i[u]||(i[u]=[])).push(a)}else a="uniform "+a,n.push(a)}let s="";for(const r in i){const a=i[r];s+=this._getGLSLUniformStruct(e+"_"+r,a.join(`
`))+`
`}return s+=n.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==dn){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);const i=n.array;i instanceof Uint32Array||i instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const n=this.getAttributesArray();let i=0;for(const s of n)t+=`layout( location = ${i++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){const t=[],n=e.getMemberTypes();for(let i=0;i<n.length;i++){const s=n[i];t.push(`layout( location = ${i} ) out ${s} m${i};`)}return t.join(`
`)}getStructs(e){const t=[],n=this.structs[e];if(n.length===0)return`layout( location = 0 ) out vec4 fragColor;
`;for(let i=0,s=n.length;i<s;i++){const r=n[i];let a=`
`;a+=this.getStructMembers(r),a+=`
`,t.push(a)}return t.join(`

`)}getVaryings(e){let t="";const n=this.varyings;if(e==="vertex"||e==="compute")for(const i of n){e==="compute"&&(i.needsInterpolation=!0);const s=this.getType(i.type),r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}${i.needsInterpolation?"out":"/*out*/"} ${s} ${i.name};
`}else if(e==="fragment"){for(const i of n)if(i.needsInterpolation){const s=this.getType(i.type),r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}in ${s} ${i.name};
`}}for(const i of this.builtins[e])t+=`${i};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,i)=>n*i,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){const i=this.extensions[n]||(this.extensions[n]=new Map);i.has(e)===!1&&i.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const i=this.renderer.backend.extensions;this.object.isBatchedMesh&&i.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const n=this.extensions[e];if(n!==void 0)for(const{name:i,behavior:s}of n.values())t.push(`#extension ${i} : ${s}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=Mg[e];if(t===void 0){let n;switch(t=!1,e){case"float32Filterable":n="OES_texture_float_linear";break;case"clipDistance":n="WEBGL_clip_cull_distance";break}if(n!==void 0){const i=this.renderer.backend.extensions;i.has(n)&&(i.get(n),t=!0)}Mg[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let n=0;n<e.length;n++){const i=e[n],s=this.getPropertyName(i.attributeNode);t+=`${i.varyingName} = ${s};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${wg}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${wg}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let n=`// code

`;n+=this.flowCode[t];const i=this.flowNodes[t],s=i[i.length-1];for(const a of i){const c=this.getFlowData(a),l=a.name;l&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${l}
	`),n+=`${c.code}
	`,a===s&&t!=="compute"&&(n+=`// result
	`,t==="vertex"?(n+="gl_Position = ",n+=`${c.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${c.result};`)))}const r=e[t];r.extensions=this.getExtensions(t),r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.vars=this.getVars(t),r.structs=this.getStructs(t),r.codes=this.getCodes(t),r.transforms=this.getTransforms(t),r.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,i=null){const s=super.getUniformFromNode(e,t,n,i),r=this.getDataFromNode(e,n,this.globalCache);let a=r.uniformGPU;if(a===void 0){const c=e.groupNode,l=c.name,u=this.getBindGroupArray(l,n);if(t==="texture")a=new ou(s.name,s.node,c),u.push(a);else if(t==="cubeTexture")a=new Tb(s.name,s.node,c),u.push(a);else if(t==="texture3D")a=new Mb(s.name,s.node,c),u.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;const h=new bb(e,c);h.name=e.name,u.push(h),a=h}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new Sb(n+"_"+l,c),h[l]=d,u.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}r.uniformGPU=a}return s}}let Rh=null,Ph=null,Fr=null;class wb{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:n}=e;return n.isInstancedBufferGeometry?n.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return Rh=Rh||new le,this.renderer.getDrawingBufferSize(Rh)}getScissor(){return Ph=Ph||new Ke,this.renderer.getScissor(Ph)}setScissorTest(){}getClearColor(){const e=this.renderer;return Fr=Fr||new np,e.getClearColor(Fr),Fr.getRGB(Fr,this.renderer.currentColorSpace),Fr}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:YS(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Rl} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let uU=0;class hU{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class dU{constructor(e){this.backend=e}createAttribute(e,t){const n=this.backend,{gl:i}=n,s=e.array,r=e.usage||i.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,c=n.get(a);let l=c.bufferGPU;l===void 0&&(l=this._createBuffer(i,t,s,r),c.bufferGPU=l,c.bufferType=t,c.version=a.version);let u;if(s instanceof Float32Array)u=i.FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?u=i.HALF_FLOAT:u=i.UNSIGNED_SHORT;else if(s instanceof Int16Array)u=i.SHORT;else if(s instanceof Uint32Array)u=i.UNSIGNED_INT;else if(s instanceof Int32Array)u=i.INT;else if(s instanceof Int8Array)u=i.BYTE;else if(s instanceof Uint8Array)u=i.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)u=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let h={bufferGPU:l,bufferType:t,type:u,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===i.INT||u===i.UNSIGNED_INT||e.gpuType===dn,id:uU++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(i,t,s,r);h=new hU(h,d)}n.set(e,h)}updateAttribute(e){const t=this.backend,{gl:n}=t,i=e.array,s=e.isInterleavedBufferAttribute?e.data:e,r=t.get(s),a=r.bufferType,c=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(a,r.bufferGPU),c.length===0)n.bufferSubData(a,0,i);else{for(let l=0,u=c.length;l<u;l++){const h=c[l];n.bufferSubData(a,h.start*i.BYTES_PER_ELEMENT,i,h.start,h.count)}s.clearUpdateRanges()}n.bindBuffer(a,null),r.version=s.version}destroyAttribute(e){const t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const i=t.get(e);n.deleteBuffer(i.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:n}=t,i=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(i),r=e.array,a=r.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,s);const c=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.bufferData(n.COPY_WRITE_BUFFER,a,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const l=new e.array.constructor(r.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,c),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(c),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,n,i){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,n,i),e.bindBuffer(t,null),s}}let Ag=!1,Dh,Ho;class fU{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},Ag===!1&&(this._init(this.gl),Ag=!0)}_init(e){Dh={[hs]:e.FUNC_ADD,[tv]:e.FUNC_SUBTRACT,[nv]:e.FUNC_REVERSE_SUBTRACT},Ho={[iv]:e.ZERO,[sv]:e.ONE,[rv]:e.SRC_COLOR,[cl]:e.SRC_ALPHA,[hv]:e.SRC_ALPHA_SATURATE,[lv]:e.DST_COLOR,[av]:e.DST_ALPHA,[ov]:e.ONE_MINUS_SRC_COLOR,[ll]:e.ONE_MINUS_SRC_ALPHA,[uv]:e.ONE_MINUS_DST_COLOR,[cv]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==jb?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===$b?t.cullFace(t.BACK):e===Xb?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,i,s,r,a,c){const{gl:l}=this;if(e===Ks){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),e!==ev){if(e!==this.currentBlending||c!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==hs||this.currentBlendEquationAlpha!==hs)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=hs,this.currentBlendEquationAlpha=hs),c)switch(e){case vs:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case rl:l.blendFunc(l.ONE,l.ONE);break;case ol:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case al:l.blendFuncSeparate(l.ZERO,l.SRC_COLOR,l.ZERO,l.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case vs:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case rl:l.blendFunc(l.SRC_ALPHA,l.ONE);break;case ol:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case al:l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=c}return}s=s||t,r=r||n,a=a||i,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(Dh[t],Dh[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(n!==this.currentBlendSrc||i!==this.currentBlendDst||r!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(Ho[n],Ho[i],Ho[r],Ho[a]),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=r,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case dv:t.depthFunc(t.NEVER);break;case fv:t.depthFunc(t.ALWAYS);break;case pv:t.depthFunc(t.LESS);break;case ul:t.depthFunc(t.LEQUAL);break;case mv:t.depthFunc(t.EQUAL);break;case gv:t.depthFunc(t.GEQUAL);break;case vv:t.depthFunc(t.GREATER);break;case _v:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==n)&&(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t,n){const{gl:i}=this;e.side===Ws?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let s=e.side===qn;t&&(s=!s),this.setFlipSided(s),e.blending===vs&&e.transparent===!1?this.setBlending(Ks):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const r=e.stencilWrite;if(this.setStencilTest(r),r&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE),n>0&&this.currentClippingPlanes!==n)for(let c=0;c<8;c++)c<n?this.enable(12288+c):this.disable(12288+c)}setPolygonOffset(e,t,n){const{gl:i}=this;e?(this.enable(i.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==n)&&(i.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(i.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){const{gl:n,currentBoundFramebuffers:i}=this;return i[e]!==t?(n.bindFramebuffer(e,t),i[e]=t,e===n.DRAW_FRAMEBUFFER&&(i[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(i[n.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:n}=this;let i=[],s=!1;if(e.textures!==null){i=this.currentDrawbuffers.get(t),i===void 0&&(i=[],this.currentDrawbuffers.set(t,i));const r=e.textures;if(i.length!==r.length||i[0]!==n.COLOR_ATTACHMENT0){for(let a=0,c=r.length;a<c;a++)i[a]=n.COLOR_ATTACHMENT0+a;i.length=r.length,s=!0}}else i[0]!==n.BACK&&(i[0]=n.BACK,s=!0);s&&n.drawBuffers(i)}activeTexture(e){const{gl:t,currentTextureSlot:n,maxTextures:i}=this;e===void 0&&(e=t.TEXTURE0+i-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){const{gl:i,currentTextureSlot:s,currentBoundTextures:r,maxTextures:a}=this;n===void 0&&(s===null?n=i.TEXTURE0+a-1:n=s);let c=r[n];c===void 0&&(c={type:void 0,texture:void 0},r[n]=c),(c.type!==e||c.texture!==t)&&(s!==n&&(i.activeTexture(n),this.currentTextureSlot=n),i.bindTexture(e,t),c.type=e,c.texture=t)}bindBufferBase(e,t,n){const{gl:i}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==n?(i.bindBufferBase(e,t,n),this.currentBoundBufferBases[s]=n,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,i=n[t];i!==void 0&&i.type!==void 0&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)}}class pU{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=er){const{gl:n,extensions:i}=this;let s;if(e===_s)return n.UNSIGNED_BYTE;if(e===cS)return n.UNSIGNED_SHORT_4_4_4_4;if(e===lS)return n.UNSIGNED_SHORT_5_5_5_1;if(e===yv)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===$o)return n.BYTE;if(e===Xo)return n.SHORT;if(e===Gr)return n.UNSIGNED_SHORT;if(e===dn)return n.INT;if(e===Zt)return n.UNSIGNED_INT;if(e===Un)return n.FLOAT;if(e===ni)return n.HALF_FLOAT;if(e===uS)return n.ALPHA;if(e===Gd)return n.RGB;if(e===Js)return n.RGBA;if(e===hS)return n.LUMINANCE;if(e===dS)return n.LUMINANCE_ALPHA;if(e===qs)return n.DEPTH_COMPONENT;if(e===ro)return n.DEPTH_STENCIL;if(e===Hd)return n.RED;if(e===Wd)return n.RED_INTEGER;if(e===ca)return n.RG;if(e===qd)return n.RG_INTEGER;if(e===jd)return n.RGBA_INTEGER;if(e===Cu||e===Xc||e===Yc||e===Zc)if(t===Re)if(s=i.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===Cu)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Xc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Yc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Zc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=i.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===Cu)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Xc)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Yc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Zc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Wp||e===qp||e===jp||e===$p)if(s=i.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===Wp)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===qp)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===jp)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===$p)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Xp||e===qh||e===jh)if(s=i.get("WEBGL_compressed_texture_etc"),s!==null){if(e===Xp||e===qh)return t===Re?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===jh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===$h||e===Xh||e===Yh||e===Zh||e===Kh||e===Qh||e===Jh||e===ed||e===td||e===nd||e===id||e===sd||e===rd||e===od)if(s=i.get("WEBGL_compressed_texture_astc"),s!==null){if(e===$h)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Xh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Yh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Zh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Kh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Qh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Jh)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===ed)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===td)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===nd)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===id)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===sd)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===rd)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===od)return t===Re?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===Eu)if(s=i.get("EXT_texture_compression_bptc"),s!==null){if(e===Eu)return t===Re?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===pS||e===Yp||e===Zp||e===Kp)if(s=i.get("EXT_texture_compression_rgtc"),s!==null){if(e===Eu)return s.COMPRESSED_RED_RGTC1_EXT;if(e===Yp)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Zp)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Kp)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===Ma?n.UNSIGNED_INT_24_8:n[e]!==void 0?n[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,i)=>{function s(){const r=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(r===e.WAIT_FAILED){e.deleteSync(t),i();return}if(r===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),n()}s()})}}let Ng=!1,Hc,Uh,Cg;class mU{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},Ng===!1&&(this._init(this.gl),Ng=!0)}_init(e){Hc={[ys]:e.REPEAT,[ms]:e.CLAMP_TO_EDGE,[so]:e.MIRRORED_REPEAT},Uh={[Wt]:e.NEAREST,[Hh]:e.NEAREST_MIPMAP_NEAREST,[Kr]:e.NEAREST_MIPMAP_LINEAR,[Jt]:e.LINEAR,[Wh]:e.LINEAR_MIPMAP_NEAREST,[ki]:e.LINEAR_MIPMAP_LINEAR},Cg={[xv]:e.NEVER,[Av]:e.ALWAYS,[$d]:e.LESS,[Sv]:e.LEQUAL,[bv]:e.EQUAL,[wv]:e.GEQUAL,[Tv]:e.GREATER,[Mv]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===Wt||e===Hh||e===Kr?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let n;return e.isCubeTexture===!0?n=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?n=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?n=t.TEXTURE_3D:n=t.TEXTURE_2D,n}getInternalFormat(e,t,n,i,s=!1){const{gl:r,extensions:a}=this;if(e!==null){if(r[e]!==void 0)return r[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let c=t;return t===r.RED&&(n===r.FLOAT&&(c=r.R32F),n===r.HALF_FLOAT&&(c=r.R16F),n===r.UNSIGNED_BYTE&&(c=r.R8),n===r.UNSIGNED_SHORT&&(c=r.R16),n===r.UNSIGNED_INT&&(c=r.R32UI),n===r.BYTE&&(c=r.R8I),n===r.SHORT&&(c=r.R16I),n===r.INT&&(c=r.R32I)),t===r.RED_INTEGER&&(n===r.UNSIGNED_BYTE&&(c=r.R8UI),n===r.UNSIGNED_SHORT&&(c=r.R16UI),n===r.UNSIGNED_INT&&(c=r.R32UI),n===r.BYTE&&(c=r.R8I),n===r.SHORT&&(c=r.R16I),n===r.INT&&(c=r.R32I)),t===r.RG&&(n===r.FLOAT&&(c=r.RG32F),n===r.HALF_FLOAT&&(c=r.RG16F),n===r.UNSIGNED_BYTE&&(c=r.RG8),n===r.UNSIGNED_SHORT&&(c=r.RG16),n===r.UNSIGNED_INT&&(c=r.RG32UI),n===r.BYTE&&(c=r.RG8I),n===r.SHORT&&(c=r.RG16I),n===r.INT&&(c=r.RG32I)),t===r.RG_INTEGER&&(n===r.UNSIGNED_BYTE&&(c=r.RG8UI),n===r.UNSIGNED_SHORT&&(c=r.RG16UI),n===r.UNSIGNED_INT&&(c=r.RG32UI),n===r.BYTE&&(c=r.RG8I),n===r.SHORT&&(c=r.RG16I),n===r.INT&&(c=r.RG32I)),t===r.RGB&&(n===r.FLOAT&&(c=r.RGB32F),n===r.HALF_FLOAT&&(c=r.RGB16F),n===r.UNSIGNED_BYTE&&(c=r.RGB8),n===r.UNSIGNED_SHORT&&(c=r.RGB16),n===r.UNSIGNED_INT&&(c=r.RGB32UI),n===r.BYTE&&(c=r.RGB8I),n===r.SHORT&&(c=r.RGB16I),n===r.INT&&(c=r.RGB32I),n===r.UNSIGNED_BYTE&&(c=i===Re&&s===!1?r.SRGB8:r.RGB8),n===r.UNSIGNED_SHORT_5_6_5&&(c=r.RGB565),n===r.UNSIGNED_SHORT_5_5_5_1&&(c=r.RGB5_A1),n===r.UNSIGNED_SHORT_4_4_4_4&&(c=r.RGB4),n===r.UNSIGNED_INT_5_9_9_9_REV&&(c=r.RGB9_E5)),t===r.RGB_INTEGER&&(n===r.UNSIGNED_BYTE&&(c=r.RGB8UI),n===r.UNSIGNED_SHORT&&(c=r.RGB16UI),n===r.UNSIGNED_INT&&(c=r.RGB32UI),n===r.BYTE&&(c=r.RGB8I),n===r.SHORT&&(c=r.RGB16I),n===r.INT&&(c=r.RGB32I)),t===r.RGBA&&(n===r.FLOAT&&(c=r.RGBA32F),n===r.HALF_FLOAT&&(c=r.RGBA16F),n===r.UNSIGNED_BYTE&&(c=r.RGBA8),n===r.UNSIGNED_SHORT&&(c=r.RGBA16),n===r.UNSIGNED_INT&&(c=r.RGBA32UI),n===r.BYTE&&(c=r.RGBA8I),n===r.SHORT&&(c=r.RGBA16I),n===r.INT&&(c=r.RGBA32I),n===r.UNSIGNED_BYTE&&(c=i===Re&&s===!1?r.SRGB8_ALPHA8:r.RGBA8),n===r.UNSIGNED_SHORT_4_4_4_4&&(c=r.RGBA4),n===r.UNSIGNED_SHORT_5_5_5_1&&(c=r.RGB5_A1)),t===r.RGBA_INTEGER&&(n===r.UNSIGNED_BYTE&&(c=r.RGBA8UI),n===r.UNSIGNED_SHORT&&(c=r.RGBA16UI),n===r.UNSIGNED_INT&&(c=r.RGBA32UI),n===r.BYTE&&(c=r.RGBA8I),n===r.SHORT&&(c=r.RGBA16I),n===r.INT&&(c=r.RGBA32I)),t===r.DEPTH_COMPONENT&&(n===r.UNSIGNED_INT&&(c=r.DEPTH24_STENCIL8),n===r.FLOAT&&(c=r.DEPTH_COMPONENT32F)),t===r.DEPTH_STENCIL&&n===r.UNSIGNED_INT_24_8&&(c=r.DEPTH24_STENCIL8),(c===r.R16F||c===r.R32F||c===r.RG16F||c===r.RG32F||c===r.RGBA16F||c===r.RGBA32F)&&a.get("EXT_color_buffer_float"),c}setTextureParameters(e,t){const{gl:n,extensions:i,backend:s}=this;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE),n.texParameteri(e,n.TEXTURE_WRAP_S,Hc[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,Hc[t.wrapT]),(e===n.TEXTURE_3D||e===n.TEXTURE_2D_ARRAY)&&n.texParameteri(e,n.TEXTURE_WRAP_R,Hc[t.wrapR]),n.texParameteri(e,n.TEXTURE_MAG_FILTER,Uh[t.magFilter]);const r=t.mipmaps!==void 0&&t.mipmaps.length>0,a=t.minFilter===Jt&&r?ki:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,Uh[a]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,Cg[t.compareFunction])),i.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Wt||t.minFilter!==Kr&&t.minFilter!==ki||t.type===Un&&i.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const c=i.get("EXT_texture_filter_anisotropic");n.texParameterf(e,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:n,defaultTextures:i}=this,s=this.getGLTextureType(e);let r=i[s];r===void 0&&(r=t.createTexture(),n.state.bindTexture(s,r),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),i[s]=r),n.set(e,{textureGPU:r,glTextureType:s,isDefault:!0})}createTexture(e,t){const{gl:n,backend:i}=this,{levels:s,width:r,height:a,depth:c}=t,l=i.utils.convert(e.format,e.colorSpace),u=i.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,l,u,e.colorSpace,e.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(e);i.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,s,h,r,a,c):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,s,h,r,a,c):e.isVideoTexture||n.texStorage2D(f,s,h,r,a),i.set(e,{textureGPU:d,glTextureType:f,glFormat:l,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){const{gl:n,backend:i}=this,{textureGPU:s,glTextureType:r,glFormat:a,glType:c}=i.get(t),{width:l,height:u}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),i.state.bindTexture(r,s),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(r,0,0,0,l,u,a,c,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),i.state.unbindTexture()}updateTexture(e,t){const{gl:n}=this,{width:i,height:s}=t,{textureGPU:r,glTextureType:a,glFormat:c,glType:l,glInternalFormat:u}=this.backend.get(e);if(e.isRenderTargetTexture||r===void 0)return;const h=d=>d.isDataTexture?d.image.data:typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&d instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&d instanceof ImageBitmap||d instanceof OffscreenCanvas?d:d.data;if(this.backend.state.bindTexture(a,r),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,f=t.image;for(let p=0;p<d.length;p++){const m=d[p];e.isCompressedArrayTexture?e.format!==n.RGBA?c!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,c,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,c,l,m.data):c!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,p,0,0,m.width,m.height,c,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let f=0;f<6;f++){const p=h(d[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,i,s,c,l,p)}}else if(e.isDataArrayTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,c,l,d.data)}else if(e.isData3DTexture){const d=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,c,l,d.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(a,0,u,c,l,t.image);else{const d=h(t.image);n.texSubImage2D(a,0,0,0,i,s,c,l,d)}}generateMipmaps(e){const{gl:t,backend:n}=this,{textureGPU:i,glTextureType:s}=n.get(e);n.state.bindTexture(s,i),t.generateMipmap(s)}deallocateRenderBuffers(e){const{gl:t,backend:n}=this;if(e){const i=n.get(e);if(i.renderBufferStorageSetup=void 0,i.framebuffers){for(const s in i.framebuffers)t.deleteFramebuffer(i.framebuffers[s]);delete i.framebuffers}if(i.depthRenderbuffer&&(t.deleteRenderbuffer(i.depthRenderbuffer),delete i.depthRenderbuffer),i.stencilRenderbuffer&&(t.deleteRenderbuffer(i.stencilRenderbuffer),delete i.stencilRenderbuffer),i.msaaFrameBuffer&&(t.deleteFramebuffer(i.msaaFrameBuffer),delete i.msaaFrameBuffer),i.msaaRenderbuffers){for(let s=0;s<i.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(i.msaaRenderbuffers[s]);delete i.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:n}=this,{textureGPU:i,renderTarget:s}=n.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(i),n.delete(e)}copyTextureToTexture(e,t,n=null,i=null,s=0){const{gl:r,backend:a}=this,{state:c}=this.backend,{textureGPU:l,glTextureType:u,glType:h,glFormat:d}=a.get(t);let f,p,m,g,_,x;n!==null?(f=n.max.x-n.min.x,p=n.max.y-n.min.y,m=n.min.x,g=n.min.y):(f=e.image.width,p=e.image.height,m=0,g=0),i!==null?(_=i.x,x=i.y):(_=0,x=0),c.bindTexture(u,l),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment);const y=r.getParameter(r.UNPACK_ROW_LENGTH),b=r.getParameter(r.UNPACK_IMAGE_HEIGHT),M=r.getParameter(r.UNPACK_SKIP_PIXELS),N=r.getParameter(r.UNPACK_SKIP_ROWS),T=r.getParameter(r.UNPACK_SKIP_IMAGES),w=e.isCompressedTexture?e.mipmaps[s]:e.image;if(r.pixelStorei(r.UNPACK_ROW_LENGTH,w.width),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,w.height),r.pixelStorei(r.UNPACK_SKIP_PIXELS,m),r.pixelStorei(r.UNPACK_SKIP_ROWS,g),e.isRenderTargetTexture||e.isDepthTexture){const L=a.get(e),I=a.get(t),W=a.get(L.renderTarget),D=a.get(I.renderTarget),k=W.framebuffers[L.cacheKey],O=D.framebuffers[I.cacheKey];c.bindFramebuffer(r.READ_FRAMEBUFFER,k),c.bindFramebuffer(r.DRAW_FRAMEBUFFER,O);let te=r.COLOR_BUFFER_BIT;e.isDepthTexture&&(te=r.DEPTH_BUFFER_BIT),r.blitFramebuffer(m,g,f,p,_,x,f,p,te,r.NEAREST),c.bindFramebuffer(r.READ_FRAMEBUFFER,null),c.bindFramebuffer(r.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?r.texSubImage2D(r.TEXTURE_2D,s,_,x,f,p,d,h,w.data):e.isCompressedTexture?r.compressedTexSubImage2D(r.TEXTURE_2D,s,_,x,w.width,w.height,d,w.data):r.texSubImage2D(r.TEXTURE_2D,s,_,x,f,p,d,h,w);r.pixelStorei(r.UNPACK_ROW_LENGTH,y),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,b),r.pixelStorei(r.UNPACK_SKIP_PIXELS,M),r.pixelStorei(r.UNPACK_SKIP_ROWS,N),r.pixelStorei(r.UNPACK_SKIP_IMAGES,T),s===0&&t.generateMipmaps&&r.generateMipmap(r.TEXTURE_2D),c.unbindTexture()}copyFramebufferToTexture(e,t,n){const{gl:i}=this,{state:s}=this.backend,{textureGPU:r}=this.backend.get(e),{x:a,y:c,z:l,w:u}=n,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(h){const f=a!==0||c!==0;let p,m;if(e.isDepthTexture===!0?(p=i.DEPTH_BUFFER_BIT,m=i.DEPTH_ATTACHMENT,t.stencil&&(p|=i.STENCIL_BUFFER_BIT)):(p=i.COLOR_BUFFER_BIT,m=i.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),_=g.framebuffers[t.getCacheKey()],x=g.msaaFrameBuffer;s.bindFramebuffer(i.DRAW_FRAMEBUFFER,_),s.bindFramebuffer(i.READ_FRAMEBUFFER,x);const y=d-c-u;i.blitFramebuffer(a,y,a+l,y+u,a,y,a+l,y+u,p,i.NEAREST),s.bindFramebuffer(i.READ_FRAMEBUFFER,_),s.bindTexture(i.TEXTURE_2D,r),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,y,l,u),s.unbindTexture()}else{const g=i.createFramebuffer();s.bindFramebuffer(i.DRAW_FRAMEBUFFER,g),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,m,i.TEXTURE_2D,r,0),i.blitFramebuffer(0,0,l,u,0,0,l,u,p,i.NEAREST),i.deleteFramebuffer(g)}}else s.bindTexture(i.TEXTURE_2D,r),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,a,d-u-c,l,u),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:n}=this,i=t.renderTarget,{samples:s,depthTexture:r,depthBuffer:a,stencilBuffer:c,width:l,height:u}=i;if(n.bindRenderbuffer(n.RENDERBUFFER,e),a&&!c){let h=n.DEPTH_COMPONENT24;s>0?(r&&r.isDepthTexture&&r.type===n.FLOAT&&(h=n.DEPTH_COMPONENT32F),n.renderbufferStorageMultisample(n.RENDERBUFFER,s,h,l,u)):n.renderbufferStorage(n.RENDERBUFFER,h,l,u),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,e)}else a&&c&&(s>0?n.renderbufferStorageMultisample(n.RENDERBUFFER,s,n.DEPTH24_STENCIL8,l,u):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,l,u),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,n,i,s,r){const{backend:a,gl:c}=this,{textureGPU:l,glFormat:u,glType:h}=this.backend.get(e),d=c.createFramebuffer();c.bindFramebuffer(c.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?c.TEXTURE_CUBE_MAP_POSITIVE_X+r:c.TEXTURE_2D;c.framebufferTexture2D(c.READ_FRAMEBUFFER,c.COLOR_ATTACHMENT0,f,l,0);const p=this._getTypedArrayType(h),m=this._getBytesPerTexel(h,u),_=i*s*m,x=c.createBuffer();c.bindBuffer(c.PIXEL_PACK_BUFFER,x),c.bufferData(c.PIXEL_PACK_BUFFER,_,c.STREAM_READ),c.readPixels(t,n,i,s,u,h,0),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const y=new p(_/p.BYTES_PER_ELEMENT);return c.bindBuffer(c.PIXEL_PACK_BUFFER,x),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,y),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),c.deleteFramebuffer(d),y}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:n}=this;let i=0;if(e===n.UNSIGNED_BYTE&&(i=1),(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT||e===n.HALF_FLOAT)&&(i=2),(e===n.UNSIGNED_INT||e===n.FLOAT)&&(i=4),t===n.RGBA)return i*4;if(t===n.RGB)return i*3;if(t===n.ALPHA)return i}}class gU{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class vU{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Eg={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class _U{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:n,mode:i,object:s,type:r,info:a,index:c}=this;c!==0?n.drawElements(i,t,r,e):n.drawArrays(i,e,t),a.update(s,t,i,1)}renderInstances(e,t,n){const{gl:i,mode:s,type:r,index:a,object:c,info:l}=this;n!==0&&(a!==0?i.drawElementsInstanced(s,t,r,e,n):i.drawArraysInstanced(s,e,t,n),l.update(c,t,s,n))}renderMultiDraw(e,t,n){const{extensions:i,mode:s,object:r,info:a}=this;if(n===0)return;const c=i.get("WEBGL_multi_draw");if(c===null)for(let l=0;l<n;l++)this.render(e[l],t[l]);else{this.index!==0?c.multiDrawElementsWEBGL(s,t,0,this.type,e,0,n):c.multiDrawArraysWEBGL(s,e,0,t,0,n);let l=0;for(let u=0;u<n;u++)l+=t[u];a.update(r,l,s,1)}}renderMultiDrawInstances(e,t,n,i){const{extensions:s,mode:r,object:a,info:c}=this;if(n===0)return;const l=s.get("WEBGL_multi_draw");if(l===null)for(let u=0;u<n;u++)this.renderInstances(e[u],t[u],i[u]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(r,t,0,this.type,e,0,i,0,n):l.multiDrawArraysInstancedWEBGL(r,e,0,t,0,i,0,n);let u=0;for(let h=0;h<n;h++)u+=t[h]*i[h];c.update(a,u,r,1)}}}class Rg extends wb{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,n=t.context!==void 0?t.context:e.domElement.getContext("webgl2");function i(s){s.preventDefault();const r={api:"WebGL",message:s.statusMessage||"Unknown reason",reason:null,originalEvent:s};e.onDeviceLost(r)}this._onContextLost=i,e.domElement.addEventListener("webglcontextlost",i,!1),this.gl=n,this.extensions=new gU(this),this.capabilities=new vU(this),this.attributeUtils=new dU(this),this.textureUtils=new mU(this),this.bufferRenderer=new _U(this),this.state=new fU(this),this.utils=new pU(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=t.trackTimestamp===!0,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return ei}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning){t.queryQueue||(t.queryQueue=[]),t.queryQueue.push(e);return}t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),t.activeQuery!==null&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const n=t.queryQueue.shift();this.initTimestampQuery(n)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const n=this.get(e);n.gpuQueries||(n.gpuQueries=[]);for(let i=0;i<n.gpuQueries.length;i++){const s=n.gpuQueries[i],r=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT_AVAILABLE),a=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(r&&!a){const c=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT),l=Number(c)/1e6;this.gl.deleteQuery(s.query),n.gpuQueries.splice(i,1),i--,this.renderer.info.updateTimestamp(t,l)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,n=this.get(e);if(this.initTimestampQuery(e),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:a,height:c}=e.scissorValue;t.scissor(s,e.height-c-r,a,c)}const i=e.occlusionQueryCount;i>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(i),n.occlusionQueryObjects=new Array(i),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:n}=this,i=this.get(e),s=i.previousContext,r=e.occlusionQueryCount;r>0&&(r>i.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let c=0;c<a.length;c++){const l=a[c];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=s,e.textures!==null&&e.renderTarget){const c=this.get(e.renderTarget),{samples:l}=e.renderTarget;if(l>0){const u=c.framebuffers[e.getCacheKey()],h=t.COLOR_BUFFER_BIT,d=c.msaaFrameBuffer,f=e.textures;n.bindFramebuffer(t.READ_FRAMEBUFFER,d),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u);for(let p=0;p<f.length;p++)if(e.scissor){const{x:m,y:g,width:_,height:x}=e.scissorValue,y=e.height-x-g;t.blitFramebuffer(m,y,m+_,y+x,m,y,m+_,y+x,h,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,c.invalidationArray,m,y,_,x)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,h,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,c.invalidationArray)}}s!==null&&(this._setFramebuffer(s),s.viewport?this.updateViewport(s):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const s=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let c=0;for(let l=0;l<n.length;l++){const u=n[l];u!==null&&r.getQueryParameter(u,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(u,r.QUERY_RESULT)>0&&s.add(i[l]),n[l]=null,r.deleteQuery(u),c++)}c<n.length?requestAnimationFrame(a):t.occluded=s};a()}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){const t=this.gl,{x:n,y:i,width:s,height:r}=e.viewportValue;t.viewport(n,e.height-r-i,s,r)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,n,i=null,s=!0){const{gl:r}=this;if(i===null){const c=this.getClearColor();c.r*=c.a,c.g*=c.a,c.b*=c.a,i={textures:null,clearColorValue:c}}let a=0;if(e&&(a|=r.COLOR_BUFFER_BIT),t&&(a|=r.DEPTH_BUFFER_BIT),n&&(a|=r.STENCIL_BUFFER_BIT),a!==0){let c;if(i.clearColorValue?c=i.clearColorValue:(c=this.getClearColor(),c.r*=c.a,c.g*=c.a,c.b*=c.a),t&&this.state.setDepthMask(!0),i.textures===null)r.clearColor(c.r,c.g,c.b,c.a),r.clear(a);else{if(s&&this._setFramebuffer(i),e)for(let l=0;l<i.textures.length;l++)r.clearBufferfv(r.COLOR,l,[c.r,c.g,c.b,c.a]);t&&n?r.clearBufferfi(r.DEPTH_STENCIL,0,1,0):t?r.clearBufferfv(r.DEPTH,0,[1]):n&&r.clearBufferiv(r.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:n}=this;t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,n,i){const{state:s,gl:r}=this;this.discard||(r.enable(r.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:c,attributes:l}=this.get(i),u=this._getVaoKey(null,l),h=this.vaoCache[u];h===void 0?this._createVao(null,l):r.bindVertexArray(h),s.useProgram(a),this._bindUniforms(n);const d=this._getTransformFeedback(c);r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,d),r.beginTransformFeedback(r.POINTS),l[0].isStorageInstancedBufferAttribute?r.drawArraysInstanced(r.POINTS,0,1,t.count):r.drawArrays(r.POINTS,0,t.count),r.endTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null);for(let f=0;f<c.length;f++){const p=c[f];p.pbo&&this.textureUtils.copyBufferToTexture(p.transformBuffer,p.pbo),p.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:n,material:i,context:s,hardwareClippingPlanes:r}=e,{programGPU:a}=this.get(n),{gl:c,state:l}=this,u=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(i,d,r),l.useProgram(a);const f=this.get(e);let p=f.staticVao;if(p===void 0||f.geometryId!==e.geometry.id){const M=this._getVaoKey(e.getIndex(),e.getAttributes());if(p=this.vaoCache[M],p===void 0){let N;({vaoGPU:p,staticVao:N}=this._createVao(e.getIndex(),e.getAttributes())),N&&(f.staticVao=p,f.geometryId=e.geometry.id)}}c.bindVertexArray(p);const m=e.getIndex(),g=u.lastOcclusionObject;if(g!==t&&g!==void 0){if(g!==null&&g.occlusionTest===!0&&(c.endQuery(c.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),t.occlusionTest===!0){const M=c.createQuery();c.beginQuery(c.ANY_SAMPLES_PASSED,M),u.occlusionQueries[u.occlusionQueryIndex]=M,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const _=this.bufferRenderer;t.isPoints?_.mode=c.POINTS:t.isLineSegments?_.mode=c.LINES:t.isLine?_.mode=c.LINE_STRIP:t.isLineLoop?_.mode=c.LINE_LOOP:i.wireframe===!0?(l.setLineWidth(i.wireframeLinewidth*this.renderer.getPixelRatio()),_.mode=c.LINES):_.mode=c.TRIANGLES;const{vertexCount:x,instanceCount:y}=h;let{firstVertex:b}=h;if(_.object=t,m!==null){b*=m.array.BYTES_PER_ELEMENT;const M=this.get(m);_.index=m.count,_.type=M.type}else _.index=0;t.isBatchedMesh?t._multiDrawInstances!==null?_.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?_.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):ZS("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):y>1?_.renderInstances(b,x,y):_.render(b,x),c.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,n,i,s,r){return this.textureUtils.copyTextureToBuffer(e,t,n,i,s,r)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new lU(e,t)}createProgram(e){const t=this.gl,{stage:n,code:i}=e,s=n==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,i),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const n=this.gl,i=e.pipeline,{fragmentProgram:s,vertexProgram:r}=i,a=n.createProgram(),c=this.get(s).shaderGPU,l=this.get(r).shaderGPU;if(n.attachShader(a,c),n.attachShader(a,l),n.linkProgram(a),this.set(i,{programGPU:a,fragmentShader:c,vertexShader:l}),t!==null&&this.parallel){const u=new Promise(h=>{const d=this.parallel,f=()=>{n.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,i),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,i)}_handleSource(e,t){const n=e.split(`
`),i=[],s=Math.max(t-6,0),r=Math.min(t+6,n.length);for(let a=s;a<r;a++){const c=a+1;i.push(`${c===t?">":" "} ${c}: ${n[a]}`)}return i.join(`
`)}_getShaderErrors(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(i&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return n.toUpperCase()+`

`+s+`

`+this._handleSource(e.getShaderSource(t),a)}else return s}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){const i=this.gl,s=i.getProgramInfoLog(e).trim();if(i.getProgramParameter(e,i.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(i,e,n,t);else{const r=this._getShaderErrors(i,n,"vertex"),a=this._getShaderErrors(i,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(e,i.VALIDATE_STATUS)+`

Program Info Log: `+s+`
`+r+`
`+a)}else s!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",s)}}_completeCompile(e,t){const{state:n,gl:i}=this,s=this.get(t),{programGPU:r,fragmentShader:a,vertexShader:c}=s;i.getProgramParameter(r,i.LINK_STATUS)===!1&&this._logProgramError(r,a,c),n.useProgram(r);const l=e.getBindings();this._setupBindings(l,r),this.set(t,{programGPU:r})}createComputePipeline(e,t){const{state:n,gl:i}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);const{computeProgram:r}=e,a=i.createProgram(),c=this.get(s).shaderGPU,l=this.get(r).shaderGPU,u=r.transforms,h=[],d=[];for(let g=0;g<u.length;g++){const _=u[g];h.push(_.varyingName),d.push(_.attributeNode)}i.attachShader(a,c),i.attachShader(a,l),i.transformFeedbackVaryings(a,h,i.SEPARATE_ATTRIBS),i.linkProgram(a),i.getProgramParameter(a,i.LINK_STATUS)===!1&&this._logProgramError(a,c,l),n.useProgram(a),this._setupBindings(t,a);const f=r.attributes,p=[],m=[];for(let g=0;g<f.length;g++){const _=f[g].node.attribute;p.push(_),this.has(_)||this.attributeUtils.createAttribute(_,i.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const _=d[g].attribute;this.has(_)||this.attributeUtils.createAttribute(_,i.ARRAY_BUFFER);const x=this.get(_);m.push(x)}this.set(e,{programGPU:a,transformBuffers:m,attributes:p})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let n=0,i=0;for(const s of t){this.set(s,{textures:i,uniformBuffers:n});for(const r of s.bindings)r.isUniformBuffer&&n++,r.isSampledTexture&&i++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,n=this.get(e);let i=n.uniformBuffers,s=n.textures;for(const r of e.bindings)if(r.isUniformsGroup||r.isUniformBuffer){const a=r.buffer,c=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,c),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(r,{index:i++,bufferGPU:c})}else if(r.isSampledTexture){const{textureGPU:a,glTextureType:c}=this.get(r.texture);this.set(r,{index:s++,textureGPU:a,glTextureType:c})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const i=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(Eg).filter(i=>Eg[i]===e),n=this.extensions;for(let i=0;i<t.length;i++)if(n.has(t[i]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n,i,s){this.textureUtils.copyTextureToTexture(e,t,n,i,s)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){const{gl:t,state:n}=this;let i=null;if(e.textures!==null){const s=e.renderTarget,r=this.get(s),{samples:a,depthBuffer:c,stencilBuffer:l}=s,u=s.isWebGLCubeRenderTarget===!0;let h=r.msaaFrameBuffer,d=r.depthRenderbuffer;const f=yx(e);let p;if(u?(r.cubeFramebuffers||(r.cubeFramebuffers={}),p=r.cubeFramebuffers[f]):(r.framebuffers||(r.framebuffers={}),p=r.framebuffers[f]),p===void 0){p=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,p);const m=e.textures;if(u){r.cubeFramebuffers[f]=p;const{textureGPU:g}=this.get(m[0]),_=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+_,g,0)}else{r.framebuffers[f]=p;for(let g=0;g<m.length;g++){const _=m[g],x=this.get(_);x.renderTarget=e.renderTarget,x.cacheKey=f;const y=t.COLOR_ATTACHMENT0+g;t.framebufferTexture2D(t.FRAMEBUFFER,y,t.TEXTURE_2D,x.textureGPU,0)}n.drawBuffers(e,p)}if(e.depthTexture!==null){const g=this.get(e.depthTexture),_=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;g.renderTarget=e.renderTarget,g.cacheKey=f,t.framebufferTexture2D(t.FRAMEBUFFER,_,t.TEXTURE_2D,g.textureGPU,0)}}if(a>0){if(h===void 0){const m=[];h=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,h);const g=[],_=e.textures;for(let x=0;x<_.length;x++){if(g[x]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,g[x]),m.push(t.COLOR_ATTACHMENT0+x),c){const M=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;m.push(M)}const y=e.textures[x],b=this.get(y);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,b.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+x,t.RENDERBUFFER,g[x])}if(r.msaaFrameBuffer=h,r.msaaRenderbuffers=g,d===void 0){d=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(d,e),r.depthRenderbuffer=d;const x=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;m.push(x)}r.invalidationArray=m}i=r.msaaFrameBuffer}else i=p}n.bindFramebuffer(t.FRAMEBUFFER,i)}_getVaoKey(e,t){let n=[];if(e!==null){const i=this.get(e);n+=":"+i.id}for(let i=0;i<t.length;i++){const s=this.get(t[i]);n+=":"+s.id}return n}_createVao(e,t){const{gl:n}=this,i=n.createVertexArray();let s="",r=!0;if(n.bindVertexArray(i),e!==null){const a=this.get(e);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a.bufferGPU),s+=":"+a.id}for(let a=0;a<t.length;a++){const c=t[a],l=this.get(c);s+=":"+l.id,n.bindBuffer(n.ARRAY_BUFFER,l.bufferGPU),n.enableVertexAttribArray(a),(c.isStorageBufferAttribute||c.isStorageInstancedBufferAttribute)&&(r=!1);let u,h;c.isInterleavedBufferAttribute===!0?(u=c.data.stride*l.bytesPerElement,h=c.offset*l.bytesPerElement):(u=0,h=0),l.isInteger?n.vertexAttribIPointer(a,c.itemSize,l.type,u,h):n.vertexAttribPointer(a,c.itemSize,l.type,c.normalized,u,h),c.isInstancedBufferAttribute&&!c.isInterleavedBufferAttribute?n.vertexAttribDivisor(a,c.meshPerAttribute):c.isInterleavedBufferAttribute&&c.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(a,c.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),this.vaoCache[s]=i,{vaoGPU:i,staticVao:r}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let n=this.transformFeedbackCache[t];if(n!==void 0)return n;const{gl:i}=this;n=i.createTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,n);for(let s=0;s<e.length;s++){const r=e[s];i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,s,r.transformBuffer)}return i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){const n=this.gl;for(const i of e)for(const s of i.bindings){const a=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){const c=n.getUniformBlockIndex(t,s.name);n.uniformBlockBinding(t,c,a)}else if(s.isSampledTexture){const c=n.getUniformLocation(t,s.name);n.uniform1i(c,a)}}}_bindUniforms(e){const{gl:t,state:n}=this;for(const i of e)for(const s of i.bindings){const r=this.get(s),a=r.index;s.isUniformsGroup||s.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,a,r.bufferGPU):s.isSampledTexture&&n.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+a)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const Xr={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},$t={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Yt={Store:"store",Discard:"discard"},Lt={Load:"load",Clear:"clear"},Lh={CCW:"ccw",CW:"cw"},Fh={None:"none",Front:"front",Back:"back"},uo={Uint16:"uint16",Uint32:"uint32"},E={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Ih={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},zs={Linear:"linear",Nearest:"nearest"},Be={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Is={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},Pg={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},ls={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},Bh={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},Oh={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},Wo={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},Dg={OneD:"1d",TwoD:"2d",ThreeD:"3d"},kn={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},yU={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},Wc={Vertex:"vertex",Instance:"instance"},Ud={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class xU extends _p{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class bU extends xU{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){this.texture=this.textureNode.value}}class SU extends yb{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let TU=0;class MU extends SU{constructor(e,t){super("StorageBuffer_"+TU++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:rn.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class wU extends As{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:zs.Linear}),this.flipYSampler=e.createSampler({minFilter:zs.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:i})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Xr.TriangleStrip,stripIndexFormat:uo.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Xr.TriangleStrip,stripIndexFormat:uo.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){const i=t.format,{width:s,height:r}=t.size,a=this.getTransferPipeline(i),c=this.getFlipYPipeline(i),l=this.device.createTexture({size:{width:s,height:r,depthOrArrayLayers:1},format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:kn.TwoD,baseArrayLayer:n}),h=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:kn.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,m,g)=>{const _=p.getBindGroupLayout(0),x=this.device.createBindGroup({layout:_,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:m}]}),y=d.beginRenderPass({colorAttachments:[{view:g,loadOp:Lt.Clear,storeOp:Yt.Store,clearValue:[0,0,0,0]}]});y.setPipeline(p),y.setBindGroup(0,x),y.draw(4,1,0,0),y.end()};f(a,u,h),f(c,h,u),this.device.queue.submit([d.finish()]),l.destroy()}generateMipmaps(e,t,n=0){const i=this.get(e);i.useCount===void 0&&(i.useCount=0,i.layers=[]);const s=i.layers[n]||this._mipmapCreateBundles(e,t,n),r=this.device.createCommandEncoder({});this._mipmapRunBundles(r,s),this.device.queue.submit([r.finish()]),i.useCount!==0&&(i.layers[n]=s),i.useCount++}_mipmapCreateBundles(e,t,n){const i=this.getTransferPipeline(t.format),s=i.getBindGroupLayout(0);let r=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:kn.TwoD,baseArrayLayer:n});const a=[];for(let c=1;c<t.mipLevelCount;c++){const l=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:r}]}),u=e.createView({baseMipLevel:c,mipLevelCount:1,dimension:kn.TwoD,baseArrayLayer:n}),h={colorAttachments:[{view:u,loadOp:Lt.Clear,storeOp:Yt.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(i),d.setBindGroup(0,l),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:h}),r=u}return a}_mipmapRunBundles(e,t){const n=t.length;for(let i=0;i<n;i++){const s=t[i],r=e.beginRenderPass(s.passDescriptor);r.executeBundles(s.renderBundles),r.end()}}}const AU={[xv]:"never",[$d]:"less",[bv]:"equal",[Sv]:"less-equal",[Tv]:"greater",[wv]:"greater-equal",[Av]:"always",[Mv]:"not-equal"},NU=[0,1,3,2,4,5];class CU{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new or,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,n=t.device,i=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};s.magFilter===zs.Linear&&s.minFilter===zs.Linear&&s.mipmapFilter===zs.Linear&&(s.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(s.compare=AU[e.compareFunction]),i.sampler=n.createSampler(s)}createDefaultTexture(e){let t;const n=Ld(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(n):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){const n=this.backend,i=n.get(e);if(i.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:s,height:r,depth:a,levels:c}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),u=e.internalFormat||t.format||Ld(e,n.device);i.format=u;let h=t.sampleCount!==void 0?t.sampleCount:1;h=n.utils.getSampleCount(h);const d=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:h;let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:s,height:r,depthOrArrayLayers:a},mipLevelCount:c,sampleCount:d,dimension:l,format:u,usage:f};if(e.isVideoTexture){const m=e.source.data,g=new VideoFrame(m);p.size.width=g.displayWidth,p.size.height=g.displayHeight,g.close(),i.externalTexture=m}else{if(u===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);i.texture=n.device.createTexture(p)}if(e.isRenderTargetTexture&&h>1&&!e.isMultisampleRenderTargetTexture){const m=Object.assign({},p);m.label=m.label+"-msaa",m.sampleCount=h,i.msaaTexture=n.device.createTexture(m)}i.initialized=!0,i.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,n=t.get(e);n.texture!==void 0&&n.texture.destroy(),n.msaaTexture!==void 0&&n.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const n=this.backend.get(e);delete n.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n);else{const n=e.image.depth||1;for(let i=0;i<n;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:n}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:n,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const n=this.backend,{width:i,height:s}=n.getDrawingBufferSize(),r=this.depthTexture,a=n.get(r).texture;let c,l;if(t?(c=ro,l=Ma):e&&(c=qs,l=Zt),a!==void 0){if(r.image.width===i&&r.image.height===s&&r.format===c&&r.type===l)return a;this.destroyTexture(r)}return r.name="depthBuffer",r.format=c,r.type=l,r.image.width=i,r.image.height=s,this.createTexture(r,{sampleCount:n.utils.getSampleCount(n.renderer.samples),width:i,height:s}),n.get(r).texture}updateTexture(e,t){const n=this.backend.get(e),{textureDescriptorGPU:i}=n;if(!(e.isRenderTargetTexture||i===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,n.texture,i,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,n.texture,i,s,e.flipY,s);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,i);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,n.texture,i,e.flipY);else if(e.isVideoTexture){const s=e.source.data;n.externalTexture=s}else this._copyImageToTexture(t.image,n.texture,i,0,e.flipY);n.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,n,i,s,r){const a=this.backend.device,c=this.backend.get(e),l=c.texture,u=c.textureDescriptorGPU.format,h=this._getBytesPerTexel(u);let d=i*h;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:i*s*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:l,origin:{x:t,y:n,z:r}},{buffer:f,bytesPerRow:d},{width:i,height:s});const m=this._getTypedArrayType(u);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new m(g)}_isEnvironmentTexture(e){const t=e.mapping;return t===Sa||t===Ta||t===Qs||t===io}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new qt;n.minFilter=Wt,n.magFilter=Wt,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const n=new Kd;n.minFilter=Wt,n.magFilter=Wt,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,n,i){for(let s=0;s<6;s++){const r=e[s],a=i===!0?NU[s]:s;r.isDataTexture?this._copyBufferToTexture(r.image,t,n,a,i):this._copyImageToTexture(r,t,n,a,i)}}_copyImageToTexture(e,t,n,i,s){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:i}},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,n,i)}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new wU(this.backend.device)),e}_generateMipmaps(e,t,n=0){this._getPassUtils().generateMipmaps(e,t,n)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,i,s,r=0){const a=this.backend.device,c=e.data,l=this._getBytesPerTexel(n.format),u=e.width*l;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:i}},c,{offset:e.width*e.height*l*r,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,n,i)}_copyCompressedBufferToTexture(e,t,n){const i=this.backend.device,s=this._getBlockData(n.format),r=n.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const c=e[a],l=c.width,u=c.height,h=r?n.size.depthOrArrayLayers:1,d=Math.ceil(l/s.width)*s.byteLength,f=d*Math.ceil(u/s.height);for(let p=0;p<h;p++)i.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:p}},c.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/s.height)},{width:Math.ceil(l/s.width)*s.width,height:Math.ceil(u/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===E.BC1RGBAUnorm||e===E.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===E.BC2RGBAUnorm||e===E.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===E.BC3RGBAUnorm||e===E.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===E.BC4RUnorm||e===E.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===E.BC5RGUnorm||e===E.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===E.BC6HRGBUFloat||e===E.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===E.BC7RGBAUnorm||e===E.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===E.ETC2RGB8Unorm||e===E.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===E.ETC2RGB8A1Unorm||e===E.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===E.ETC2RGBA8Unorm||e===E.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===E.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===E.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===E.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===E.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===E.ASTC4x4Unorm||e===E.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===E.ASTC5x4Unorm||e===E.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===E.ASTC5x5Unorm||e===E.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===E.ASTC6x5Unorm||e===E.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===E.ASTC6x6Unorm||e===E.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===E.ASTC8x5Unorm||e===E.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===E.ASTC8x6Unorm||e===E.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===E.ASTC8x8Unorm||e===E.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===E.ASTC10x5Unorm||e===E.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===E.ASTC10x6Unorm||e===E.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===E.ASTC10x8Unorm||e===E.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===E.ASTC10x10Unorm||e===E.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===E.ASTC12x10Unorm||e===E.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===E.ASTC12x12Unorm||e===E.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Ih.ClampToEdge;return e===ys?t=Ih.Repeat:e===so&&(t=Ih.MirrorRepeat),t}_convertFilterMode(e){let t=zs.Linear;return(e===Wt||e===Hh||e===Kr)&&(t=zs.Nearest),t}_getBytesPerTexel(e){if(e===E.R8Unorm||e===E.R8Snorm||e===E.R8Uint||e===E.R8Sint)return 1;if(e===E.R16Uint||e===E.R16Sint||e===E.R16Float||e===E.RG8Unorm||e===E.RG8Snorm||e===E.RG8Uint||e===E.RG8Sint)return 2;if(e===E.R32Uint||e===E.R32Sint||e===E.R32Float||e===E.RG16Uint||e===E.RG16Sint||e===E.RG16Float||e===E.RGBA8Unorm||e===E.RGBA8UnormSRGB||e===E.RGBA8Snorm||e===E.RGBA8Uint||e===E.RGBA8Sint||e===E.BGRA8Unorm||e===E.BGRA8UnormSRGB||e===E.RGB9E5UFloat||e===E.RGB10A2Unorm||e===E.RG11B10UFloat||e===E.Depth32Float||e===E.Depth24Plus||e===E.Depth24PlusStencil8||e===E.Depth32FloatStencil8)return 4;if(e===E.RG32Uint||e===E.RG32Sint||e===E.RG32Float||e===E.RGBA16Uint||e===E.RGBA16Sint||e===E.RGBA16Float)return 8;if(e===E.RGBA32Uint||e===E.RGBA32Sint||e===E.RGBA32Float)return 16}_getTypedArrayType(e){if(e===E.R8Uint)return Uint8Array;if(e===E.R8Sint)return Int8Array;if(e===E.R8Unorm)return Uint8Array;if(e===E.R8Snorm)return Int8Array;if(e===E.RG8Uint)return Uint8Array;if(e===E.RG8Sint)return Int8Array;if(e===E.RG8Unorm)return Uint8Array;if(e===E.RG8Snorm)return Int8Array;if(e===E.RGBA8Uint)return Uint8Array;if(e===E.RGBA8Sint)return Int8Array;if(e===E.RGBA8Unorm)return Uint8Array;if(e===E.RGBA8Snorm)return Int8Array;if(e===E.R16Uint)return Uint16Array;if(e===E.R16Sint)return Int16Array;if(e===E.RG16Uint)return Uint16Array;if(e===E.RG16Sint)return Int16Array;if(e===E.RGBA16Uint)return Uint16Array;if(e===E.RGBA16Sint)return Int16Array;if(e===E.R16Float||e===E.RG16Float||e===E.RGBA16Float)return Uint16Array;if(e===E.R32Uint)return Uint32Array;if(e===E.R32Sint)return Int32Array;if(e===E.R32Float)return Float32Array;if(e===E.RG32Uint)return Uint32Array;if(e===E.RG32Sint)return Int32Array;if(e===E.RG32Float)return Float32Array;if(e===E.RGBA32Uint)return Uint32Array;if(e===E.RGBA32Sint)return Int32Array;if(e===E.RGBA32Float)return Float32Array;if(e===E.BGRA8Unorm||e===E.BGRA8UnormSRGB)return Uint8Array;if(e===E.RGB10A2Unorm||e===E.RGB9E5UFloat||e===E.RG11B10UFloat)return Uint32Array;if(e===E.Depth32Float)return Float32Array;if(e===E.Depth24Plus||e===E.Depth24PlusStencil8)return Uint32Array;if(e===E.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=Dg.ThreeD:t=Dg.TwoD,t}}function Ld(o,e=null){const t=o.format,n=o.type,i=o.colorSpace;let s;if(o.isCompressedTexture===!0||o.isCompressedArrayTexture===!0)switch(t){case Xc:s=i===Re?E.BC1RGBAUnormSRGB:E.BC1RGBAUnorm;break;case Yc:s=i===Re?E.BC2RGBAUnormSRGB:E.BC2RGBAUnorm;break;case Zc:s=i===Re?E.BC3RGBAUnormSRGB:E.BC3RGBAUnorm;break;case qh:s=i===Re?E.ETC2RGB8UnormSRGB:E.ETC2RGB8Unorm;break;case jh:s=i===Re?E.ETC2RGBA8UnormSRGB:E.ETC2RGBA8Unorm;break;case $h:s=i===Re?E.ASTC4x4UnormSRGB:E.ASTC4x4Unorm;break;case Xh:s=i===Re?E.ASTC5x4UnormSRGB:E.ASTC5x4Unorm;break;case Yh:s=i===Re?E.ASTC5x5UnormSRGB:E.ASTC5x5Unorm;break;case Zh:s=i===Re?E.ASTC6x5UnormSRGB:E.ASTC6x5Unorm;break;case Kh:s=i===Re?E.ASTC6x6UnormSRGB:E.ASTC6x6Unorm;break;case Qh:s=i===Re?E.ASTC8x5UnormSRGB:E.ASTC8x5Unorm;break;case Jh:s=i===Re?E.ASTC8x6UnormSRGB:E.ASTC8x6Unorm;break;case ed:s=i===Re?E.ASTC8x8UnormSRGB:E.ASTC8x8Unorm;break;case td:s=i===Re?E.ASTC10x5UnormSRGB:E.ASTC10x5Unorm;break;case nd:s=i===Re?E.ASTC10x6UnormSRGB:E.ASTC10x6Unorm;break;case id:s=i===Re?E.ASTC10x8UnormSRGB:E.ASTC10x8Unorm;break;case sd:s=i===Re?E.ASTC10x10UnormSRGB:E.ASTC10x10Unorm;break;case rd:s=i===Re?E.ASTC12x10UnormSRGB:E.ASTC12x10Unorm;break;case od:s=i===Re?E.ASTC12x12UnormSRGB:E.ASTC12x12Unorm;break;case Js:s=i===Re?E.RGBA8UnormSRGB:E.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case Js:switch(n){case $o:s=E.RGBA8Snorm;break;case Xo:s=E.RGBA16Sint;break;case Gr:s=E.RGBA16Uint;break;case Zt:s=E.RGBA32Uint;break;case dn:s=E.RGBA32Sint;break;case _s:s=i===Re?E.RGBA8UnormSRGB:E.RGBA8Unorm;break;case ni:s=E.RGBA16Float;break;case Un:s=E.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case Gd:switch(n){case yv:s=E.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case Hd:switch(n){case $o:s=E.R8Snorm;break;case Xo:s=E.R16Sint;break;case Gr:s=E.R16Uint;break;case Zt:s=E.R32Uint;break;case dn:s=E.R32Sint;break;case _s:s=E.R8Unorm;break;case ni:s=E.R16Float;break;case Un:s=E.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case ca:switch(n){case $o:s=E.RG8Snorm;break;case Xo:s=E.RG16Sint;break;case Gr:s=E.RG16Uint;break;case Zt:s=E.RG32Uint;break;case dn:s=E.RG32Sint;break;case _s:s=E.RG8Unorm;break;case ni:s=E.RG16Float;break;case Un:s=E.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case qs:switch(n){case Gr:s=E.Depth16Unorm;break;case Zt:s=E.Depth24Plus;break;case Un:s=E.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case ro:switch(n){case Ma:s=E.Depth24PlusStencil8;break;case Un:e&&e.features.has(Ud.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=E.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case Wd:switch(n){case dn:s=E.R32Sint;break;case Zt:s=E.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case qd:switch(n){case dn:s=E.RG32Sint;break;case Zt:s=E.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case jd:switch(n){case dn:s=E.RGBA32Sint;break;case Zt:s=E.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return s}const EU=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,RU=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,Ug={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},PU=o=>{o=o.trim();const e=o.match(EU);if(e!==null&&e.length===4){const t=e[2],n=[];let i=null;for(;(i=RU.exec(t))!==null;)n.push({name:i[1],type:i[2]});const s=[];for(let u=0;u<n.length;u++){const{name:h,type:d}=n[u];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=Ug[f]),s.push(new gp(f,h))}const r=o.substring(e[0].length),a=e[3]||"void",c=e[1]!==void 0?e[1]:"";return{type:Ug[a]||a,inputs:s,name:c,inputsCode:t,blockCode:r,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class DU extends vp{constructor(e){const{type:t,inputs:n,name:i,inputsCode:s,blockCode:r,outputType:a}=PU(e);super(t,n,i),this.inputsCode=s,this.blockCode=r,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class UU extends vb{parseFunction(e){return new DU(e)}}const Ir=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},LU={[rn.READ_ONLY]:"read",[rn.WRITE_ONLY]:"write",[rn.READ_WRITE]:"read_write"},Lg={[ys]:"repeat",[ms]:"clamp",[so]:"mirror"},qc={vertex:Ir?Ir.VERTEX:1,fragment:Ir?Ir.FRAGMENT:2,compute:Ir?Ir.COMPUTE:4},Fg={instance:!0,swizzleAssign:!1,storageBuffer:!0},FU={"^^":"tsl_xor"},IU={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Ig={},zn={tsl_xor:new Ft("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Ft("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Ft("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Ft("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Ft("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Ft("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Ft("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Ft("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Ft("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Ft("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Ft("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Ft("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Ft(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},jo={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(zn.pow_float=new Ft("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),zn.pow_vec2=new Ft("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[zn.pow_float]),zn.pow_vec3=new Ft("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[zn.pow_float]),zn.pow_vec4=new Ft("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[zn.pow_float]),jo.pow_float="tsl_pow_float",jo.pow_vec2="tsl_pow_vec2",jo.pow_vec3="tsl_pow_vec3",jo.pow_vec4="tsl_pow_vec4");let Ab="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(Ab+=`diagnostic( off, derivative_uniformity );
`);class BU extends mb{constructor(e,t){super(e,t,new UU),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==er}_generateTextureSample(e,t,n,i,s=this.shaderStage){return s==="fragment"?i?`textureSample( ${t}, ${t}_sampler, ${n}, ${i} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n):this.generateTextureLod(e,t,n,i,"0")}_generateVideoSample(e,t,n=this.shaderStage){if(n==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${n} shader.`)}_generateTextureSampleLevel(e,t,n,i,s,r=this.shaderStage){return r==="fragment"&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,i):this.generateTextureLod(e,t,n,s,i)}generateWrapFunction(e){const t=`tsl_coord_${Lg[e.wrapS]}S_${Lg[e.wrapT]}T`;let n=Ig[t];if(n===void 0){const i=[];let s=`fn ${t}( coord : vec2f ) -> vec2f {

	return vec2f(
`;const r=(a,c)=>{a===ys?(i.push(zn.repeatWrapping_float),s+=`		tsl_repeatWrapping_float( coord.${c} )`):a===ms?(i.push(zn.clampWrapping_float),s+=`		tsl_clampWrapping_float( coord.${c} )`):a===so?(i.push(zn.mirrorWrapping_float),s+=`		tsl_mirrorWrapping_float( coord.${c} )`):(s+=`		coord.${c}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${a}" for vertex shader.`))};r(e.wrapS,"x"),s+=`,
`,r(e.wrapT,"y"),s+=`
	);

}
`,Ig[t]=n=new Ft(s,i)}return n.build(this),t}generateTextureDimension(e,t,n){const i=this.getDataFromNode(e,this.shaderStage,this.globalCache);i.dimensionsSnippet===void 0&&(i.dimensionsSnippet={});let s=i.dimensionsSnippet[n];if(i.dimensionsSnippet[n]===void 0){let r;e.isMultisampleRenderTargetTexture===!0?r=t:r=`${t}, u32( ${n} )`,s=new by(new Vy(`textureDimensions( ${r} )`,"uvec2")),i.dimensionsSnippet[n]=s}return s.build(this)}generateFilteredTexture(e,t,n,i="0u"){this._include("biquadraticTexture");const s=this.generateWrapFunction(e),r=this.generateTextureDimension(e,t,i);return`tsl_biquadraticTexture( ${t}, ${s}( ${n} ), ${r}, u32( ${i} ) )`}generateTextureLod(e,t,n,i,s="0u"){const r=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,s),c=`vec2u( ${r}( ${n} ) * vec2f( ${a} ) )`;return this.generateTextureLoad(e,t,c,i,s)}generateTextureLoad(e,t,n,i,s="0u"){return e.isVideoTexture===!0||e.isStorageTexture===!0?`textureLoad( ${t}, ${n} )`:i?`textureLoad( ${t}, ${n}, ${i}, u32( ${s} ) )`:`textureLoad( ${t}, ${n}, u32( ${s} ) )`}generateTextureStore(e,t,n,i){return`textureStore( ${t}, ${n}, ${i} )`}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===Un||this.isSampleCompare(e)===!1&&e.minFilter===Wt&&e.magFilter===Wt||e.isMultisampleRenderTargetTexture===!0}generateTexture(e,t,n,i,s=this.shaderStage){let r=null;return e.isVideoTexture===!0?r=this._generateVideoSample(t,n,s):this.isUnfilterable(e)?r=this.generateTextureLod(e,t,n,i,"0",s):r=this._generateTextureSample(e,t,n,i,s),r}generateTextureGrad(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${r} shader.`)}generateTextureCompare(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}generateTextureLevel(e,t,n,i,s,r=this.shaderStage){let a=null;return e.isVideoTexture===!0?a=this._generateVideoSample(t,n,r):a=this._generateTextureSampleLevel(e,t,n,i,s,r),a}generateTextureBias(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${r} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const n=e.name,i=e.type;return i==="texture"||i==="cubeTexture"||i==="storageTexture"||i==="texture3D"?n:i==="buffer"||i==="storageBuffer"||i==="indirectStorageBuffer"?`NodeBuffer_${e.id}.${n}`:e.groupNode.name+"."+n}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=FU[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?rn.READ_ONLY:e.access}getStorageAccess(e,t){return LU[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,n,i=null){const s=super.getUniformFromNode(e,t,n,i),r=this.getDataFromNode(e,n,this.globalCache);if(r.uniformGPU===void 0){let a;const c=e.groupNode,l=c.name,u=this.getBindGroupArray(l,n);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null;const d=this.getNodeAccess(e,n);if(t==="texture"||t==="storageTexture"?h=new ou(s.name,s.node,c,d):t==="cubeTexture"?h=new Tb(s.name,s.node,c,d):t==="texture3D"&&(h=new Mb(s.name,s.node,c,d)),h.store=e.isStorageTextureNode===!0,h.setVisibility(qc[n]),n==="fragment"&&this.isUnfilterable(e.value)===!1&&h.store===!1){const f=new bU(`${s.name}_sampler`,s.node,c);f.setVisibility(qc[n]),u.push(f,h),a=[f,h]}else u.push(h),a=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const h=t==="buffer"?bb:MU,d=new h(e,c);d.setVisibility(qc[n]),u.push(d),a=d}else{const h=this.uniformGroups[n]||(this.uniformGroups[n]={});let d=h[l];d===void 0&&(d=new Sb(l,c),d.setVisibility(qc[n]),h[l]=d,u.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}r.uniformGPU=a}return s}getBuiltin(e,t,n,i=this.shaderStage){const s=this.builtins[i]||(this.builtins[i]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,n=this.flowShaderNode(e),i=[];for(const r of t.inputs)i.push(r.name+" : "+this.getType(r.type));let s=`fn ${t.name}( ${i.join(", ")} ) -> ${this.getType(t.type)} {
${n.vars}
${n.code}
`;return n.result&&(s+=`	return ${n.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],n=this.directives[e];if(n!==void 0)for(const i of n)t.push(`enable ${i};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],n=this.builtins[e];if(n!==void 0)for(const{name:i,property:s,type:r}of n.values())t.push(`@builtin( ${i} ) ${s} : ${r}`);return t.join(`,
	`)}getScopedArray(e,t,n,i){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:i}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:n,scope:i,bufferType:s,bufferCount:r}of this.scopedArrays.values()){const a=this.getType(s);t.push(`var<${i}> ${n}: array< ${a}, ${r} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const n=this.getBuiltins("attribute");n&&t.push(n);const i=this.getAttributesArray();for(let s=0,r=i.length;s<r;s++){const a=i[s],c=a.name,l=this.getType(a.type);t.push(`@location( ${s} ) ${c} : ${l}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[],n=e.getMemberTypes();for(let s=0;s<n.length;s++){const r=n[s];t.push(`	@location( ${s} ) m${s} : ${r}<f32>`)}const i=this.getBuiltins("output");return i&&t.push("	"+i),t.join(`,
`)}getStructs(e){const t=[],n=this.structs[e];for(let i=0,s=n.length;i<s;i++){const r=n[i],a=r.name;let c=`struct ${a} {
`;c+=this.getStructMembers(r),c+=`
}`,t.push(c),t.push(`
var<private> output : ${a};

`)}return t.join(`

`)}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],n=this.vars[e];if(n!==void 0)for(const i of n)t.push(`	${this.getVar(i.type,i.name)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const s=this.varyings,r=this.vars[e];for(let a=0;a<s.length;a++){const c=s[a];if(c.needsInterpolation){let l=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(c.type)&&(l+=" @interpolate( flat )"),t.push(`${l} ${c.name} : ${this.getType(c.type)}`)}else e==="vertex"&&r.includes(c)===!1&&r.push(c)}}const n=this.getBuiltins(e);n&&t.push(n);const i=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+i):i}getUniforms(e){const t=this.uniforms[e],n=[],i=[],s=[],r={};for(const c of t){const l=c.groupNode.name,u=this.bindingsIndexes[l];if(c.type==="texture"||c.type==="cubeTexture"||c.type==="storageTexture"||c.type==="texture3D"){const h=c.node.value;e==="fragment"&&this.isUnfilterable(h)===!1&&c.node.isStorageTextureNode!==!0&&(this.isSampleCompare(h)?n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name}_sampler : sampler_comparison;`):n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name}_sampler : sampler;`));let d,f="";if(h.isMultisampleRenderTargetTexture===!0&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(h.isVideoTexture===!0)d="texture_external";else if(h.isData3DTexture===!0)d="texture_3d<f32>";else if(c.node.isStorageTextureNode===!0){const p=Ld(h),m=this.getStorageAccess(c.node,e);d=`texture_storage_2d<${p}, ${m}>`}else{const p=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${p}32>`}n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${c.name} : ${d};`)}else if(c.type==="buffer"||c.type==="storageBuffer"||c.type==="indirectStorageBuffer"){const h=c.node,d=this.getType(h.bufferType),f=h.bufferCount,p=f>0&&c.type==="buffer"?", "+f:"",m=h.isAtomic?`atomic<${d}>`:`${d}`,g=`	${c.name} : array< ${m}${p} >
`,_=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h,e)}`:"uniform";i.push(this._getWGSLStructBinding("NodeBuffer_"+h.id,g,_,u.binding++,u.group))}else{const h=this.getType(this.getVectorType(c.type)),d=c.groupNode.name;(r[d]||(r[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${c.name} : ${h}`)}}for(const c in r){const l=r[c];s.push(this._getWGSLStructBinding(c,l.snippets.join(`,
`),"uniform",l.index,l.id))}let a=n.join(`
`);return a+=i.join(`
`),a+=s.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let i=`// code

`;i+=this.flowCode[t];const s=this.flowNodes[t],r=s[s.length-1],a=r.outputNode,c=a!==void 0&&a.isOutputStructNode===!0;for(const l of s){const u=this.getFlowData(l),h=l.name;if(h&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${h}
	`),i+=`${u.code}
	`,l===r&&t!=="compute"){if(i+=`// result

	`,t==="vertex")i+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(c)n.returnType=a.nodeType,i+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;

`,i+=`output.color = ${u.result};

	return output;`}}}n.flow=i}this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let n;return t!==null&&(n=this._getWGSLMethod(e+"_"+t)),n===void 0&&(n=this._getWGSLMethod(e)),n||e}getType(e){return IU[e]||e}isAvailable(e){let t=Fg[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),Fg[e]=t),t}_getWGSLMethod(e){return zn[e]!==void 0&&this._include(e),jo[e]}_include(e){const t=zn[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${Ab}

// uniforms
${e.uniforms}

// structs
${e.structs}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,n,i=0,s=0){const r=e+"Struct";return`${this._getWGSLStruct(r,t)}
@binding( ${i} ) @group( ${s} )
var<${n}> ${e} : ${r};`}}class OU{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=E.Depth24PlusStencil8:e.depth&&(t=E.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return Xr.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return Xr.LineList;if(e.isLine)return Xr.LineStrip;if(e.isMesh)return Xr.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?E.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const VU=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),kU=new Map([[Pv,["float16"]]]),zU=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class GU{constructor(e){this.backend=e}createAttribute(e,t){const n=this._getBufferAttribute(e),i=this.backend,s=i.get(n);let r=s.buffer;if(r===void 0){const a=i.device;let c=n.array;if(e.normalized===!1&&(c.constructor===Int16Array||c.constructor===Uint16Array)){const u=new Uint32Array(c.length);for(let h=0;h<c.length;h++)u[h]=c[h];c=u}if(n.array=c,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){c=new c.constructor(n.count*4);for(let u=0;u<n.count;u++)c.set(n.array.subarray(u*3,u*3+3),u*4);n.itemSize=4,n.array=c}const l=c.byteLength+(4-c.byteLength%4)%4;r=a.createBuffer({label:n.name,size:l,usage:t,mappedAtCreation:!0}),new c.constructor(r.getMappedRange()).set(c),r.unmap(),s.buffer=r}}updateAttribute(e){const t=this._getBufferAttribute(e),n=this.backend,i=n.device,s=n.get(t).buffer,r=t.array,a=this._isTypedArray(r),c=t.updateRanges;if(c.length===0)i.queue.writeBuffer(s,0,r,0);else{const l=a?1:r.BYTES_PER_ELEMENT;for(let u=0,h=c.length;u<h;u++){const d=c[u],f=d.start*l,p=d.count*l;i.queue.writeBuffer(s,0,r,f,p)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),n=new Map;for(let i=0;i<t.length;i++){const s=t[i],r=s.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(s);let c=n.get(a);if(c===void 0){let h,d;s.isInterleavedBufferAttribute===!0?(h=s.data.stride*r,d=s.data.isInstancedInterleavedBuffer?Wc.Instance:Wc.Vertex):(h=s.itemSize*r,d=s.isInstancedBufferAttribute?Wc.Instance:Wc.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(h=4),c={arrayStride:h,attributes:[],stepMode:d},n.set(a,c)}const l=this._getVertexFormat(s),u=s.isInterleavedBufferAttribute===!0?s.offset*r:0;c.attributes.push({shaderLocation:i,offset:u,format:l})}return Array.from(n.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,n=t.device,s=t.get(this._getBufferAttribute(e)).buffer,r=s.size,a=n.createBuffer({label:e.name,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),c=n.createCommandEncoder({});c.copyBufferToBuffer(s,0,a,0,r),a.unmap();const l=c.finish();return n.queue.submit([l]),await a.mapAsync(GPUMapMode.READ),a.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:n}=e,i=e.array.constructor,s=e.constructor;let r;if(t==1)r=zU.get(i);else{const c=(kU.get(s)||VU.get(i))[n?1:0];if(c){const l=i.BYTES_PER_ELEMENT*t,h=Math.floor((l+3)/4)*4/i.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");r=`${c}x${h}`}}return r||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),r}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class HU{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const n=this.backend.device,i=[];let s=0;for(const r of e.bindings){const a={binding:s++,visibility:r.visibility};if(r.isUniformBuffer||r.isStorageBuffer){const c={};r.isStorageBuffer&&(r.visibility&4&&(r.access===rn.READ_WRITE||r.access===rn.WRITE_ONLY)?c.type=Bh.Storage:c.type=Bh.ReadOnlyStorage),a.buffer=c}else if(r.isSampler){const c={};r.texture.isDepthTexture&&r.texture.compareFunction!==null&&(c.type="comparison"),a.sampler=c}else if(r.isSampledTexture&&r.texture.isVideoTexture)a.externalTexture={};else if(r.isSampledTexture&&r.store){const c={};c.format=this.backend.get(r.texture).texture.format;const l=r.access;l===rn.READ_WRITE?c.access=Oh.ReadWrite:l===rn.WRITE_ONLY?c.access=Oh.WriteOnly:c.access=Oh.ReadOnly,a.storageTexture=c}else if(r.isSampledTexture){const c={};if(r.texture.isMultisampleRenderTargetTexture===!0&&(c.multisampled=!0),r.texture.isDepthTexture)c.sampleType=Wo.Depth;else if(r.texture.isDataTexture||r.texture.isDataArrayTexture||r.texture.isData3DTexture){const l=r.texture.type;l===dn?c.sampleType=Wo.SInt:l===Zt?c.sampleType=Wo.UInt:l===Un&&(this.backend.hasFeature("float32-filterable")?c.sampleType=Wo.Float:c.sampleType=Wo.UnfilterableFloat)}r.isSampledCubeTexture?c.viewDimension=kn.Cube:r.texture.isDataArrayTexture||r.texture.isCompressedArrayTexture?c.viewDimension=kn.TwoDArray:r.isSampledTexture3D&&(c.viewDimension=kn.ThreeD),a.texture=c}else console.error(`WebGPUBindingUtils: Unsupported binding "${r}".`);i.push(a)}return n.createBindGroupLayout({entries:i})}createBindings(e,t,n,i=0){const{backend:s,bindGroupLayoutCache:r}=this,a=s.get(e);let c=r.get(e.bindingsReference);c===void 0&&(c=this.createBindingsLayout(e),r.set(e.bindingsReference,c));let l;n>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[n]===i&&(l=a.groups[n])),l===void 0&&(l=this.createBindGroup(e,c),n>0&&(a.groups[n]=l,a.versions[n]=i)),a.group=l,a.layout=c}updateBinding(e){const t=this.backend,n=t.device,i=e.buffer,s=t.get(e).buffer;n.queue.writeBuffer(s,0,i,0)}createBindGroup(e,t){const n=this.backend,i=n.device;let s=0;const r=[];for(const a of e.bindings){if(a.isUniformBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=i.createBuffer({label:"bindingBuffer_"+a.name,size:l,usage:u});c.buffer=h}r.push({binding:s,resource:{buffer:c.buffer}})}else if(a.isStorageBuffer){const c=n.get(a);if(c.buffer===void 0){const l=a.attribute;c.buffer=n.get(l).buffer}r.push({binding:s,resource:{buffer:c.buffer}})}else if(a.isSampler){const c=n.get(a.texture);r.push({binding:s,resource:c.sampler})}else if(a.isSampledTexture){const c=n.get(a.texture);let l;if(c.externalTexture!==void 0)l=i.importExternalTexture({source:c.externalTexture});else{const u=a.store?1:c.texture.mipLevelCount,h=`view-${c.texture.width}-${c.texture.height}-${u}`;if(l=c[h],l===void 0){const d=yU.All;let f;a.isSampledCubeTexture?f=kn.Cube:a.isSampledTexture3D?f=kn.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=kn.TwoDArray:f=kn.TwoD,l=c[h]=c.texture.createView({aspect:d,dimension:f,mipLevelCount:u})}}r.push({binding:s,resource:l})}s++}return i.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:r})}}class WU{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:n,material:i,geometry:s,pipeline:r}=e,{vertexProgram:a,fragmentProgram:c}=r,l=this.backend,u=l.device,h=l.utils,d=l.get(r),f=[];for(const k of e.getBindings()){const O=l.get(k);f.push(O.layout)}const p=l.attributeUtils.createShaderVertexBuffers(e);let m;i.transparent===!0&&i.blending!==Ks&&(m=this._getBlending(i));let g={};i.stencilWrite===!0&&(g={compare:this._getStencilCompare(i),failOp:this._getStencilOperation(i.stencilFail),depthFailOp:this._getStencilOperation(i.stencilZFail),passOp:this._getStencilOperation(i.stencilZPass)});const _=this._getColorWriteMask(i),x=[];if(e.context.textures!==null){const k=e.context.textures;for(let O=0;O<k.length;O++){const te=h.getTextureFormatGPU(k[O]);x.push({format:te,blend:m,writeMask:_})}}else{const k=h.getCurrentColorFormat(e.context);x.push({format:k,blend:m,writeMask:_})}const y=l.get(a).module,b=l.get(c).module,M=this._getPrimitiveState(n,s,i),N=this._getDepthCompare(i),T=h.getCurrentDepthStencilFormat(e.context),w=this._getSampleCount(e.context),L={label:`renderPipeline_${i.name||i.type}_${i.id}`,vertex:Object.assign({},y,{buffers:p}),fragment:Object.assign({},b,{targets:x}),primitive:M,multisample:{count:w,alphaToCoverageEnabled:i.alphaToCoverage&&w>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},I={},W=e.context.depth,D=e.context.stencil;if((W===!0||D===!0)&&(W===!0&&(I.format=T,I.depthWriteEnabled=i.depthWrite,I.depthCompare=N),D===!0&&(I.stencilFront=g,I.stencilBack={},I.stencilReadMask=i.stencilFuncMask,I.stencilWriteMask=i.stencilWriteMask),L.depthStencil=I),t===null)d.pipeline=u.createRenderPipeline(L);else{const k=new Promise(O=>{u.createRenderPipelineAsync(L).then(te=>{d.pipeline=te,O()})});t.push(k)}}createBundleEncoder(e){const t=this.backend,{utils:n,device:i}=t,s=n.getCurrentDepthStencilFormat(e),r=n.getCurrentColorFormat(e),a=this._getSampleCount(e),c={label:"renderBundleEncoder",colorFormats:[r],depthStencilFormat:s,sampleCount:a};return i.createRenderBundleEncoder(c)}createComputePipeline(e,t){const n=this.backend,i=n.device,s=n.get(e.computeProgram).module,r=n.get(e),a=[];for(const c of t){const l=n.get(c);a.push(l.layout)}r.pipeline=i.createComputePipeline({compute:s,layout:i.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,n;const i=e.blending,s=e.blendSrc,r=e.blendDst,a=e.blendEquation;if(i===ev){const c=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,l=e.blendDstAlpha!==null?e.blendDstAlpha:r,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(r),operation:this._getBlendOperation(a)},n={srcFactor:this._getBlendFactor(c),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(u)}}else{const c=e.premultipliedAlpha,l=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:Is.Add},n={srcFactor:d,dstFactor:f,operation:Is.Add}};if(c)switch(i){case vs:l(Be.One,Be.OneMinusSrcAlpha,Be.One,Be.OneMinusSrcAlpha);break;case rl:l(Be.One,Be.One,Be.One,Be.One);break;case ol:l(Be.Zero,Be.OneMinusSrc,Be.Zero,Be.One);break;case al:l(Be.Zero,Be.Src,Be.Zero,Be.SrcAlpha);break}else switch(i){case vs:l(Be.SrcAlpha,Be.OneMinusSrcAlpha,Be.One,Be.OneMinusSrcAlpha);break;case rl:l(Be.SrcAlpha,Be.One,Be.SrcAlpha,Be.One);break;case ol:l(Be.Zero,Be.OneMinusSrc,Be.Zero,Be.One);break;case al:l(Be.Zero,Be.Src,Be.Zero,Be.Src);break}}if(t!==void 0&&n!==void 0)return{color:t,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",i)}_getBlendFactor(e){let t;switch(e){case iv:t=Be.Zero;break;case sv:t=Be.One;break;case rv:t=Be.Src;break;case ov:t=Be.OneMinusSrc;break;case cl:t=Be.SrcAlpha;break;case ll:t=Be.OneMinusSrcAlpha;break;case lv:t=Be.Dst;break;case uv:t=Be.OneMinusDstColor;break;case av:t=Be.DstAlpha;break;case cv:t=Be.OneMinusDstAlpha;break;case hv:t=Be.SrcAlphaSaturated;break;case cE:t=Be.Constant;break;case lE:t=Be.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const n=e.stencilFunc;switch(n){case wS:t=$t.Never;break;case ad:t=$t.Always;break;case AS:t=$t.Less;break;case CS:t=$t.LessEqual;break;case NS:t=$t.Equal;break;case PS:t=$t.GreaterEqual;break;case ES:t=$t.Greater;break;case RS:t=$t.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case Os:t=ls.Keep;break;case _S:t=ls.Zero;break;case yS:t=ls.Replace;break;case MS:t=ls.Invert;break;case xS:t=ls.IncrementClamp;break;case bS:t=ls.DecrementClamp;break;case SS:t=ls.IncrementWrap;break;case TS:t=ls.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case hs:t=Is.Add;break;case tv:t=Is.Subtract;break;case nv:t=Is.ReverseSubtract;break;case Kb:t=Is.Min;break;case Qb:t=Is.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){const i={},s=this.backend.utils;switch(i.topology=s.getPrimitiveTopology(e,n),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(i.stripIndexFormat=t.index.array instanceof Uint16Array?uo.Uint16:uo.Uint32),n.side){case no:i.frontFace=Lh.CCW,i.cullMode=Fh.Back;break;case qn:i.frontFace=Lh.CCW,i.cullMode=Fh.Front;break;case Ws:i.frontFace=Lh.CCW,i.cullMode=Fh.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",n.side);break}return i}_getColorWriteMask(e){return e.colorWrite===!0?Pg.All:Pg.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=$t.Always;else{const n=e.depthFunc;switch(n){case dv:t=$t.Never;break;case fv:t=$t.Always;break;case pv:t=$t.Less;break;case ul:t=$t.LessEqual;break;case mv:t=$t.Equal;break;case gv:t=$t.GreaterEqual;break;case vv:t=$t.Greater;break;case _v:t=$t.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return t}}class qU extends wb{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new OU(this),this.attributeUtils=new GU(this),this.bindingUtils=new HU(this),this.pipelineUtils=new WU(this),this.textureUtils=new CU(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let n;if(t.device===void 0){const r={powerPreference:t.powerPreference},a=typeof navigator<"u"?await navigator.gpu.requestAdapter(r):null;if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const c=Object.values(Ud),l=[];for(const h of c)a.features.has(h)&&l.push(h);const u={requiredFeatures:l,requiredLimits:t.requiredLimits};n=await a.requestDevice(u)}else n=t.device;n.lost.then(r=>{const a={api:"WebGPU",message:r.message||"Unknown reason",reason:r.reason||null,originalEvent:r};e.onDeviceLost(a)});const i=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=n,this.context=i;const s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Ud.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return qi}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const n=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()});const i=e.colorAttachments[0];this.renderer.samples>0?i.view=this.colorBuffer.createView():i.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,n=this.get(t);let i=n.descriptors;if(i===void 0||n.width!==t.width||n.height!==t.height||n.activeMipmapLevel!==t.activeMipmapLevel||n.samples!==t.samples){i={},n.descriptors=i;const a=()=>{t.removeEventListener("dispose",a),this.delete(t)};t.addEventListener("dispose",a)}const s=e.getCacheKey();let r=i[s];if(r===void 0){const a=e.textures,c=[];for(let l=0;l<a.length;l++){const u=this.get(a[l]),h=u.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:kn.TwoD});let d,f;u.msaaTexture!==void 0?(d=u.msaaTexture.createView(),f=h):(d=h,f=void 0),c.push({view:d,resolveTarget:f,loadOp:Lt.Load,storeOp:Yt.Store})}if(r={colorAttachments:c},e.depth){const u={view:this.get(e.depthTexture).texture.createView()};r.depthStencilAttachment=u}i[s]=r,n.width=t.width,n.height=t.height,n.samples=t.samples,n.activeMipmapLevel=t.activeMipmapLevel}return r}beginRender(e){const t=this.get(e),n=this.device,i=e.occlusionQueryCount;let s;i>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=n.createQuerySet({type:"occlusion",count:i,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(i),t.lastOcclusionObject=null);let r;e.textures===null?r=this._getDefaultRenderPassDescriptor():r=this._getRenderPassDescriptor(e),this.initTimestampQuery(e,r),r.occlusionQuerySet=s;const a=r.depthStencilAttachment;if(e.textures!==null){const u=r.colorAttachments;for(let h=0;h<u.length;h++){const d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=Lt.Clear,d.storeOp=Yt.Store):(d.loadOp=Lt.Load,d.storeOp=Yt.Store)}}else{const u=r.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=Lt.Clear,u.storeOp=Yt.Store):(u.loadOp=Lt.Load,u.storeOp=Yt.Store)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Lt.Clear,a.depthStoreOp=Yt.Store):(a.depthLoadOp=Lt.Load,a.depthStoreOp=Yt.Store)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Lt.Clear,a.stencilStoreOp=Yt.Store):(a.stencilLoadOp=Lt.Load,a.stencilStoreOp=Yt.Store));const c=n.createCommandEncoder({label:"renderContext_"+e.id}),l=c.beginRenderPass(r);if(t.descriptor=r,t.encoder=c,t.currentPass=l,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;l.setScissorRect(u,h,d,f)}}finishRender(e){const t=this.get(e),n=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),n>0){const i=n*8;let s=this.occludedResolveCache.get(i);s===void 0&&(s=this.device.createBuffer({size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(i,s));const r=this.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,s,0),t.encoder.copyBufferToBuffer(s,0,r,0,i),t.occlusionQueryBuffer=r,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const i=e.textures;for(let s=0;s<i.length;s++){const r=i[s];r.generateMipmaps===!0&&this.textureUtils.generateMipmaps(r)}}}isOccluded(e,t){const n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:i}=t;if(n&&i){const s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);const r=n.getMappedRange(),a=new BigUint64Array(r);for(let c=0;c<i.length;c++)a[c]!==BigInt(0)&&s.add(i[c]);n.destroy(),t.occluded=s}}updateViewport(e){const{currentPass:t}=this.get(e),{x:n,y:i,width:s,height:r,minDepth:a,maxDepth:c}=e.viewportValue;t.setViewport(n,i,s,r,a,c)}clear(e,t,n,i=null){const s=this.device,r=this.renderer;let a=[],c,l,u,h;if(e){const p=this.getClearColor();if(this.renderer.alpha===!0){const m=p.a;l={r:p.r*m,g:p.g*m,b:p.b*m,a:m}}else l={r:p.r,g:p.g,b:p.b,a:p.a}}if(i===null){u=r.depth,h=r.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){a=p.colorAttachments;const m=a[0];m.clearValue=l,m.loadOp=Lt.Clear,m.storeOp=Yt.Store}(u||h)&&(c=p.depthStencilAttachment)}else{if(u=i.depth,h=i.stencil,e)for(const p of i.textures){const m=this.get(p),g=m.texture.createView();let _,x;m.msaaTexture!==void 0?(_=m.msaaTexture.createView(),x=g):(_=g,x=void 0),a.push({view:_,resolveTarget:x,clearValue:l,loadOp:Lt.Clear,storeOp:Yt.Store})}(u||h)&&(c={view:this.get(i.depthTexture).texture.createView()})}u&&(t?(c.depthLoadOp=Lt.Clear,c.depthClearValue=r.getClearDepth(),c.depthStoreOp=Yt.Store):(c.depthLoadOp=Lt.Load,c.depthStoreOp=Yt.Store)),h&&(n?(c.stencilLoadOp=Lt.Clear,c.stencilClearValue=r.getClearStencil(),c.stencilStoreOp=Yt.Store):(c.stencilLoadOp=Lt.Load,c.stencilStoreOp=Yt.Store));const d=s.createCommandEncoder({});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:c}).end(),s.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),n={};this.initTimestampQuery(e,n),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,i){const{passEncoderGPU:s}=this.get(e),r=this.get(i).pipeline;s.setPipeline(r);for(let u=0,h=n.length;u<h;u++){const d=n[u],f=this.get(d);s.setBindGroup(u,f.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,c=this.get(t);c.dispatchSize===void 0&&(c.dispatchSize={x:0,y:1,z:1});const{dispatchSize:l}=c;t.dispatchCount>a?(l.x=Math.min(t.dispatchCount,a),l.y=Math.ceil(t.dispatchCount/a)):l.x=t.dispatchCount,s.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:n,context:i,pipeline:s}=e,r=e.getBindings(),a=this.get(i),c=this.get(s).pipeline,l=a.currentSets,u=a.currentPass,h=e.getDrawParameters();if(h===null)return;l.pipeline!==c&&(u.setPipeline(c),l.pipeline=c);const d=l.bindingGroups;for(let g=0,_=r.length;g<_;g++){const x=r[g],y=this.get(x);d[x.index]!==x.id&&(u.setBindGroup(x.index,y.group),d[x.index]=x.id)}const f=e.getIndex(),p=f!==null;if(p===!0&&l.index!==f){const g=this.get(f).buffer,_=f.array instanceof Uint16Array?uo.Uint16:uo.Uint32;u.setIndexBuffer(g,_),l.index=f}const m=e.getVertexBuffers();for(let g=0,_=m.length;g<_;g++){const x=m[g];if(l.attributes[g]!==x){const y=this.get(x).buffer;u.setVertexBuffer(g,y),l.attributes[g]=x}}if(a.occlusionQuerySet!==void 0){const g=a.lastOcclusionObject;g!==n&&(g!==null&&g.occlusionTest===!0&&(u.endOcclusionQuery(),a.occlusionQueryIndex++),n.occlusionTest===!0&&(u.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=n),a.lastOcclusionObject=n)}if(n.isBatchedMesh===!0){const g=n._multiDrawStarts,_=n._multiDrawCounts,x=n._multiDrawCount,y=n._multiDrawInstances,b=p?f.array.BYTES_PER_ELEMENT:1;for(let M=0;M<x;M++){const N=y?y[M]:1,T=N>1?0:M;u.drawIndexed(_[M],N,g[M]/b,0,T)}}else if(p===!0){const{vertexCount:g,instanceCount:_,firstVertex:x}=h,y=e.getIndirect();if(y!==null){const b=this.get(y).buffer;u.drawIndexedIndirect(b,0)}else u.drawIndexed(g,_,x,0,0);t.update(n,g,_)}else{const{vertexCount:g,instanceCount:_,firstVertex:x}=h,y=e.getIndirect();if(y!==null){const b=this.get(y).buffer;u.drawIndirect(b,0)}else u.draw(g,_,x,0);t.update(n,g,_)}}needsRenderUpdate(e){const t=this.get(e),{object:n,material:i}=e,s=this.utils,r=s.getSampleCountRenderContext(e.context),a=s.getCurrentColorSpace(e.context),c=s.getCurrentColorFormat(e.context),l=s.getCurrentDepthStencilFormat(e.context),u=s.getPrimitiveTopology(n,i);let h=!1;return(t.material!==i||t.materialVersion!==i.version||t.transparent!==i.transparent||t.blending!==i.blending||t.premultipliedAlpha!==i.premultipliedAlpha||t.blendSrc!==i.blendSrc||t.blendDst!==i.blendDst||t.blendEquation!==i.blendEquation||t.blendSrcAlpha!==i.blendSrcAlpha||t.blendDstAlpha!==i.blendDstAlpha||t.blendEquationAlpha!==i.blendEquationAlpha||t.colorWrite!==i.colorWrite||t.depthWrite!==i.depthWrite||t.depthTest!==i.depthTest||t.depthFunc!==i.depthFunc||t.stencilWrite!==i.stencilWrite||t.stencilFunc!==i.stencilFunc||t.stencilFail!==i.stencilFail||t.stencilZFail!==i.stencilZFail||t.stencilZPass!==i.stencilZPass||t.stencilFuncMask!==i.stencilFuncMask||t.stencilWriteMask!==i.stencilWriteMask||t.side!==i.side||t.alphaToCoverage!==i.alphaToCoverage||t.sampleCount!==r||t.colorSpace!==a||t.colorFormat!==c||t.depthStencilFormat!==l||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=i,t.materialVersion=i.version,t.transparent=i.transparent,t.blending=i.blending,t.premultipliedAlpha=i.premultipliedAlpha,t.blendSrc=i.blendSrc,t.blendDst=i.blendDst,t.blendEquation=i.blendEquation,t.blendSrcAlpha=i.blendSrcAlpha,t.blendDstAlpha=i.blendDstAlpha,t.blendEquationAlpha=i.blendEquationAlpha,t.colorWrite=i.colorWrite,t.depthWrite=i.depthWrite,t.depthTest=i.depthTest,t.depthFunc=i.depthFunc,t.stencilWrite=i.stencilWrite,t.stencilFunc=i.stencilFunc,t.stencilFail=i.stencilFail,t.stencilZFail=i.stencilZFail,t.stencilZPass=i.stencilZPass,t.stencilFuncMask=i.stencilFuncMask,t.stencilWriteMask=i.stencilWriteMask,t.side=i.side,t.alphaToCoverage=i.alphaToCoverage,t.sampleCount=r,t.colorSpace=a,t.colorFormat=c,t.depthStencilFormat=l,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,h=!0),h}getRenderCacheKey(e){const{object:t,material:n}=e,i=this.utils,s=e.context;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,i.getSampleCountRenderContext(s),i.getCurrentColorSpace(s),i.getCurrentColorFormat(s),i.getCurrentDepthStencilFormat(s),i.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,n,i,s,r){return this.textureUtils.copyTextureToBuffer(e,t,n,i,s,r)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const n=this.get(e);if(!n.timeStampQuerySet){const i=e.isComputeNode?"compute":"render",s=this.device.createQuerySet({type:"timestamp",count:2,label:`timestamp_${i}_${e.id}`});Object.assign(t,{timestampWrites:{querySet:s,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}}),n.timeStampQuerySet=s}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const n=this.get(e),i=2*BigInt64Array.BYTES_PER_ELEMENT;n.currentTimestampQueryBuffers===void 0&&(n.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})});const{resolveBuffer:s,resultBuffer:r}=n.currentTimestampQueryBuffers;t.resolveQuerySet(n.timeStampQuerySet,0,2,s,0),r.mapState==="unmapped"&&t.copyBufferToBuffer(s,0,r,0,i)}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const n=this.get(e);if(n.currentTimestampQueryBuffers===void 0)return;const{resultBuffer:i}=n.currentTimestampQueryBuffers;await this.device.queue.onSubmittedWorkDone(),i.mapState==="unmapped"&&i.mapAsync(GPUMapMode.READ).then(()=>{const s=new BigUint64Array(i.getMappedRange()),r=Number(s[1]-s[0])/1e6;this.renderer.info.updateTimestamp(t,r),i.unmap()})}createNodeBuilder(e,t){return new BU(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const n=this.get(e),s=n.currentPass.finish();this.get(t).bundleGPU=s,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,n=null,i=null,s=0){let r=0,a=0,c=0,l=0,u=0,h=0,d=e.image.width,f=e.image.height;n!==null&&(l=n.x,u=n.y,h=n.z||0,d=n.width,f=n.height),i!==null&&(r=i.x,a=i.y,c=i.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,g=this.get(t).texture;p.copyTextureToTexture({texture:m,mipLevel:s,origin:{x:l,y:u,z:h}},{texture:g,mipLevel:s,origin:{x:r,y:a,z:c}},[d,f,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t,n){const i=this.get(t);let s=null;t.renderTarget?e.isDepthTexture?s=this.get(t.depthTexture).texture:s=this.get(t.textures[0]).texture:e.isDepthTexture?s=this.textureUtils.getDepthBuffer(t.depth,t.stencil):s=this.context.getCurrentTexture();const r=this.get(e).texture;if(s.format!==r.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",s.format,r.format);return}let a;if(i.currentPass?(i.currentPass.end(),a=i.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:s,origin:[n.x,n.y,0]},{texture:r},[n.z,n.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),i.currentPass){const{descriptor:c}=i;for(let l=0;l<c.colorAttachments.length;l++)c.colorAttachments[l].loadOp=Lt.Load;if(t.depth&&(c.depthStencilAttachment.depthLoadOp=Lt.Load),t.stencil&&(c.depthStencilAttachment.stencilLoadOp=Lt.Load),i.currentPass=a.beginRenderPass(c),i.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:l,y:u,width:h,height:d}=t.scissorValue;i.currentPass.setScissorRect(l,u,h,d)}}else this.device.queue.submit([a.finish()])}}class jU extends qv{constructor(e,t,n,i,s,r){super(e,t,n,i,s,r),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class $U extends _b{constructor(){super(),this.addMaterial(oC,"MeshPhongMaterial"),this.addMaterial(eu,"MeshStandardMaterial"),this.addMaterial(OC,"MeshPhysicalMaterial"),this.addMaterial(GC,"MeshToonMaterial"),this.addMaterial(J2,"MeshBasicMaterial"),this.addMaterial(sC,"MeshLambertMaterial"),this.addMaterial($2,"MeshNormalMaterial"),this.addMaterial(qC,"MeshMatcapMaterial"),this.addMaterial(k2,"LineBasicMaterial"),this.addMaterial(G2,"LineDashedMaterial"),this.addMaterial($C,"PointsMaterial"),this.addMaterial(ZC,"SpriteMaterial"),this.addMaterial(JC,"ShadowMaterial"),this.addLight(XP,N1),this.addLight(ID,jv),this.addLight(BD,E1),this.addLight(gb,qv),this.addLight(VD,$v),this.addLight(kD,M1),this.addLight(zD,P1),this.addLight(OD,jU),this.addToneMapping(Bx,tS),this.addToneMapping(Ox,nS),this.addToneMapping(Vx,iS),this.addToneMapping(kx,sS),this.addToneMapping(zx,rS),this.addToneMapping(Gx,oS)}}class XU extends QD{constructor(e={}){let t;e.forceWebGL?t=Rg:(t=qU,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Rg(e)));const n=new t(e);super(n,e),this.library=new $U,this.isWebGPURenderer=!0}}function YU(){var o=Object.create(null);function e(i,s){var r=i.id,a=i.name,c=i.dependencies;c===void 0&&(c=[]);var l=i.init;l===void 0&&(l=function(){});var u=i.getTransferables;if(u===void 0&&(u=null),!o[r])try{c=c.map(function(d){return d&&d.isWorkerModule&&(e(d,function(f){if(f instanceof Error)throw f}),d=o[d.id].value),d}),l=n("<"+a+">.init",l),u&&(u=n("<"+a+">.getTransferables",u));var h=null;typeof l=="function"?h=l.apply(void 0,c):console.error("worker module init function failed to rehydrate"),o[r]={id:r,value:h,getTransferables:u},s(h)}catch(d){d&&d.noLog||console.error(d),s(d)}}function t(i,s){var r,a=i.id,c=i.args;(!o[a]||typeof o[a].value!="function")&&s(new Error("Worker module "+a+": not found or its 'init' did not return a function"));try{var l=(r=o[a]).value.apply(r,c);l&&typeof l.then=="function"?l.then(u,function(h){return s(h instanceof Error?h:new Error(""+h))}):u(l)}catch(h){s(h)}function u(h){try{var d=o[a].getTransferables&&o[a].getTransferables(h);(!d||!Array.isArray(d)||!d.length)&&(d=void 0),s(h,d)}catch(f){console.error(f),s(f)}}}function n(i,s){var r=void 0;self.troikaDefine=function(c){return r=c};var a=URL.createObjectURL(new Blob(["/** "+i.replace(/\*/g,"")+` **/

troikaDefine(
`+s+`
)`],{type:"application/javascript"}));try{importScripts(a)}catch(c){console.error(c)}return URL.revokeObjectURL(a),delete self.troikaDefine,r}self.addEventListener("message",function(i){var s=i.data,r=s.messageId,a=s.action,c=s.data;try{a==="registerModule"&&e(c,function(l){l instanceof Error?postMessage({messageId:r,success:!1,error:l.message}):postMessage({messageId:r,success:!0,result:{isCallable:typeof l=="function"}})}),a==="callModule"&&t(c,function(l,u){l instanceof Error?postMessage({messageId:r,success:!1,error:l.message}):postMessage({messageId:r,success:!0,result:l},u||void 0)})}catch(l){postMessage({messageId:r,success:!1,error:l.stack})}})}function ZU(o){var e=function(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];return e._getInitResult().then(function(i){if(typeof i=="function")return i.apply(void 0,t);throw new Error("Worker module function was called but `init` did not return a callable function")})};return e._getInitResult=function(){var t=o.dependencies,n=o.init;t=Array.isArray(t)?t.map(function(s){return s&&(s=s.onMainThread||s,s._getInitResult&&(s=s._getInitResult())),s}):[];var i=Promise.all(t).then(function(s){return n.apply(null,s)});return e._getInitResult=function(){return i},i},e}var Nb=function(){var o=!1;if(typeof window<"u"&&typeof window.document<"u")try{var e=new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"})));e.terminate(),o=!0}catch(t){typeof process<"u",console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+t.message+"]")}return Nb=function(){return o},o},KU=0,QU=0,Vh=!1,oa=Object.create(null),aa=Object.create(null),Fd=Object.create(null);function vo(o){if((!o||typeof o.init!="function")&&!Vh)throw new Error("requires `options.init` function");var e=o.dependencies,t=o.init,n=o.getTransferables,i=o.workerId,s=ZU(o);i==null&&(i="#default");var r="workerModule"+ ++KU,a=o.name||r,c=null;e=e&&e.map(function(u){return typeof u=="function"&&!u.workerModuleData&&(Vh=!0,u=vo({workerId:i,name:"<"+a+"> function dependency: "+u.name,init:`function(){return (
`+il(u)+`
)}`}),Vh=!1),u&&u.workerModuleData&&(u=u.workerModuleData),u});function l(){for(var u=[],h=arguments.length;h--;)u[h]=arguments[h];if(!Nb())return s.apply(void 0,u);if(!c){c=Bg(i,"registerModule",l.workerModuleData);var d=function(){c=null,aa[i].delete(d)};(aa[i]||(aa[i]=new Set)).add(d)}return c.then(function(f){var p=f.isCallable;if(p)return Bg(i,"callModule",{id:r,args:u});throw new Error("Worker module function was called but `init` did not return a callable function")})}return l.workerModuleData={isWorkerModule:!0,id:r,name:a,dependencies:e,init:il(t),getTransferables:n&&il(n)},l.onMainThread=s,l}function JU(o){aa[o]&&aa[o].forEach(function(e){e()}),oa[o]&&(oa[o].terminate(),delete oa[o])}function il(o){var e=o.toString();return!/^function/.test(e)&&/^\w+\s*\(/.test(e)&&(e="function "+e),e}function eL(o){var e=oa[o];if(!e){var t=il(YU);e=oa[o]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+o.replace(/\*/g,"")+` **/

;(`+t+")()"],{type:"application/javascript"}))),e.onmessage=function(n){var i=n.data,s=i.messageId,r=Fd[s];if(!r)throw new Error("WorkerModule response with empty or unknown messageId");delete Fd[s],r(i)}}return e}function Bg(o,e,t){return new Promise(function(n,i){var s=++QU;Fd[s]=function(r){r.success?n(r.result):i(new Error("Error in worker "+e+" call: "+r.error))},eL(o).postMessage({messageId:s,action:e,data:t})})}function Cb(){var o=function(e){function t(Y,j,R,V,G,Q,z,ae){var Z=1-z;ae.x=Z*Z*Y+2*Z*z*R+z*z*G,ae.y=Z*Z*j+2*Z*z*V+z*z*Q}function n(Y,j,R,V,G,Q,z,ae,Z,re){var ye=1-Z;re.x=ye*ye*ye*Y+3*ye*ye*Z*R+3*ye*Z*Z*G+Z*Z*Z*z,re.y=ye*ye*ye*j+3*ye*ye*Z*V+3*ye*Z*Z*Q+Z*Z*Z*ae}function i(Y,j){for(var R=/([MLQCZ])([^MLQCZ]*)/g,V,G,Q,z,ae;V=R.exec(Y);){var Z=V[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(re){return parseFloat(re)});switch(V[1]){case"M":z=G=Z[0],ae=Q=Z[1];break;case"L":(Z[0]!==z||Z[1]!==ae)&&j("L",z,ae,z=Z[0],ae=Z[1]);break;case"Q":{j("Q",z,ae,z=Z[2],ae=Z[3],Z[0],Z[1]);break}case"C":{j("C",z,ae,z=Z[4],ae=Z[5],Z[0],Z[1],Z[2],Z[3]);break}case"Z":(z!==G||ae!==Q)&&j("L",z,ae,G,Q);break}}}function s(Y,j,R){R===void 0&&(R=16);var V={x:0,y:0};i(Y,function(G,Q,z,ae,Z,re,ye,be,ue){switch(G){case"L":j(Q,z,ae,Z);break;case"Q":{for(var B=Q,oe=z,ee=1;ee<R;ee++)t(Q,z,re,ye,ae,Z,ee/(R-1),V),j(B,oe,V.x,V.y),B=V.x,oe=V.y;break}case"C":{for(var ce=Q,se=z,ve=1;ve<R;ve++)n(Q,z,re,ye,be,ue,ae,Z,ve/(R-1),V),j(ce,se,V.x,V.y),ce=V.x,se=V.y;break}}})}var r="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",a="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",c=new WeakMap,l={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function u(Y,j){var R=Y.getContext?Y.getContext("webgl",l):Y,V=c.get(R);if(!V){let ce=function($){var Me=Q[$];if(!Me&&(Me=Q[$]=R.getExtension($),!Me))throw new Error($+" not supported");return Me},se=function($,Me){var fe=R.createShader(Me);return R.shaderSource(fe,$),R.compileShader(fe),fe},ve=function($,Me,fe,_e){if(!z[$]){var xe={},st={},Te=R.createProgram();R.attachShader(Te,se(Me,R.VERTEX_SHADER)),R.attachShader(Te,se(fe,R.FRAGMENT_SHADER)),R.linkProgram(Te),z[$]={program:Te,transaction:function(Ue){R.useProgram(Te),Ue({setUniform:function(Ze,at){for(var ke=[],Oe=arguments.length-2;Oe-- >0;)ke[Oe]=arguments[Oe+2];var we=st[at]||(st[at]=R.getUniformLocation(Te,at));R["uniform"+Ze].apply(R,[we].concat(ke))},setAttribute:function(Ze,at,ke,Oe,we){var Qe=xe[Ze];Qe||(Qe=xe[Ze]={buf:R.createBuffer(),loc:R.getAttribLocation(Te,Ze),data:null}),R.bindBuffer(R.ARRAY_BUFFER,Qe.buf),R.vertexAttribPointer(Qe.loc,at,R.FLOAT,!1,0,0),R.enableVertexAttribArray(Qe.loc),G?R.vertexAttribDivisor(Qe.loc,Oe):ce("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(Qe.loc,Oe),we!==Qe.data&&(R.bufferData(R.ARRAY_BUFFER,we,ke),Qe.data=we)}})}}}z[$].transaction(_e)},ne=function($,Me){Z++;try{R.activeTexture(R.TEXTURE0+Z);var fe=ae[$];fe||(fe=ae[$]=R.createTexture(),R.bindTexture(R.TEXTURE_2D,fe),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MIN_FILTER,R.NEAREST),R.texParameteri(R.TEXTURE_2D,R.TEXTURE_MAG_FILTER,R.NEAREST)),R.bindTexture(R.TEXTURE_2D,fe),Me(fe,Z)}finally{Z--}},de=function($,Me,fe){var _e=R.createFramebuffer();re.push(_e),R.bindFramebuffer(R.FRAMEBUFFER,_e),R.activeTexture(R.TEXTURE0+Me),R.bindTexture(R.TEXTURE_2D,$),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,$,0);try{fe(_e)}finally{R.deleteFramebuffer(_e),R.bindFramebuffer(R.FRAMEBUFFER,re[--re.length-1]||null)}},me=function(){Q={},z={},ae={},Z=-1,re.length=0};var ye=ce,be=se,ue=ve,B=ne,oe=de,ee=me,G=typeof WebGL2RenderingContext<"u"&&R instanceof WebGL2RenderingContext,Q={},z={},ae={},Z=-1,re=[];R.canvas.addEventListener("webglcontextlost",function($){me(),$.preventDefault()},!1),c.set(R,V={gl:R,isWebGL2:G,getExtension:ce,withProgram:ve,withTexture:ne,withTextureFramebuffer:de,handleContextLoss:me})}j(V)}function h(Y,j,R,V,G,Q,z,ae){z===void 0&&(z=15),ae===void 0&&(ae=null),u(Y,function(Z){var re=Z.gl,ye=Z.withProgram,be=Z.withTexture;be("copy",function(ue,B){re.texImage2D(re.TEXTURE_2D,0,re.RGBA,G,Q,0,re.RGBA,re.UNSIGNED_BYTE,j),ye("copy",r,a,function(oe){var ee=oe.setUniform,ce=oe.setAttribute;ce("aUV",2,re.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),ee("1i","image",B),re.bindFramebuffer(re.FRAMEBUFFER,ae||null),re.disable(re.BLEND),re.colorMask(z&8,z&4,z&2,z&1),re.viewport(R,V,G,Q),re.scissor(R,V,G,Q),re.drawArrays(re.TRIANGLES,0,3)})})})}function d(Y,j,R){var V=Y.width,G=Y.height;u(Y,function(Q){var z=Q.gl,ae=new Uint8Array(V*G*4);z.readPixels(0,0,V,G,z.RGBA,z.UNSIGNED_BYTE,ae),Y.width=j,Y.height=R,h(z,ae,0,0,V,G)})}var f=Object.freeze({__proto__:null,withWebGLContext:u,renderImageData:h,resizeWebGLCanvasWithoutClearing:d});function p(Y,j,R,V,G,Q){Q===void 0&&(Q=1);var z=new Uint8Array(Y*j),ae=V[2]-V[0],Z=V[3]-V[1],re=[];s(R,function(ce,se,ve,ne){re.push({x1:ce,y1:se,x2:ve,y2:ne,minX:Math.min(ce,ve),minY:Math.min(se,ne),maxX:Math.max(ce,ve),maxY:Math.max(se,ne)})}),re.sort(function(ce,se){return ce.maxX-se.maxX});for(var ye=0;ye<Y;ye++)for(var be=0;be<j;be++){var ue=oe(V[0]+ae*(ye+.5)/Y,V[1]+Z*(be+.5)/j),B=Math.pow(1-Math.abs(ue)/G,Q)/2;ue<0&&(B=1-B),B=Math.max(0,Math.min(255,Math.round(B*255))),z[be*Y+ye]=B}return z;function oe(ce,se){for(var ve=1/0,ne=1/0,de=re.length;de--;){var me=re[de];if(me.maxX+ne<=ce)break;if(ce+ne>me.minX&&se-ne<me.maxY&&se+ne>me.minY){var $=_(ce,se,me.x1,me.y1,me.x2,me.y2);$<ve&&(ve=$,ne=Math.sqrt(ve))}}return ee(ce,se)&&(ne=-ne),ne}function ee(ce,se){for(var ve=0,ne=re.length;ne--;){var de=re[ne];if(de.maxX<=ce)break;var me=de.y1>se!=de.y2>se&&ce<(de.x2-de.x1)*(se-de.y1)/(de.y2-de.y1)+de.x1;me&&(ve+=de.y1<de.y2?1:-1)}return ve!==0}}function m(Y,j,R,V,G,Q,z,ae,Z,re){Q===void 0&&(Q=1),ae===void 0&&(ae=0),Z===void 0&&(Z=0),re===void 0&&(re=0),g(Y,j,R,V,G,Q,z,null,ae,Z,re)}function g(Y,j,R,V,G,Q,z,ae,Z,re,ye){Q===void 0&&(Q=1),Z===void 0&&(Z=0),re===void 0&&(re=0),ye===void 0&&(ye=0);for(var be=p(Y,j,R,V,G,Q),ue=new Uint8Array(be.length*4),B=0;B<be.length;B++)ue[B*4+ye]=be[B];h(z,ue,Z,re,Y,j,1<<3-ye,ae)}function _(Y,j,R,V,G,Q){var z=G-R,ae=Q-V,Z=z*z+ae*ae,re=Z?Math.max(0,Math.min(1,((Y-R)*z+(j-V)*ae)/Z)):0,ye=Y-(R+re*z),be=j-(V+re*ae);return ye*ye+be*be}var x=Object.freeze({__proto__:null,generate:p,generateIntoCanvas:m,generateIntoFramebuffer:g}),y="precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",b="precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",M="precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",N=new Float32Array([0,0,2,0,0,2]),T=null,w=!1,L={},I=new WeakMap;function W(Y){if(!w&&!te(Y))throw new Error("WebGL generation not supported")}function D(Y,j,R,V,G,Q,z){if(Q===void 0&&(Q=1),z===void 0&&(z=null),!z&&(z=T,!z)){var ae=typeof OffscreenCanvas=="function"?new OffscreenCanvas(1,1):typeof document<"u"?document.createElement("canvas"):null;if(!ae)throw new Error("OffscreenCanvas or DOM canvas not supported");z=T=ae.getContext("webgl",{depth:!1})}W(z);var Z=new Uint8Array(Y*j*4);u(z,function(ue){var B=ue.gl,oe=ue.withTexture,ee=ue.withTextureFramebuffer;oe("readable",function(ce,se){B.texImage2D(B.TEXTURE_2D,0,B.RGBA,Y,j,0,B.RGBA,B.UNSIGNED_BYTE,null),ee(ce,se,function(ve){O(Y,j,R,V,G,Q,B,ve,0,0,0),B.readPixels(0,0,Y,j,B.RGBA,B.UNSIGNED_BYTE,Z)})})});for(var re=new Uint8Array(Y*j),ye=0,be=0;ye<Z.length;ye+=4)re[be++]=Z[ye];return re}function k(Y,j,R,V,G,Q,z,ae,Z,re){Q===void 0&&(Q=1),ae===void 0&&(ae=0),Z===void 0&&(Z=0),re===void 0&&(re=0),O(Y,j,R,V,G,Q,z,null,ae,Z,re)}function O(Y,j,R,V,G,Q,z,ae,Z,re,ye){Q===void 0&&(Q=1),Z===void 0&&(Z=0),re===void 0&&(re=0),ye===void 0&&(ye=0),W(z);var be=[];s(R,function(ue,B,oe,ee){be.push(ue,B,oe,ee)}),be=new Float32Array(be),u(z,function(ue){var B=ue.gl,oe=ue.isWebGL2,ee=ue.getExtension,ce=ue.withProgram,se=ue.withTexture,ve=ue.withTextureFramebuffer,ne=ue.handleContextLoss;if(se("rawDistances",function(de,me){(Y!==de._lastWidth||j!==de._lastHeight)&&B.texImage2D(B.TEXTURE_2D,0,B.RGBA,de._lastWidth=Y,de._lastHeight=j,0,B.RGBA,B.UNSIGNED_BYTE,null),ce("main",y,b,function($){var Me=$.setAttribute,fe=$.setUniform,_e=!oe&&ee("ANGLE_instanced_arrays"),xe=!oe&&ee("EXT_blend_minmax");Me("aUV",2,B.STATIC_DRAW,0,N),Me("aLineSegment",4,B.DYNAMIC_DRAW,1,be),fe.apply(void 0,["4f","uGlyphBounds"].concat(V)),fe("1f","uMaxDistance",G),fe("1f","uExponent",Q),ve(de,me,function(st){B.enable(B.BLEND),B.colorMask(!0,!0,!0,!0),B.viewport(0,0,Y,j),B.scissor(0,0,Y,j),B.blendFunc(B.ONE,B.ONE),B.blendEquationSeparate(B.FUNC_ADD,oe?B.MAX:xe.MAX_EXT),B.clear(B.COLOR_BUFFER_BIT),oe?B.drawArraysInstanced(B.TRIANGLES,0,3,be.length/4):_e.drawArraysInstancedANGLE(B.TRIANGLES,0,3,be.length/4)})}),ce("post",r,M,function($){$.setAttribute("aUV",2,B.STATIC_DRAW,0,N),$.setUniform("1i","tex",me),B.bindFramebuffer(B.FRAMEBUFFER,ae),B.disable(B.BLEND),B.colorMask(ye===0,ye===1,ye===2,ye===3),B.viewport(Z,re,Y,j),B.scissor(Z,re,Y,j),B.drawArrays(B.TRIANGLES,0,3)})}),B.isContextLost())throw ne(),new Error("webgl context lost")})}function te(Y){var j=!Y||Y===T?L:Y.canvas||Y,R=I.get(j);if(R===void 0){w=!0;var V=null;try{var G=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],Q=D(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,Y);R=Q&&G.length===Q.length&&Q.every(function(z,ae){return z===G[ae]}),R||(V="bad trial run results",console.info(G,Q))}catch(z){R=!1,V=z.message}V&&console.warn("WebGL SDF generation not supported:",V),w=!1,I.set(j,R)}return R}var ie=Object.freeze({__proto__:null,generate:D,generateIntoCanvas:k,generateIntoFramebuffer:O,isSupported:te});function ge(Y,j,R,V,G,Q){G===void 0&&(G=Math.max(V[2]-V[0],V[3]-V[1])/2),Q===void 0&&(Q=1);try{return D.apply(ie,arguments)}catch(z){return console.info("WebGL SDF generation failed, falling back to JS",z),p.apply(x,arguments)}}function Se(Y,j,R,V,G,Q,z,ae,Z,re){G===void 0&&(G=Math.max(V[2]-V[0],V[3]-V[1])/2),Q===void 0&&(Q=1),ae===void 0&&(ae=0),Z===void 0&&(Z=0),re===void 0&&(re=0);try{return k.apply(ie,arguments)}catch(ye){return console.info("WebGL SDF generation failed, falling back to JS",ye),m.apply(x,arguments)}}return e.forEachPathCommand=i,e.generate=ge,e.generateIntoCanvas=Se,e.javascript=x,e.pathToLineSegments=s,e.webgl=ie,e.webglUtils=f,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return o}function tL(){var o=function(e){var t={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},n={},i={};n.L=1,i[1]="L",Object.keys(t).forEach(function(ne,de){n[ne]=1<<de+1,i[n[ne]]=ne}),Object.freeze(n);var s=n.LRI|n.RLI|n.FSI,r=n.L|n.R|n.AL,a=n.B|n.S|n.WS|n.ON|n.FSI|n.LRI|n.RLI|n.PDI,c=n.BN|n.RLE|n.LRE|n.RLO|n.LRO|n.PDF,l=n.S|n.WS|n.B|s|n.PDI|c,u=null;function h(){if(!u){u=new Map;var ne=function(me){if(t.hasOwnProperty(me)){var $=0;t[me].split(",").forEach(function(Me){var fe=Me.split("+"),_e=fe[0],xe=fe[1];_e=parseInt(_e,36),xe=xe?parseInt(xe,36):0,u.set($+=_e,n[me]);for(var st=0;st<xe;st++)u.set(++$,n[me])})}};for(var de in t)ne(de)}}function d(ne){return h(),u.get(ne.codePointAt(0))||n.L}function f(ne){return i[d(ne)]}var p={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function m(ne,de){var me=36,$=0,Me=new Map,fe=de&&new Map,_e;return ne.split(",").forEach(function xe(st){if(st.indexOf("+")!==-1)for(var Te=+st;Te--;)xe(_e);else{_e=st;var De=st.split(">"),Ue=De[0],je=De[1];Ue=String.fromCodePoint($+=parseInt(Ue,me)),je=String.fromCodePoint($+=parseInt(je,me)),Me.set(Ue,je),de&&fe.set(je,Ue)}}),{map:Me,reverseMap:fe}}var g,_,x;function y(){if(!g){var ne=m(p.pairs,!0),de=ne.map,me=ne.reverseMap;g=de,_=me,x=m(p.canonical,!1).map}}function b(ne){return y(),g.get(ne)||null}function M(ne){return y(),_.get(ne)||null}function N(ne){return y(),x.get(ne)||null}var T=n.L,w=n.R,L=n.EN,I=n.ES,W=n.ET,D=n.AN,k=n.CS,O=n.B,te=n.S,ie=n.ON,ge=n.BN,Se=n.NSM,Y=n.AL,j=n.LRO,R=n.RLO,V=n.LRE,G=n.RLE,Q=n.PDF,z=n.LRI,ae=n.RLI,Z=n.FSI,re=n.PDI;function ye(ne,de){for(var me=125,$=new Uint32Array(ne.length),Me=0;Me<ne.length;Me++)$[Me]=d(ne[Me]);var fe=new Map;function _e(gn,Zn){var vn=$[gn];$[gn]=Zn,fe.set(vn,fe.get(vn)-1),vn&a&&fe.set(a,fe.get(a)-1),fe.set(Zn,(fe.get(Zn)||0)+1),Zn&a&&fe.set(a,(fe.get(a)||0)+1)}for(var xe=new Uint8Array(ne.length),st=new Map,Te=[],De=null,Ue=0;Ue<ne.length;Ue++)De||Te.push(De={start:Ue,end:ne.length-1,level:de==="rtl"?1:de==="ltr"?0:Gp(Ue,!1)}),$[Ue]&O&&(De.end=Ue,De=null);for(var je=G|V|R|j|s|re|Q|O,Ze=function(gn){return gn+(gn&1?1:2)},at=function(gn){return gn+(gn&1?2:1)},ke=0;ke<Te.length;ke++){De=Te[ke];var Oe=[{_level:De.level,_override:0,_isolate:0}],we=void 0,Qe=0,gt=0,mn=0;fe.clear();for(var dt=De.start;dt<=De.end;dt++){var Le=$[dt];if(we=Oe[Oe.length-1],fe.set(Le,(fe.get(Le)||0)+1),Le&a&&fe.set(a,(fe.get(a)||0)+1),Le&je)if(Le&(G|V)){xe[dt]=we._level;var ct=(Le===G?at:Ze)(we._level);ct<=me&&!Qe&&!gt?Oe.push({_level:ct,_override:0,_isolate:0}):Qe||gt++}else if(Le&(R|j)){xe[dt]=we._level;var Ki=(Le===R?at:Ze)(we._level);Ki<=me&&!Qe&&!gt?Oe.push({_level:Ki,_override:Le&R?w:T,_isolate:0}):Qe||gt++}else if(Le&s){Le&Z&&(Le=Gp(dt+1,!0)===1?ae:z),xe[dt]=we._level,we._override&&_e(dt,we._override);var lt=(Le===ae?at:Ze)(we._level);lt<=me&&Qe===0&&gt===0?(mn++,Oe.push({_level:lt,_override:0,_isolate:1,_isolInitIndex:dt})):Qe++}else if(Le&re){if(Qe>0)Qe--;else if(mn>0){for(gt=0;!Oe[Oe.length-1]._isolate;)Oe.pop();var $e=Oe[Oe.length-1]._isolInitIndex;$e!=null&&(st.set($e,dt),st.set(dt,$e)),Oe.pop(),mn--}we=Oe[Oe.length-1],xe[dt]=we._level,we._override&&_e(dt,we._override)}else Le&Q?(Qe===0&&(gt>0?gt--:!we._isolate&&Oe.length>1&&(Oe.pop(),we=Oe[Oe.length-1])),xe[dt]=we._level):Le&O&&(xe[dt]=De.level);else xe[dt]=we._level,we._override&&Le!==ge&&_e(dt,we._override)}for(var Dt=[],vt=null,He=De.start;He<=De.end;He++){var _t=$[He];if(!(_t&c)){var ln=xe[He],tn=_t&s,Vt=_t===re;vt&&ln===vt._level?(vt._end=He,vt._endsWithIsolInit=tn):Dt.push(vt={_start:He,_end:He,_level:ln,_startsWithPDI:Vt,_endsWithIsolInit:tn})}}for(var Xn=[],Qi=0;Qi<Dt.length;Qi++){var Ai=Dt[Qi];if(!Ai._startsWithPDI||Ai._startsWithPDI&&!st.has(Ai._start)){for(var Ji=[vt=Ai],Ns=void 0;vt&&vt._endsWithIsolInit&&(Ns=st.get(vt._end))!=null;)for(var Ni=Qi+1;Ni<Dt.length;Ni++)if(Dt[Ni]._start===Ns){Ji.push(vt=Dt[Ni]);break}for(var un=[],Cs=0;Cs<Ji.length;Cs++)for(var Sp=Ji[Cs],cu=Sp._start;cu<=Sp._end;cu++)un.push(cu);for(var kb=xe[un[0]],Tp=De.level,Ga=un[0]-1;Ga>=0;Ga--)if(!($[Ga]&c)){Tp=xe[Ga];break}var lu=un[un.length-1],zb=xe[lu],Mp=De.level;if(!($[lu]&s)){for(var Ha=lu+1;Ha<=De.end;Ha++)if(!($[Ha]&c)){Mp=xe[Ha];break}}Xn.push({_seqIndices:un,_sosType:Math.max(Tp,kb)%2?w:T,_eosType:Math.max(Mp,zb)%2?w:T})}}for(var uu=0;uu<Xn.length;uu++){var hu=Xn[uu],Ce=hu._seqIndices,_o=hu._sosType,Gb=hu._eosType,pr=xe[Ce[0]]&1?w:T;if(fe.get(Se))for(var Wa=0;Wa<Ce.length;Wa++){var wp=Ce[Wa];if($[wp]&Se){for(var du=_o,qa=Wa-1;qa>=0;qa--)if(!($[Ce[qa]]&c)){du=$[Ce[qa]];break}_e(wp,du&(s|re)?ie:du)}}if(fe.get(L))for(var ja=0;ja<Ce.length;ja++){var Ap=Ce[ja];if($[Ap]&L)for(var $a=ja-1;$a>=-1;$a--){var Np=$a===-1?_o:$[Ce[$a]];if(Np&r){Np===Y&&_e(Ap,D);break}}}if(fe.get(Y))for(var fu=0;fu<Ce.length;fu++){var Cp=Ce[fu];$[Cp]&Y&&_e(Cp,w)}if(fe.get(I)||fe.get(k))for(var yo=1;yo<Ce.length-1;yo++){var pu=Ce[yo];if($[pu]&(I|k)){for(var mr=0,mu=0,gu=yo-1;gu>=0&&(mr=$[Ce[gu]],!!(mr&c));gu--);for(var vu=yo+1;vu<Ce.length&&(mu=$[Ce[vu]],!!(mu&c));vu++);mr===mu&&($[pu]===I?mr===L:mr&(L|D))&&_e(pu,mr)}}if(fe.get(L))for(var oi=0;oi<Ce.length;oi++){var Hb=Ce[oi];if($[Hb]&L){for(var Xa=oi-1;Xa>=0&&$[Ce[Xa]]&(W|c);Xa--)_e(Ce[Xa],L);for(oi++;oi<Ce.length&&$[Ce[oi]]&(W|c|L);oi++)$[Ce[oi]]!==L&&_e(Ce[oi],L)}}if(fe.get(W)||fe.get(I)||fe.get(k))for(var xo=0;xo<Ce.length;xo++){var Ep=Ce[xo];if($[Ep]&(W|I|k)){_e(Ep,ie);for(var Ya=xo-1;Ya>=0&&$[Ce[Ya]]&c;Ya--)_e(Ce[Ya],ie);for(var Za=xo+1;Za<Ce.length&&$[Ce[Za]]&c;Za++)_e(Ce[Za],ie)}}if(fe.get(L))for(var _u=0,Rp=_o;_u<Ce.length;_u++){var Pp=Ce[_u],yu=$[Pp];yu&L?Rp===T&&_e(Pp,T):yu&r&&(Rp=yu)}if(fe.get(a)){var bo=w|L|D,Dp=bo|T,Ka=[];{for(var gr=[],vr=0;vr<Ce.length;vr++)if($[Ce[vr]]&a){var So=ne[Ce[vr]],Up=void 0;if(b(So)!==null)if(gr.length<63)gr.push({char:So,seqIndex:vr});else break;else if((Up=M(So))!==null)for(var To=gr.length-1;To>=0;To--){var xu=gr[To].char;if(xu===Up||xu===M(N(So))||b(N(xu))===So){Ka.push([gr[To].seqIndex,vr]),gr.length=To;break}}}Ka.sort(function(gn,Zn){return gn[0]-Zn[0]})}for(var bu=0;bu<Ka.length;bu++){for(var Lp=Ka[bu],Qa=Lp[0],Su=Lp[1],Fp=!1,Yn=0,Tu=Qa+1;Tu<Su;Tu++){var Ip=Ce[Tu];if($[Ip]&Dp){Fp=!0;var Bp=$[Ip]&bo?w:T;if(Bp===pr){Yn=Bp;break}}}if(Fp&&!Yn){Yn=_o;for(var Mu=Qa-1;Mu>=0;Mu--){var Op=Ce[Mu];if($[Op]&Dp){var Vp=$[Op]&bo?w:T;Vp!==pr?Yn=Vp:Yn=pr;break}}}if(Yn){if($[Ce[Qa]]=$[Ce[Su]]=Yn,Yn!==pr){for(var Mo=Qa+1;Mo<Ce.length;Mo++)if(!($[Ce[Mo]]&c)){d(ne[Ce[Mo]])&Se&&($[Ce[Mo]]=Yn);break}}if(Yn!==pr){for(var wo=Su+1;wo<Ce.length;wo++)if(!($[Ce[wo]]&c)){d(ne[Ce[wo]])&Se&&($[Ce[wo]]=Yn);break}}}}for(var es=0;es<Ce.length;es++)if($[Ce[es]]&a){for(var kp=es,wu=es,Au=_o,Ao=es-1;Ao>=0;Ao--)if($[Ce[Ao]]&c)kp=Ao;else{Au=$[Ce[Ao]]&bo?w:T;break}for(var zp=Gb,No=es+1;No<Ce.length;No++)if($[Ce[No]]&(a|c))wu=No;else{zp=$[Ce[No]]&bo?w:T;break}for(var Nu=kp;Nu<=wu;Nu++)$[Ce[Nu]]=Au===zp?Au:pr;es=wu}}}for(var An=De.start;An<=De.end;An++){var Wb=xe[An],Ja=$[An];if(Wb&1?Ja&(T|L|D)&&xe[An]++:Ja&w?xe[An]++:Ja&(D|L)&&(xe[An]+=2),Ja&c&&(xe[An]=An===0?De.level:xe[An-1]),An===De.end||d(ne[An])&(te|O))for(var ec=An;ec>=0&&d(ne[ec])&l;ec--)xe[ec]=De.level}}return{levels:xe,paragraphs:Te};function Gp(gn,Zn){for(var vn=gn;vn<ne.length;vn++){var ts=$[vn];if(ts&(w|Y))return 1;if(ts&(O|T)||Zn&&ts===re)return 0;if(ts&s){var Hp=qb(vn);vn=Hp===-1?ne.length:Hp}}return 0}function qb(gn){for(var Zn=1,vn=gn+1;vn<ne.length;vn++){var ts=$[vn];if(ts&O)break;if(ts&re){if(--Zn===0)return vn}else ts&s&&Zn++}return-1}}var be="14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",ue;function B(){if(!ue){var ne=m(be,!0),de=ne.map,me=ne.reverseMap;me.forEach(function($,Me){de.set(Me,$)}),ue=de}}function oe(ne){return B(),ue.get(ne)||null}function ee(ne,de,me,$){var Me=ne.length;me=Math.max(0,me==null?0:+me),$=Math.min(Me-1,$==null?Me-1:+$);for(var fe=new Map,_e=me;_e<=$;_e++)if(de[_e]&1){var xe=oe(ne[_e]);xe!==null&&fe.set(_e,xe)}return fe}function ce(ne,de,me,$){var Me=ne.length;me=Math.max(0,me==null?0:+me),$=Math.min(Me-1,$==null?Me-1:+$);var fe=[];return de.paragraphs.forEach(function(_e){var xe=Math.max(me,_e.start),st=Math.min($,_e.end);if(xe<st){for(var Te=de.levels.slice(xe,st+1),De=st;De>=xe&&d(ne[De])&l;De--)Te[De]=_e.level;for(var Ue=_e.level,je=1/0,Ze=0;Ze<Te.length;Ze++){var at=Te[Ze];at>Ue&&(Ue=at),at<je&&(je=at|1)}for(var ke=Ue;ke>=je;ke--)for(var Oe=0;Oe<Te.length;Oe++)if(Te[Oe]>=ke){for(var we=Oe;Oe+1<Te.length&&Te[Oe+1]>=ke;)Oe++;Oe>we&&fe.push([we+xe,Oe+xe])}}}),fe}function se(ne,de,me,$){var Me=ve(ne,de,me,$),fe=[].concat(ne);return Me.forEach(function(_e,xe){fe[xe]=(de.levels[_e]&1?oe(ne[_e]):null)||ne[_e]}),fe.join("")}function ve(ne,de,me,$){for(var Me=ce(ne,de,me,$),fe=[],_e=0;_e<ne.length;_e++)fe[_e]=_e;return Me.forEach(function(xe){for(var st=xe[0],Te=xe[1],De=fe.slice(st,Te+1),Ue=De.length;Ue--;)fe[Te-Ue]=De[Ue]}),fe}return e.closingToOpeningBracket=M,e.getBidiCharType=d,e.getBidiCharTypeName=f,e.getCanonicalBracket=N,e.getEmbeddingLevels=ye,e.getMirroredCharacter=oe,e.getMirroredCharactersMap=ee,e.getReorderSegments=ce,e.getReorderedIndices=ve,e.getReorderedString=se,e.openingToClosingBracket=b,Object.defineProperty(e,"__esModule",{value:!0}),e}({});return o}const Eb=/\bvoid\s+main\s*\(\s*\)\s*{/g;function Id(o){const e=/^[ \t]*#include +<([\w\d./]+)>/gm;function t(n,i){let s=gA[i];return s?Id(s):n}return o.replace(e,t)}const Xt=[];for(let o=0;o<256;o++)Xt[o]=(o<16?"0":"")+o.toString(16);function nL(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Xt[o&255]+Xt[o>>8&255]+Xt[o>>16&255]+Xt[o>>24&255]+"-"+Xt[e&255]+Xt[e>>8&255]+"-"+Xt[e>>16&15|64]+Xt[e>>24&255]+"-"+Xt[t&63|128]+Xt[t>>8&255]+"-"+Xt[t>>16&255]+Xt[t>>24&255]+Xt[n&255]+Xt[n>>8&255]+Xt[n>>16&255]+Xt[n>>24&255]).toUpperCase()}const Bs=Object.assign||function(){let o=arguments[0];for(let e=1,t=arguments.length;e<t;e++){let n=arguments[e];if(n)for(let i in n)Object.prototype.hasOwnProperty.call(n,i)&&(o[i]=n[i])}return o},iL=Date.now(),Og=new WeakMap,Vg=new Map;let sL=1e10;function Bd(o,e){const t=cL(e);let n=Og.get(o);if(n||Og.set(o,n=Object.create(null)),n[t])return new n[t];const i=`_onBeforeCompile${t}`,s=function(l,u){o.onBeforeCompile.call(this,l,u);const h=this.customProgramCacheKey()+"|"+l.vertexShader+"|"+l.fragmentShader;let d=Vg[h];if(!d){const f=rL(this,l,e,t);d=Vg[h]=f}l.vertexShader=d.vertexShader,l.fragmentShader=d.fragmentShader,Bs(l.uniforms,this.uniforms),e.timeUniform&&(l.uniforms[e.timeUniform]={get value(){return Date.now()-iL}}),this[i]&&this[i](l)},r=function(){return a(e.chained?o:o.clone())},a=function(l){const u=Object.create(l,c);return Object.defineProperty(u,"baseMaterial",{value:o}),Object.defineProperty(u,"id",{value:sL++}),u.uuid=nL(),u.uniforms=Bs({},l.uniforms,e.uniforms),u.defines=Bs({},l.defines,e.defines),u.defines[`TROIKA_DERIVED_MATERIAL_${t}`]="",u.extensions=Bs({},l.extensions,e.extensions),u._listeners=void 0,u},c={constructor:{value:r},isDerivedMaterial:{value:!0},type:{get:()=>o.type,set:l=>{o.type=l}},isDerivedFrom:{writable:!0,configurable:!0,value:function(l){const u=this.baseMaterial;return l===u||u.isDerivedMaterial&&u.isDerivedFrom(l)||!1}},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return o.customProgramCacheKey()+"|"+t}},onBeforeCompile:{get(){return s},set(l){this[i]=l}},copy:{writable:!0,configurable:!0,value:function(l){return o.copy.call(this,l),!o.isShaderMaterial&&!o.isDerivedMaterial&&(Bs(this.extensions,l.extensions),Bs(this.defines,l.defines),Bs(this.uniforms,vT.clone(l.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){const l=new o.constructor;return a(l).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let l=this._depthMaterial;return l||(l=this._depthMaterial=Bd(o.isDerivedMaterial?o.getDepthMaterial():new m1({depthPacking:gS}),e),l.defines.IS_DEPTH_MATERIAL="",l.uniforms=this.uniforms),l}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let l=this._distanceMaterial;return l||(l=this._distanceMaterial=Bd(o.isDerivedMaterial?o.getDistanceMaterial():new g1,e),l.defines.IS_DISTANCE_MATERIAL="",l.uniforms=this.uniforms),l}},dispose:{writable:!0,configurable:!0,value(){const{_depthMaterial:l,_distanceMaterial:u}=this;l&&l.dispose(),u&&u.dispose(),o.dispose.call(this)}}};return n[t]=r,new r}function rL(o,{vertexShader:e,fragmentShader:t},n,i){let{vertexDefs:s,vertexMainIntro:r,vertexMainOutro:a,vertexTransform:c,fragmentDefs:l,fragmentMainIntro:u,fragmentMainOutro:h,fragmentColorTransform:d,customRewriter:f,timeUniform:p}=n;if(s=s||"",r=r||"",a=a||"",l=l||"",u=u||"",h=h||"",(c||f)&&(e=Id(e)),(d||f)&&(t=t.replace(/^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,`
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`),t=Id(t)),f){let m=f({vertexShader:e,fragmentShader:t});e=m.vertexShader,t=m.fragmentShader}if(d){let m=[];t=t.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,g=>(m.push(g),"")),h=`${d}
${m.join(`
`)}
${h}`}if(p){const m=`
uniform float ${p};
`;s=m+s,l=m+l}return c&&(e=`vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`,s=`${s}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${c}
}
`,r=`
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${r}
`,e=e.replace(/\b(position|normal|uv)\b/g,(m,g,_,x)=>/\battribute\s+vec[23]\s+$/.test(x.substr(0,_))?g:`troika_${g}_${i}`),o.map&&o.map.channel>0||(e=e.replace(/\bMAP_UV\b/g,`troika_uv_${i}`))),e=kg(e,i,s,r,a),t=kg(t,i,l,u,h),{vertexShader:e,fragmentShader:t}}function kg(o,e,t,n,i){return(n||i||t)&&(o=o.replace(Eb,`
${t}
void troikaOrigMain${e}() {`),o+=`
void main() {
  ${n}
  troikaOrigMain${e}();
  ${i}
}`),o}function oL(o,e){return o==="uniforms"?void 0:typeof e=="function"?e.toString():e}let aL=0;const zg=new Map;function cL(o){const e=JSON.stringify(o,oL);let t=zg.get(e);return t==null&&zg.set(e,t=++aL),t}/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function lL(){return typeof window>"u"&&(self.window=self),function(o){var e={parse:function(i){var s=e._bin,r=new Uint8Array(i);if(s.readASCII(r,0,4)=="ttcf"){var a=4;s.readUshort(r,a),a+=2,s.readUshort(r,a),a+=2;var c=s.readUint(r,a);a+=4;for(var l=[],u=0;u<c;u++){var h=s.readUint(r,a);a+=4,l.push(e._readFont(r,h))}return l}return[e._readFont(r,0)]},_readFont:function(i,s){var r=e._bin,a=s;r.readFixed(i,s),s+=4;var c=r.readUshort(i,s);s+=2,r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2;for(var l=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],u={_data:i,_offset:a},h={},d=0;d<c;d++){var f=r.readASCII(i,s,4);s+=4,r.readUint(i,s),s+=4;var p=r.readUint(i,s);s+=4;var m=r.readUint(i,s);s+=4,h[f]={offset:p,length:m}}for(d=0;d<l.length;d++){var g=l[d];h[g]&&(u[g.trim()]=e[g.trim()].parse(i,h[g].offset,h[g].length,u))}return u},_tabOffset:function(i,s,r){for(var a=e._bin,c=a.readUshort(i,r+4),l=r+12,u=0;u<c;u++){var h=a.readASCII(i,l,4);l+=4,a.readUint(i,l),l+=4;var d=a.readUint(i,l);if(l+=4,a.readUint(i,l),l+=4,h==s)return d}return 0}};e._bin={readFixed:function(i,s){return(i[s]<<8|i[s+1])+(i[s+2]<<8|i[s+3])/65540},readF2dot14:function(i,s){return e._bin.readShort(i,s)/16384},readInt:function(i,s){return e._bin._view(i).getInt32(s)},readInt8:function(i,s){return e._bin._view(i).getInt8(s)},readShort:function(i,s){return e._bin._view(i).getInt16(s)},readUshort:function(i,s){return e._bin._view(i).getUint16(s)},readUshorts:function(i,s,r){for(var a=[],c=0;c<r;c++)a.push(e._bin.readUshort(i,s+2*c));return a},readUint:function(i,s){return e._bin._view(i).getUint32(s)},readUint64:function(i,s){return 4294967296*e._bin.readUint(i,s)+e._bin.readUint(i,s+4)},readASCII:function(i,s,r){for(var a="",c=0;c<r;c++)a+=String.fromCharCode(i[s+c]);return a},readUnicode:function(i,s,r){for(var a="",c=0;c<r;c++){var l=i[s++]<<8|i[s++];a+=String.fromCharCode(l)}return a},_tdec:typeof window<"u"&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(i,s,r){var a=e._bin._tdec;return a&&s==0&&r==i.length?a.decode(i):e._bin.readASCII(i,s,r)},readBytes:function(i,s,r){for(var a=[],c=0;c<r;c++)a.push(i[s+c]);return a},readASCIIArray:function(i,s,r){for(var a=[],c=0;c<r;c++)a.push(String.fromCharCode(i[s+c]));return a},_view:function(i){return i._dataView||(i._dataView=i.buffer?new DataView(i.buffer,i.byteOffset,i.byteLength):new DataView(new Uint8Array(i).buffer))}},e._lctf={},e._lctf.parse=function(i,s,r,a,c){var l=e._bin,u={},h=s;l.readFixed(i,s),s+=4;var d=l.readUshort(i,s);s+=2;var f=l.readUshort(i,s);s+=2;var p=l.readUshort(i,s);return s+=2,u.scriptList=e._lctf.readScriptList(i,h+d),u.featureList=e._lctf.readFeatureList(i,h+f),u.lookupList=e._lctf.readLookupList(i,h+p,c),u},e._lctf.readLookupList=function(i,s,r){var a=e._bin,c=s,l=[],u=a.readUshort(i,s);s+=2;for(var h=0;h<u;h++){var d=a.readUshort(i,s);s+=2;var f=e._lctf.readLookupTable(i,c+d,r);l.push(f)}return l},e._lctf.readLookupTable=function(i,s,r){var a=e._bin,c=s,l={tabs:[]};l.ltype=a.readUshort(i,s),s+=2,l.flag=a.readUshort(i,s),s+=2;var u=a.readUshort(i,s);s+=2;for(var h=l.ltype,d=0;d<u;d++){var f=a.readUshort(i,s);s+=2;var p=r(i,h,c+f,l);l.tabs.push(p)}return l},e._lctf.numOfOnes=function(i){for(var s=0,r=0;r<32;r++)i>>>r&1&&s++;return s},e._lctf.readClassDef=function(i,s){var r=e._bin,a=[],c=r.readUshort(i,s);if(s+=2,c==1){var l=r.readUshort(i,s);s+=2;var u=r.readUshort(i,s);s+=2;for(var h=0;h<u;h++)a.push(l+h),a.push(l+h),a.push(r.readUshort(i,s)),s+=2}if(c==2){var d=r.readUshort(i,s);for(s+=2,h=0;h<d;h++)a.push(r.readUshort(i,s)),s+=2,a.push(r.readUshort(i,s)),s+=2,a.push(r.readUshort(i,s)),s+=2}return a},e._lctf.getInterval=function(i,s){for(var r=0;r<i.length;r+=3){var a=i[r],c=i[r+1];if(i[r+2],a<=s&&s<=c)return r}return-1},e._lctf.readCoverage=function(i,s){var r=e._bin,a={};a.fmt=r.readUshort(i,s),s+=2;var c=r.readUshort(i,s);return s+=2,a.fmt==1&&(a.tab=r.readUshorts(i,s,c)),a.fmt==2&&(a.tab=r.readUshorts(i,s,3*c)),a},e._lctf.coverageIndex=function(i,s){var r=i.tab;if(i.fmt==1)return r.indexOf(s);if(i.fmt==2){var a=e._lctf.getInterval(r,s);if(a!=-1)return r[a+2]+(s-r[a])}return-1},e._lctf.readFeatureList=function(i,s){var r=e._bin,a=s,c=[],l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readASCII(i,s,4);s+=4;var d=r.readUshort(i,s);s+=2;var f=e._lctf.readFeatureTable(i,a+d);f.tag=h.trim(),c.push(f)}return c},e._lctf.readFeatureTable=function(i,s){var r=e._bin,a=s,c={},l=r.readUshort(i,s);s+=2,l>0&&(c.featureParams=a+l);var u=r.readUshort(i,s);s+=2,c.tab=[];for(var h=0;h<u;h++)c.tab.push(r.readUshort(i,s+2*h));return c},e._lctf.readScriptList=function(i,s){var r=e._bin,a=s,c={},l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readASCII(i,s,4);s+=4;var d=r.readUshort(i,s);s+=2,c[h.trim()]=e._lctf.readScriptTable(i,a+d)}return c},e._lctf.readScriptTable=function(i,s){var r=e._bin,a=s,c={},l=r.readUshort(i,s);s+=2,l>0&&(c.default=e._lctf.readLangSysTable(i,a+l));var u=r.readUshort(i,s);s+=2;for(var h=0;h<u;h++){var d=r.readASCII(i,s,4);s+=4;var f=r.readUshort(i,s);s+=2,c[d.trim()]=e._lctf.readLangSysTable(i,a+f)}return c},e._lctf.readLangSysTable=function(i,s){var r=e._bin,a={};r.readUshort(i,s),s+=2,a.reqFeature=r.readUshort(i,s),s+=2;var c=r.readUshort(i,s);return s+=2,a.features=r.readUshorts(i,s,c),a},e.CFF={},e.CFF.parse=function(i,s,r){var a=e._bin;(i=new Uint8Array(i.buffer,s,r))[s=0],i[++s],i[++s],i[++s],s++;var c=[];s=e.CFF.readIndex(i,s,c);for(var l=[],u=0;u<c.length-1;u++)l.push(a.readASCII(i,s+c[u],c[u+1]-c[u]));s+=c[c.length-1];var h=[];s=e.CFF.readIndex(i,s,h);var d=[];for(u=0;u<h.length-1;u++)d.push(e.CFF.readDict(i,s+h[u],s+h[u+1]));s+=h[h.length-1];var f=d[0],p=[];s=e.CFF.readIndex(i,s,p);var m=[];for(u=0;u<p.length-1;u++)m.push(a.readASCII(i,s+p[u],p[u+1]-p[u]));if(s+=p[p.length-1],e.CFF.readSubrs(i,s,f),f.CharStrings){s=f.CharStrings,p=[],s=e.CFF.readIndex(i,s,p);var g=[];for(u=0;u<p.length-1;u++)g.push(a.readBytes(i,s+p[u],p[u+1]-p[u]));f.CharStrings=g}if(f.ROS){s=f.FDArray;var _=[];for(s=e.CFF.readIndex(i,s,_),f.FDArray=[],u=0;u<_.length-1;u++){var x=e.CFF.readDict(i,s+_[u],s+_[u+1]);e.CFF._readFDict(i,x,m),f.FDArray.push(x)}s+=_[_.length-1],s=f.FDSelect,f.FDSelect=[];var y=i[s];if(s++,y!=3)throw y;var b=a.readUshort(i,s);for(s+=2,u=0;u<b+1;u++)f.FDSelect.push(a.readUshort(i,s),i[s+2]),s+=3}return f.Encoding&&(f.Encoding=e.CFF.readEncoding(i,f.Encoding,f.CharStrings.length)),f.charset&&(f.charset=e.CFF.readCharset(i,f.charset,f.CharStrings.length)),e.CFF._readFDict(i,f,m),f},e.CFF._readFDict=function(i,s,r){var a;for(var c in s.Private&&(a=s.Private[1],s.Private=e.CFF.readDict(i,a,a+s.Private[0]),s.Private.Subrs&&e.CFF.readSubrs(i,a+s.Private.Subrs,s.Private)),s)["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(c)!=-1&&(s[c]=r[s[c]-426+35])},e.CFF.readSubrs=function(i,s,r){var a=e._bin,c=[];s=e.CFF.readIndex(i,s,c);var l,u=c.length;l=u<1240?107:u<33900?1131:32768,r.Bias=l,r.Subrs=[];for(var h=0;h<c.length-1;h++)r.Subrs.push(a.readBytes(i,s+c[h],c[h+1]-c[h]))},e.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],e.CFF.glyphByUnicode=function(i,s){for(var r=0;r<i.charset.length;r++)if(i.charset[r]==s)return r;return-1},e.CFF.glyphBySE=function(i,s){return s<0||s>255?-1:e.CFF.glyphByUnicode(i,e.CFF.tableSE[s])},e.CFF.readEncoding=function(i,s,r){e._bin;var a=[".notdef"],c=i[s];if(s++,c!=0)throw"error: unknown encoding format: "+c;var l=i[s];s++;for(var u=0;u<l;u++)a.push(i[s+u]);return a},e.CFF.readCharset=function(i,s,r){var a=e._bin,c=[".notdef"],l=i[s];if(s++,l==0)for(var u=0;u<r;u++){var h=a.readUshort(i,s);s+=2,c.push(h)}else{if(l!=1&&l!=2)throw"error: format: "+l;for(;c.length<r;){h=a.readUshort(i,s),s+=2;var d=0;for(l==1?(d=i[s],s++):(d=a.readUshort(i,s),s+=2),u=0;u<=d;u++)c.push(h),h++}}return c},e.CFF.readIndex=function(i,s,r){var a=e._bin,c=a.readUshort(i,s)+1,l=i[s+=2];if(s++,l==1)for(var u=0;u<c;u++)r.push(i[s+u]);else if(l==2)for(u=0;u<c;u++)r.push(a.readUshort(i,s+2*u));else if(l==3)for(u=0;u<c;u++)r.push(16777215&a.readUint(i,s+3*u-1));else if(c!=1)throw"unsupported offset size: "+l+", count: "+c;return(s+=c*l)-1},e.CFF.getCharString=function(i,s,r){var a=e._bin,c=i[s],l=i[s+1];i[s+2],i[s+3],i[s+4];var u=1,h=null,d=null;c<=20&&(h=c,u=1),c==12&&(h=100*c+l,u=2),21<=c&&c<=27&&(h=c,u=1),c==28&&(d=a.readShort(i,s+1),u=3),29<=c&&c<=31&&(h=c,u=1),32<=c&&c<=246&&(d=c-139,u=1),247<=c&&c<=250&&(d=256*(c-247)+l+108,u=2),251<=c&&c<=254&&(d=256*-(c-251)-l-108,u=2),c==255&&(d=a.readInt(i,s+1)/65535,u=5),r.val=d??"o"+h,r.size=u},e.CFF.readCharString=function(i,s,r){for(var a=s+r,c=e._bin,l=[];s<a;){var u=i[s],h=i[s+1];i[s+2],i[s+3],i[s+4];var d=1,f=null,p=null;u<=20&&(f=u,d=1),u==12&&(f=100*u+h,d=2),u!=19&&u!=20||(f=u,d=2),21<=u&&u<=27&&(f=u,d=1),u==28&&(p=c.readShort(i,s+1),d=3),29<=u&&u<=31&&(f=u,d=1),32<=u&&u<=246&&(p=u-139,d=1),247<=u&&u<=250&&(p=256*(u-247)+h+108,d=2),251<=u&&u<=254&&(p=256*-(u-251)-h-108,d=2),u==255&&(p=c.readInt(i,s+1)/65535,d=5),l.push(p??"o"+f),s+=d}return l},e.CFF.readDict=function(i,s,r){for(var a=e._bin,c={},l=[];s<r;){var u=i[s],h=i[s+1];i[s+2],i[s+3],i[s+4];var d=1,f=null,p=null;if(u==28&&(p=a.readShort(i,s+1),d=3),u==29&&(p=a.readInt(i,s+1),d=5),32<=u&&u<=246&&(p=u-139,d=1),247<=u&&u<=250&&(p=256*(u-247)+h+108,d=2),251<=u&&u<=254&&(p=256*-(u-251)-h-108,d=2),u==255)throw p=a.readInt(i,s+1)/65535,d=5,"unknown number";if(u==30){var m=[];for(d=1;;){var g=i[s+d];d++;var _=g>>4,x=15&g;if(_!=15&&m.push(_),x!=15&&m.push(x),x==15)break}for(var y="",b=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],M=0;M<m.length;M++)y+=b[m[M]];p=parseFloat(y)}u<=21&&(f=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][u],d=1,u==12&&(f=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][h],d=2)),f!=null?(c[f]=l.length==1?l[0]:l,l=[]):l.push(p),s+=d}return c},e.cmap={},e.cmap.parse=function(i,s,r){i=new Uint8Array(i.buffer,s,r),s=0;var a=e._bin,c={};a.readUshort(i,s),s+=2;var l=a.readUshort(i,s);s+=2;var u=[];c.tables=[];for(var h=0;h<l;h++){var d=a.readUshort(i,s);s+=2;var f=a.readUshort(i,s);s+=2;var p=a.readUint(i,s);s+=4;var m="p"+d+"e"+f,g=u.indexOf(p);if(g==-1){var _;g=c.tables.length,u.push(p);var x=a.readUshort(i,p);x==0?_=e.cmap.parse0(i,p):x==4?_=e.cmap.parse4(i,p):x==6?_=e.cmap.parse6(i,p):x==12?_=e.cmap.parse12(i,p):console.debug("unknown format: "+x,d,f,p),c.tables.push(_)}if(c[m]!=null)throw"multiple tables for one platform+encoding";c[m]=g}return c},e.cmap.parse0=function(i,s){var r=e._bin,a={};a.format=r.readUshort(i,s),s+=2;var c=r.readUshort(i,s);s+=2,r.readUshort(i,s),s+=2,a.map=[];for(var l=0;l<c-6;l++)a.map.push(i[s+l]);return a},e.cmap.parse4=function(i,s){var r=e._bin,a=s,c={};c.format=r.readUshort(i,s),s+=2;var l=r.readUshort(i,s);s+=2,r.readUshort(i,s),s+=2;var u=r.readUshort(i,s);s+=2;var h=u/2;c.searchRange=r.readUshort(i,s),s+=2,c.entrySelector=r.readUshort(i,s),s+=2,c.rangeShift=r.readUshort(i,s),s+=2,c.endCount=r.readUshorts(i,s,h),s+=2*h,s+=2,c.startCount=r.readUshorts(i,s,h),s+=2*h,c.idDelta=[];for(var d=0;d<h;d++)c.idDelta.push(r.readShort(i,s)),s+=2;for(c.idRangeOffset=r.readUshorts(i,s,h),s+=2*h,c.glyphIdArray=[];s<a+l;)c.glyphIdArray.push(r.readUshort(i,s)),s+=2;return c},e.cmap.parse6=function(i,s){var r=e._bin,a={};a.format=r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2,r.readUshort(i,s),s+=2,a.firstCode=r.readUshort(i,s),s+=2;var c=r.readUshort(i,s);s+=2,a.glyphIdArray=[];for(var l=0;l<c;l++)a.glyphIdArray.push(r.readUshort(i,s)),s+=2;return a},e.cmap.parse12=function(i,s){var r=e._bin,a={};a.format=r.readUshort(i,s),s+=2,s+=2,r.readUint(i,s),s+=4,r.readUint(i,s),s+=4;var c=r.readUint(i,s);s+=4,a.groups=[];for(var l=0;l<c;l++){var u=s+12*l,h=r.readUint(i,u+0),d=r.readUint(i,u+4),f=r.readUint(i,u+8);a.groups.push([h,d,f])}return a},e.glyf={},e.glyf.parse=function(i,s,r,a){for(var c=[],l=0;l<a.maxp.numGlyphs;l++)c.push(null);return c},e.glyf._parseGlyf=function(i,s){var r=e._bin,a=i._data,c=e._tabOffset(a,"glyf",i._offset)+i.loca[s];if(i.loca[s]==i.loca[s+1])return null;var l={};if(l.noc=r.readShort(a,c),c+=2,l.xMin=r.readShort(a,c),c+=2,l.yMin=r.readShort(a,c),c+=2,l.xMax=r.readShort(a,c),c+=2,l.yMax=r.readShort(a,c),c+=2,l.xMin>=l.xMax||l.yMin>=l.yMax)return null;if(l.noc>0){l.endPts=[];for(var u=0;u<l.noc;u++)l.endPts.push(r.readUshort(a,c)),c+=2;var h=r.readUshort(a,c);if(c+=2,a.length-c<h)return null;l.instructions=r.readBytes(a,c,h),c+=h;var d=l.endPts[l.noc-1]+1;for(l.flags=[],u=0;u<d;u++){var f=a[c];if(c++,l.flags.push(f),(8&f)!=0){var p=a[c];c++;for(var m=0;m<p;m++)l.flags.push(f),u++}}for(l.xs=[],u=0;u<d;u++){var g=(2&l.flags[u])!=0,_=(16&l.flags[u])!=0;g?(l.xs.push(_?a[c]:-a[c]),c++):_?l.xs.push(0):(l.xs.push(r.readShort(a,c)),c+=2)}for(l.ys=[],u=0;u<d;u++)g=(4&l.flags[u])!=0,_=(32&l.flags[u])!=0,g?(l.ys.push(_?a[c]:-a[c]),c++):_?l.ys.push(0):(l.ys.push(r.readShort(a,c)),c+=2);var x=0,y=0;for(u=0;u<d;u++)x+=l.xs[u],y+=l.ys[u],l.xs[u]=x,l.ys[u]=y}else{var b;l.parts=[];do{b=r.readUshort(a,c),c+=2;var M={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(l.parts.push(M),M.glyphIndex=r.readUshort(a,c),c+=2,1&b){var N=r.readShort(a,c);c+=2;var T=r.readShort(a,c);c+=2}else N=r.readInt8(a,c),c++,T=r.readInt8(a,c),c++;2&b?(M.m.tx=N,M.m.ty=T):(M.p1=N,M.p2=T),8&b?(M.m.a=M.m.d=r.readF2dot14(a,c),c+=2):64&b?(M.m.a=r.readF2dot14(a,c),c+=2,M.m.d=r.readF2dot14(a,c),c+=2):128&b&&(M.m.a=r.readF2dot14(a,c),c+=2,M.m.b=r.readF2dot14(a,c),c+=2,M.m.c=r.readF2dot14(a,c),c+=2,M.m.d=r.readF2dot14(a,c),c+=2)}while(32&b);if(256&b){var w=r.readUshort(a,c);for(c+=2,l.instr=[],u=0;u<w;u++)l.instr.push(a[c]),c++}}return l},e.GDEF={},e.GDEF.parse=function(i,s,r,a){var c=s;s+=4;var l=e._bin.readUshort(i,s);return{glyphClassDef:l===0?null:e._lctf.readClassDef(i,c+l)}},e.GPOS={},e.GPOS.parse=function(i,s,r,a){return e._lctf.parse(i,s,r,a,e.GPOS.subt)},e.GPOS.subt=function(i,s,r,a){var c=e._bin,l=r,u={};if(u.fmt=c.readUshort(i,r),r+=2,s==1||s==2||s==3||s==7||s==8&&u.fmt<=2){var h=c.readUshort(i,r);r+=2,u.coverage=e._lctf.readCoverage(i,h+l)}if(s==1&&u.fmt==1){var d=c.readUshort(i,r);r+=2,d!=0&&(u.pos=e.GPOS.readValueRecord(i,r,d))}else if(s==2&&u.fmt>=1&&u.fmt<=2){d=c.readUshort(i,r),r+=2;var f=c.readUshort(i,r);r+=2;var p=e._lctf.numOfOnes(d),m=e._lctf.numOfOnes(f);if(u.fmt==1){u.pairsets=[];var g=c.readUshort(i,r);r+=2;for(var _=0;_<g;_++){var x=l+c.readUshort(i,r);r+=2;var y=c.readUshort(i,x);x+=2;for(var b=[],M=0;M<y;M++){var N=c.readUshort(i,x);x+=2,d!=0&&(D=e.GPOS.readValueRecord(i,x,d),x+=2*p),f!=0&&(k=e.GPOS.readValueRecord(i,x,f),x+=2*m),b.push({gid2:N,val1:D,val2:k})}u.pairsets.push(b)}}if(u.fmt==2){var T=c.readUshort(i,r);r+=2;var w=c.readUshort(i,r);r+=2;var L=c.readUshort(i,r);r+=2;var I=c.readUshort(i,r);for(r+=2,u.classDef1=e._lctf.readClassDef(i,l+T),u.classDef2=e._lctf.readClassDef(i,l+w),u.matrix=[],_=0;_<L;_++){var W=[];for(M=0;M<I;M++){var D=null,k=null;d!=0&&(D=e.GPOS.readValueRecord(i,r,d),r+=2*p),f!=0&&(k=e.GPOS.readValueRecord(i,r,f),r+=2*m),W.push({val1:D,val2:k})}u.matrix.push(W)}}}else if(s==4&&u.fmt==1)u.markCoverage=e._lctf.readCoverage(i,c.readUshort(i,r)+l),u.baseCoverage=e._lctf.readCoverage(i,c.readUshort(i,r+2)+l),u.markClassCount=c.readUshort(i,r+4),u.markArray=e.GPOS.readMarkArray(i,c.readUshort(i,r+6)+l),u.baseArray=e.GPOS.readBaseArray(i,c.readUshort(i,r+8)+l,u.markClassCount);else if(s==6&&u.fmt==1)u.mark1Coverage=e._lctf.readCoverage(i,c.readUshort(i,r)+l),u.mark2Coverage=e._lctf.readCoverage(i,c.readUshort(i,r+2)+l),u.markClassCount=c.readUshort(i,r+4),u.mark1Array=e.GPOS.readMarkArray(i,c.readUshort(i,r+6)+l),u.mark2Array=e.GPOS.readBaseArray(i,c.readUshort(i,r+8)+l,u.markClassCount);else{if(s==9&&u.fmt==1){var O=c.readUshort(i,r);r+=2;var te=c.readUint(i,r);if(r+=4,a.ltype==9)a.ltype=O;else if(a.ltype!=O)throw"invalid extension substitution";return e.GPOS.subt(i,a.ltype,l+te)}console.debug("unsupported GPOS table LookupType",s,"format",u.fmt)}return u},e.GPOS.readValueRecord=function(i,s,r){var a=e._bin,c=[];return c.push(1&r?a.readShort(i,s):0),s+=1&r?2:0,c.push(2&r?a.readShort(i,s):0),s+=2&r?2:0,c.push(4&r?a.readShort(i,s):0),s+=4&r?2:0,c.push(8&r?a.readShort(i,s):0),s+=8&r?2:0,c},e.GPOS.readBaseArray=function(i,s,r){var a=e._bin,c=[],l=s,u=a.readUshort(i,s);s+=2;for(var h=0;h<u;h++){for(var d=[],f=0;f<r;f++)d.push(e.GPOS.readAnchorRecord(i,l+a.readUshort(i,s))),s+=2;c.push(d)}return c},e.GPOS.readMarkArray=function(i,s){var r=e._bin,a=[],c=s,l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=e.GPOS.readAnchorRecord(i,r.readUshort(i,s+2)+c);h.markClass=r.readUshort(i,s),a.push(h),s+=4}return a},e.GPOS.readAnchorRecord=function(i,s){var r=e._bin,a={};return a.fmt=r.readUshort(i,s),a.x=r.readShort(i,s+2),a.y=r.readShort(i,s+4),a},e.GSUB={},e.GSUB.parse=function(i,s,r,a){return e._lctf.parse(i,s,r,a,e.GSUB.subt)},e.GSUB.subt=function(i,s,r,a){var c=e._bin,l=r,u={};if(u.fmt=c.readUshort(i,r),r+=2,s!=1&&s!=2&&s!=4&&s!=5&&s!=6)return null;if(s==1||s==2||s==4||s==5&&u.fmt<=2||s==6&&u.fmt<=2){var h=c.readUshort(i,r);r+=2,u.coverage=e._lctf.readCoverage(i,l+h)}if(s==1&&u.fmt>=1&&u.fmt<=2){if(u.fmt==1)u.delta=c.readShort(i,r),r+=2;else if(u.fmt==2){var d=c.readUshort(i,r);r+=2,u.newg=c.readUshorts(i,r,d),r+=2*u.newg.length}}else if(s==2&&u.fmt==1){d=c.readUshort(i,r),r+=2,u.seqs=[];for(var f=0;f<d;f++){var p=c.readUshort(i,r)+l;r+=2;var m=c.readUshort(i,p);u.seqs.push(c.readUshorts(i,p+2,m))}}else if(s==4)for(u.vals=[],d=c.readUshort(i,r),r+=2,f=0;f<d;f++){var g=c.readUshort(i,r);r+=2,u.vals.push(e.GSUB.readLigatureSet(i,l+g))}else if(s==5&&u.fmt==2){if(u.fmt==2){var _=c.readUshort(i,r);r+=2,u.cDef=e._lctf.readClassDef(i,l+_),u.scset=[];var x=c.readUshort(i,r);for(r+=2,f=0;f<x;f++){var y=c.readUshort(i,r);r+=2,u.scset.push(y==0?null:e.GSUB.readSubClassSet(i,l+y))}}}else if(s==6&&u.fmt==3){if(u.fmt==3){for(f=0;f<3;f++){d=c.readUshort(i,r),r+=2;for(var b=[],M=0;M<d;M++)b.push(e._lctf.readCoverage(i,l+c.readUshort(i,r+2*M)));r+=2*d,f==0&&(u.backCvg=b),f==1&&(u.inptCvg=b),f==2&&(u.ahedCvg=b)}d=c.readUshort(i,r),r+=2,u.lookupRec=e.GSUB.readSubstLookupRecords(i,r,d)}}else{if(s==7&&u.fmt==1){var N=c.readUshort(i,r);r+=2;var T=c.readUint(i,r);if(r+=4,a.ltype==9)a.ltype=N;else if(a.ltype!=N)throw"invalid extension substitution";return e.GSUB.subt(i,a.ltype,l+T)}console.debug("unsupported GSUB table LookupType",s,"format",u.fmt)}return u},e.GSUB.readSubClassSet=function(i,s){var r=e._bin.readUshort,a=s,c=[],l=r(i,s);s+=2;for(var u=0;u<l;u++){var h=r(i,s);s+=2,c.push(e.GSUB.readSubClassRule(i,a+h))}return c},e.GSUB.readSubClassRule=function(i,s){var r=e._bin.readUshort,a={},c=r(i,s),l=r(i,s+=2);s+=2,a.input=[];for(var u=0;u<c-1;u++)a.input.push(r(i,s)),s+=2;return a.substLookupRecords=e.GSUB.readSubstLookupRecords(i,s,l),a},e.GSUB.readSubstLookupRecords=function(i,s,r){for(var a=e._bin.readUshort,c=[],l=0;l<r;l++)c.push(a(i,s),a(i,s+2)),s+=4;return c},e.GSUB.readChainSubClassSet=function(i,s){var r=e._bin,a=s,c=[],l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readUshort(i,s);s+=2,c.push(e.GSUB.readChainSubClassRule(i,a+h))}return c},e.GSUB.readChainSubClassRule=function(i,s){for(var r=e._bin,a={},c=["backtrack","input","lookahead"],l=0;l<c.length;l++){var u=r.readUshort(i,s);s+=2,l==1&&u--,a[c[l]]=r.readUshorts(i,s,u),s+=2*a[c[l]].length}return u=r.readUshort(i,s),s+=2,a.subst=r.readUshorts(i,s,2*u),s+=2*a.subst.length,a},e.GSUB.readLigatureSet=function(i,s){var r=e._bin,a=s,c=[],l=r.readUshort(i,s);s+=2;for(var u=0;u<l;u++){var h=r.readUshort(i,s);s+=2,c.push(e.GSUB.readLigature(i,a+h))}return c},e.GSUB.readLigature=function(i,s){var r=e._bin,a={chain:[]};a.nglyph=r.readUshort(i,s),s+=2;var c=r.readUshort(i,s);s+=2;for(var l=0;l<c-1;l++)a.chain.push(r.readUshort(i,s)),s+=2;return a},e.head={},e.head.parse=function(i,s,r){var a=e._bin,c={};return a.readFixed(i,s),s+=4,c.fontRevision=a.readFixed(i,s),s+=4,a.readUint(i,s),s+=4,a.readUint(i,s),s+=4,c.flags=a.readUshort(i,s),s+=2,c.unitsPerEm=a.readUshort(i,s),s+=2,c.created=a.readUint64(i,s),s+=8,c.modified=a.readUint64(i,s),s+=8,c.xMin=a.readShort(i,s),s+=2,c.yMin=a.readShort(i,s),s+=2,c.xMax=a.readShort(i,s),s+=2,c.yMax=a.readShort(i,s),s+=2,c.macStyle=a.readUshort(i,s),s+=2,c.lowestRecPPEM=a.readUshort(i,s),s+=2,c.fontDirectionHint=a.readShort(i,s),s+=2,c.indexToLocFormat=a.readShort(i,s),s+=2,c.glyphDataFormat=a.readShort(i,s),s+=2,c},e.hhea={},e.hhea.parse=function(i,s,r){var a=e._bin,c={};return a.readFixed(i,s),s+=4,c.ascender=a.readShort(i,s),s+=2,c.descender=a.readShort(i,s),s+=2,c.lineGap=a.readShort(i,s),s+=2,c.advanceWidthMax=a.readUshort(i,s),s+=2,c.minLeftSideBearing=a.readShort(i,s),s+=2,c.minRightSideBearing=a.readShort(i,s),s+=2,c.xMaxExtent=a.readShort(i,s),s+=2,c.caretSlopeRise=a.readShort(i,s),s+=2,c.caretSlopeRun=a.readShort(i,s),s+=2,c.caretOffset=a.readShort(i,s),s+=2,s+=8,c.metricDataFormat=a.readShort(i,s),s+=2,c.numberOfHMetrics=a.readUshort(i,s),s+=2,c},e.hmtx={},e.hmtx.parse=function(i,s,r,a){for(var c=e._bin,l={aWidth:[],lsBearing:[]},u=0,h=0,d=0;d<a.maxp.numGlyphs;d++)d<a.hhea.numberOfHMetrics&&(u=c.readUshort(i,s),s+=2,h=c.readShort(i,s),s+=2),l.aWidth.push(u),l.lsBearing.push(h);return l},e.kern={},e.kern.parse=function(i,s,r,a){var c=e._bin,l=c.readUshort(i,s);if(s+=2,l==1)return e.kern.parseV1(i,s-2,r,a);var u=c.readUshort(i,s);s+=2;for(var h={glyph1:[],rval:[]},d=0;d<u;d++){s+=2,r=c.readUshort(i,s),s+=2;var f=c.readUshort(i,s);s+=2;var p=f>>>8;if((p&=15)!=0)throw"unknown kern table format: "+p;s=e.kern.readFormat0(i,s,h)}return h},e.kern.parseV1=function(i,s,r,a){var c=e._bin;c.readFixed(i,s),s+=4;var l=c.readUint(i,s);s+=4;for(var u={glyph1:[],rval:[]},h=0;h<l;h++){c.readUint(i,s),s+=4;var d=c.readUshort(i,s);s+=2,c.readUshort(i,s),s+=2;var f=d>>>8;if((f&=15)!=0)throw"unknown kern table format: "+f;s=e.kern.readFormat0(i,s,u)}return u},e.kern.readFormat0=function(i,s,r){var a=e._bin,c=-1,l=a.readUshort(i,s);s+=2,a.readUshort(i,s),s+=2,a.readUshort(i,s),s+=2,a.readUshort(i,s),s+=2;for(var u=0;u<l;u++){var h=a.readUshort(i,s);s+=2;var d=a.readUshort(i,s);s+=2;var f=a.readShort(i,s);s+=2,h!=c&&(r.glyph1.push(h),r.rval.push({glyph2:[],vals:[]}));var p=r.rval[r.rval.length-1];p.glyph2.push(d),p.vals.push(f),c=h}return s},e.loca={},e.loca.parse=function(i,s,r,a){var c=e._bin,l=[],u=a.head.indexToLocFormat,h=a.maxp.numGlyphs+1;if(u==0)for(var d=0;d<h;d++)l.push(c.readUshort(i,s+(d<<1))<<1);if(u==1)for(d=0;d<h;d++)l.push(c.readUint(i,s+(d<<2)));return l},e.maxp={},e.maxp.parse=function(i,s,r){var a=e._bin,c={},l=a.readUint(i,s);return s+=4,c.numGlyphs=a.readUshort(i,s),s+=2,l==65536&&(c.maxPoints=a.readUshort(i,s),s+=2,c.maxContours=a.readUshort(i,s),s+=2,c.maxCompositePoints=a.readUshort(i,s),s+=2,c.maxCompositeContours=a.readUshort(i,s),s+=2,c.maxZones=a.readUshort(i,s),s+=2,c.maxTwilightPoints=a.readUshort(i,s),s+=2,c.maxStorage=a.readUshort(i,s),s+=2,c.maxFunctionDefs=a.readUshort(i,s),s+=2,c.maxInstructionDefs=a.readUshort(i,s),s+=2,c.maxStackElements=a.readUshort(i,s),s+=2,c.maxSizeOfInstructions=a.readUshort(i,s),s+=2,c.maxComponentElements=a.readUshort(i,s),s+=2,c.maxComponentDepth=a.readUshort(i,s),s+=2),c},e.name={},e.name.parse=function(i,s,r){var a=e._bin,c={};a.readUshort(i,s),s+=2;var l=a.readUshort(i,s);s+=2,a.readUshort(i,s);for(var u,h=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],d=s+=2,f=0;f<l;f++){var p=a.readUshort(i,s);s+=2;var m=a.readUshort(i,s);s+=2;var g=a.readUshort(i,s);s+=2;var _=a.readUshort(i,s);s+=2;var x=a.readUshort(i,s);s+=2;var y=a.readUshort(i,s);s+=2;var b,M=h[_],N=d+12*l+y;if(p==0)b=a.readUnicode(i,N,x/2);else if(p==3&&m==0)b=a.readUnicode(i,N,x/2);else if(m==0)b=a.readASCII(i,N,x);else if(m==1)b=a.readUnicode(i,N,x/2);else if(m==3)b=a.readUnicode(i,N,x/2);else{if(p!=1)throw"unknown encoding "+m+", platformID: "+p;b=a.readASCII(i,N,x),console.debug("reading unknown MAC encoding "+m+" as ASCII")}var T="p"+p+","+g.toString(16);c[T]==null&&(c[T]={}),c[T][M!==void 0?M:_]=b,c[T]._lang=g}for(var w in c)if(c[w].postScriptName!=null&&c[w]._lang==1033)return c[w];for(var w in c)if(c[w].postScriptName!=null&&c[w]._lang==0)return c[w];for(var w in c)if(c[w].postScriptName!=null&&c[w]._lang==3084)return c[w];for(var w in c)if(c[w].postScriptName!=null)return c[w];for(var w in c){u=w;break}return console.debug("returning name table with languageID "+c[u]._lang),c[u]},e["OS/2"]={},e["OS/2"].parse=function(i,s,r){var a=e._bin.readUshort(i,s);s+=2;var c={};if(a==0)e["OS/2"].version0(i,s,c);else if(a==1)e["OS/2"].version1(i,s,c);else if(a==2||a==3||a==4)e["OS/2"].version2(i,s,c);else{if(a!=5)throw"unknown OS/2 table version: "+a;e["OS/2"].version5(i,s,c)}return c},e["OS/2"].version0=function(i,s,r){var a=e._bin;return r.xAvgCharWidth=a.readShort(i,s),s+=2,r.usWeightClass=a.readUshort(i,s),s+=2,r.usWidthClass=a.readUshort(i,s),s+=2,r.fsType=a.readUshort(i,s),s+=2,r.ySubscriptXSize=a.readShort(i,s),s+=2,r.ySubscriptYSize=a.readShort(i,s),s+=2,r.ySubscriptXOffset=a.readShort(i,s),s+=2,r.ySubscriptYOffset=a.readShort(i,s),s+=2,r.ySuperscriptXSize=a.readShort(i,s),s+=2,r.ySuperscriptYSize=a.readShort(i,s),s+=2,r.ySuperscriptXOffset=a.readShort(i,s),s+=2,r.ySuperscriptYOffset=a.readShort(i,s),s+=2,r.yStrikeoutSize=a.readShort(i,s),s+=2,r.yStrikeoutPosition=a.readShort(i,s),s+=2,r.sFamilyClass=a.readShort(i,s),s+=2,r.panose=a.readBytes(i,s,10),s+=10,r.ulUnicodeRange1=a.readUint(i,s),s+=4,r.ulUnicodeRange2=a.readUint(i,s),s+=4,r.ulUnicodeRange3=a.readUint(i,s),s+=4,r.ulUnicodeRange4=a.readUint(i,s),s+=4,r.achVendID=[a.readInt8(i,s),a.readInt8(i,s+1),a.readInt8(i,s+2),a.readInt8(i,s+3)],s+=4,r.fsSelection=a.readUshort(i,s),s+=2,r.usFirstCharIndex=a.readUshort(i,s),s+=2,r.usLastCharIndex=a.readUshort(i,s),s+=2,r.sTypoAscender=a.readShort(i,s),s+=2,r.sTypoDescender=a.readShort(i,s),s+=2,r.sTypoLineGap=a.readShort(i,s),s+=2,r.usWinAscent=a.readUshort(i,s),s+=2,r.usWinDescent=a.readUshort(i,s),s+=2},e["OS/2"].version1=function(i,s,r){var a=e._bin;return s=e["OS/2"].version0(i,s,r),r.ulCodePageRange1=a.readUint(i,s),s+=4,r.ulCodePageRange2=a.readUint(i,s),s+=4},e["OS/2"].version2=function(i,s,r){var a=e._bin;return s=e["OS/2"].version1(i,s,r),r.sxHeight=a.readShort(i,s),s+=2,r.sCapHeight=a.readShort(i,s),s+=2,r.usDefault=a.readUshort(i,s),s+=2,r.usBreak=a.readUshort(i,s),s+=2,r.usMaxContext=a.readUshort(i,s),s+=2},e["OS/2"].version5=function(i,s,r){var a=e._bin;return s=e["OS/2"].version2(i,s,r),r.usLowerOpticalPointSize=a.readUshort(i,s),s+=2,r.usUpperOpticalPointSize=a.readUshort(i,s),s+=2},e.post={},e.post.parse=function(i,s,r){var a=e._bin,c={};return c.version=a.readFixed(i,s),s+=4,c.italicAngle=a.readFixed(i,s),s+=4,c.underlinePosition=a.readShort(i,s),s+=2,c.underlineThickness=a.readShort(i,s),s+=2,c},e==null&&(e={}),e.U==null&&(e.U={}),e.U.codeToGlyph=function(i,s){var r=i.cmap,a=-1;if(r.p0e4!=null?a=r.p0e4:r.p3e1!=null?a=r.p3e1:r.p1e0!=null?a=r.p1e0:r.p0e3!=null&&(a=r.p0e3),a==-1)throw"no familiar platform and encoding!";var c=r.tables[a];if(c.format==0)return s>=c.map.length?0:c.map[s];if(c.format==4){for(var l=-1,u=0;u<c.endCount.length;u++)if(s<=c.endCount[u]){l=u;break}return l==-1||c.startCount[l]>s?0:65535&(c.idRangeOffset[l]!=0?c.glyphIdArray[s-c.startCount[l]+(c.idRangeOffset[l]>>1)-(c.idRangeOffset.length-l)]:s+c.idDelta[l])}if(c.format==12){if(s>c.groups[c.groups.length-1][1])return 0;for(u=0;u<c.groups.length;u++){var h=c.groups[u];if(h[0]<=s&&s<=h[1])return h[2]+(s-h[0])}return 0}throw"unknown cmap table format "+c.format},e.U.glyphToPath=function(i,s){var r={cmds:[],crds:[]};if(i.SVG&&i.SVG.entries[s]){var a=i.SVG.entries[s];return a==null?r:(typeof a=="string"&&(a=e.SVG.toPath(a),i.SVG.entries[s]=a),a)}if(i.CFF){var c={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:i.CFF.Private?i.CFF.Private.defaultWidthX:0,open:!1},l=i.CFF,u=i.CFF.Private;if(l.ROS){for(var h=0;l.FDSelect[h+2]<=s;)h+=2;u=l.FDArray[l.FDSelect[h+1]].Private}e.U._drawCFF(i.CFF.CharStrings[s],c,l,u,r)}else i.glyf&&e.U._drawGlyf(s,i,r);return r},e.U._drawGlyf=function(i,s,r){var a=s.glyf[i];a==null&&(a=s.glyf[i]=e.glyf._parseGlyf(s,i)),a!=null&&(a.noc>-1?e.U._simpleGlyph(a,r):e.U._compoGlyph(a,s,r))},e.U._simpleGlyph=function(i,s){for(var r=0;r<i.noc;r++){for(var a=r==0?0:i.endPts[r-1]+1,c=i.endPts[r],l=a;l<=c;l++){var u=l==a?c:l-1,h=l==c?a:l+1,d=1&i.flags[l],f=1&i.flags[u],p=1&i.flags[h],m=i.xs[l],g=i.ys[l];if(l==a)if(d){if(!f){e.U.P.moveTo(s,m,g);continue}e.U.P.moveTo(s,i.xs[u],i.ys[u])}else f?e.U.P.moveTo(s,i.xs[u],i.ys[u]):e.U.P.moveTo(s,(i.xs[u]+m)/2,(i.ys[u]+g)/2);d?f&&e.U.P.lineTo(s,m,g):p?e.U.P.qcurveTo(s,m,g,i.xs[h],i.ys[h]):e.U.P.qcurveTo(s,m,g,(m+i.xs[h])/2,(g+i.ys[h])/2)}e.U.P.closePath(s)}},e.U._compoGlyph=function(i,s,r){for(var a=0;a<i.parts.length;a++){var c={cmds:[],crds:[]},l=i.parts[a];e.U._drawGlyf(l.glyphIndex,s,c);for(var u=l.m,h=0;h<c.crds.length;h+=2){var d=c.crds[h],f=c.crds[h+1];r.crds.push(d*u.a+f*u.b+u.tx),r.crds.push(d*u.c+f*u.d+u.ty)}for(h=0;h<c.cmds.length;h++)r.cmds.push(c.cmds[h])}},e.U._getGlyphClass=function(i,s){var r=e._lctf.getInterval(s,i);return r==-1?0:s[r+2]},e.U._applySubs=function(i,s,r,a){for(var c=i.length-s-1,l=0;l<r.tabs.length;l++)if(r.tabs[l]!=null){var u,h=r.tabs[l];if(!h.coverage||(u=e._lctf.coverageIndex(h.coverage,i[s]))!=-1){if(r.ltype==1)i[s],h.fmt==1?i[s]=i[s]+h.delta:i[s]=h.newg[u];else if(r.ltype==4)for(var d=h.vals[u],f=0;f<d.length;f++){var p=d[f],m=p.chain.length;if(!(m>c)){for(var g=!0,_=0,x=0;x<m;x++){for(;i[s+_+(1+x)]==-1;)_++;p.chain[x]!=i[s+_+(1+x)]&&(g=!1)}if(g){for(i[s]=p.nglyph,x=0;x<m+_;x++)i[s+x+1]=-1;break}}}else if(r.ltype==5&&h.fmt==2)for(var y=e._lctf.getInterval(h.cDef,i[s]),b=h.cDef[y+2],M=h.scset[b],N=0;N<M.length;N++){var T=M[N],w=T.input;if(!(w.length>c)){for(g=!0,x=0;x<w.length;x++){var L=e._lctf.getInterval(h.cDef,i[s+1+x]);if(y==-1&&h.cDef[L+2]!=w[x]){g=!1;break}}if(g){var I=T.substLookupRecords;for(f=0;f<I.length;f+=2)I[f],I[f+1]}}}else if(r.ltype==6&&h.fmt==3){if(!e.U._glsCovered(i,h.backCvg,s-h.backCvg.length)||!e.U._glsCovered(i,h.inptCvg,s)||!e.U._glsCovered(i,h.ahedCvg,s+h.inptCvg.length))continue;var W=h.lookupRec;for(N=0;N<W.length;N+=2){y=W[N];var D=a[W[N+1]];e.U._applySubs(i,s+y,D,a)}}}}},e.U._glsCovered=function(i,s,r){for(var a=0;a<s.length;a++)if(e._lctf.coverageIndex(s[a],i[r+a])==-1)return!1;return!0},e.U.glyphsToPath=function(i,s,r){for(var a={cmds:[],crds:[]},c=0,l=0;l<s.length;l++){var u=s[l];if(u!=-1){for(var h=l<s.length-1&&s[l+1]!=-1?s[l+1]:0,d=e.U.glyphToPath(i,u),f=0;f<d.crds.length;f+=2)a.crds.push(d.crds[f]+c),a.crds.push(d.crds[f+1]);for(r&&a.cmds.push(r),f=0;f<d.cmds.length;f++)a.cmds.push(d.cmds[f]);r&&a.cmds.push("X"),c+=i.hmtx.aWidth[u],l<s.length-1&&(c+=e.U.getPairAdjustment(i,u,h))}}return a},e.U.P={},e.U.P.moveTo=function(i,s,r){i.cmds.push("M"),i.crds.push(s,r)},e.U.P.lineTo=function(i,s,r){i.cmds.push("L"),i.crds.push(s,r)},e.U.P.curveTo=function(i,s,r,a,c,l,u){i.cmds.push("C"),i.crds.push(s,r,a,c,l,u)},e.U.P.qcurveTo=function(i,s,r,a,c){i.cmds.push("Q"),i.crds.push(s,r,a,c)},e.U.P.closePath=function(i){i.cmds.push("Z")},e.U._drawCFF=function(i,s,r,a,c){for(var l=s.stack,u=s.nStems,h=s.haveWidth,d=s.width,f=s.open,p=0,m=s.x,g=s.y,_=0,x=0,y=0,b=0,M=0,N=0,T=0,w=0,L=0,I=0,W={val:0,size:0};p<i.length;){e.CFF.getCharString(i,p,W);var D=W.val;if(p+=W.size,D=="o1"||D=="o18")l.length%2!=0&&!h&&(d=l.shift()+a.nominalWidthX),u+=l.length>>1,l.length=0,h=!0;else if(D=="o3"||D=="o23")l.length%2!=0&&!h&&(d=l.shift()+a.nominalWidthX),u+=l.length>>1,l.length=0,h=!0;else if(D=="o4")l.length>1&&!h&&(d=l.shift()+a.nominalWidthX,h=!0),f&&e.U.P.closePath(c),g+=l.pop(),e.U.P.moveTo(c,m,g),f=!0;else if(D=="o5")for(;l.length>0;)m+=l.shift(),g+=l.shift(),e.U.P.lineTo(c,m,g);else if(D=="o6"||D=="o7")for(var k=l.length,O=D=="o6",te=0;te<k;te++){var ie=l.shift();O?m+=ie:g+=ie,O=!O,e.U.P.lineTo(c,m,g)}else if(D=="o8"||D=="o24"){k=l.length;for(var ge=0;ge+6<=k;)_=m+l.shift(),x=g+l.shift(),y=_+l.shift(),b=x+l.shift(),m=y+l.shift(),g=b+l.shift(),e.U.P.curveTo(c,_,x,y,b,m,g),ge+=6;D=="o24"&&(m+=l.shift(),g+=l.shift(),e.U.P.lineTo(c,m,g))}else{if(D=="o11")break;if(D=="o1234"||D=="o1235"||D=="o1236"||D=="o1237")D=="o1234"&&(x=g,y=(_=m+l.shift())+l.shift(),I=b=x+l.shift(),N=b,w=g,m=(T=(M=(L=y+l.shift())+l.shift())+l.shift())+l.shift(),e.U.P.curveTo(c,_,x,y,b,L,I),e.U.P.curveTo(c,M,N,T,w,m,g)),D=="o1235"&&(_=m+l.shift(),x=g+l.shift(),y=_+l.shift(),b=x+l.shift(),L=y+l.shift(),I=b+l.shift(),M=L+l.shift(),N=I+l.shift(),T=M+l.shift(),w=N+l.shift(),m=T+l.shift(),g=w+l.shift(),l.shift(),e.U.P.curveTo(c,_,x,y,b,L,I),e.U.P.curveTo(c,M,N,T,w,m,g)),D=="o1236"&&(_=m+l.shift(),x=g+l.shift(),y=_+l.shift(),I=b=x+l.shift(),N=b,T=(M=(L=y+l.shift())+l.shift())+l.shift(),w=N+l.shift(),m=T+l.shift(),e.U.P.curveTo(c,_,x,y,b,L,I),e.U.P.curveTo(c,M,N,T,w,m,g)),D=="o1237"&&(_=m+l.shift(),x=g+l.shift(),y=_+l.shift(),b=x+l.shift(),L=y+l.shift(),I=b+l.shift(),M=L+l.shift(),N=I+l.shift(),T=M+l.shift(),w=N+l.shift(),Math.abs(T-m)>Math.abs(w-g)?m=T+l.shift():g=w+l.shift(),e.U.P.curveTo(c,_,x,y,b,L,I),e.U.P.curveTo(c,M,N,T,w,m,g));else if(D=="o14"){if(l.length>0&&!h&&(d=l.shift()+r.nominalWidthX,h=!0),l.length==4){var Se=l.shift(),Y=l.shift(),j=l.shift(),R=l.shift(),V=e.CFF.glyphBySE(r,j),G=e.CFF.glyphBySE(r,R);e.U._drawCFF(r.CharStrings[V],s,r,a,c),s.x=Se,s.y=Y,e.U._drawCFF(r.CharStrings[G],s,r,a,c)}f&&(e.U.P.closePath(c),f=!1)}else if(D=="o19"||D=="o20")l.length%2!=0&&!h&&(d=l.shift()+a.nominalWidthX),u+=l.length>>1,l.length=0,h=!0,p+=u+7>>3;else if(D=="o21")l.length>2&&!h&&(d=l.shift()+a.nominalWidthX,h=!0),g+=l.pop(),m+=l.pop(),f&&e.U.P.closePath(c),e.U.P.moveTo(c,m,g),f=!0;else if(D=="o22")l.length>1&&!h&&(d=l.shift()+a.nominalWidthX,h=!0),m+=l.pop(),f&&e.U.P.closePath(c),e.U.P.moveTo(c,m,g),f=!0;else if(D=="o25"){for(;l.length>6;)m+=l.shift(),g+=l.shift(),e.U.P.lineTo(c,m,g);_=m+l.shift(),x=g+l.shift(),y=_+l.shift(),b=x+l.shift(),m=y+l.shift(),g=b+l.shift(),e.U.P.curveTo(c,_,x,y,b,m,g)}else if(D=="o26")for(l.length%2&&(m+=l.shift());l.length>0;)_=m,x=g+l.shift(),m=y=_+l.shift(),g=(b=x+l.shift())+l.shift(),e.U.P.curveTo(c,_,x,y,b,m,g);else if(D=="o27")for(l.length%2&&(g+=l.shift());l.length>0;)x=g,y=(_=m+l.shift())+l.shift(),b=x+l.shift(),m=y+l.shift(),g=b,e.U.P.curveTo(c,_,x,y,b,m,g);else if(D=="o10"||D=="o29"){var Q=D=="o10"?a:r;if(l.length==0)console.debug("error: empty stack");else{var z=l.pop(),ae=Q.Subrs[z+Q.Bias];s.x=m,s.y=g,s.nStems=u,s.haveWidth=h,s.width=d,s.open=f,e.U._drawCFF(ae,s,r,a,c),m=s.x,g=s.y,u=s.nStems,h=s.haveWidth,d=s.width,f=s.open}}else if(D=="o30"||D=="o31"){var Z=l.length,re=(ge=0,D=="o31");for(ge+=Z-(k=-3&Z);ge<k;)re?(x=g,y=(_=m+l.shift())+l.shift(),g=(b=x+l.shift())+l.shift(),k-ge==5?(m=y+l.shift(),ge++):m=y,re=!1):(_=m,x=g+l.shift(),y=_+l.shift(),b=x+l.shift(),m=y+l.shift(),k-ge==5?(g=b+l.shift(),ge++):g=b,re=!0),e.U.P.curveTo(c,_,x,y,b,m,g),ge+=4}else{if((D+"").charAt(0)=="o")throw console.debug("Unknown operation: "+D,i),D;l.push(D)}}}s.x=m,s.y=g,s.nStems=u,s.haveWidth=h,s.width=d,s.open=f};var t=e,n={Typr:t};return o.Typr=t,o.default=n,Object.defineProperty(o,"__esModule",{value:!0}),o}({}).Typr}/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function uL(){return function(o){var e=Uint8Array,t=Uint16Array,n=Uint32Array,i=new e([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),s=new e([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),r=new e([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(D,k){for(var O=new t(31),te=0;te<31;++te)O[te]=k+=1<<D[te-1];var ie=new n(O[30]);for(te=1;te<30;++te)for(var ge=O[te];ge<O[te+1];++ge)ie[ge]=ge-O[te]<<5|te;return[O,ie]},c=a(i,2),l=c[0],u=c[1];l[28]=258,u[258]=28;for(var h=a(s,0)[0],d=new t(32768),f=0;f<32768;++f){var p=(43690&f)>>>1|(21845&f)<<1;p=(61680&(p=(52428&p)>>>2|(13107&p)<<2))>>>4|(3855&p)<<4,d[f]=((65280&p)>>>8|(255&p)<<8)>>>1}var m=function(D,k,O){for(var te=D.length,ie=0,ge=new t(k);ie<te;++ie)++ge[D[ie]-1];var Se,Y=new t(k);for(ie=0;ie<k;++ie)Y[ie]=Y[ie-1]+ge[ie-1]<<1;{Se=new t(1<<k);var j=15-k;for(ie=0;ie<te;++ie)if(D[ie])for(var R=ie<<4|D[ie],V=k-D[ie],G=Y[D[ie]-1]++<<V,Q=G|(1<<V)-1;G<=Q;++G)Se[d[G]>>>j]=R}return Se},g=new e(288);for(f=0;f<144;++f)g[f]=8;for(f=144;f<256;++f)g[f]=9;for(f=256;f<280;++f)g[f]=7;for(f=280;f<288;++f)g[f]=8;var _=new e(32);for(f=0;f<32;++f)_[f]=5;var x=m(g,9),y=m(_,5),b=function(D){for(var k=D[0],O=1;O<D.length;++O)D[O]>k&&(k=D[O]);return k},M=function(D,k,O){var te=k/8|0;return(D[te]|D[te+1]<<8)>>(7&k)&O},N=function(D,k){var O=k/8|0;return(D[O]|D[O+1]<<8|D[O+2]<<16)>>(7&k)},T=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],w=function(D,k,O){var te=new Error(k||T[D]);if(te.code=D,Error.captureStackTrace&&Error.captureStackTrace(te,w),!O)throw te;return te},L=function(D,k,O){var te=D.length;if(!te||O&&!O.l&&te<5)return k||new e(0);var ie=!k||O,ge=!O||O.i;O||(O={}),k||(k=new e(3*te));var Se,Y=function(we){var Qe=k.length;if(we>Qe){var gt=new e(Math.max(2*Qe,we));gt.set(k),k=gt}},j=O.f||0,R=O.p||0,V=O.b||0,G=O.l,Q=O.d,z=O.m,ae=O.n,Z=8*te;do{if(!G){O.f=j=M(D,R,1);var re=M(D,R+1,3);if(R+=3,!re){var ye=D[(me=((Se=R)/8|0)+(7&Se&&1)+4)-4]|D[me-3]<<8,be=me+ye;if(be>te){ge&&w(0);break}ie&&Y(V+ye),k.set(D.subarray(me,be),V),O.b=V+=ye,O.p=R=8*be;continue}if(re==1)G=x,Q=y,z=9,ae=5;else if(re==2){var ue=M(D,R,31)+257,B=M(D,R+10,15)+4,oe=ue+M(D,R+5,31)+1;R+=14;for(var ee=new e(oe),ce=new e(19),se=0;se<B;++se)ce[r[se]]=M(D,R+3*se,7);R+=3*B;var ve=b(ce),ne=(1<<ve)-1,de=m(ce,ve);for(se=0;se<oe;){var me,$=de[M(D,R,ne)];if(R+=15&$,(me=$>>>4)<16)ee[se++]=me;else{var Me=0,fe=0;for(me==16?(fe=3+M(D,R,3),R+=2,Me=ee[se-1]):me==17?(fe=3+M(D,R,7),R+=3):me==18&&(fe=11+M(D,R,127),R+=7);fe--;)ee[se++]=Me}}var _e=ee.subarray(0,ue),xe=ee.subarray(ue);z=b(_e),ae=b(xe),G=m(_e,z),Q=m(xe,ae)}else w(1);if(R>Z){ge&&w(0);break}}ie&&Y(V+131072);for(var st=(1<<z)-1,Te=(1<<ae)-1,De=R;;De=R){var Ue=(Me=G[N(D,R)&st])>>>4;if((R+=15&Me)>Z){ge&&w(0);break}if(Me||w(2),Ue<256)k[V++]=Ue;else{if(Ue==256){De=R,G=null;break}var je=Ue-254;if(Ue>264){var Ze=i[se=Ue-257];je=M(D,R,(1<<Ze)-1)+l[se],R+=Ze}var at=Q[N(D,R)&Te],ke=at>>>4;if(at||w(3),R+=15&at,xe=h[ke],ke>3&&(Ze=s[ke],xe+=N(D,R)&(1<<Ze)-1,R+=Ze),R>Z){ge&&w(0);break}ie&&Y(V+131072);for(var Oe=V+je;V<Oe;V+=4)k[V]=k[V-xe],k[V+1]=k[V+1-xe],k[V+2]=k[V+2-xe],k[V+3]=k[V+3-xe];V=Oe}}O.l=G,O.p=De,O.b=V,G&&(j=1,O.m=z,O.d=Q,O.n=ae)}while(!j);return V==k.length?k:function(we,Qe,gt){(gt==null||gt>we.length)&&(gt=we.length);var mn=new(we instanceof t?t:we instanceof n?n:e)(gt-Qe);return mn.set(we.subarray(Qe,gt)),mn}(k,0,V)},I=new e(0),W=typeof TextDecoder<"u"&&new TextDecoder;try{W.decode(I,{stream:!0})}catch{}return o.convert_streams=function(D){var k=new DataView(D),O=0;function te(){var ue=k.getUint16(O);return O+=2,ue}function ie(){var ue=k.getUint32(O);return O+=4,ue}function ge(ue){ye.setUint16(be,ue),be+=2}function Se(ue){ye.setUint32(be,ue),be+=4}for(var Y={signature:ie(),flavor:ie(),length:ie(),numTables:te(),reserved:te(),totalSfntSize:ie(),majorVersion:te(),minorVersion:te(),metaOffset:ie(),metaLength:ie(),metaOrigLength:ie(),privOffset:ie(),privLength:ie()},j=0;Math.pow(2,j)<=Y.numTables;)j++;j--;for(var R=16*Math.pow(2,j),V=16*Y.numTables-R,G=12,Q=[],z=0;z<Y.numTables;z++)Q.push({tag:ie(),offset:ie(),compLength:ie(),origLength:ie(),origChecksum:ie()}),G+=16;var ae,Z=new Uint8Array(12+16*Q.length+Q.reduce(function(ue,B){return ue+B.origLength+4},0)),re=Z.buffer,ye=new DataView(re),be=0;return Se(Y.flavor),ge(Y.numTables),ge(R),ge(j),ge(V),Q.forEach(function(ue){Se(ue.tag),Se(ue.origChecksum),Se(G),Se(ue.origLength),ue.outOffset=G,(G+=ue.origLength)%4!=0&&(G+=4-G%4)}),Q.forEach(function(ue){var B,oe=D.slice(ue.offset,ue.offset+ue.compLength);if(ue.compLength!=ue.origLength){var ee=new Uint8Array(ue.origLength);B=new Uint8Array(oe,2),L(B,ee)}else ee=new Uint8Array(oe);Z.set(ee,ue.outOffset);var ce=0;(G=ue.outOffset+ue.origLength)%4!=0&&(ce=4-G%4),Z.set(new Uint8Array(ce).buffer,ue.outOffset+ue.origLength),ae=G+ce}),re.slice(0,ae)},Object.defineProperty(o,"__esModule",{value:!0}),o}({}).convert_streams}function hL(o,e){const t={M:2,L:2,Q:4,C:6,Z:0},n={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},i=1,s=2,r=4,a=8,c=16,l=32;let u;function h(T){if(!u){const w={R:s,L:i,D:r,C:c,U:l,T:a};u=new Map;for(let L in n){let I=0;n[L].split(",").forEach(W=>{let[D,k]=W.split("+");D=parseInt(D,36),k=k?parseInt(k,36):0,u.set(I+=D,w[L]);for(let O=k;O--;)u.set(++I,w[L])})}}return u.get(T)||l}const d=1,f=2,p=3,m=4,g=[null,"isol","init","fina","medi"];function _(T){const w=new Uint8Array(T.length);let L=l,I=d,W=-1;for(let D=0;D<T.length;D++){const k=T.codePointAt(D);let O=h(k)|0,te=d;O&a||(L&(i|r|c)?O&(s|r|c)?(te=p,(I===d||I===p)&&w[W]++):O&(i|l)&&(I===f||I===m)&&w[W]--:L&(s|l)&&(I===f||I===m)&&w[W]--,I=w[D]=te,L=O,W=D,k>65535&&D++)}return w}function x(T,w){const L=[];for(let W=0;W<w.length;W++){const D=w.codePointAt(W);D>65535&&W++,L.push(o.U.codeToGlyph(T,D))}const I=T.GSUB;if(I){const{lookupList:W,featureList:D}=I;let k;const O=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,te=[];D.forEach(ie=>{if(O.test(ie.tag))for(let ge=0;ge<ie.tab.length;ge++){if(te[ie.tab[ge]])continue;te[ie.tab[ge]]=!0;const Se=W[ie.tab[ge]],Y=/^(isol|init|fina|medi)$/.test(ie.tag);Y&&!k&&(k=_(w));for(let j=0;j<L.length;j++)(!k||!Y||g[k[j]]===ie.tag)&&o.U._applySubs(L,j,Se,W)}})}return L}function y(T,w){const L=new Int16Array(w.length*3);let I=0;for(;I<w.length;I++){const O=w[I];if(O===-1)continue;L[I*3+2]=T.hmtx.aWidth[O];const te=T.GPOS;if(te){const ie=te.lookupList;for(let ge=0;ge<ie.length;ge++){const Se=ie[ge];for(let Y=0;Y<Se.tabs.length;Y++){const j=Se.tabs[Y];if(Se.ltype===1){if(o._lctf.coverageIndex(j.coverage,O)!==-1&&j.pos){k(j.pos,I);break}}else if(Se.ltype===2){let R=null,V=W();if(V!==-1){const G=o._lctf.coverageIndex(j.coverage,w[V]);if(G!==-1){if(j.fmt===1){const Q=j.pairsets[G];for(let z=0;z<Q.length;z++)Q[z].gid2===O&&(R=Q[z])}else if(j.fmt===2){const Q=o.U._getGlyphClass(w[V],j.classDef1),z=o.U._getGlyphClass(O,j.classDef2);R=j.matrix[Q][z]}if(R){R.val1&&k(R.val1,V),R.val2&&k(R.val2,I);break}}}}else if(Se.ltype===4){const R=o._lctf.coverageIndex(j.markCoverage,O);if(R!==-1){const V=W(D),G=V===-1?-1:o._lctf.coverageIndex(j.baseCoverage,w[V]);if(G!==-1){const Q=j.markArray[R],z=j.baseArray[G][Q.markClass];L[I*3]=z.x-Q.x+L[V*3]-L[V*3+2],L[I*3+1]=z.y-Q.y+L[V*3+1];break}}}else if(Se.ltype===6){const R=o._lctf.coverageIndex(j.mark1Coverage,O);if(R!==-1){const V=W();if(V!==-1){const G=w[V];if(b(T,G)===3){const Q=o._lctf.coverageIndex(j.mark2Coverage,G);if(Q!==-1){const z=j.mark1Array[R],ae=j.mark2Array[Q][z.markClass];L[I*3]=ae.x-z.x+L[V*3]-L[V*3+2],L[I*3+1]=ae.y-z.y+L[V*3+1];break}}}}}}}}else if(T.kern&&!T.cff){const ie=W();if(ie!==-1){const ge=T.kern.glyph1.indexOf(w[ie]);if(ge!==-1){const Se=T.kern.rval[ge].glyph2.indexOf(O);Se!==-1&&(L[ie*3+2]+=T.kern.rval[ge].vals[Se])}}}}return L;function W(O){for(let te=I-1;te>=0;te--)if(w[te]!==-1&&(!O||O(w[te])))return te;return-1}function D(O){return b(T,O)===1}function k(O,te){for(let ie=0;ie<3;ie++)L[te*3+ie]+=O[ie]||0}}function b(T,w){const L=T.GDEF&&T.GDEF.glyphClassDef;return L?o.U._getGlyphClass(w,L):0}function M(...T){for(let w=0;w<T.length;w++)if(typeof T[w]=="number")return T[w]}function N(T){const w=Object.create(null),L=T["OS/2"],I=T.hhea,W=T.head.unitsPerEm,D=M(L&&L.sTypoAscender,I&&I.ascender,W),k={unitsPerEm:W,ascender:D,descender:M(L&&L.sTypoDescender,I&&I.descender,0),capHeight:M(L&&L.sCapHeight,D),xHeight:M(L&&L.sxHeight,D),lineGap:M(L&&L.sTypoLineGap,I&&I.lineGap),supportsCodePoint(O){return o.U.codeToGlyph(T,O)>0},forEachGlyph(O,te,ie,ge){let Se=0;const Y=1/k.unitsPerEm*te,j=x(T,O);let R=0;const V=y(T,j);return j.forEach((G,Q)=>{if(G!==-1){let z=w[G];if(!z){const{cmds:ae,crds:Z}=o.U.glyphToPath(T,G);let re="",ye=0;for(let ee=0,ce=ae.length;ee<ce;ee++){const se=t[ae[ee]];re+=ae[ee];for(let ve=1;ve<=se;ve++)re+=(ve>1?",":"")+Z[ye++]}let be,ue,B,oe;if(Z.length){be=ue=1/0,B=oe=-1/0;for(let ee=0,ce=Z.length;ee<ce;ee+=2){let se=Z[ee],ve=Z[ee+1];se<be&&(be=se),ve<ue&&(ue=ve),se>B&&(B=se),ve>oe&&(oe=ve)}}else be=B=ue=oe=0;z=w[G]={index:G,advanceWidth:T.hmtx.aWidth[G],xMin:be,yMin:ue,xMax:B,yMax:oe,path:re}}ge.call(null,z,Se+V[Q*3]*Y,V[Q*3+1]*Y,R),Se+=V[Q*3+2]*Y,ie&&(Se+=ie*te)}R+=O.codePointAt(R)>65535?2:1}),Se}};return k}return function(w){const L=new Uint8Array(w,0,4),I=o._bin.readASCII(L,0,4);if(I==="wOFF")w=e(w);else if(I==="wOF2")throw new Error("woff2 fonts not supported");return N(o.parse(w)[0])}}const dL=vo({name:"Typr Font Parser",dependencies:[lL,uL,hL],init(o,e,t){const n=o(),i=e();return t(n,i)}});/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function fL(){return function(o){var e=function(){this.buckets=new Map};e.prototype.add=function(y){var b=y>>5;this.buckets.set(b,(this.buckets.get(b)||0)|1<<(31&y))},e.prototype.has=function(y){var b=this.buckets.get(y>>5);return b!==void 0&&(b&1<<(31&y))!=0},e.prototype.serialize=function(){var y=[];return this.buckets.forEach(function(b,M){y.push((+M).toString(36)+":"+b.toString(36))}),y.join(",")},e.prototype.deserialize=function(y){var b=this;this.buckets.clear(),y.split(",").forEach(function(M){var N=M.split(":");b.buckets.set(parseInt(N[0],36),parseInt(N[1],36))})};var t=Math.pow(2,8),n=t-1,i=~n;function s(y){var b=function(N){return N&i}(y).toString(16),M=function(N){return(N&i)+t-1}(y).toString(16);return"codepoint-index/plane"+(y>>16)+"/"+b+"-"+M+".json"}function r(y,b){var M=y&n,N=b.codePointAt(M/6|0);return((N=(N||48)-48)&1<<M%6)!=0}function a(y,b){var M;(M=y,M.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(N){return N.split("-").map(function(T){return parseInt(T.trim(),16)})})).forEach(function(N){var T=N[0],w=N[1];w===void 0&&(w=T),b(T,w)})}function c(y,b){a(y,function(M,N){for(var T=M;T<=N;T++)b(T)})}var l={},u={},h=new WeakMap,d="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data";function f(y){var b=h.get(y);return b||(b=new e,c(y.ranges,function(M){return b.add(M)}),h.set(y,b)),b}var p,m=new Map;function g(y,b,M){return y[b]?b:y[M]?M:function(N){for(var T in N)return T}(y)}function _(y,b){var M=b;if(!y.includes(M)){M=1/0;for(var N=0;N<y.length;N++)Math.abs(y[N]-b)<Math.abs(M-b)&&(M=y[N])}return M}function x(y){return p||(p=new Set,c("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(b){p.add(b)})),p.has(y)}return o.CodePointSet=e,o.clearCache=function(){l={},u={}},o.getFontsForString=function(y,b){b===void 0&&(b={});var M,N=b.lang;N===void 0&&(N=new RegExp("\\p{Script=Hangul}","u").test(M=y)?"ko":new RegExp("\\p{Script=Hiragana}|\\p{Script=Katakana}","u").test(M)?"ja":"en");var T=b.category;T===void 0&&(T="sans-serif");var w=b.style;w===void 0&&(w="normal");var L=b.weight;L===void 0&&(L=400);var I=(b.dataUrl||d).replace(/\/$/g,""),W=new Map,D=new Uint8Array(y.length),k={},O={},te=new Array(y.length),ie=new Map,ge=!1;function Se(R){var V=m.get(R);return V||(V=fetch(I+"/"+R).then(function(G){if(!G.ok)throw new Error(G.statusText);return G.json().then(function(Q){if(!Array.isArray(Q)||Q[0]!==1)throw new Error("Incorrect schema version; need 1, got "+Q[0]);return Q[1]})}).catch(function(G){if(I!==d)return ge||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+I+'", trying default CDN. '+G.message),ge=!0),I=d,m.delete(R),Se(R);throw G}),m.set(R,V)),V}for(var Y=function(R){var V=y.codePointAt(R),G=s(V);te[R]=G,l[G]||ie.has(G)||ie.set(G,Se(G).then(function(Q){l[G]=Q})),V>65535&&(R++,j=R)},j=0;j<y.length;j++)Y(j);return Promise.all(ie.values()).then(function(){ie.clear();for(var R=function(G){var Q=y.codePointAt(G),z=null,ae=l[te[G]],Z=void 0;for(var re in ae){var ye=O[re];if(ye===void 0&&(ye=O[re]=new RegExp(re).test(N||"en")),ye){for(var be in Z=re,ae[re])if(r(Q,ae[re][be])){z=be;break}break}}if(!z){e:for(var ue in ae)if(ue!==Z){for(var B in ae[ue])if(r(Q,ae[ue][B])){z=B;break e}}}z||(console.debug("No font coverage for U+"+Q.toString(16)),z="latin"),te[G]=z,u[z]||ie.has(z)||ie.set(z,Se("font-meta/"+z+".json").then(function(oe){u[z]=oe})),Q>65535&&(G++,V=G)},V=0;V<y.length;V++)R(V);return Promise.all(ie.values())}).then(function(){for(var R,V=null,G=0;G<y.length;G++){var Q=y.codePointAt(G);if(V&&(x(Q)||f(V).has(Q)))D[G]=D[G-1];else{V=u[te[G]];var z=k[V.id];if(!z){var ae=V.typeforms,Z=g(ae,T,"sans-serif"),re=g(ae[Z],w,"normal"),ye=_((R=ae[Z])===null||R===void 0?void 0:R[re],L);z=k[V.id]=I+"/font-files/"+V.id+"/"+Z+"."+re+"."+ye+".woff"}var be=W.get(z);be==null&&(be=W.size,W.set(z,be)),D[G]=be}Q>65535&&(G++,D[G]=D[G-1])}return{fontUrls:Array.from(W.keys()),chars:D}})},Object.defineProperty(o,"__esModule",{value:!0}),o}({})}function pL(o,e){const t=Object.create(null),n=Object.create(null);function i(r,a){const c=l=>{console.error(`Failure loading font ${r}`,l)};try{const l=new XMLHttpRequest;l.open("get",r,!0),l.responseType="arraybuffer",l.onload=function(){if(l.status>=400)c(new Error(l.statusText));else if(l.status>0)try{const u=o(l.response);u.src=r,a(u)}catch(u){c(u)}},l.onerror=c,l.send()}catch(l){c(l)}}function s(r,a){let c=t[r];c?a(c):n[r]?n[r].push(a):(n[r]=[a],i(r,l=>{l.src=r,t[r]=l,n[r].forEach(u=>u(l)),delete n[r]}))}return function(r,a,{lang:c,fonts:l=[],style:u="normal",weight:h="normal",unicodeFontsURL:d}={}){const f=new Uint8Array(r.length),p=[];r.length||x();const m=new Map,g=[];if(u!=="italic"&&(u="normal"),typeof h!="number"&&(h=h==="bold"?700:400),l&&!Array.isArray(l)&&(l=[l]),l=l.slice().filter(b=>!b.lang||b.lang.test(c)).reverse(),l.length){let T=0;(function w(L=0){for(let I=L,W=r.length;I<W;I++){const D=r.codePointAt(I);if(T===1&&p[f[I-1]].supportsCodePoint(D)||I>0&&/\s/.test(r[I]))f[I]=f[I-1],T===2&&(g[g.length-1][1]=I);else for(let k=f[I],O=l.length;k<=O;k++)if(k===O){const te=T===2?g[g.length-1]:g[g.length]=[I,I];te[1]=I,T=2}else{f[I]=k;const{src:te,unicodeRange:ie}=l[k];if(!ie||y(D,ie)){const ge=t[te];if(!ge){s(te,()=>{w(I)});return}if(ge.supportsCodePoint(D)){let Se=m.get(ge);typeof Se!="number"&&(Se=p.length,p.push(ge),m.set(ge,Se)),f[I]=Se,T=1;break}}}D>65535&&I+1<W&&(f[I+1]=f[I],I++,T===2&&(g[g.length-1][1]=I))}_()})()}else g.push([0,r.length-1]),_();function _(){if(g.length){const b=g.map(M=>r.substring(M[0],M[1]+1)).join(`
`);e.getFontsForString(b,{lang:c||void 0,style:u,weight:h,dataUrl:d}).then(({fontUrls:M,chars:N})=>{const T=p.length;let w=0;g.forEach(I=>{for(let W=0,D=I[1]-I[0];W<=D;W++)f[I[0]+W]=N[w++]+T;w++});let L=0;M.forEach((I,W)=>{s(I,D=>{p[W+T]=D,++L===M.length&&x()})})})}else x()}function x(){a({chars:f,fonts:p})}function y(b,M){for(let N=0;N<M.length;N++){const[T,w=T]=M[N];if(T<=b&&b<=w)return!0}return!1}}}const mL=vo({name:"FontResolver",dependencies:[pL,dL,fL],init(o,e,t){return o(e,t())}});function gL(o,e){const n=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,i="[^\\S\\u00A0]",s=new RegExp(`${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function r({text:p,lang:m,fonts:g,style:_,weight:x,preResolvedFonts:y,unicodeFontsURL:b},M){const N=({chars:T,fonts:w})=>{let L,I;const W=[];for(let D=0;D<T.length;D++)T[D]!==I?(I=T[D],W.push(L={start:D,end:D,fontObj:w[T[D]]})):L.end=D;M(W)};y?N(y):o(p,N,{lang:m,fonts:g,style:_,weight:x,unicodeFontsURL:b})}function a({text:p="",font:m,lang:g,sdfGlyphSize:_=64,fontSize:x=400,fontWeight:y=1,fontStyle:b="normal",letterSpacing:M=0,lineHeight:N="normal",maxWidth:T=1/0,direction:w,textAlign:L="left",textIndent:I=0,whiteSpace:W="normal",overflowWrap:D="normal",anchorX:k=0,anchorY:O=0,metricsOnly:te=!1,unicodeFontsURL:ie,preResolvedFonts:ge=null,includeCaretPositions:Se=!1,chunkedBoundsSize:Y=8192,colorRanges:j=null},R){const V=h(),G={fontLoad:0,typesetting:0};p.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),p=p.replace(/\r\n/g,`
`).replace(/\r/g,`
`)),x=+x,M=+M,T=+T,N=N||"normal",I=+I,r({text:p,lang:g,style:b,weight:y,fonts:typeof m=="string"?[{src:m}]:m,unicodeFontsURL:ie,preResolvedFonts:ge},Q=>{G.fontLoad=h()-V;const z=isFinite(T);let ae=null,Z=null,re=null,ye=null,be=null,ue=null,B=null,oe=null,ee=0,ce=0,se=W!=="nowrap";const ve=new Map,ne=h();let de=I,me=0,$=new d;const Me=[$];Q.forEach(Te=>{const{fontObj:De}=Te,{ascender:Ue,descender:je,unitsPerEm:Ze,lineGap:at,capHeight:ke,xHeight:Oe}=De;let we=ve.get(De);if(!we){const Le=x/Ze,ct=N==="normal"?(Ue-je+at)*Le:N*x,Ki=(ct-(Ue-je)*Le)/2,lt=Math.min(ct,(Ue-je)*Le),$e=(Ue+je)/2*Le+lt/2;we={index:ve.size,src:De.src,fontObj:De,fontSizeMult:Le,unitsPerEm:Ze,ascender:Ue*Le,descender:je*Le,capHeight:ke*Le,xHeight:Oe*Le,lineHeight:ct,baseline:-Ki-Ue*Le,caretTop:$e,caretBottom:$e-lt},ve.set(De,we)}const{fontSizeMult:Qe}=we,gt=p.slice(Te.start,Te.end+1);let mn,dt;De.forEachGlyph(gt,x,M,(Le,ct,Ki,lt)=>{ct+=me,lt+=Te.start,mn=ct,dt=Le;const $e=p.charAt(lt),Dt=Le.advanceWidth*Qe,vt=$.count;let He;if("isEmpty"in Le||(Le.isWhitespace=!!$e&&new RegExp(i).test($e),Le.canBreakAfter=!!$e&&s.test($e),Le.isEmpty=Le.xMin===Le.xMax||Le.yMin===Le.yMax||n.test($e)),!Le.isWhitespace&&!Le.isEmpty&&ce++,se&&z&&!Le.isWhitespace&&ct+Dt+de>T&&vt){if($.glyphAt(vt-1).glyphObj.canBreakAfter)He=new d,de=-ct;else for(let ln=vt;ln--;)if(ln===0&&D==="break-word"){He=new d,de=-ct;break}else if($.glyphAt(ln).glyphObj.canBreakAfter){He=$.splitAt(ln+1);const tn=He.glyphAt(0).x;de-=tn;for(let Vt=He.count;Vt--;)He.glyphAt(Vt).x-=tn;break}He&&($.isSoftWrapped=!0,$=He,Me.push($),ee=T)}let _t=$.glyphAt($.count);_t.glyphObj=Le,_t.x=ct+de,_t.y=Ki,_t.width=Dt,_t.charIndex=lt,_t.fontData=we,$e===`
`&&($=new d,Me.push($),de=-(ct+Dt+M*x)+I)}),me=mn+dt.advanceWidth*Qe+M*x});let fe=0;Me.forEach(Te=>{let De=!0;for(let Ue=Te.count;Ue--;){const je=Te.glyphAt(Ue);De&&!je.glyphObj.isWhitespace&&(Te.width=je.x+je.width,Te.width>ee&&(ee=Te.width),De=!1);let{lineHeight:Ze,capHeight:at,xHeight:ke,baseline:Oe}=je.fontData;Ze>Te.lineHeight&&(Te.lineHeight=Ze);const we=Oe-Te.baseline;we<0&&(Te.baseline+=we,Te.cap+=we,Te.ex+=we),Te.cap=Math.max(Te.cap,Te.baseline+at),Te.ex=Math.max(Te.ex,Te.baseline+ke)}Te.baseline-=fe,Te.cap-=fe,Te.ex-=fe,fe+=Te.lineHeight});let _e=0,xe=0;if(k&&(typeof k=="number"?_e=-k:typeof k=="string"&&(_e=-ee*(k==="left"?0:k==="center"?.5:k==="right"?1:l(k)))),O&&(typeof O=="number"?xe=-O:typeof O=="string"&&(xe=O==="top"?0:O==="top-baseline"?-Me[0].baseline:O==="top-cap"?-Me[0].cap:O==="top-ex"?-Me[0].ex:O==="middle"?fe/2:O==="bottom"?fe:O==="bottom-baseline"?-Me[Me.length-1].baseline:l(O)*fe)),!te){const Te=e.getEmbeddingLevels(p,w);ae=new Uint16Array(ce),Z=new Uint8Array(ce),re=new Float32Array(ce*2),ye={},B=[1/0,1/0,-1/0,-1/0],oe=[],Se&&(ue=new Float32Array(p.length*4)),j&&(be=new Uint8Array(ce*3));let De=0,Ue=-1,je=-1,Ze,at;if(Me.forEach((ke,Oe)=>{let{count:we,width:Qe}=ke;if(we>0){let gt=0;for(let lt=we;lt--&&ke.glyphAt(lt).glyphObj.isWhitespace;)gt++;let mn=0,dt=0;if(L==="center")mn=(ee-Qe)/2;else if(L==="right")mn=ee-Qe;else if(L==="justify"&&ke.isSoftWrapped){let lt=0;for(let $e=we-gt;$e--;)ke.glyphAt($e).glyphObj.isWhitespace&&lt++;dt=(ee-Qe)/lt}if(dt||mn){let lt=0;for(let $e=0;$e<we;$e++){let Dt=ke.glyphAt($e);const vt=Dt.glyphObj;Dt.x+=mn+lt,dt!==0&&vt.isWhitespace&&$e<we-gt&&(lt+=dt,Dt.width+=dt)}}const Le=e.getReorderSegments(p,Te,ke.glyphAt(0).charIndex,ke.glyphAt(ke.count-1).charIndex);for(let lt=0;lt<Le.length;lt++){const[$e,Dt]=Le[lt];let vt=1/0,He=-1/0;for(let _t=0;_t<we;_t++)if(ke.glyphAt(_t).charIndex>=$e){let ln=_t,tn=_t;for(;tn<we;tn++){let Vt=ke.glyphAt(tn);if(Vt.charIndex>Dt)break;tn<we-gt&&(vt=Math.min(vt,Vt.x),He=Math.max(He,Vt.x+Vt.width))}for(let Vt=ln;Vt<tn;Vt++){const Xn=ke.glyphAt(Vt);Xn.x=He-(Xn.x+Xn.width-vt)}break}}let ct;const Ki=lt=>ct=lt;for(let lt=0;lt<we;lt++){const $e=ke.glyphAt(lt);ct=$e.glyphObj;const Dt=ct.index,vt=Te.levels[$e.charIndex]&1;if(vt){const He=e.getMirroredCharacter(p[$e.charIndex]);He&&$e.fontData.fontObj.forEachGlyph(He,0,0,Ki)}if(Se){const{charIndex:He,fontData:_t}=$e,ln=$e.x+_e,tn=$e.x+$e.width+_e;ue[He*4]=vt?tn:ln,ue[He*4+1]=vt?ln:tn,ue[He*4+2]=ke.baseline+_t.caretBottom+xe,ue[He*4+3]=ke.baseline+_t.caretTop+xe;const Vt=He-Ue;Vt>1&&u(ue,Ue,Vt),Ue=He}if(j){const{charIndex:He}=$e;for(;He>je;)je++,j.hasOwnProperty(je)&&(at=j[je])}if(!ct.isWhitespace&&!ct.isEmpty){const He=De++,{fontSizeMult:_t,src:ln,index:tn}=$e.fontData,Vt=ye[ln]||(ye[ln]={});Vt[Dt]||(Vt[Dt]={path:ct.path,pathBounds:[ct.xMin,ct.yMin,ct.xMax,ct.yMax]});const Xn=$e.x+_e,Qi=$e.y+ke.baseline+xe;re[He*2]=Xn,re[He*2+1]=Qi;const Ai=Xn+ct.xMin*_t,Ji=Qi+ct.yMin*_t,Ns=Xn+ct.xMax*_t,Ni=Qi+ct.yMax*_t;Ai<B[0]&&(B[0]=Ai),Ji<B[1]&&(B[1]=Ji),Ns>B[2]&&(B[2]=Ns),Ni>B[3]&&(B[3]=Ni),He%Y===0&&(Ze={start:He,end:He,rect:[1/0,1/0,-1/0,-1/0]},oe.push(Ze)),Ze.end++;const un=Ze.rect;if(Ai<un[0]&&(un[0]=Ai),Ji<un[1]&&(un[1]=Ji),Ns>un[2]&&(un[2]=Ns),Ni>un[3]&&(un[3]=Ni),ae[He]=Dt,Z[He]=tn,j){const Cs=He*3;be[Cs]=at>>16&255,be[Cs+1]=at>>8&255,be[Cs+2]=at&255}}}}}),ue){const ke=p.length-Ue;ke>1&&u(ue,Ue,ke)}}const st=[];ve.forEach(({index:Te,src:De,unitsPerEm:Ue,ascender:je,descender:Ze,lineHeight:at,capHeight:ke,xHeight:Oe})=>{st[Te]={src:De,unitsPerEm:Ue,ascender:je,descender:Ze,lineHeight:at,capHeight:ke,xHeight:Oe}}),G.typesetting=h()-ne,R({glyphIds:ae,glyphFontIndices:Z,glyphPositions:re,glyphData:ye,fontData:st,caretPositions:ue,glyphColors:be,chunkedBounds:oe,fontSize:x,topBaseline:xe+Me[0].baseline,blockBounds:[_e,xe-fe,_e+ee,xe],visibleBounds:B,timings:G})})}function c(p,m){a({...p,metricsOnly:!0},g=>{const[_,x,y,b]=g.blockBounds;m({width:y-_,height:b-x})})}function l(p){let m=p.match(/^([\d.]+)%$/),g=m?parseFloat(m[1]):NaN;return isNaN(g)?0:g/100}function u(p,m,g){const _=p[m*4],x=p[m*4+1],y=p[m*4+2],b=p[m*4+3],M=(x-_)/g;for(let N=0;N<g;N++){const T=(m+N)*4;p[T]=_+M*N,p[T+1]=_+M*(N+1),p[T+2]=y,p[T+3]=b}}function h(){return(self.performance||Date).now()}function d(){this.data=[]}const f=["glyphObj","x","y","width","charIndex","fontData"];return d.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/f.length)},glyphAt(p){let m=d.flyweight;return m.data=this.data,m.index=p,m},splitAt(p){let m=new d;return m.data=this.data.splice(p*f.length),m}},d.flyweight=f.reduce((p,m,g,_)=>(Object.defineProperty(p,m,{get(){return this.data[this.index*f.length+g]},set(x){this.data[this.index*f.length+g]=x}}),p),{data:null,index:0}),{typeset:a,measure:c}}const Zs=()=>(self.performance||Date).now(),au=Cb();let Gg;function vL(o,e,t,n,i,s,r,a,c,l,u=!0){return u?yL(o,e,t,n,i,s,r,a,c,l).then(null,h=>(Gg||(console.warn("WebGL SDF generation failed, falling back to JS",h),Gg=!0),Wg(o,e,t,n,i,s,r,a,c,l))):Wg(o,e,t,n,i,s,r,a,c,l)}const sl=[],_L=5;let Od=0;function Rb(){const o=Zs();for(;sl.length&&Zs()-o<_L;)sl.shift()();Od=sl.length?setTimeout(Rb,0):0}const yL=(...o)=>new Promise((e,t)=>{sl.push(()=>{const n=Zs();try{au.webgl.generateIntoCanvas(...o),e({timing:Zs()-n})}catch(i){t(i)}}),Od||(Od=setTimeout(Rb,0))}),xL=4,bL=2e3,Hg={};let SL=0;function Wg(o,e,t,n,i,s,r,a,c,l){const u="TroikaTextSDFGenerator_JS_"+SL++%xL;let h=Hg[u];return h||(h=Hg[u]={workerModule:vo({name:u,workerId:u,dependencies:[Cb,Zs],init(d,f){const p=d().javascript.generate;return function(...m){const g=f();return{textureData:p(...m),timing:f()-g}}},getTransferables(d){return[d.textureData.buffer]}}),requests:0,idleTimer:null}),h.requests++,clearTimeout(h.idleTimer),h.workerModule(o,e,t,n,i,s).then(({textureData:d,timing:f})=>{const p=Zs(),m=new Uint8Array(d.length*4);for(let g=0;g<d.length;g++)m[g*4+l]=d[g];return au.webglUtils.renderImageData(r,m,a,c,o,e,1<<3-l),f+=Zs()-p,--h.requests===0&&(h.idleTimer=setTimeout(()=>{JU(u)},bL)),{timing:f}})}function TL(o){o._warm||(au.webgl.isSupported(o),o._warm=!0)}const ML=au.webglUtils.resizeWebGLCanvasWithoutClearing,kr={defaultFontURL:null,unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048,useWorker:!0},wL=new We;function Br(){return(self.performance||Date).now()}const qg=Object.create(null);function AL(o,e){o=CL({},o);const t=Br(),{defaultFontURL:n}=kr,i=[];if(n&&i.push({label:"default",src:jg(n)}),o.font&&i.push({label:"user",src:jg(o.font)}),o.font=i,o.text=""+o.text,o.sdfGlyphSize=o.sdfGlyphSize||kr.sdfGlyphSize,o.unicodeFontsURL=o.unicodeFontsURL||kr.unicodeFontsURL,o.colorRanges!=null){let f={};for(let p in o.colorRanges)if(o.colorRanges.hasOwnProperty(p)){let m=o.colorRanges[p];typeof m!="number"&&(m=wL.set(m).getHex()),f[p]=m}o.colorRanges=f}Object.freeze(o);const{textureWidth:s,sdfExponent:r}=kr,{sdfGlyphSize:a}=o,c=s/a*4;let l=qg[a];if(!l){const f=document.createElement("canvas");f.width=s,f.height=a*256/c,l=qg[a]={glyphCount:0,sdfGlyphSize:a,sdfCanvas:f,sdfTexture:new qt(f,void 0,void 0,void 0,Jt,Jt),contextLost:!1,glyphsByFont:new Map},l.sdfTexture.generateMipmaps=!1,NL(l)}const{sdfTexture:u,sdfCanvas:h}=l;Ub(o).then(f=>{const{glyphIds:p,glyphFontIndices:m,fontData:g,glyphPositions:_,fontSize:x,timings:y}=f,b=[],M=new Float32Array(p.length*4);let N=0,T=0;const w=Br(),L=g.map(O=>{let te=l.glyphsByFont.get(O.src);return te||l.glyphsByFont.set(O.src,te=new Map),te});p.forEach((O,te)=>{const ie=m[te],{src:ge,unitsPerEm:Se}=g[ie];let Y=L[ie].get(O);if(!Y){const{path:Q,pathBounds:z}=f.glyphData[ge][O],ae=Math.max(z[2]-z[0],z[3]-z[1])/a*(kr.sdfMargin*a+.5),Z=l.glyphCount++,re=[z[0]-ae,z[1]-ae,z[2]+ae,z[3]+ae];L[ie].set(O,Y={path:Q,atlasIndex:Z,sdfViewBox:re}),b.push(Y)}const{sdfViewBox:j}=Y,R=_[T++],V=_[T++],G=x/Se;M[N++]=R+j[0]*G,M[N++]=V+j[1]*G,M[N++]=R+j[2]*G,M[N++]=V+j[3]*G,p[te]=Y.atlasIndex}),y.quads=(y.quads||0)+(Br()-w);const I=Br();y.sdf={};const W=h.height,D=Math.ceil(l.glyphCount/c),k=Math.pow(2,Math.ceil(Math.log2(D*a)));k>W&&(console.info(`Increasing SDF texture size ${W}->${k}`),ML(h,s,k),u.dispose()),Promise.all(b.map(O=>Pb(O,l,o.gpuAccelerateSDF).then(({timing:te})=>{y.sdf[O.atlasIndex]=te}))).then(()=>{b.length&&!l.contextLost&&(Db(l),u.needsUpdate=!0),y.sdfTotal=Br()-I,y.total=Br()-t,e(Object.freeze({parameters:o,sdfTexture:u,sdfGlyphSize:a,sdfExponent:r,glyphBounds:M,glyphAtlasIndices:p,glyphColors:f.glyphColors,caretPositions:f.caretPositions,chunkedBounds:f.chunkedBounds,ascender:f.ascender,descender:f.descender,lineHeight:f.lineHeight,capHeight:f.capHeight,xHeight:f.xHeight,topBaseline:f.topBaseline,blockBounds:f.blockBounds,visibleBounds:f.visibleBounds,timings:f.timings}))})}),Promise.resolve().then(()=>{l.contextLost||TL(h)})}function Pb({path:o,atlasIndex:e,sdfViewBox:t},{sdfGlyphSize:n,sdfCanvas:i,contextLost:s},r){if(s)return Promise.resolve({timing:-1});const{textureWidth:a,sdfExponent:c}=kr,l=Math.max(t[2]-t[0],t[3]-t[1]),u=Math.floor(e/4),h=u%(a/n)*n,d=Math.floor(u/(a/n))*n,f=e%4;return vL(n,n,o,t,l,c,i,h,d,f,r)}function NL(o){const e=o.sdfCanvas;e.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),o.contextLost=!0}),e.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),o.contextLost=!1;const n=[];o.glyphsByFont.forEach(i=>{i.forEach(s=>{n.push(Pb(s,o,!0))})}),Promise.all(n).then(()=>{Db(o),o.sdfTexture.needsUpdate=!0})})}function CL(o,e){for(let t in e)e.hasOwnProperty(t)&&(o[t]=e[t]);return o}let jc;function jg(o){return jc||(jc=typeof document>"u"?{}:document.createElement("a")),jc.href=o,jc.href}function Db(o){if(typeof createImageBitmap!="function"){console.info("Safari<15: applying SDF canvas workaround");const{sdfCanvas:e,sdfTexture:t}=o,{width:n,height:i}=e,s=o.sdfCanvas.getContext("webgl");let r=t.image.data;(!r||r.length!==n*i*4)&&(r=new Uint8Array(n*i*4),t.image={width:n,height:i,data:r},t.flipY=!1,t.isDataTexture=!0),s.readPixels(0,0,n,i,s.RGBA,s.UNSIGNED_BYTE,r)}}const EL=vo({name:"Typesetter",dependencies:[gL,mL,tL],init(o,e,t){return o(e,t())}}),Ub=vo({name:"Typesetter",dependencies:[EL],init(o){return function(e){return new Promise(t=>{o.typeset(e,t)})}},getTransferables(o){const e=[];for(let t in o)o[t]&&o[t].buffer&&e.push(o[t].buffer);return e}});Ub.onMainThread;const $g={};function RL(o){let e=$g[o];return e||(e=$g[o]=new fo(1,1,o,o).translate(.5,.5,0)),e}const PL="aTroikaGlyphBounds",Xg="aTroikaGlyphIndex",DL="aTroikaGlyphColor";class UL extends D1{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new wa,this.boundingBox=new rr}computeBoundingSphere(){}computeBoundingBox(){}set detail(e){if(e!==this._detail){this._detail=e,(typeof e!="number"||e<1)&&(e=1);let t=RL(e);["position","normal","uv"].forEach(n=>{this.attributes[n]=t.attributes[n].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,n,i,s){this.updateAttributeData(PL,e,4),this.updateAttributeData(Xg,t,1),this.updateAttributeData(DL,s,3),this._blockBounds=n,this._chunkedBounds=i,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){const e=this._blockBounds;if(e){const{curveRadius:t,boundingBox:n}=this;if(t){const{PI:i,floor:s,min:r,max:a,sin:c,cos:l}=Math,u=i/2,h=i*2,d=Math.abs(t),f=e[0]/d,p=e[2]/d,m=s((f+u)/h)!==s((p+u)/h)?-d:r(c(f)*d,c(p)*d),g=s((f-u)/h)!==s((p-u)/h)?d:a(c(f)*d,c(p)*d),_=s((f+i)/h)!==s((p+i)/h)?d*2:a(d-l(f)*d,d-l(p)*d);n.min.set(m,e[1],t<0?-_:0),n.max.set(g,e[3],t<0?0:_)}else n.min.set(e[0],e[1],0),n.max.set(e[2],e[3],0);n.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(Xg).count,n=this._chunkedBounds;if(n)for(let i=n.length;i--;){t=n[i].end;let s=n[i].rect;if(s[1]<e.w&&s[3]>e.y&&s[0]<e.z&&s[2]>e.x)break}this.instanceCount=t}updateAttributeData(e,t,n){const i=this.getAttribute(e);t?i&&i.array.length===t.length?(i.array.set(t),i.needsUpdate=!0):(this.setAttribute(e,new Ul(t,n)),delete this._maxInstanceCount,this.dispose()):i&&this.deleteAttribute(e)}}const LL=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,FL=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,IL=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,BL=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;function OL(o){const e=Bd(o,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new le},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new Ke(0,0,0,0)},uTroikaClipRect:{value:new Ke(0,0,0,0)},uTroikaEdgeOffset:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new le},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new We},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new pn},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:LL,vertexTransform:FL,fragmentDefs:IL,fragmentColorTransform:BL,customRewriter({vertexShader:t,fragmentShader:n}){let i=/\buniform\s+vec3\s+diffuse\b/;return i.test(n)&&(n=n.replace(i,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),i.test(t)||(t=t.replace(Eb,`uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`))),{vertexShader:t,fragmentShader:n}}});return e.transparent=!0,e.forceSinglePass=!0,Object.defineProperties(e,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),e}const yp=new Aa({color:16777215,side:Ws,transparent:!0}),Yg=8421504,Zg=new Xe,$c=new C,kh=new C,qo=[],VL=new C,zh="+x+y";function Kg(o){return Array.isArray(o)?o[0]:o}let Lb=()=>{const o=new In(new fo(1,1),yp);return Lb=()=>o,o},Fb=()=>{const o=new In(new fo(1,1,32,1),yp);return Fb=()=>o,o};const kL={type:"syncstart"},zL={type:"synccomplete"},Ib=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],GL=Ib.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");class Bb extends In{constructor(){const e=new UL;super(e,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=Yg,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=zh,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(kL),AL({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);const n=this._queuedSyncs;n&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{n.forEach(i=>i&&i())})),this.dispatchEvent(zL),e&&e()})))}onBeforeRender(e,t,n,i,s,r){this.sync(),s.isTroikaTextMaterial&&this._prepareForRender(s)}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}createDerivedMaterial(e){return OL(e)}get material(){let e=this._derivedMaterial;const t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=yp.clone());if((!e||!e.isDerivedFrom(t))&&(e=this._derivedMaterial=this.createDerivedMaterial(t),t.addEventListener("dispose",function n(){t.removeEventListener("dispose",n),e.dispose()})),this.hasOutline()){let n=e._outlineMtl;return n||(n=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}}),n.isTextOutlineMaterial=!0,n.depthWrite=!1,n.map=null,e.addEventListener("dispose",function i(){e.removeEventListener("dispose",i),n.dispose()})),[n,e]}else return e}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}hasOutline(){return!!(this.outlineWidth||this.outlineBlur||this.outlineOffsetX||this.outlineOffsetY)}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return Kg(this.material).getDepthMaterial()}get customDistanceMaterial(){return Kg(this.material).getDistanceMaterial()}_prepareForRender(e){const t=e.isTextOutlineMaterial,n=e.uniforms,i=this.textRenderInfo;if(i){const{sdfTexture:a,blockBounds:c}=i;n.uTroikaSDFTexture.value=a,n.uTroikaSDFTextureSize.value.set(a.image.width,a.image.height),n.uTroikaSDFGlyphSize.value=i.sdfGlyphSize,n.uTroikaSDFExponent.value=i.sdfExponent,n.uTroikaTotalBounds.value.fromArray(c),n.uTroikaUseGlyphColors.value=!t&&!!i.glyphColors;let l=0,u=0,h=0,d,f,p,m=0,g=0;if(t){let{outlineWidth:x,outlineOffsetX:y,outlineOffsetY:b,outlineBlur:M,outlineOpacity:N}=this;l=this._parsePercent(x)||0,u=Math.max(0,this._parsePercent(M)||0),d=N,m=this._parsePercent(y)||0,g=this._parsePercent(b)||0}else h=Math.max(0,this._parsePercent(this.strokeWidth)||0),h&&(p=this.strokeColor,n.uTroikaStrokeColor.value.set(p??Yg),f=this.strokeOpacity,f==null&&(f=1)),d=this.fillOpacity;n.uTroikaEdgeOffset.value=l,n.uTroikaPositionOffset.value.set(m,g),n.uTroikaBlurRadius.value=u,n.uTroikaStrokeWidth.value=h,n.uTroikaStrokeOpacity.value=f,n.uTroikaFillOpacity.value=d??1,n.uTroikaCurveRadius.value=this.curveRadius||0;let _=this.clipRect;if(_&&Array.isArray(_)&&_.length===4)n.uTroikaClipRect.value.fromArray(_);else{const x=(this.fontSize||.1)*100;n.uTroikaClipRect.value.set(c[0]-x,c[1]-x,c[2]+x,c[3]+x)}this.geometry.applyClipRect(n.uTroikaClipRect.value)}n.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;const s=t?this.outlineColor||0:this.color;if(s==null)delete e.color;else{const a=e.hasOwnProperty("color")?e.color:e.color=new We;(s!==a._input||typeof s=="object")&&a.set(a._input=s)}let r=this.orientation||zh;if(r!==e._orientation){let a=n.uTroikaOrient.value;r=r.replace(/[^-+xyz]/g,"");let c=r!==zh&&r.match(/^([-+])([xyz])([-+])([xyz])$/);if(c){let[,l,u,h,d]=c;$c.set(0,0,0)[u]=l==="-"?1:-1,kh.set(0,0,0)[d]=h==="-"?-1:1,Zg.lookAt(VL,$c.cross(kh),kh),a.setFromMatrix4(Zg)}else a.identity();e._orientation=r}}_parsePercent(e){if(typeof e=="string"){let t=e.match(/^(-?[\d.]+)%$/),n=t?parseFloat(t[1]):NaN;e=(isNaN(n)?0:n/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new le){t.copy(e);const n=this.curveRadius;return n&&(t.x=Math.atan2(e.x,Math.abs(n)-Math.abs(e.z))*Math.abs(n)),t}worldPositionToTextCoords(e,t=new le){return $c.copy(e),this.localPositionToTextCoords(this.worldToLocal($c),t)}raycast(e,t){const{textRenderInfo:n,curveRadius:i}=this;if(n){const s=n.blockBounds,r=i?Fb():Lb(),a=r.geometry,{position:c,uv:l}=a.attributes;for(let u=0;u<l.count;u++){let h=s[0]+l.getX(u)*(s[2]-s[0]);const d=s[1]+l.getY(u)*(s[3]-s[1]);let f=0;i&&(f=i-Math.cos(h/i)*i,h=Math.sin(h/i)*i),c.setXYZ(u,h,d,f)}a.boundingSphere=this.geometry.boundingSphere,a.boundingBox=this.geometry.boundingBox,r.matrixWorld=this.matrixWorld,r.material.side=this.material.side,qo.length=0,r.raycast(e,qo);for(let u=0;u<qo.length;u++)qo[u].object=this,t.push(qo[u])}}copy(e){const t=this.geometry;return super.copy(e),this.geometry=t,GL.forEach(n=>{this[n]=e[n]}),this}clone(){return new this.constructor().copy(this)}}Ib.forEach(o=>{const e="_private_"+o;Object.defineProperty(Bb.prototype,o,{get(){return this[e]},set(t){t!==this[e]&&(this[e]=t,this._needsSync=!0)}})});new rr;new We;/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */v.BRDF_GGX;v.BRDF_Lambert;v.BasicShadowFilter;v.Break;v.Continue;v.DFGApprox;v.D_GGX;v.Discard;v.EPSILON;v.F_Schlick;v.Fn;v.INFINITY;v.If;v.Loop;v.NodeShaderStage;v.NodeType;v.NodeUpdateType;v.NodeAccess;v.PCFShadowFilter;v.PCFSoftShadowFilter;v.PI;v.PI2;v.Return;v.Schlick_to_F0;v.ScriptableNodeResources;v.ShaderNode;v.TBNViewMatrix;v.VSMShadowFilter;v.V_GGX_SmithCorrelated;v.abs;v.acesFilmicToneMapping;v.acos;const HL=v.add;v.addMethodChaining;v.addNodeElement;v.agxToneMapping;v.all;v.alphaT;v.and;v.anisotropy;v.anisotropyB;v.anisotropyT;v.any;v.append;v.arrayBuffer;v.asin;v.assign;v.atan;v.atan2;v.atomicAdd;v.atomicAnd;v.atomicFunc;v.atomicMax;v.atomicMin;v.atomicOr;v.atomicStore;v.atomicSub;v.atomicXor;v.attenuationColor;v.attenuationDistance;v.attribute;v.attributeArray;v.backgroundBlurriness;v.backgroundIntensity;v.backgroundRotation;v.batch;v.billboarding;v.bitAnd;v.bitNot;v.bitOr;v.bitXor;v.bitangentGeometry;v.bitangentLocal;v.bitangentView;v.bitangentWorld;v.bitcast;v.blendBurn;v.blendColor;v.blendDodge;v.blendOverlay;v.blendScreen;v.blur;v.bool;v.buffer;v.bufferAttribute;v.bumpMap;v.burn;v.bvec2;v.bvec3;v.bvec4;v.bypass;v.cache;v.call;v.cameraFar;v.cameraNear;v.cameraNormalMatrix;v.cameraPosition;v.cameraProjectionMatrix;v.cameraProjectionMatrixInverse;v.cameraViewMatrix;v.cameraWorldMatrix;v.cbrt;v.cdl;v.ceil;v.checker;v.cineonToneMapping;v.clamp;v.clearcoat;v.clearcoatRoughness;v.code;v.color;v.colorSpaceToWorking;v.colorToDirection;v.compute;v.cond;v.context;v.convert;v.convertColorSpace;v.convertToTexture;v.cos;v.cross;v.cubeTexture;v.dFdx;v.dFdy;v.dashSize;v.defaultBuildStages;v.defaultShaderStages;v.defined;v.degrees;v.deltaTime;v.densityFog;v.depth;v.depthPass;v.difference;v.diffuseColor;v.directPointLight;v.directionToColor;v.dispersion;v.distance;const WL=v.div;v.dodge;v.dot;v.drawIndex;v.dynamicBufferAttribute;v.element;v.emissive;v.equal;v.equals;v.equirectUV;v.exp;v.exp2;v.expression;v.faceDirection;v.faceForward;v.float;v.floor;v.fog;v.fract;v.frameGroup;v.frameId;v.frontFacing;v.fwidth;v.gain;v.gapSize;v.getConstNodeType;v.getCurrentStack;v.getDirection;v.getDistanceAttenuation;v.getGeometryRoughness;v.getNormalFromDepth;v.getParallaxCorrectNormal;v.getRoughness;v.getScreenPosition;v.getShIrradianceAt;v.getTextureIndex;v.getViewPosition;v.glsl;v.glslFn;v.grayscale;v.greaterThan;v.greaterThanEqual;v.hash;v.highPrecisionModelNormalViewMatrix;v.highPrecisionModelViewMatrix;v.hue;v.instance;v.instanceIndex;v.instancedArray;v.instancedBufferAttribute;v.instancedDynamicBufferAttribute;v.instancedMesh;v.int;v.inverseSqrt;v.invocationLocalIndex;v.invocationSubgroupIndex;v.ior;v.iridescence;v.iridescenceIOR;v.iridescenceThickness;v.ivec2;v.ivec3;v.ivec4;v.js;v.label;v.length;v.lengthSq;v.lessThan;v.lessThanEqual;v.lightPosition;v.lightTargetDirection;v.lightTargetPosition;v.lightViewPosition;v.lightingContext;v.lights;v.linearDepth;v.linearToneMapping;v.localId;v.log;v.log2;v.logarithmicDepthToViewZ;v.loop;v.luminance;v.mat2;v.mat3;v.mat4;v.matcapUV;v.materialAOMap;v.materialAlphaTest;v.materialAnisotropy;v.materialAnisotropyVector;v.materialAttenuationColor;v.materialAttenuationDistance;v.materialClearcoat;v.materialClearcoatNormal;v.materialClearcoatRoughness;v.materialColor;v.materialDispersion;v.materialEmissive;v.materialIOR;v.materialIridescence;v.materialIridescenceIOR;v.materialIridescenceThickness;v.materialLightMap;v.materialLineDashOffset;v.materialLineDashSize;v.materialLineGapSize;v.materialLineScale;v.materialLineWidth;v.materialMetalness;v.materialNormal;v.materialOpacity;v.materialPointWidth;v.materialReference;v.materialReflectivity;v.materialRefractionRatio;v.materialRotation;v.materialRoughness;v.materialSheen;v.materialSheenRoughness;v.materialShininess;v.materialSpecular;v.materialSpecularColor;v.materialSpecularIntensity;v.materialSpecularStrength;v.materialThickness;v.materialTransmission;v.max;v.maxMipLevel;v.metalness;v.min;const qL=v.mix;v.mixElement;v.mod;v.modInt;v.modelDirection;v.modelNormalMatrix;v.modelPosition;v.modelScale;v.modelViewMatrix;v.modelViewPosition;v.modelViewProjection;v.modelWorldMatrix;v.modelWorldMatrixInverse;v.morphReference;v.mrt;const Qg=v.mul;v.mx_aastep;v.mx_cell_noise_float;v.mx_contrast;v.mx_fractal_noise_float;v.mx_fractal_noise_vec2;v.mx_fractal_noise_vec3;v.mx_fractal_noise_vec4;v.mx_hsvtorgb;const Jg=v.mx_noise_float;v.mx_noise_vec3;v.mx_noise_vec4;v.mx_ramplr;v.mx_ramptb;v.mx_rgbtohsv;v.mx_safepower;v.mx_splitlr;v.mx_splittb;v.mx_srgb_texture_to_lin_rec709;v.mx_transform_uv;v.mx_worley_noise_float;v.mx_worley_noise_vec2;v.mx_worley_noise_vec3;v.negate;v.neutralToneMapping;v.nodeArray;v.nodeImmutable;v.nodeObject;v.nodeObjects;v.nodeProxy;v.normalFlat;v.normalGeometry;v.normalLocal;v.normalMap;v.normalView;v.normalWorld;v.normalize;v.not;v.notEqual;v.numWorkgroups;v.objectDirection;v.objectGroup;v.objectPosition;v.objectScale;v.objectViewPosition;v.objectWorldMatrix;v.oneMinus;v.or;v.orthographicDepthToViewZ;v.oscSawtooth;v.oscSine;v.oscSquare;v.oscTriangle;v.output;v.outputStruct;v.overlay;v.overloadingFn;v.parabola;v.parallaxDirection;v.parallaxUV;v.parameter;v.pass;v.passTexture;v.pcurve;v.perspectiveDepthToViewZ;v.pmremTexture;v.pointUV;v.pointWidth;v.positionGeometry;v.positionLocal;v.positionPrevious;v.positionView;v.positionViewDirection;v.positionWorld;v.positionWorldDirection;v.posterize;v.pow;v.pow2;v.pow3;v.pow4;v.property;v.radians;v.rand;v.range;v.rangeFog;v.reciprocal;v.reference;v.referenceBuffer;v.reflect;v.reflectVector;v.reflectView;v.reflector;v.refract;v.refractVector;v.refractView;v.reinhardToneMapping;v.remainder;v.remap;v.remapClamp;v.renderGroup;v.renderOutput;v.rendererReference;v.rotate;v.rotateUV;v.roughness;v.round;v.rtt;v.sRGBTransferEOTF;v.sRGBTransferOETF;v.sampler;v.saturate;v.saturation;v.screen;v.screenCoordinate;v.screenSize;v.screenUV;v.scriptable;v.scriptableValue;v.select;v.setCurrentStack;v.shaderStages;v.shadow;v.sharedUniformGroup;v.sheen;v.sheenRoughness;v.shiftLeft;v.shiftRight;v.shininess;v.sign;v.sin;v.sinc;v.skinning;v.skinningReference;v.smoothstep;v.smoothstepElement;v.specularColor;v.specularF90;v.spherizeUV;v.split;v.spritesheetUV;v.sqrt;v.stack;v.step;v.storage;v.storageBarrier;v.storageObject;v.storageTexture;v.string;v.sub;v.subgroupIndex;v.subgroupSize;v.tan;v.tangentGeometry;v.tangentLocal;v.tangentView;v.tangentWorld;v.temp;const jL=v.texture;v.texture3D;v.textureBarrier;v.textureBicubic;v.textureCubeUV;v.textureLoad;v.textureSize;v.textureStore;v.thickness;v.threshold;v.time;v.timerDelta;v.timerGlobal;v.timerLocal;v.toOutputColorSpace;v.toWorkingColorSpace;v.toneMapping;v.toneMappingExposure;v.toonOutlinePass;v.transformDirection;v.transformNormal;v.transformNormalToView;v.transformedBentNormalView;v.transformedBitangentView;v.transformedBitangentWorld;v.transformedClearcoatNormalView;v.transformedNormalView;v.transformedNormalWorld;v.transformedTangentView;v.transformedTangentWorld;v.transmission;v.transpose;v.tri;v.tri3;v.triNoise3D;v.triplanarTexture;v.triplanarTextures;v.trunc;v.tslFn;v.uint;v.uniform;v.uniformArray;v.uniformGroup;v.uniforms;v.userData;const $L=v.uv;v.uvec2;v.uvec3;v.uvec4;v.varying;v.varyingProperty;v.vec2;const Vd=v.vec3;v.vec4;v.vectorComponents;v.velocity;v.vertexColor;v.vertexIndex;v.vibrance;v.viewZToLogarithmicDepth;v.viewZToOrthographicDepth;v.viewZToPerspectiveDepth;v.viewport;v.viewportBottomLeft;v.viewportCoordinate;v.viewportDepthTexture;v.viewportLinearDepth;v.viewportMipTexture;v.viewportResolution;v.viewportSafeUV;v.viewportSharedTexture;v.viewportSize;v.viewportTexture;v.viewportTopLeft;v.viewportUV;v.wgsl;v.wgslFn;v.workgroupArray;v.workgroupBarrier;v.workgroupId;v.workingToColorSpace;v.xor;function XL(o){const e=o.replace("#","0x"),t=e>>16&255,n=e>>8&255,i=e&255;return[t,n,i]}function YL(o){return Vd(o[0]/255,o[1]/255,o[2]/255)}function xp(o){return YL(XL(o))}let Ob=["#FF3399","#FF66FF","#33FFCC","#FF9933","#FF3366","#66FFFF","#FFCC00","#9966FF"];Ob=["#FF66B2","#FF99FF","#66FFD9","#FFB366","#FF6699","#99FFFF","#FFD633","#B399FF"];const sr=Ob;class bp extends eu{constructor(e,t){super();const i=new T1().load("./images/noise.png");i.wrapS=ys,i.wrapT=ys,i.encoding=void 0;const s=$L();let a=Jg(s);for(let u=t;u>0;u-=1){const h=Jg(Qg(s,Vd(t/u)));a=HL(a,h)}const c=Qg(a,.8),l=qL(e,Vd(.5,.1,.1),c);jL(i,WL(s,1)),this.colorNode=l,this.roughnessNode=1,this.metalnessNode=0}}class Vb extends In{constructor(e,t,n,i,s,r,a){super(),this.text=e,this.font=t,this.size=n,this.geometry=new PA(e.replaceAll("b","B"),{font:t,size:n,depth:10,curveSegments:50,bevelEnabled:!1}),this.geometry.computeBoundingBox();const c=-.5*(this.geometry.boundingBox.max.x-this.geometry.boundingBox.min.x);this.geometry.translate(c,0,0),this.geometry.computeVertexNormals();const l=Math.floor(Math.random()*sr.length),u=sr[l];console.log(u),this.material=a??new rf({color:`${u}`}),this.position.x=i??0,this.position.y=s??0,this.position.z=r??0}getEdgesGeometry(e){const t=new HT(this.geometry),n=new NT(t,new Ll({color:e??16777215,linewidth:10}));return n.position.x=this.position.x,n.position.y=this.position.y,n.position.z=this.position.z,n}}class ZL extends Iv{constructor(e,t,n,i,s,r,a,c){super(),console.log("Formatting message ",e," with font size ",n);const l=this.convertWorldToNDCCoords(i,s,r,a),u=this.convertNDCToScreenCoords(l.x,l.y,l.z,a),h=new Vb(e,t,n,u.x,u.y,u.z,c);console.log(h),this.add(h),this.mesh=h}convertNDCToScreenCoords(e,t,n,i){const s=new C(e,t,n);s.unproject(i);const r=s.sub(i.position).normalize(),a=-i.position.z/r.z;return i.position.clone().add(r.multiplyScalar(a))}convertWorldToNDCCoords(e,t,n,i){const s=new C(e,t,n);return s.project(i),s.y=1-s.y,s.y=s.y*2-1,s}}class KL{constructor(e,t,n){this.text=e,this.width=t,this.height=n}formatText(e,t){let n=1,i=t,s={lines:[],fontSize:0,screenCoords:[]};for(;n<=i;){let r=Math.floor((n+i)/2),{lines:a,totalHeight:c,screenCoords:l}=this.getLinesForFontSize(e,r);c<=this.height?(s={lines:a,fontSize:r,screenCoords:l},n=r+1):i=r-1}return s}getLinesForFontSize(e,t){let n=[],i=[],s=this.text.split(" "),r="",a=t+this.getLineHeightAdjustment(r,e,t);for(let l of s){let u=r+l+" ";this.measureText(u,e,t).width>this.width&&r!==""?(n.push(r.trim()),i.push({x:0,y:a}),r=l+" ",a+=t+this.getLineHeightAdjustment(u,e,t)):r=u}n.push(r.trim()),i.push({x:0,y:a});let c=n.length*(t+this.getLineHeightAdjustment(r,e,t));return{lines:n,totalHeight:c,screenCoords:i}}measureText(e,t,n){const s=document.createElement("canvas").getContext("2d");return s.font=`${n}px Barriecito`,s.measureText(e)}getLineHeightAdjustment(e,t,n){const s=document.createElement("canvas").getContext("2d");s.font=`${n}px Barriecito`;const r=s.measureText(e),a=r.actualBoundingBoxAscent||n*.8,c=r.actualBoundingBoxDescent||n*.2;return a+c-n}}function kd(o){return o[Math.floor(Math.random()*o.length)]}class QL{constructor(e){this.lines=[],this.currentIndex=0,this.filePath=e,this.running=!1,this.isLoaded=!1}loadJson(){return new Promise((e,t)=>{new fd().load("fonts/Barriecito_Regular.json",i=>{this.font=i,new dd().load(this.filePath,(function(r){this.lines=JSON.parse(r),console.log("loaded script: ",this.lines),console.log("script has ",this.lines.length," lines"),this.isLoaded=!0,e()}).bind(this))})})}loadText(){return new Promise((e,t)=>{new fd().load("fonts/Barriecito_Regular.json",i=>{this.font=i,new dd().load(this.filePath,(function(r){this.lines=r.split(`
`).map(a=>a.trim()).map(a=>a.length>0?a:"").map(a=>parseLine(a)),console.log("loaded script: ",this.lines),console.log("script has ",this.lines.length," lines"),this.isLoaded=!0,e()}).bind(this))})})}parseLine(e){let t=e.split(":");if(t.length<=1)return{content:e,duration:1};t[0],t[1],t.length>2&&t[2]}getLines(){return this.lines}getCurrentLine(){return this.lines[this.currentIndex]}nextLine(){this.currentIndex+=1}run(e,t,n){return new Promise(async(i,s)=>{this.isLoaded==!1&&await this.loadJson(),this.runScript(e,t,n).then(()=>{i()})})}runScript(e,t,n){return new Promise((i,s)=>{this.currentIndex>=this.lines.length&&i(),console.log("Running script"),this.running=!0,console.log("Current line: ",this.getCurrentLine());const r=this.getCurrentLine();this.animate(r,e,t,n).then(()=>{document.body.style.backgroundColor=kd(sr),this.nextLine(),this.runScript(e,t,n).then(()=>{i()})})})}async animate(e,t,n,i){return new Promise((s,r)=>{console.log("Animating line: ",e);let a=[];console.log("Adding text to scene ",e);const c=new KL(e.content,n.width*1/2,n.height*1/2),{lines:l,fontSize:u,screenCoords:h}=c.formatText(this.font,300);console.log("Formatted lines: font size",u),console.log("Formatted lines: ",l),console.log("Formatted lines: ",h);let d=kd(sr),f=new bp(xp(d),100);l.forEach((g,_)=>{console.log("Adding line ",_,g);const x=h[_];let y=new ZL(g,this.font,u,x.x,x.y,0,i,f);const b=y.id;t.add(y),a.push(b);const M=y.mesh.getEdgesGeometry();t.add(M),a.push(M.id)});const p=e.duration??1,m=new C((Math.random()*2-1)*100,(Math.random()*2-1)*100,Math.random()*2);i.pan(m,p),this.drawMedia(e.media??[]),setTimeout(()=>{for(let g=0;g<a.length;g++){const _=t.getObjectById(a[g]);t.remove(_),_.children.forEach(x=>{t.remove(x),x.geometry.dispose(),x.material.dispose()})}s()},1e3*p)})}async drawMedia(e){const t=document.querySelector(".media-container");t.innerHTML="",e.sort((n,i)=>Math.random()).forEach(n=>{if(console.log(n),n.endsWith("jpg")||n.endsWith("jpeg")||n.endsWith("png")){let i=document.createElement("img");i.src=`./images/${n}`,t.appendChild(i)}if(n.endsWith("mp4")){let i=document.createElement("video");i.src=`./images/${n}`,i.autoplay=!0,i.volume=0,i.loop=!0,t.appendChild(i)}})}}class JL extends li{constructor(e,t,n,i){super(e,t,n,i),this.lookAtPos=new C(0,0,0)}setPosition(e,t,n){this.position.set(e,t,n)}lerp(e,t,n){const i=e.lerp(t,n);this.lookAt(i.x,i.y,i.z)}pan(e,t){let n=0,i=this.lookAtPos.clone(),s=setInterval(()=>{this.lerp(i,e,n),n+=1/(60*t),n>=1&&(clearInterval(s),this.lookAtPos=e)},1e3*t/60)}}class eF extends Iv{constructor(){super(),this.isLoaded=!1,this.words=["code","poems","tools","community","performance","archives","software"]}async load(){return console.log("Loading scene 2"),new Promise((e,t)=>{new fd().load("fonts/Barriecito_Regular.json",i=>{this.font=i,this.isLoaded=!0,console.log("making words");for(let s of this.words){const r=kd(sr),a=new bp(xp(r),100),c=new Vb(s,i,100,0,0,0,a);c.position.x=(Math.random()*2-1)*500,c.position.y=(Math.random()*2-1)*500,c.position.z=(Math.random()*2-1)*500,this.add(c)}e()})})}async run(e,t,n){return await this.load(),new Promise((i,s)=>{console.log("Running scene 2"),e.add(this),i()})}}class tF{constructor(e,t,n){this.threeScene=e,this.sizes=t,this.camera=n,this.scenes=[new QL("script.json","https://opheliagame.github.io/work-images/"),new eF],this.currentSceneIndex=0}playLinear(){console.log(this.scenes.length),console.log(this.currentSceneIndex),!(this.currentSceneIndex>=this.scenes.length)&&(console.log("playing scene ",this.currentSceneIndex),this.scenes[this.currentSceneIndex].run(this.threeScene,this.sizes,this.camera).then(()=>{console.log("next scene"),this.nextSceneLinear(),this.playLinear()}))}nextSceneLinear(){this.currentSceneIndex+=1}}class nF{constructor(e){this.clock=new U1,this.scene=new Qd,this.sizes={width:window.innerWidth,height:window.innerHeight},this.camera=new JL(75,this.sizes.width/this.sizes.height,.1,2e3),this.camera.setPosition(0,0,1e3),this.camera.lookAt(0,0,0),this.scene.add(this.camera),this.uniforms={time:{value:1}};const t=new $v(16777215,2);this.scene.add(t);const n=new jv(16777215,.6);n.position.set(0,0,100),this.scene.add(n),this.sceneSequencer=new tF(this.scene,this.sizes,this.camera),this.sceneSequencer.playLinear(),this.renderer=new XU({canvas:e,antialias:!0}),this.renderer.setSize(this.sizes.width,this.sizes.height),this.renderer.outputColorSpace=void 0,this.controls=new _A(this.camera,this.renderer.domElement),window.onresize=this.onWindowResize.bind(this)}debug(){const e=new ho(600,600,10),t=document.createElement("video");t.src="./images/20200624-movement-study.mp4",t.loop=!0,t.muted=!0,t.autoplay=!0,t.play(),console.log(t);const n=new ET(t),i=new Aa({map:n}),s=new In(e,i);this.scene.add(s),s.position.x=0,s.position.y=0,s.position.z=0}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight),this.sizes.width=window.innerWidth,this.sizes.height=window.innerHeight,console.log("Resizing to ",this.sizes.width,this.sizes.height)}animate(){requestAnimationFrame(()=>{this.animate()});const e=this.clock.getElapsedTime();this.uniforms.time.value=e,this.controls.enabled=!1,this.scene.traverse(t=>{t.render&&t.render(e)}),this.render()}render(){this.renderer.renderAsync(this.scene,this.camera)}addBackground(){const e=Math.floor(Math.random()*sr.length),t=xp(sr[e]),n=new fo(40,40),i=new In(n,new bp(t,50));i.position.z=-1,this.scene.add(i)}addObjectsWithTroika(){const e=new Bb;this.scene.add(e),e.text="Anushka Trivedi",e.fontSize=.4,e.position.y=0,e.position.x=0,e.position.z=0,e.textAlign="center";let t=this.makeShader();e.material=new eu({colorNode:t({scale:2.5,rings:4.5,length:1,angle:0,fibers:.3,fibersDensity:10,color:new We(15182336),background:new We(11163904),seed:0})}),e.sync()}makeShader(){var e=Fn(t=>{var n=radians(t.angle).toVar(),i=vec3(sub(positionLocal.x.mul(cos(n)),positionLocal.y.mul(sin(n))),add(positionLocal.x.mul(sin(n)),positionLocal.y.mul(cos(n))),positionLocal.z).toVar(),s=i.mul(exp(t.scale.sub(3)).mul(vec3(reciprocal(t.length),4,reciprocal(t.length)))).add(t.seed).toVar(),r=s.x.add(1).mul(10).mul(t.rings);r=r.add(r.cos()).cos().add(1).div(2);var a=float(0).toVar(),c=float(0).toVar(),l=exp(t.scale.sub(2)).mul(vec3(1,t.fibersDensity,1)).toVar(),u=float(2).toVar();return Loop(10,()=>{c.addAssign(u),l.mulAssign(1.8),u.mulAssign(.6)}),a.assign(mul(a,5).div(c).mul(10).sin().add(1).div(2)),mix(t.color,t.background,mix(r,a,t.fibers))});return e.defaults={$name:"Wood",scale:2.5,rings:4.5,length:1,angle:0,fibers:.3,fibersDensity:10,color:new We(.8,.4,0),background:new We(.4,.1,0),seed:0},e}}function iF(){const o=document.querySelector("canvas.webgl");new nF(o).animate()}iF();
